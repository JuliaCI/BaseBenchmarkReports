cset: moving following pidspec: 14768
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.386629637 seconds)
loading group "string"... done (took 0.577645561 seconds)
loading group "linalg"... done (took 7.24745427 seconds)
loading group "parallel"... done (took 0.155852266 seconds)
loading group "find"... done (took 1.149094108 seconds)
loading group "tuple"... done (took 1.861966711 seconds)
loading group "dates"... done (took 1.286780779 seconds)
loading group "micro"... done (took 0.225408576 seconds)
loading group "io"... done (took 0.958593035 seconds)
loading group "scalar"... done (took 38.234412245 seconds)
loading group "sparse"... done (took 12.002891164 seconds)
loading group "broadcast"... done (took 0.945140569 seconds)
loading group "union"... done (took 12.207554597 seconds)
loading group "simd"... done (took 4.415944759 seconds)
loading group "random"... done (took 9.021914384 seconds)
loading group "problem"... done (took 1.827886022 seconds)
loading group "array"... done (took 20.734051855 seconds)
loading group "misc"... done (took 1.676171361 seconds)
loading group "sort"... done (took 3.313966025 seconds)
loading group "collection"... done (took 17.174848802 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.519331926 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124006778 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116921316 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118125076 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146295239 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.110909033 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123002662 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084713576 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.779741861 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146532931 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11568096 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.427363635 seconds)
done (took 5.097158286 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174425306 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081633207 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081282012 seconds)
  done (took 1.271782681 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064212071 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121332823 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065432252 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065710401 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066202218 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065621193 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065414768 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065022116 seconds)
  done (took 1.624369825 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071983607 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068404492 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065874249 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067096664 seconds)
  done (took 1.3834482 seconds)
done (took 5.637397006 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.780360259 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204096525 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185314973 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.408218456 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130610358 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157325771 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63936471 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336986818 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187018592 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.0794459 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107566634 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.325106313 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107345875 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640496655 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076511574 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089657316 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135784114 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432695242 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066438478 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080727224 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088317234 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127593598 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.0841989 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07355375 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14490835 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067306781 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134983223 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079160839 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065394758 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.210736015 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17125933 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65540092 seconds)
  done (took 10.222504069 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094425072 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096893287 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068578094 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12207743 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095109594 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068568114 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07006665 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066267855 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08529287 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126534442 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087264222 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100181356 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064244384 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067462696 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083342212 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20313563 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081852397 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081962455 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069643547 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074269629 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10336366 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077372234 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076210847 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076030858 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127541458 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178838985 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097040994 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096368139 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065783444 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077824427 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114282323 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124466329 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067320298 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065593413 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12290167 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09416701 seconds)
  done (took 4.516226251 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.000446316 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143137584 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090133189 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133116722 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064203682 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107991132 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065133065 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079958985 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.208376559 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.386068376 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084372023 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.588417921 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110941237 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102974058 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069068406 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067253396 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065952098 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.4692267 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.0941136 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106247524 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080275911 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06878038 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067588908 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.352202685 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066861494 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062912268 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066897601 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056198881 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125318845 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067677619 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.943485472 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126405829 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065656988 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09984481 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168044383 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09015459 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272874649 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067671826 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063279484 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153636441 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069817137 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064970635 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083278074 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102290183 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111287417 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064467421 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066258343 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.1629303 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064496262 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079293646 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.630065473 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153174701 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07837627 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065671999 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.254640657 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087045011 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069092682 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090680637 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062998442 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.185602777 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132182843 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06648252 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065384063 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067355005 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069026761 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.35859551 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065151335 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063027408 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06628345 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075353514 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.229834032 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06838367 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069450064 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07182746 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072396643 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086929251 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065390587 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074583337 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065101363 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065305351 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065812996 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082710536 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.373686982 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066377665 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067273112 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064482935 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088638194 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095772232 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065788573 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064885869 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098838452 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067856273 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065002079 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105420325 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065985931 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082668451 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068082126 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112429474 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065043662 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.218062305 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066100717 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095649386 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07187843 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097857843 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078966048 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06681966 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.417893934 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064389828 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063043068 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066841123 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063986057 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066965079 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065721875 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063639476 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078294642 seconds)
  done (took 21.244874277 seconds)
done (took 38.092635925 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235316234 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073481107 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075230087 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076885391 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073146431 seconds)
  done (took 1.736703495 seconds)
done (took 2.91769339 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121868964 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099292109 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063417256 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096415322 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063030047 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101188088 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100414547 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081514539 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099900181 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063611151 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096592214 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063565488 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063473605 seconds)
  done (took 2.315153551 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082828276 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083824826 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069122121 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083078689 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062653284 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082579389 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080854803 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087861806 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081136562 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072332842 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063359191 seconds)
  done (took 2.025354157 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082247424 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083215038 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06926082 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081431491 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062822892 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081021108 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080888089 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085189026 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081366841 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07329197 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063083152 seconds)
  done (took 2.014198425 seconds)
done (took 7.523474758 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076247387 seconds)
  done (took 1.238812287 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.589948286 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.075109518 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080969421 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110214003 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188986521 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117252082 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.270276098 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086627578 seconds)
  done (took 8.864061992 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102913371 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071096868 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071039181 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06935998 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071458709 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068934066 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069895366 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06770821 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068641215 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067306222 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071406184 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06886737 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067448623 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070885782 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070600488 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068255529 seconds)
  done (took 2.382213517 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091154897 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090757121 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07289812 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074499403 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071954823 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070930411 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073060052 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07245028 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07006504 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071175006 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073543165 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072848304 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070733403 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063804311 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073640284 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074210906 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070415575 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072543812 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074152586 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073976677 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074376924 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06327515 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070913913 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07340752 seconds)
  done (took 3.032420014 seconds)
done (took 16.688139384 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114169282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070873076 seconds)
  done (took 1.356481127 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079881103 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082047334 seconds)
  done (took 1.340764976 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081037434 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064561254 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089202166 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077497466 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065686488 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064836314 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086957164 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064929639 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065297116 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065286923 seconds)
  done (took 1.9051734 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06732404 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076653182 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069791879 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080110533 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072312534 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063389243 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071549759 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067021472 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076165516 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062248696 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070309725 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081808394 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07031547 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083738731 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071342101 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067887095 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070029321 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06742198 seconds)
  done (took 2.470658372 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06516633 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065771119 seconds)
  done (took 1.313745637 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06671151 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062578541 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066611753 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065659761 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062756057 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061959576 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062421133 seconds)
  done (took 1.629533957 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.382968398 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112875508 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.309351595 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070404528 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081320728 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256567844 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064861021 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06978534 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070280994 seconds)
  done (took 2.641541365 seconds)
done (took 13.844269906 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078958183 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085325214 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095833728 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.373161897 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090627616 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.0659197 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113580608 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187576211 seconds)
done (took 2.284609572 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211154117 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.635308626 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401333094 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204246949 seconds)
  done (took 2.427622231 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33898858 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087585112 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060141152 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068627277 seconds)
  done (took 1.75037144 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06560417 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068282093 seconds)
  done (took 1.324819203 seconds)
done (took 6.907215277 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066093612 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065411365 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083190568 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062293282 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065356227 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062956185 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063940056 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065867594 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065307561 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065480365 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067992377 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065538455 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065441153 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063127839 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062974079 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065393444 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063057264 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062795225 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062802859 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065065347 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062941478 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066185229 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06352361 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062623816 seconds)
  done (took 2.791479595 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084111693 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065698616 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070786397 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069802283 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068465026 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070149897 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070376314 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065179759 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070350604 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06714236 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068230075 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068342339 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067750736 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069036839 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067822793 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068992528 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070683715 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065107 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06786965 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068598492 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070268715 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065487408 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06878483 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070635686 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068642512 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070228569 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067295574 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065102319 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07026803 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068327573 seconds)
  done (took 3.268760877 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069025602 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062933666 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063820224 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070083099 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063160455 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063651158 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062384032 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063328529 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063763511 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062770479 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064487006 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062653682 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062526082 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063611202 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064073506 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066839589 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078877127 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063858858 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062812018 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063704881 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066672662 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063055518 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0629318 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063036866 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063073983 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06282629 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063477907 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062394846 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064124412 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06300642 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066680214 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066413593 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062921651 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069802216 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066973702 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062499694 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066830739 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062229536 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063295407 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063062085 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062690047 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063161672 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062624071 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069499172 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062783712 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064374349 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063125911 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063960524 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063492188 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065622942 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062108503 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.171089546 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064892497 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065311434 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067079211 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062491251 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063483277 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062220648 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063135487 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062698601 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062064196 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062702725 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065316632 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063150689 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078131309 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069333422 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062549038 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064129254 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063413274 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065717541 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064019406 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076909259 seconds)
  done (took 5.970730854 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089226482 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086459445 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06448642 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064721119 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061246204 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063151552 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068593371 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063286889 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064366251 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080588015 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063644741 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065028145 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064207605 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067290406 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063187827 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064893106 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071767246 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060979714 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063266873 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066294316 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063275567 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068566036 seconds)
  done (took 2.700452616 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156021033 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069152456 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10514776 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074858472 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068929987 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074017765 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069470746 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068844562 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069230107 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06645778 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066611375 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069354859 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068774605 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066448805 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067101189 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06636573 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068808162 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066757121 seconds)
  done (took 2.567747076 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075667143 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065652809 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086649234 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064719276 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064938664 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067461941 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069693509 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073359803 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06688236 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065291298 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07371196 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067732522 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067476529 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065254775 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067777829 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06588282 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068003121 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065067203 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07268582 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069367916 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069041674 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073495673 seconds)
  done (took 2.732188502 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078447336 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06742238 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080615939 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067623087 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061263504 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063460207 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069842128 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064981924 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069536796 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066719477 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064997461 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063214557 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067506463 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064890758 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067725001 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064626962 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066845329 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064506826 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066676327 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06057228 seconds)
  done (took 2.549926212 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084635819 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067034412 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066379838 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074240197 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066297891 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066759664 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074073183 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067044838 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067047403 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087650606 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066185654 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065982495 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073962167 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070852719 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066914961 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073638539 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073651753 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073720396 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066444137 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066345741 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087203281 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066475013 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073641455 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066027764 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066296767 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06647209 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065920896 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070878989 seconds)
  done (took 3.191511368 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065470706 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064836794 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06254493 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063231509 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063076554 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062420737 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063557636 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063574284 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064992566 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062760836 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066071679 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065460026 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065189821 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064929898 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065498422 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065498918 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065632855 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062769007 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063130182 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062785546 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065138017 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065768993 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06534268 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062938196 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063050715 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0652443 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063050407 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062850706 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065940529 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062836866 seconds)
  done (took 3.138056081 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074660413 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071860169 seconds)
  done (took 1.359298769 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062394841 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079479126 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063515514 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069451942 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069244471 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066642474 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072623698 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069056513 seconds)
  done (took 1.76171224 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080799171 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076352086 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067415386 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078620761 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075888293 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082620307 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133668793 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065875562 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072186004 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063546129 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079330121 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06469325 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071878976 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066070382 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071580673 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072262475 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063457978 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070980063 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067129933 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064196376 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066450718 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075411876 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06791924 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06091 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067096486 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08752846 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07700021 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064981402 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06838295 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073123821 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071461668 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059395628 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064961818 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06554296 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063461024 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074885523 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0797376 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068123021 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073628912 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068138003 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075576037 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060771277 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070022333 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071704468 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075333427 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065519306 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065568279 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060300052 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062892596 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067488505 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060458401 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068002163 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059915248 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072172154 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068742313 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07638353 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064109131 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06704343 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068767627 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069003993 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072337077 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067568824 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068220528 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065526745 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075412431 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069667998 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074228994 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06020455 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059685716 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062868012 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074532943 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087951374 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07164627 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06594081 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066275968 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063340517 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069502497 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066982469 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071151306 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072423094 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064988012 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070191705 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072930898 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065616858 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067891275 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073213075 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063590568 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067987647 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063410363 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081599311 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064032008 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0633964 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063152996 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075798092 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06847131 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065017966 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062934575 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072167474 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059348986 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065841435 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06570886 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066225016 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075771276 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06924096 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069229262 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072724002 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071602571 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064353816 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06735032 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060968959 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064709928 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063565328 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071661136 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058360063 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067061912 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065558673 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064842498 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072086432 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062436631 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063760275 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071523517 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069480197 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.1870218 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06352375 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070162431 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06542711 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068850253 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075371115 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064143169 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060927072 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061764813 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069097048 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065846138 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069885122 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069925636 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068865414 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060219963 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063016556 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070346138 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074908679 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065554543 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066904119 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071724564 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066690519 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06482106 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072054521 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068371871 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065096961 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071316492 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067023422 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06063053 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068926248 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068721332 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063923358 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069395516 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068848342 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067534026 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06693275 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065000692 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072168373 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067514947 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064518685 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066202471 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063888227 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075866303 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068153113 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061591854 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063322509 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074592996 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063673534 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064600211 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065369242 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06791279 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066219226 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063361255 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064860127 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067665979 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075064218 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068859207 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066168229 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071381983 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077330767 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065428896 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068268796 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064892281 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068268026 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066482545 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07498644 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070890036 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070534032 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069163251 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062692843 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070698707 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072918612 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064185515 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063089913 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064963302 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068973083 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071145644 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069020095 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065733904 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063355344 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065853308 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068169315 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068068317 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064911225 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064077632 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07137055 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06379119 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071765934 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065737729 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076378129 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068236837 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060584216 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06791853 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06396033 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071599841 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060809306 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06309982 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065049748 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066123972 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064031402 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067663877 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059717906 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072582122 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072702012 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065938627 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064704758 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065284156 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072203187 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066975769 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068639696 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06835987 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070278434 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074972524 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063951652 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067416966 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07418244 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063891016 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058279355 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069581433 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063175441 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063337814 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063425214 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062729534 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067036907 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071638103 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071130822 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.185356459 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069467621 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064296335 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064466055 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061191039 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07035518 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069317007 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066724901 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07291842 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066834788 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066461831 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069773661 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065201527 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066457727 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066703697 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069030585 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065952161 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068073083 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065304204 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068624042 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065384695 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063845142 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067847933 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065643237 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066275816 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071025647 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065094695 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066168235 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068349037 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065671429 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066479046 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065624239 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065684026 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069335412 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067177196 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066152162 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069352906 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060604481 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073131692 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065736723 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073216318 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065860995 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062963779 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072111459 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06789564 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070500199 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06651519 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066072151 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067307081 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065820381 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068306489 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072118065 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063717578 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076252779 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073497643 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066735826 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068343155 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066495049 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066723613 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064922583 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066120451 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065980411 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066661223 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065045729 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070228215 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069053184 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065836835 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067530653 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065853926 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065665343 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066776032 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060103166 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065100381 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064964259 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065879125 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07479697 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065632935 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065267279 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06416145 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066148659 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064141872 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061968467 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072719611 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075065779 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065814176 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072320888 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064833712 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066942151 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075743209 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059448948 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063778553 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062957233 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06313918 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072949803 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065608718 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074871627 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065832701 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065136889 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06261915 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065756201 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064174567 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059647783 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062814856 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069349783 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064669616 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064230035 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065650608 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067821807 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066160046 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074751182 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065291808 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066369078 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065537841 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062434309 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064206121 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063992997 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067282051 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065163866 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062385502 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06234889 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063804689 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065423567 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066363384 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066326528 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066153842 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071281383 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063795215 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067611816 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06712726 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059141584 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.197569539 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066388551 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066082041 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065828824 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069869385 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06970055 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067011408 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075172604 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066209676 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067059186 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065871098 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06337476 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065489218 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065471025 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065522859 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065264248 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066843471 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074099256 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063369763 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069014755 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065523973 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065947411 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072461219 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066872851 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068814649 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071297348 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066067508 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067887141 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074064987 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070245475 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0692184 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066620418 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06753424 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071376488 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066030679 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072359275 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066542274 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066563238 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.0676885 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064102115 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065524384 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065189788 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064722862 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072024758 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066924132 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06482918 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064643936 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063849679 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067295031 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069322221 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073198175 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069003854 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069641856 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060815807 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062771873 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06609159 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06410926 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067558073 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068443451 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07132073 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068548798 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066195979 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064395517 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07439164 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071192293 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070127489 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063535438 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070218024 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066342394 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068144077 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066621644 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066212566 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066985426 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069404211 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066803763 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064813757 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071741226 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068901799 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066012616 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066977105 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066234767 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065586561 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060306607 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065903004 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067366504 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070187114 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067643384 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064959178 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075815019 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063511298 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06597908 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06822249 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064396194 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069561577 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060359754 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067112072 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066471922 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0662253 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060413271 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064857366 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063148219 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068382215 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065000686 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060571306 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07650468 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074528665 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068368061 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064917755 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064313882 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061066653 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060997116 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06541799 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066783385 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067233636 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075669746 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064363645 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064427395 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060092437 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065372989 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067215991 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067870316 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061866025 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060175811 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063847158 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067741576 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070265826 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063013974 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064046261 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067596867 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066522433 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.192509647 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069958495 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063404251 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069947367 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079223972 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066908134 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067049886 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071901107 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073617832 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066324222 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061056496 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066605317 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069859976 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066998878 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066440921 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068055497 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081199467 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06898852 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065094068 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064751034 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069438443 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065351654 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074990104 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067777361 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066006985 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070724432 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06800466 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074382435 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068896619 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073389694 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069167338 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069159318 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064911629 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066000502 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063818665 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06465943 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066752298 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066085201 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070636811 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073442176 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064873618 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076480443 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075323835 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067583395 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062457521 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06487029 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064784881 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061302855 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067566742 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06501074 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063692283 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063334063 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064936893 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067263257 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07060325 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066485611 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066350909 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065346535 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060043325 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067989643 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067956366 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066590138 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.0625529 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065570697 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066251709 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069676428 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069098576 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063012391 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067943514 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067648838 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067178056 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060793268 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073112729 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064616051 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066890953 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065022339 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066075416 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066052616 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06888904 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070314158 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066954387 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068581977 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069173134 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067770053 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063183934 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062679714 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070878806 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063647165 seconds)
  done (took 41.988165419 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099138608 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061969401 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060438282 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060535739 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072617471 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062229665 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061581635 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062113849 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061995639 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064534918 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060841177 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06129184 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069123159 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076094348 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072038487 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065382663 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061213313 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061727706 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061053485 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061519108 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069232549 seconds)
  done (took 2.683571936 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072232222 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076276527 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074799307 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081128679 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070251301 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06911384 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074353821 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069472845 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077404197 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071291575 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077723102 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069522605 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07135119 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071279442 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07123004 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069856631 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077100403 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070311574 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069370796 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074753979 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069477415 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074086851 seconds)
  done (took 2.881620786 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066929883 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064367384 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067276131 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060114239 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065669171 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060340218 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067948874 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062966409 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068110806 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064261122 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064643841 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.0646115 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066603569 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060789197 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065530629 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063394632 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106659943 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068286109 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064799084 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065875362 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060274313 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066940781 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060454458 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060844388 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063983113 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068236051 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065278719 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062972351 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064258577 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063600232 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064696849 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062653452 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06665395 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065176543 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063806837 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063800985 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064216736 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064493966 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059912306 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062830774 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064991213 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060307672 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06468479 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065824255 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062562971 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062534928 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066495386 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064586795 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060404578 seconds)
  done (took 4.46925612 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077753917 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108277344 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066836087 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089765579 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078443248 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071526782 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068574812 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088768068 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06224997 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063047157 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080503302 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07755988 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064067879 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068636557 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071324924 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064287088 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065188629 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063805972 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06852134 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06377864 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067775738 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071290922 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078587256 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076504484 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068258552 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063251878 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063462231 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068798777 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076153538 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068592777 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068895672 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069928315 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078755777 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069785031 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063681653 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066670814 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080306439 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064633283 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066812275 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062216262 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066816723 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068829119 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071099423 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080183188 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064574363 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069837859 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064208096 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062416299 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076404752 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066688431 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072106202 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078497315 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068515752 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.0651404 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068776282 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079843745 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065169559 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062994407 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067340125 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076115161 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062142536 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068554676 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077730587 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066940265 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071764401 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077760877 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069745209 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068770295 seconds)
  done (took 6.237553851 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074874675 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094490421 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081860008 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082173436 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074618023 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074615407 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074324663 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07460476 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074430319 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078694611 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074947166 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11460143 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069768282 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076658884 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074719574 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074778051 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074428348 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074649601 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074560297 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074107167 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074509117 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081991934 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074564852 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081716066 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078672833 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069796431 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073911579 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074888779 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082189394 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074793077 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078601391 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074420571 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082713916 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081698827 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078567202 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074234692 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064406527 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073702478 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074469228 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073900375 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07024254 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08204571 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074573572 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069936709 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074302022 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075161348 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081684975 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078904925 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076905851 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078516444 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074865126 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08231179 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074145222 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074507349 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081406308 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08468394 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08147323 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083213938 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074278233 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081099666 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081863441 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084411495 seconds)
  done (took 6.115934401 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080794417 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074733308 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080392163 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060961723 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063507356 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071238731 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063432311 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063580714 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073523902 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073443571 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075732016 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071720203 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074099465 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075282187 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071688755 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073817491 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070644514 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070731644 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073331805 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071178667 seconds)
  done (took 2.737153328 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073989039 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081836456 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065763778 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070495347 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068538989 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071304342 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067605646 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06843593 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066051307 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068454877 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075251219 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075091993 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06601772 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07052438 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075168244 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070686181 seconds)
  done (took 2.432386549 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082729857 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072252014 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07908265 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06508546 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065847138 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061381435 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064957726 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060774303 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.0616599 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077006357 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065422359 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075362899 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064923796 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063602344 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062209666 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070356688 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061390707 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06212065 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064990724 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077315421 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068663421 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063124632 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068200677 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064790165 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067584783 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069100245 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063696137 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064933566 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061942077 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06485098 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067596283 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067854109 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062220191 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062594124 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063803587 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062240131 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064176424 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065066551 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06974949 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064537511 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062567777 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066669998 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064719114 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065593896 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060953889 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065276383 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061402745 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066789986 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063762272 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067313873 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06440342 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067332266 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065400778 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071093331 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067787586 seconds)
  done (took 4.945085279 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079324696 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068530978 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060280735 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06329136 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067744612 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066111869 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068452652 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066412294 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066528708 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063832401 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06666915 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06859342 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066773218 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0686074 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066801794 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068649658 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060902555 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06636656 seconds)
  done (took 2.512471274 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070702885 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064421209 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071987373 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064494212 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065625986 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0677947 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061034386 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063565385 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06385134 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065002704 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064799934 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067290507 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063810483 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067588515 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064916404 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064733059 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067081348 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06395757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064798508 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060918143 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067145645 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063589315 seconds)
  done (took 2.741846922 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093745101 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081682201 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138510424 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078016335 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08323609 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070759235 seconds)
  done (took 1.849516562 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090463661 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098334528 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065704166 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068935586 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074637906 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068202169 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069162195 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068764745 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077517401 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07439618 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068948533 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077336021 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077079785 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076275391 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07464275 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074693549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068655439 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068820573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065221613 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082865064 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068845236 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0771187 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069286295 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069416543 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068992047 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076275237 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076955632 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075376018 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069060281 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07716003 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074367718 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069038094 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077580059 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074741389 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068566102 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077334175 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069395695 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082795565 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074806196 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076406434 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068396052 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075056546 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077513882 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073696767 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077808699 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069466915 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073295263 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069023773 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069112417 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084247745 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075043721 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076366729 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076905599 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077844935 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07734041 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084329488 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074881702 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076225518 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075441015 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074902284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07621287 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074500329 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076451407 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074685339 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074547368 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076296088 seconds)
  done (took 6.233034008 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10135076 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065911124 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069048973 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075344499 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076169643 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069166347 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069267963 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06892717 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069475887 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065807756 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106731644 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069364325 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076465555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076280442 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069423599 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068817045 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068748885 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076308009 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065824646 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084374772 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06901976 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076350949 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076726538 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076818067 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074794251 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074412269 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069261893 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069066355 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0688406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068634089 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073618333 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069224721 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076153323 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065620651 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076263933 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069477903 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069325154 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073357998 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068704311 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074343987 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076277904 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082447982 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069134516 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068511677 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074892765 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069098429 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069088686 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065925486 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068982243 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066214906 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074857442 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075214494 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075736115 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076877918 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069797215 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069400021 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069351549 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069156556 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069268537 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075010576 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076588732 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069041226 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084711679 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069387942 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068864156 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077508947 seconds)
  done (took 6.137167245 seconds)
done (took 127.185204472 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182833978 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164607288 seconds)
  done (took 1.650179322 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068140331 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097754467 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075752593 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127396692 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06494879 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099206218 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098552834 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077199304 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065305224 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065255313 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.064998634 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067591175 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130605114 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065614414 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.064744759 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068281181 seconds)
  done (took 2.617981106 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098383559 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161094591 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101262043 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064112093 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098316239 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07160822 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063648878 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07411511 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070026209 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064023648 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071661023 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069520615 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.063896721 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069473623 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070028829 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071664839 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064060361 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071775842 seconds)
  done (took 2.737042296 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097872308 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090014486 seconds)
  done (took 1.508645124 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156678256 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.1041058 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144201325 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.349055172 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16316593 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.14729091 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143084334 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141647168 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120771672 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139029661 seconds)
  done (took 2.926714128 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097955204 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152673981 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.264670638 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116430065 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071850137 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093012257 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117484252 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076576549 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079222775 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078867228 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079319254 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075255281 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098268887 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072449774 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073101607 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074892905 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101989989 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072012062 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073775164 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075580914 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099712857 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065087358 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072760962 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072113839 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076428031 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076741287 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064683667 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064602242 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075651989 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073845978 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075755279 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092491573 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076011647 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104989998 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069422396 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106294433 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075840497 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072792794 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074137529 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072867891 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07746896 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077940404 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071752834 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07557283 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064680115 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075695237 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064841914 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064607939 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077546441 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06592783 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076993869 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075757977 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104739738 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066115914 seconds)
  done (took 5.889082406 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103045203 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103888519 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070674687 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112689366 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101023653 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071627061 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102040995 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094814132 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102691401 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069474613 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067419762 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069713936 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080896868 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081953325 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113666754 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105762981 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072835815 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07002234 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106357947 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104209764 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067742535 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096281416 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090343691 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10273703 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066804788 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069186184 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067589593 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069371752 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075637688 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077184068 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06867635 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079365296 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083395962 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076814379 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066557791 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066808232 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067834394 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078536276 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078491308 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077517202 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076642579 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067038378 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067337644 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068637687 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068805973 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066864942 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077611 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078903835 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077524334 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06858327 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069222256 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067453305 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068816522 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078579354 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076819601 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079348543 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078753164 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067747189 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067604889 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071466229 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078986406 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078209943 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078319953 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069244024 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077694089 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068207795 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078931938 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082750845 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067813499 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069115352 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067197059 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068389144 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068556123 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07644638 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076981134 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068807423 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068333801 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067118045 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078734802 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077224333 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06732351 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075588053 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066550833 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067614934 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069049642 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068968349 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076411725 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078836752 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069071428 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067578391 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068868977 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0680652 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066272618 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075587358 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078954681 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078571994 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077054269 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067784856 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076344372 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075574243 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068293254 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07687884 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066600481 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068049273 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067774516 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07601016 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074431359 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076612056 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067180083 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065784729 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074502149 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077050101 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066632856 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074558985 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077095576 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076378969 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065708546 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077720719 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066087741 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076195366 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067150442 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076800606 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066311103 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076170528 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066800536 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066209351 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066736808 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076400744 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070237353 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065922131 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067455729 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067466793 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075892716 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079282075 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068301635 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075113335 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07496911 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068209703 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075413984 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066417785 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075791376 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067137234 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066525961 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064196811 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07636865 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064995882 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06514702 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066104262 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076079211 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065115681 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075235722 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07282602 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065191855 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07608961 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075135318 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.072439777 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075131165 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067090082 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065320323 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064852758 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066135816 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073662308 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074359113 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067321516 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065906694 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074041548 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.074067939 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064369181 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073991207 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073586503 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073960761 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064838635 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066811139 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076217678 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075857946 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073566721 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074129586 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074534654 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065381193 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07250704 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074001648 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066031307 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079750749 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065268 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077962993 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07442551 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072131104 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074022251 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07621701 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075484749 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075140515 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078512132 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065014993 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064776809 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.074822231 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064581473 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065992634 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073364701 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066900949 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066247308 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078122929 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065287807 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075472823 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064501157 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074630676 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064160284 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067014886 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079172848 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065207702 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067144288 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074265628 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065947885 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072159407 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075664188 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073654999 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064751245 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066648987 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.308436682 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078744672 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069744921 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069714294 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071423814 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079444195 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079344394 seconds)
  done (took 18.085953686 seconds)
done (took 36.740072295 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215347237 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15602811 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188343807 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121340497 seconds)
  done (took 2.13455419 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119025657 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103351039 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093682619 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066310861 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100498037 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066043587 seconds)
  done (took 1.933230836 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313519275 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212591563 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.191219683 seconds)
  done (took 2.099160181 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202973514 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191281024 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.428935051 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265718815 seconds)
  done (took 2.5831846 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145887684 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089150378 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067494952 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084556851 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133551705 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160169736 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100084496 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124859931 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079144479 seconds)
  done (took 2.423943096 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148636873 seconds)
done (took 12.713635937 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.126480899 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.11371113 seconds)
    (3/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092365638 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.100851668 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.222830069 seconds)
    (6/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103852834 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084034228 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.22192112 seconds)
    (9/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.183094984 seconds)
    (10/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.195571975 seconds)
    (11/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074217098 seconds)
    (12/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08882357 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072347445 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078315815 seconds)
    (15/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.176730663 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065164651 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073861419 seconds)
    (18/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.098340594 seconds)
    (19/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069670809 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089199709 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072478534 seconds)
    (22/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.206547065 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050755519 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.150270015 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094586225 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.14350478 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112515249 seconds)
    (28/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.229823461 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.206054556 seconds)
    (30/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099711868 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100946906 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.221045271 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.19388337 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090013446 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071744272 seconds)
    (36/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080519898 seconds)
    (37/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.165904733 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076665297 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125358851 seconds)
    (40/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163896795 seconds)
    (41/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.120322372 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.242491056 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.082811934 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065684618 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092249086 seconds)
    (46/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11075314 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073460541 seconds)
    (48/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051138989 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.115319455 seconds)
    (50/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.189256985 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072394894 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074091369 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090783835 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110346623 seconds)
    (55/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076597141 seconds)
    (56/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198433065 seconds)
    (57/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.162695819 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067118396 seconds)
    (59/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154026567 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172688945 seconds)
    (61/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071855354 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08329736 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14414734 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.190068514 seconds)
    (65/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080374502 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091790363 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.191505746 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065379637 seconds)
    (69/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053090173 seconds)
    (70/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076706315 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064825801 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064909891 seconds)
    (73/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.094559501 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14090138 seconds)
    (75/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081145361 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110152723 seconds)
    (77/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073857925 seconds)
    (78/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.050475475 seconds)
    (79/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.06150069 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.050741603 seconds)
    (81/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.20362778 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.065533892 seconds)
    (83/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073335307 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.179490426 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064380486 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064151988 seconds)
    (87/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.259456801 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184524028 seconds)
    (89/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.157175735 seconds)
    (90/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060832504 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.157466696 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079490964 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.063767314 seconds)
    (94/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.161308354 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06902707 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14026309 seconds)
    (97/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077763113 seconds)
    (98/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064656485 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.161801209 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096602997 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094387035 seconds)
    (102/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067529956 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053216226 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072367483 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071743414 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066673621 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050297599 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113861117 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.206688452 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072954797 seconds)
    (111/309) benchmarking ("sort", Float64, false)...
    done (took 0.130276808 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088346158 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14441419 seconds)
    (114/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100879675 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.161906361 seconds)
    (116/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077776648 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090095796 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091881478 seconds)
    (119/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067006065 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072663574 seconds)
    (121/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060682868 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.162396216 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089985347 seconds)
    (124/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051809389 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09113169 seconds)
    (126/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.113057184 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139957166 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065359456 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074729255 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196065794 seconds)
    (131/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105711694 seconds)
    (132/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061062521 seconds)
    (133/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066671066 seconds)
    (134/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061238206 seconds)
    (135/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.049832457 seconds)
    (136/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074159874 seconds)
    (137/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154366764 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06493864 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074370754 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153431094 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064149271 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074814713 seconds)
    (143/309) benchmarking ("sort", Bool, false)...
    done (took 0.13689189 seconds)
    (144/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072791762 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087159778 seconds)
    (146/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075811028 seconds)
    (147/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065280889 seconds)
    (148/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176785191 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084890395 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.154918951 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072998212 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070824719 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050641752 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071619125 seconds)
    (155/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107967901 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069858462 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092146281 seconds)
    (158/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050147732 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069026732 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072399081 seconds)
    (161/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.110567321 seconds)
    (162/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071960099 seconds)
    (163/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075370949 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072259453 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067518551 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.049974758 seconds)
    (167/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.280215014 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071850243 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067313381 seconds)
    (170/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071629813 seconds)
    (171/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119097257 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135559576 seconds)
    (173/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.049681132 seconds)
    (174/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050876136 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064714923 seconds)
    (176/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.153787162 seconds)
    (177/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072838588 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135423006 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066116263 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124924956 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.049931419 seconds)
    (182/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.050925744 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174012308 seconds)
    (184/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087919221 seconds)
    (185/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072936764 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069360812 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138386025 seconds)
    (188/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051291042 seconds)
    (189/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07257767 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.062700183 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071167013 seconds)
    (192/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185200332 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110965072 seconds)
    (194/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064648 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07280365 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065834217 seconds)
    (197/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.049782894 seconds)
    (198/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07125711 seconds)
    (199/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072098545 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085246704 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.244341138 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063525539 seconds)
    (203/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081440447 seconds)
    (204/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078325939 seconds)
    (205/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051522119 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05077886 seconds)
    (207/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073002168 seconds)
    (208/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051192405 seconds)
    (209/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072562573 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128557495 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074017785 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072772459 seconds)
    (213/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051742096 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077888861 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051506371 seconds)
    (216/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.049953569 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090809013 seconds)
    (218/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08944864 seconds)
    (219/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073312142 seconds)
    (220/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065449872 seconds)
    (221/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067720591 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070944347 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.175741234 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182041237 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073456833 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050342296 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065991103 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064075718 seconds)
    (229/309) benchmarking ("sort", Int8, false)...
    done (took 0.141326419 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068041121 seconds)
    (231/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088492819 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129865626 seconds)
    (233/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.050879279 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134782884 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05090325 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086626609 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071583833 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.076527883 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064287134 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067371998 seconds)
    (241/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071953337 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051423344 seconds)
    (243/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075339512 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050708911 seconds)
    (245/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051368946 seconds)
    (246/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.19430232 seconds)
    (247/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054027552 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.049841398 seconds)
    (249/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06286224 seconds)
    (250/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05084797 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064550312 seconds)
    (252/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051435976 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064695483 seconds)
    (254/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109991465 seconds)
    (255/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.050808701 seconds)
    (256/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06623331 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093645951 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065133703 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050388076 seconds)
    (260/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101309557 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051094611 seconds)
    (262/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050289388 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071111002 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089885902 seconds)
    (265/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088373248 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064956712 seconds)
    (267/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061305115 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073600523 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064623876 seconds)
    (270/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064642809 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066187356 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.049699594 seconds)
    (273/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075208821 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.049731784 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052492327 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052032471 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065765132 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064600369 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05126748 seconds)
    (280/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061269998 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050181269 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072845998 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051384479 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062844354 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.050587523 seconds)
    (286/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070933668 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062807535 seconds)
    (288/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072617693 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064217367 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066621989 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071827797 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072513239 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091699054 seconds)
    (294/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05033455 seconds)
    (295/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050074948 seconds)
    (296/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050338728 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070357522 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088070709 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050843677 seconds)
    (300/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066290426 seconds)
    (301/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069297353 seconds)
    (302/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085283585 seconds)
    (303/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148704088 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069820341 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181039371 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05208362 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08977197 seconds)
    (308/309) benchmarking ("sort", Float32, false)...
    done (took 0.13114791 seconds)
    (309/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050377709 seconds)
  done (took 30.773004803 seconds)
done (took 32.170644665 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08234268 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092083353 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07360408 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092162015 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079612706 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.074954998 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07210877 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077685483 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079202901 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08120799 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07725441 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053720501 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073358407 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073871573 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073695758 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090190315 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077413716 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07244464 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072045081 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063718049 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072226338 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064695814 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066203469 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053171851 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078043257 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070864701 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071151918 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073167493 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064711606 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06500629 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068177224 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073325212 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064346395 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077556443 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071291739 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071875553 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073857292 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07602264 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066166544 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064896588 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073646532 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064585484 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072077349 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072879543 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071748675 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07095636 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072122976 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076943743 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090362379 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066861453 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073356439 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075232007 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07513223 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07253341 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068717849 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072373882 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070149118 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090773871 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073021328 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066772278 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073203774 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073337291 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070183067 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07255926 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072042335 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074338351 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075282276 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070722119 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073423619 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070878694 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064304729 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071981872 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068029557 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064503727 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074978617 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076604303 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063163262 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070486334 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071595028 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069858999 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063555652 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066122294 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066322066 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07105102 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06601941 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.052928539 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068343374 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070607483 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063412482 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071862578 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070802686 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072143081 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066151038 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074962599 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063799092 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069820608 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064668592 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068672559 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066359009 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068981891 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064143957 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066273629 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074001969 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065837971 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070548991 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078469617 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064190789 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071147382 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063115615 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064075638 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078860038 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073845387 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064735606 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066730675 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063766543 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072071875 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063556868 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064302255 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063827457 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064580979 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070536736 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064023013 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066181351 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072079966 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077716604 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063899445 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068024051 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065793777 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064399969 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070090236 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064108982 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063948632 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065747746 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060572387 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065482898 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063911466 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071429522 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065650823 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.203332462 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06684417 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073054272 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069869462 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071506535 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069888773 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06371279 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058160791 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066585386 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065899228 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066471273 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064332075 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066436921 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064636436 seconds)
done (took 12.292607188 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064863448 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138023382 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095415933 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095172219 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085188708 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065591214 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075770849 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100384699 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067560282 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100969396 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086404436 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084950932 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112706788 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063940411 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064962365 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069629673 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066504168 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081002035 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100306173 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085946383 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11452534 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064356033 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091943269 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088244422 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087549579 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10258675 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06838603 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069027276 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068502102 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092148648 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087132048 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069128003 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065651809 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097545606 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093060926 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082806551 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065475891 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083040732 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067568628 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064735584 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06672119 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097953978 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080014192 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080012369 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069134018 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068208159 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066044881 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082827551 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088935016 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078480832 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085413101 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100548171 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068558794 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064455593 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064029565 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085462616 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064081837 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068099975 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064909622 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06757143 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065095377 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068613448 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079891219 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079505366 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069209337 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078790422 seconds)
  done (took 6.729049602 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083078408 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089705458 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082127316 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08178926 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064561966 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065331629 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065155732 seconds)
  done (took 2.010141937 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065657459 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087612951 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088203574 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087520276 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080284773 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086459831 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074737247 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065806874 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.086987634 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066699115 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086500022 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099666744 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069007207 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072725484 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090051222 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065128989 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089440842 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06559534 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069342104 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089996403 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068260759 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095337217 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069130919 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065857637 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07980182 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065995142 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112582899 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070060616 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067598093 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068684291 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063307756 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106255926 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079432694 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073155413 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065430336 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080520705 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079890796 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063472825 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081756984 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074700587 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079479253 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065596952 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066258008 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064142026 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070182352 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075778554 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066309048 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066093138 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.0679441 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085308284 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066665629 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079213207 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068751673 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071033097 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066965922 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072055641 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075770576 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066600135 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08546426 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070479385 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082249874 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08152821 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079868723 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082680198 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067904639 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079086487 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079804146 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068069264 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067590357 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068568956 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081942796 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063553081 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066761163 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07583493 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067466659 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088348036 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088436036 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066947942 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078894966 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066078771 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065446139 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065713436 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08805258 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070454675 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06500477 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069531806 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068555746 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064150773 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06466192 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069221559 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063259183 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067325607 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068728906 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068462305 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068210666 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082028834 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068279579 seconds)
  done (took 8.696661311 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067115789 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067235378 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067642436 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065779818 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06716876 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06707245 seconds)
  done (took 1.899303427 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092173698 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067565257 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078688774 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071266579 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103234151 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085459581 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086598499 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076953719 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083246061 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077439187 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085475677 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087731763 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091082342 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071426073 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085949112 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07050625 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086585985 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073891823 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076715245 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07156117 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085175428 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071320842 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071623559 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080400306 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074384059 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070481607 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065934623 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077566563 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077049215 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076964413 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07112126 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07471302 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069723556 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076577702 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086086192 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069422085 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070877771 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076205844 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071029279 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074889362 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087006315 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071776659 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072667758 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07619621 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076712308 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069838786 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076279352 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074165538 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085152947 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076548854 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076931531 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070055792 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074129519 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075669896 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069499364 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076986351 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075880899 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086317248 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071172516 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.068988811 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067361501 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074339459 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076794601 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074872172 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077840164 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075707185 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069007397 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071355059 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071315759 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070103708 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075924257 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067271367 seconds)
  done (took 6.976851257 seconds)
done (took 27.778484848 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.528037417 seconds)
  done (took 1.995629166 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607832225 seconds)
  done (took 2.098308419 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.586502787 seconds)
  done (took 8.074109649 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.395837694 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.492690815 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.717437257 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131001834 seconds)
  done (took 3.267872492 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.699640319 seconds)
  done (took 2.199848773 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211391489 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.199851841 seconds)
  done (took 1.920245565 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.373568314 seconds)
  done (took 1.859514302 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.129392792 seconds)
  done (took 2.61834691 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.255034884 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174119062 seconds)
  done (took 1.926699003 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473499851 seconds)
  done (took 1.966589752 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.828139946 seconds)
  done (took 6.321871703 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209607729 seconds)
  done (took 1.750205278 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238062062 seconds)
  done (took 1.733882449 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.7177894 seconds)
  done (took 3.211994486 seconds)
done (took 42.439020071 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077442664 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079574869 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079518732 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076853323 seconds)
  done (took 1.795538245 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07547508 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071413619 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075054263 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071339007 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075851762 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071369978 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073043832 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075960027 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071503187 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071813771 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072171772 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072064655 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073678962 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073646061 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070056731 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074296342 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075082964 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071708513 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074342485 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071591749 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069439514 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073701149 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073694565 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070499679 seconds)
  done (took 3.246822915 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076423245 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071239442 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073390919 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070321466 seconds)
  done (took 1.795643248 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077488724 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093852404 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087854806 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077090531 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.0917066 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084917392 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067775958 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068134695 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069572413 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07640099 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066717521 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09501314 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087134999 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076383069 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078703316 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064745774 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067429009 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086082866 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076799875 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076951717 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069104046 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076019386 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066431956 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087262716 seconds)
  done (took 3.370135499 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085218285 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10384565 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080974235 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087822392 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089477678 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064517557 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086057413 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089496865 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124296597 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06425881 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069232411 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064564028 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071989514 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063760485 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079682194 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106181162 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109514218 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06756625 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09542567 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064333947 seconds)
  done (took 3.180235068 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071086789 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068812905 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064738055 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067582275 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075655075 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071047698 seconds)
  done (took 1.934225873 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066555771 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066106155 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065867572 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065628468 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071514463 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066480839 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06449191 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066281002 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066296912 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065559122 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065615294 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064840755 seconds)
  done (took 2.305055224 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.198885839 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067084024 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067261928 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064510798 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069532786 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064915257 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079138404 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066539719 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090132195 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065675742 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064985192 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067332314 seconds)
  done (took 2.477054405 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205065314 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074891631 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237635372 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14803042 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109589971 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11453101 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110565689 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111633305 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140013216 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09923652 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166284253 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165166189 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106232758 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135274508 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087229167 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099211673 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152213541 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160423916 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103789059 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164529532 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14464725 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124686918 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148508618 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100557445 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104740569 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120196592 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070055257 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078083934 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167665534 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131231771 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142216602 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109065933 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091289641 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17457628 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170902316 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139609698 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144272523 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083066607 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104256553 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133028375 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199272294 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087273086 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160364542 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106981456 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21416471 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13260247 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118561887 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118919043 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104684425 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087906012 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143751224 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180708597 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135382957 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086157777 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122301478 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111757654 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11244061 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11213643 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178539931 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159885644 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125068743 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069794008 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106741788 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151011536 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1323666 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106812945 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123257464 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089656449 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133342525 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15325244 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118262768 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142480506 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114853975 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08740621 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118259004 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138806795 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12566605 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159091363 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122653219 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071309818 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122348539 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099974849 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079426204 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145223767 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074530524 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174657642 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097540988 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107740279 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123480016 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10827275 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107577937 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157889861 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143066338 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101643007 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064415658 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241635968 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119147912 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14532217 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0858326 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107706125 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116993139 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077308792 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135455547 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07364203 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120224708 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075809284 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125712017 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127370591 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075063275 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119578369 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101793955 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.09851296 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131359825 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157833091 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086569106 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080028321 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167397401 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11940015 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101164447 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141943151 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15395659 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100740393 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099076097 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146980587 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176751513 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08734091 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16090494 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10409064 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082116833 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086047532 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121894396 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110718052 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121559175 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080807721 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116700427 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167045367 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073478854 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094536655 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132316831 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077521041 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079928809 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103996803 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103884233 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094104289 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098776992 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101884074 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134537753 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122005094 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103788275 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122112355 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096438824 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310889816 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086754033 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100238259 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102186001 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068707265 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134652975 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154404435 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077857787 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163458255 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121252731 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11461008 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118844706 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082767646 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139047291 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077493825 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069320459 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14316203 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108100002 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109178438 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148899899 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113798147 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123516493 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116917223 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131681169 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129087494 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128001433 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102970768 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087090364 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110044723 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124388545 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07237944 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089076617 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078548519 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102694489 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094228439 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081628785 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139711769 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122001897 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108770581 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110649855 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094938092 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146595198 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075051027 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126279027 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117722418 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094167671 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151312454 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151276947 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129436634 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097600108 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135576266 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068725868 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072732805 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087285002 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12161832 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081825065 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081748077 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253808526 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146456248 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12816615 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135775543 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12132668 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118888706 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153939078 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068017875 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115455298 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144787585 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119842063 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102939583 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088804288 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097853543 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140481519 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105385237 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179611972 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115722266 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121546311 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150300599 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099546759 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077940516 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101257497 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134127195 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1019503 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141254626 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098095966 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086298924 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108001364 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073182187 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09683906 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124958138 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116331651 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133158126 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113452433 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130504436 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075984367 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113683794 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12027302 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120686993 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062973869 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119167069 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160062883 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093452339 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117600396 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151493971 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077584045 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132360045 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173556079 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142995624 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083127591 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105943135 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25858023 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126485707 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118813959 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13937678 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106104615 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135063617 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108739444 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084733286 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085922274 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096124736 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103157588 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093852421 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104874767 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112651679 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094655222 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132128012 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102833812 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10765165 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115361885 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096796806 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089045907 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095155857 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174915211 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116194667 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168373446 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098582344 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141834387 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161803548 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074027771 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077674054 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076896147 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137754461 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082210664 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127898691 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10489092 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115157575 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122070087 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141147146 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093589642 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067765793 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107815495 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130774887 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122660106 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0963778 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102415075 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162111223 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100000306 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078563354 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113411408 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114144098 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101573877 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169992676 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060303559 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104458468 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074800667 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079020378 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125808701 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290273612 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079097555 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10198545 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118460126 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109928215 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126930217 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098291305 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106406189 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124178147 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148133695 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126216889 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088373529 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110086885 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126924861 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153903933 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103697159 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09469799 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169810829 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151323126 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157196765 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086296008 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112858899 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112252617 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107152153 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135789094 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081850575 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162303776 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080457564 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134142578 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101624301 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087728611 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12731629 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106189677 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086426879 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146313025 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116107574 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080899646 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076128343 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115954107 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118872404 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104406955 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07451366 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137076654 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072910921 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133414952 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159318707 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079535957 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105266637 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095237211 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077929293 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104573428 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100285322 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086062782 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097967973 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.313897555 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086348651 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147999302 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131791809 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111334204 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134973748 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100973347 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637665968 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077067778 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150894727 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11456257 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171668796 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098821217 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11651105 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109005627 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119838547 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143136178 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103393521 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177932011 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129769937 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114106478 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078523295 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099760527 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102522632 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085986852 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106121477 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111589309 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114075315 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091821435 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113825082 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122408145 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080331029 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094155984 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154340329 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115310345 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141075437 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139131032 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084360318 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116720125 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13605457 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078953056 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119957812 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15023534 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104319606 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097966379 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078847573 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09918662 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15643101 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071993058 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157326733 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117258627 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248794524 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111795093 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111168305 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130911777 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104553815 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119857682 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090959491 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108140496 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11169098 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080348768 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075912653 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103714287 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10949111 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097793728 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095308928 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09732271 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150049841 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071117066 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097820868 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112880939 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142526211 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172975171 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087747307 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080624574 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116383242 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11158578 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110527894 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119112869 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077821357 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08040454 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079145771 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076133067 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107004452 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111001142 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112499431 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109551333 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160887097 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081648393 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228947794 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094035176 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103789606 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068684179 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076580421 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094873627 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096696311 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105914196 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107793675 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157591603 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094389369 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088313374 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09019593 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072923267 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082148469 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127550234 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108214788 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117742913 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097091172 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061089736 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105970997 seconds)
  done (took 58.08483168 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10655162 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.080961712 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095123154 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.141852936 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120960206 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200660544 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152063798 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186571032 seconds)
  done (took 2.709653837 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066577127 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09380946 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101590066 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082049897 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064987025 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066684509 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228941032 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079220625 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064867673 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.096936909 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07682291 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067544292 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422266185 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067142245 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067552514 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061136803 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066189674 seconds)
  done (took 3.375473389 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379721907 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612650159 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.377385352 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071593023 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.412858586 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088052453 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.108474704 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.1299703 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071157456 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533056229 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703378392 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12216065 seconds)
  done (took 18.221646259 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073373769 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.067961273 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.081833795 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081975589 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071213882 seconds)
  done (took 1.984045456 seconds)
done (took 106.010746195 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079354489 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.605267279 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052235736 seconds)
  done (took 2.292778032 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081647084 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083424562 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083760725 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081716903 seconds)
  done (took 1.945900771 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.072372103 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074575579 seconds)
  done (took 1.755489248 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228766609 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16507958 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093840674 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081744436 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077942391 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078348916 seconds)
  done (took 1.852147921 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071223414 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073400781 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07140182 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075361193 seconds)
  done (took 1.900325318 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075417857 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.050496951 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05369956 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055880925 seconds)
  done (took 1.84563937 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085711158 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078122924 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077032303 seconds)
  done (took 1.852019833 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.099884704 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085092027 seconds)
  done (took 1.795165634 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080913372 seconds)
  done (took 1.692582971 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09832346 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099716479 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130161441 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109539617 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137759786 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10791603 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08368535 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084694211 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074960404 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085356894 seconds)
  done (took 2.623685357 seconds)
done (took 21.727946872 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077054134 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359889355 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357855459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088099889 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667582698 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355225001 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.000483577 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09123219 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114185329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06678199 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083242184 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646719224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958040108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.317888327 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.940086676 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.316836732 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647440904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067264082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066623288 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066042524 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980265485 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066212157 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066013113 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067218126 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647145725 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371137698 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066827546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.313093961 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066352227 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068547907 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353436203 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06657981 seconds)
  done (took 16.020747382 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068948244 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1189551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072091398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083344878 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069097275 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068452289 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.06999579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067749835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119593727 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06663581 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083603546 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066299935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070392381 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067308024 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086177628 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.081296753 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067132782 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067400015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066802868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066957483 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085559571 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066202875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06723089 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067297887 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066521679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07930845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067263993 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066597234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066855695 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068823319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069385034 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067396282 seconds)
  done (took 3.991879932 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116484523 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125755122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073132587 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103492474 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112724342 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068766179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145909593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092282025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128299085 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067194952 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08369355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066708072 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100347593 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067140761 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086975947 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066951266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067175672 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067050949 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066562834 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067210799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086177671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066304268 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067290119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067384886 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066755086 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080090765 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066708481 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067185501 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067142666 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068534376 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069978325 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067494651 seconds)
  done (took 4.240794173 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071332482 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074828856 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081345049 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082706713 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067796926 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070906903 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071349577 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068802271 seconds)
  done (took 2.218324902 seconds)
done (took 28.08833476 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076935869 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06792177 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071347776 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080403862 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071823802 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077922687 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066441715 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073980227 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07131551 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071773684 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07361536 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066368946 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069845849 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065992613 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072911168 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066504527 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.077816633 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070418264 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077664281 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077756277 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068818845 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071663151 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07350862 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077749788 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07764856 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077942561 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076601072 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071974212 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067647729 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069820914 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075445844 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082743211 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067655228 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077695752 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066219993 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066034577 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070212138 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066260519 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.077901255 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075499821 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068102835 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07556685 seconds)
  done (took 4.660273682 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086089131 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091281975 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083559686 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060051602 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065827775 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064194745 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088081801 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059066822 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058183149 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08681614 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054719112 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058700867 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064111943 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052227046 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058716341 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055559991 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060987977 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054272016 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059104609 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058504876 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087960235 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052293925 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075587611 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062319708 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.054347951 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060014581 seconds)
  done (took 3.346754078 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073505358 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085780547 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087811183 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128565712 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103281892 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07764129 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079302823 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09360257 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.087168835 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065631782 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070188083 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091438464 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08962884 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072194518 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066250525 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084916597 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082252111 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067502896 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07182849 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094097229 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085490066 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085005816 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097597616 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082548486 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065632658 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068671329 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070807546 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08002804 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071852667 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075555668 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070242159 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069808615 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068862245 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077881275 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.06992929 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068548406 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090807168 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076239367 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07778702 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067150182 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069653766 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067970174 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091805253 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131794031 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066256514 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072982677 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074226972 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076895922 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066689987 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086512768 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077797136 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066354583 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069687012 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065903458 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066439957 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080231805 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069036546 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068994036 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076451849 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069298253 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091701572 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071348126 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082433644 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066371519 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074381859 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066061083 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068133828 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066250964 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094733021 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068212692 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111332961 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067806111 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067801879 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075843464 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074887634 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07352158 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067466006 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082356622 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076876395 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069848613 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07543849 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070402183 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069535597 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090277708 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069239389 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068430499 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067608754 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072898529 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069096253 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067968359 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079364676 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066599839 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069190461 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085345459 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066390809 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067988303 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072681197 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070850869 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065860732 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077344398 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071353263 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06743454 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075632675 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06639524 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069306152 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079179045 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072883612 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065611953 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070555108 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072394955 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.0674976 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067862463 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069418589 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068286587 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075493426 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073392525 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071530546 seconds)
  done (took 10.509659507 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160834081 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155382221 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069480217 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145969653 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075260975 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078049263 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148880182 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093791203 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067163159 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067592706 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067375857 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108992343 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104780221 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114312794 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07766196 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066586069 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083686692 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113648175 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150616929 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144954736 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083174244 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076284501 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068321907 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068226448 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069433835 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077435338 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084365374 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075386583 seconds)
  done (took 4.362388898 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079467789 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102676896 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072841849 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089796712 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089203764 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066520133 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068701638 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068633876 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079310364 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.0772271 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066052021 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071997836 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073809205 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069871301 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06788537 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073510526 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.0737217 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06844775 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070660356 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072241741 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076874475 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090326299 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070501962 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065809201 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071552867 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065751562 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.062266236 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082779085 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066585379 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.093761778 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06438563 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074728469 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080878782 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067076182 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06657612 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066949668 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066231319 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066959286 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068480177 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065052574 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065253182 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056407424 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066118093 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078125726 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073483095 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055224402 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071119986 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071706561 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071739418 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064400014 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069804632 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069047925 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070527301 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074497534 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072147306 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072369023 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06761648 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073103281 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075581523 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066401093 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064243716 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064658076 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071225527 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064482369 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075066134 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071312737 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065292245 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066591533 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068326904 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073292111 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066462958 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070129276 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064191332 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068839663 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07127617 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068156969 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06775938 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065194651 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066406475 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066944648 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.053851367 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066243766 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052616926 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070141453 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065034284 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065162093 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06710916 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07129478 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078301847 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06803896 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072724127 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067624512 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065858309 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070209499 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.058974944 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069302045 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082654394 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082114173 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066870425 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064639814 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081510987 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071225559 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06599673 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.054636723 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074139224 seconds)
  done (took 9.045175816 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088667299 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069222558 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08548653 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09147645 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085978329 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073191273 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076023883 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068075411 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081771423 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072467059 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075599536 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06751656 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076767012 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07594777 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068872323 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076166074 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070808322 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083527284 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081524758 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067095424 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074994066 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079371297 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088726651 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081418153 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079775843 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081178307 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089389565 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070952484 seconds)
  done (took 3.856382041 seconds)
done (took 37.403687539 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.720797969 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.888252037 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.708092847 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.06151862 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.771693491 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.722883695 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.886500428 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.70361546 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.818762189 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.743548452 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.921863278 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.87995253 seconds)
done (took 64.471944837 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.783982274 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.856435022 seconds)
    (2/2) benchmarking "String"...
    done (took 1.950683158 seconds)
  done (took 5.451089374 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.957890648 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.263453462 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.955202823 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.701997882 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.707174693 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.04481699 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.495942987 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.210441693 seconds)
  done (took 30.023429074 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.767697041 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.363133516 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.348249923 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.377185104 seconds)
  done (took 15.546471832 seconds)
done (took 62.487463047 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.729381027 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.741379129 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.728275619 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.688811218 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.760187271 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.712952739 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.209606743 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.733650582 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.702334602 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.690670646 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.702718626 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.13336581 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.718965707 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.124588338 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.70684985 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.714432281 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.714505817 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.312813652 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.862408209 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.712062325 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.706982331 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.747155321 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.710751517 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.715123659 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.75540376 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.705576042 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.120559663 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.71498473 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.321801665 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.708689555 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.734202085 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.718548361 seconds)
  done (took 201.70331375 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.703990008 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.623734571 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.671387977 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.712363075 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.102140747 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.887206005 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.828024859 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.151344177 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.709549246 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.73248473 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.92622944 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.70528148 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.933897689 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.70529394 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.733656063 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.791699079 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.880304184 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.933640445 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.737476139 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.877433664 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.729723506 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.835973547 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.781451169 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.894705671 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.739715748 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.761314375 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.868485468 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.713293505 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.899483091 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.860364698 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.726923294 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.718340896 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.928754383 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.580252106 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.732608605 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.735278926 seconds)
  done (took 167.502780003 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.105029103 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.707110277 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.706866997 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.705622549 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.71991568 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.706105378 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.830223514 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.831725488 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.314339843 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.263082083 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.709964765 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.758981091 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.522806326 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.706373053 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.773919854 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.721486059 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.710321476 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.722184288 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.733734649 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.711440003 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.706935298 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.83362128 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.721269354 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.009867111 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.719409993 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.70827768 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.713698976 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.081127798 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.708880838 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.714563826 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.965442385 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.709363666 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.709186559 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.599958578 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.04079595 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.802171348 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.711682996 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.713986992 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.708765506 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.928206124 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.70984033 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.711236082 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.714292935 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.886788835 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.710821167 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.834902244 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.711905419 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.221417517 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.710985939 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.709739139 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.451167699 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.396853012 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.713232383 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.710730998 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.713206942 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.711005886 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.711807364 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.710930583 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.716686414 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.456118783 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.786666995 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.712561258 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.715568082 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.716805478 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.712671771 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.743612491 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.712544654 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.712899065 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.767346857 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.833767913 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.029464193 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.838360681 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.719233231 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.783013941 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.806889453 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.714631992 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.711970836 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.716542216 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.715574909 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.796092243 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.713785191 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.834460528 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.72141116 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.716386509 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.763563741 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.782931842 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.713184572 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.61842955 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.715791708 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.712477573 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.026277848 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.780647079 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.712663145 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.713075454 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.712053956 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.847870213 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.835560988 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.498809364 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.715654022 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.421852068 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.716474806 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.863325594 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.714310625 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.896722339 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.717413267 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.794567357 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.719861719 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.715922627 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.713373719 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.745623484 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.714112378 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.770553146 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.718757869 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.713080785 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.088474768 seconds)
  done (took 395.947119287 seconds)
done (took 768.954752747 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.40265581 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.353907008 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.463552118 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.373069532 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.348791345 seconds)
  done (took 13.596442246 seconds)
done (took 15.248082716 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.799792653 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.805911198 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.73687301 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.802389028 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.733448254 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.803797185 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.787183308 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.741367965 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.772091613 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.740070663 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.773812265 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.740602594 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.727197655 seconds)
  done (took 24.618194252 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.949481712 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.960675928 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.786254227 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.950129994 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.76297936 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.945364985 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.878815878 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.864324568 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.873272548 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.730445898 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.726754028 seconds)
  done (took 22.086219804 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.952180651 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.963696547 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.792890372 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.95532211 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765708116 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.954561463 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.879681787 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.868045687 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.866581732 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.730995011 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.729189365 seconds)
  done (took 22.114559965 seconds)
done (took 70.470734841 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.723343441 seconds)
  done (took 3.378505781 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.749505976 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.902356129 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.730390111 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.727581498 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.722708382 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.723452783 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.726925032 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.722718424 seconds)
  done (took 15.662385508 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.723041516 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.723669764 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.72396214 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.720842013 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.724045803 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.720383331 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.723651178 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.720107884 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.720693218 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.72139839 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.72438273 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.722085211 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.721531229 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.72451114 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.723185183 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.721454456 seconds)
  done (took 29.216230464 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.722922041 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.721059952 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.721353505 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.721878628 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.721348092 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.721181347 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.723139222 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.722110483 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.721395649 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.721801404 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.722063941 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.721033059 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.72139079 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.72258635 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.721736851 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.722429525 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.721268743 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.72335916 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.727324898 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.722220512 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.723040996 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.72132806 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.722829629 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.721643379 seconds)
  done (took 42.993211699 seconds)
done (took 92.904547937 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.750786572 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.107241013 seconds)
  done (took 8.517047455 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.726441856 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.725835922 seconds)
  done (took 5.146222793 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.724799431 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.72580001 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.725090991 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.724915419 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.724988204 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.725960226 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.725287434 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.726173317 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.726312314 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.725182174 seconds)
  done (took 18.91401318 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.726493949 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.725390133 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.723478196 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.725989784 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.726448701 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.723626226 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.726381712 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.726678515 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.726082869 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.723569967 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.725908117 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.723711861 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.726539504 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.723742363 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.726498733 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.724809889 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.723276871 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.722658278 seconds)
  done (took 32.710799416 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.726300821 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.725822163 seconds)
  done (took 5.111998657 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.724981299 seconds)
    (2/7) benchmarking "second"...
    done (took 1.723896684 seconds)
    (3/7) benchmarking "month"...
    done (took 1.724613444 seconds)
    (4/7) benchmarking "year"...
    done (took 1.723400726 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.724100209 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.724431687 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.725350033 seconds)
  done (took 13.73050568 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.72910859 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.88836651 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.953647281 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.384139219 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.729877812 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.731425672 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.693179884 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.730872359 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.732646535 seconds)
  done (took 19.234027509 seconds)
done (took 105.021166602 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.552633426 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.723851227 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.034927166 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.774231175 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.780398863 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.063025991 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.732101395 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.028734541 seconds)
done (took 42.349546105 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.752495815 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.276152746 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.317367721 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.174174673 seconds)
  done (took 12.428374385 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.713118875 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.272510529 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.765957363 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.383279609 seconds)
  done (took 20.022099448 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.093250544 seconds)
    (2/2) benchmarking "read"...
    done (took 2.073165468 seconds)
  done (took 5.833592629 seconds)
done (took 46.696881684 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730473358 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.730163947 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.727111305 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.727003944 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.729270654 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.728663097 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.728078063 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.729817003 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.730782541 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.73022835 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.73017982 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.730339513 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729391125 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.727995005 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727475144 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73017528 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.72925506 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.726841921 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727918652 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.731085193 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.727085753 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730850581 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.728903231 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.727888836 seconds)
  done (took 43.162233554 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.730562057 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.729579423 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.730925265 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.732138465 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.728479342 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.731432307 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.730882269 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.728705872 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.731121891 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.731339928 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729697566 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.728774468 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.730641239 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.729151769 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730713393 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.72928698 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.732160861 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728618945 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731679049 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.73011323 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.73288147 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728816576 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.729594431 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.73213848 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.728511512 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730219405 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.733406797 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.729656862 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733426187 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.730173763 seconds)
  done (took 53.580054416 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.736871411 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.74068691 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.732606336 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.732407016 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.733149192 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.734245847 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.732926312 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.734432461 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.733265137 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.735497994 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.736729194 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.737389666 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.737231435 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.736769413 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.737335665 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.736763669 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.735286016 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.732939658 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.733208893 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.732497776 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.732567079 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.733481112 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.733519408 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.734320896 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.735283504 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.733352585 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.734115127 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.733764447 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.732629259 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.734153308 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.734268482 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.733781343 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.734739738 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.734551593 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.734541258 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.734829536 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.738230926 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.741326753 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.73379771 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.734836696 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.735522855 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.735447865 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.734278588 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.7351259 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.735317723 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.735254316 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.734813093 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.735015026 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.735204316 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.736063458 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.735370482 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.735214349 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.735065701 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.736506674 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.735596663 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.736058612 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.735684335 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.736311836 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.735908093 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.735180702 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.735177406 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.736363455 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.736049155 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.736429586 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.735965624 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.735676521 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.735919837 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.735431516 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.73634601 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.735965572 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.736439644 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.736908343 seconds)
  done (took 126.603072979 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.736973948 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.733776343 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.73392386 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.7330708 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.732429583 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.735732337 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.734386817 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735887859 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732992923 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.737400454 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736260845 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.734323417 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733933897 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.737841668 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737282135 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.733463009 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.73660384 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.733469633 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.736638882 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.737711536 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.7383104 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.734007111 seconds)
  done (took 39.845983012 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737294087 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.737836539 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.734591666 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.737959413 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.73416442 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.737796866 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.736786036 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.737023616 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737338258 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.735172269 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734837648 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737935363 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.734318996 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734603142 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736006189 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.73445413 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.738764231 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.735959352 seconds)
  done (took 32.923881731 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.735082679 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.737167656 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.738815284 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.735875246 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.736958543 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.738577345 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735821801 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.73851724 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.738935981 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.736186724 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.739145907 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73868307 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.739884045 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736456165 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739285437 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.735542401 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.738416081 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737067811 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.738883393 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.736505327 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.737218537 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738922573 seconds)
  done (took 39.899615538 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.738965563 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.740135284 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.736717657 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.736474962 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.736411958 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.739448541 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.739583866 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.737577671 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.739284314 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.739891482 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736942934 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.739432722 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.736129092 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.73837217 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.737146322 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737637303 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.739743563 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.738025092 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739592538 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.736803862 seconds)
  done (took 36.436506001 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.73988698 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739518693 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.740244724 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741302836 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740047152 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.740655696 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740970765 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.740754172 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.740164686 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.742014449 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.740237737 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.7412577 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.740730378 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.739410158 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.740942936 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740957003 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.741308416 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.741228227 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.741393783 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741522979 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.742376216 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.741033698 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.741138324 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.742567069 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.740379493 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.741129098 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.742210877 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.741377652 seconds)
  done (took 50.420618557 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.741799644 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.742218178 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.73867044 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.73990275 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.739085497 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.738133116 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.739200981 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.738753069 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.741484691 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.740648448 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.741848356 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.741504959 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.743004899 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.741276159 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.742346347 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.744020328 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741839178 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.740231729 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739304919 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739659465 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.743635219 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742617197 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.743386394 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.739499502 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739316739 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.744718467 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741547804 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.739259294 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743405591 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.740293558 seconds)
  done (took 53.907307562 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.760946318 seconds)
    (2/2) benchmarking "in"...
    done (took 1.762935713 seconds)
  done (took 5.198895294 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.740668701 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743265226 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.744093772 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.740897482 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.740975285 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.743286602 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.744021904 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740443704 seconds)
  done (took 15.613126545 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.743353097 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.744072796 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.74365228 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.744670989 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.743657742 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.742867556 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.750706936 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.744389356 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.746246536 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.747279217 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.749987466 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.75095602 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.747199854 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.744063928 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.743282647 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746651445 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.744259905 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.743315164 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.74583782 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.744336928 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.74410812 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.746603448 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745936153 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.743075214 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.747310599 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.753605235 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.748320648 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.745549761 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.744658584 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.749483105 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.744717754 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.742579483 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.745403768 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.745386364 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.745573071 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.74541555 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.751657353 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744027285 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.749680252 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744846159 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746453077 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.742392169 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.746180614 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.747132867 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.745353757 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.745344114 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.747122065 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.743464738 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.746410906 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.749309391 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.749612429 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.74442493 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.744403448 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749252398 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.747165137 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752361212 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.746735495 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.748682228 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.755718798 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.756421038 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.758644483 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.753639202 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.748500394 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.747107023 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.757439407 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.767486213 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752819993 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.745347434 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.745029165 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.749265049 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.753633804 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.7609362 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.755242367 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.746641345 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74730261 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.747515099 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.746861007 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.747343945 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.754298137 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.750413328 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.747959049 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.746908544 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.755469488 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.767995246 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.747098345 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.747462058 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.748488961 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.747197273 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.748793173 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.757277199 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.747712922 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.748153115 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.748050222 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.747593668 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.749592869 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.749563022 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.747431158 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.747804263 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.746518778 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.747285374 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748188213 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.750791308 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.756530376 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.74927616 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.748262319 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.754725236 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.750452141 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.748518156 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.755151651 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.749177371 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.74957211 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.750027955 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.755615078 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.747666071 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.752513508 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.757393388 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.749001697 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.750480873 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.749026641 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.750571357 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.759577543 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.773732506 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.749399594 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.749866064 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.754335386 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.759819774 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.75124237 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.753175547 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.749634634 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.748011047 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.747290559 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.750438712 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.751710111 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.75044131 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.751252778 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.750742422 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.747406644 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.75023639 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.751452553 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.751654025 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.75179254 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.751309436 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.751237574 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.753916267 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.750327448 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.752348679 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.756274357 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.751038271 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.751992048 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.752434815 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.747480875 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.751557795 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.752303874 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.751052393 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.751007442 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.751123425 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.750234758 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.75073787 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75188167 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.751778144 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.75299598 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.75209329 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.755489764 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.751396247 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.755874733 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.750460071 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.749902153 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.752008737 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.752967487 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.751415181 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.752766899 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.750975585 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.756514546 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.759944256 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.753134206 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.751180231 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.754516987 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752418946 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.75304819 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751765389 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.756438909 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.760751123 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.752813918 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.760113176 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.752415355 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.753501235 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.751861306 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.75325737 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.752103695 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.753909325 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.756787045 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.759818735 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.766831646 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.761588313 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.754869506 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.758836848 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.754508414 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.75637112 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.757328763 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.7530739 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.755716111 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.753247647 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.752362978 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.753577577 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.755244973 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.753924398 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.753929847 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.755353873 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.753298564 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.75459848 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.755116878 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.755391385 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.756175959 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.751441088 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.753841212 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.755198207 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.753449837 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.753387918 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.753217376 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.753609986 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.754404423 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.754218207 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.761211993 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.753149005 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.755808645 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756579829 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.754758394 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.753354404 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.755079418 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757761837 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.755057727 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.760725254 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.756644582 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.756355334 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.761830787 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.756254715 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.754879742 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.759039932 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.755091241 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.753483492 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.757898778 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.763289016 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.756236855 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.75570844 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.754909388 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.754977775 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.757811657 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.76150463 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.754240829 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.755826289 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.757508574 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.757751414 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.753130094 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.757568442 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.757257163 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.757363034 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758570944 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.758100681 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.757326277 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.757755143 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.755866013 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.755939015 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.757360623 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.759146333 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.763999395 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.760821961 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.757972576 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.760860044 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.757553653 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.761542597 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.757264649 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.75634791 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.757233422 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.770221108 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.765236594 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763105107 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.759336402 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.757509635 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.762404436 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.758985574 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.76218331 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.757045891 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.757546107 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.757451838 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.759236258 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.756115681 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759707302 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.75842859 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.759125867 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.758997029 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.763056279 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.761278635 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.758405345 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.759193851 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.758540025 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.759355058 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.758357047 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.759824165 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.760400762 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.760231258 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.758937559 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.759263908 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.765304358 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.758494617 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.759646738 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.758282104 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.758954334 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.758464677 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.7613122 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.758684824 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.762628498 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.766948076 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.763250757 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.768208872 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.760500763 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.76753579 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.759617023 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.762561084 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.767233821 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.757986312 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.758885932 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.759699912 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.759491802 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765159329 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.760005047 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.76162123 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.763390944 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.760486295 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.761054856 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.760303836 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.760446429 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.760648767 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.759811503 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.766822285 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.761146426 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.764577943 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.762523796 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.75884288 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.760666456 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.760797376 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.760518904 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.765810295 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.761936314 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.761779479 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.760622901 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.76203719 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.761848445 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.761664526 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.761759485 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.758171522 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.761561587 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767846308 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.762285006 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.764843554 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.762177022 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.769509361 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.761621094 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76819316 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.761777045 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.763441147 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.760983606 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.762816278 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.763964624 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.761052571 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.762999279 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.762505415 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.763263833 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.765444248 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.762198972 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.76470335 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.762686418 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.763358685 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.761660012 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.771521819 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.783757231 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.764130689 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767234509 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.760204604 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.763644479 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.767829974 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.763521046 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.762069328 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.766869318 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773042702 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.770429904 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.76335784 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.763661199 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.763261085 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.766794341 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.762976797 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.763037387 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.76312545 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.763772474 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.764385351 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.763640838 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.767554287 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.764593855 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.765419599 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.764202413 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.766086134 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.77383043 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.764042249 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.764231603 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.765210691 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.763947569 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.765100674 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.76406335 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.764661318 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.764816353 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.764682574 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.76747294 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.771116645 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.770079778 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.76716642 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.765223441 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.764202019 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.766991188 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.765580552 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.764716846 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.765006076 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.765378817 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.765775441 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.766983134 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.765112566 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.764491238 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.7642646 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.765452943 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.766374269 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.767539716 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.772240156 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766203068 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.76226126 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.76514604 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.76637616 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.763983736 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.765945522 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.772688092 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.769170897 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.776558141 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.774650462 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.769506773 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.765929037 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.769457496 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.773435032 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.766337298 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.766305901 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.766301113 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.768103139 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.767426447 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.769048868 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.767043891 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.772069576 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.765705556 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.767051413 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.774138691 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.768380551 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767829943 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.768316557 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.771570689 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.766904808 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.764543458 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.768108575 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.766509906 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.773895325 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.769418567 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.767399987 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768292057 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.767074751 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.768913837 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.770805835 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.767675542 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.7688249 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.765086827 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.768842402 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.767830986 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.768962552 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.764936067 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.766857466 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.76821668 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.771209444 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.773483225 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.766455566 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.769201358 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.768359286 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.768688449 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.768473124 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.768260588 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.766279296 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.766349055 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.768242162 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.768892096 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.769190987 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.771159386 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.767912182 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.769150403 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.770590576 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.768586401 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.771948041 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.778243635 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.775977713 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.765633541 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.769686227 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.769173535 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.772047413 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.768916812 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.769356526 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.769054984 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.771218799 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.770235719 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.770002936 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.770235555 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.771514892 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.784700911 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.771207702 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.770581436 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.770582651 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.773184038 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.770567597 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.769267667 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.771349491 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.772475185 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.774296204 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.776445152 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.770394066 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.77766715 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769852896 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.770954717 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.77535294 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.773808386 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.778050299 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.773458904 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.77059469 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.770699929 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.776055895 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.786351342 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.771060057 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.77997061 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79749264 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.77183451 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.772754886 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.771317382 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.770150323 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.771377856 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.773121602 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.771545117 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.772227414 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.771125801 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.770467301 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.772290151 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.77746728 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.772961821 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.7714876 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.772665411 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.771501583 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.773491114 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.768567979 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.77194011 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.772285324 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.771338163 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.772593879 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.77225903 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.772144008 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.78482633 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.782304405 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.772384429 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.772112036 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.770258458 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.774964956 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.774903791 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.78302316 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.780787119 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.772371963 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.772698402 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.774563733 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.774381086 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.771108018 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.77395621 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.773422168 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.772672941 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.771249197 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.786360007 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.782048947 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.777418431 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.773815517 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773681155 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.77441582 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.774631673 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.772852602 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.772950772 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.775512303 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.775151958 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778416083 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.774106112 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.774598273 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.776755697 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.781006228 seconds)
  done (took 1050.955096332 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772333225 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771500628 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.771577672 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.772482725 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771768259 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771913253 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771486673 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.771965053 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.771869569 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.771266164 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.772794857 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771769458 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.77179986 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.772709611 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771857412 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.771452205 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772541917 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.773678391 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.771918437 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771827611 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.772926745 seconds)
  done (took 38.919177683 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.775362089 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.773618246 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.772763068 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.774969796 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773400063 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.776721412 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.774237019 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774957812 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.776670525 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773593898 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.777448738 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775893728 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.774135637 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.773348926 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773387373 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777044289 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.775964352 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774776754 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.775933797 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.773757989 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776206844 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.774381413 seconds)
  done (took 40.755514194 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.777365588 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.776172291 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.775904377 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.773812811 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.776917487 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.773893065 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.776670987 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.776495028 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.777059001 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.777971064 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.77613072 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.778212867 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.783756133 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.781580301 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.77797656 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.777807855 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.920954948 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.775949469 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.777009002 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.776722843 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.774328438 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.781831852 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.774487897 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.774845769 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.776230205 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.777187178 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.778037945 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.777959157 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.77766735 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.778700198 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.781685382 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.779239581 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.77790902 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.780001936 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.777728833 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.779844537 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.782870599 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.778007274 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.775871495 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.77894285 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.787776354 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.7979397 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.778794824 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.784371892 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.778335753 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.779333213 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.780799634 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.78625614 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.776086617 seconds)
  done (took 89.011937123 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.778696472 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.779234482 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.776331683 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.779834922 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.779824511 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.778488881 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.77933456 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.779091097 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.776604626 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.776359422 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.780329803 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.775438147 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.775248945 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.777860901 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.777635628 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.776184086 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.775320697 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.776356326 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.775667571 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.775149921 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.775794407 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.778961187 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.778517576 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.777281059 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.778194748 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.776205509 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.775849014 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.779222115 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.775999291 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.776647894 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.779416319 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.779285084 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.779057893 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.776298535 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.77728858 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.779605042 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.779010821 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.775600443 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.778537514 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.776635815 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.780738287 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.780283056 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.778569332 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.779560971 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.777279939 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.777242629 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.77805724 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.777228267 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.777504909 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.779855081 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.780596318 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.779093637 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.780922295 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.777952737 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.780813337 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.781052148 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.777100279 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.778741145 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.780610797 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.778180724 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.777108086 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.780972264 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.779115204 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.780673565 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.780658116 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.778286401 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.778429194 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.780618494 seconds)
  done (took 122.632257914 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.78016376 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.780982341 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780372542 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780923735 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.780989151 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.780620078 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.781169005 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.780170655 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.781623565 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.781465691 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781539634 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.781469757 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.781455771 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.782032393 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.781379125 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782908207 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.781979466 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.78146922 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.781528716 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783586426 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.78075164 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.782011627 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.782113134 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.782679417 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.781487554 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.782018377 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.783425114 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.782114429 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783130295 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.782521311 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78224293 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.781686732 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.782320698 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.783132102 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.782739997 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.783168868 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.782158096 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782986764 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.782848016 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.782837354 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.782379514 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781799368 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.783133864 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.783344271 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784329439 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.78331119 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.78296783 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.783321683 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.782874679 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.782600929 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.783378384 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782646882 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782993871 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.782753469 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.784388124 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.784248882 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78369094 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783696988 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783787244 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.783875207 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.783773791 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.784773255 seconds)
  done (took 112.225640328 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78294124 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.783739773 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.781630679 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.781656287 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783817955 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.781700436 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.783706396 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.784613306 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784276056 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.784419039 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784580847 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781457363 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783119232 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784615236 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782562312 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783345973 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782433076 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.782281156 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784142599 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.782190064 seconds)
  done (took 37.378721435 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.781759559 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.785006113 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.782218626 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.782535497 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.785315256 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.783470977 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.784968289 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785357824 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783067541 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785995657 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786352007 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.787181302 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782799847 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.783454417 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.786185131 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.784071412 seconds)
  done (took 30.266939902 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.782767397 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.786486634 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.786343328 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.785884505 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.784136141 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.78389771 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.786432347 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.78373232 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.783910867 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.7868781 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.786900424 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.785872363 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.785514224 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.786403679 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.783843731 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.785977276 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.785144374 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.78386664 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.786869759 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.786959167 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.785634348 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.783581603 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.786914644 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.7876926 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.783827988 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.784570267 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.785444948 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.784931549 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.784092175 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.78698858 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.784295149 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.784874837 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.784373078 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.78524684 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.787395206 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.785495758 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.787782456 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.78723836 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.787768805 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.787721564 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.787868509 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.7855106 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.787384261 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.788795711 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.78575748 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.788097721 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.78501701 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.786862994 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.78558389 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.78705278 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.788347608 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.788472847 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.788686959 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.789647821 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.789418617 seconds)
  done (took 99.956146044 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788640296 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.789598665 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.786067701 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.789193804 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.790107623 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.786528823 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.788811105 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.786583056 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786355587 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.789374935 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.787143693 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.789659764 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786387768 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.789850992 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.787741115 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78953495 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.786758613 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.787183624 seconds)
  done (took 33.905459628 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.786918082 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.787304015 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.790292609 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.786990051 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.78669474 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.790330203 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788219924 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.789625091 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789746787 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.78832199 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787900923 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.790678727 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7906946 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.790617555 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.789038187 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787884127 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.79110234 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790595263 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.788169112 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787668472 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.792105264 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79082647 seconds)
  done (took 41.083054862 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.789489438 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.789113385 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.807541994 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.8090503 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.81165798 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.822378741 seconds)
  done (took 12.551019762 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788715338 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790961857 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.788696079 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791197304 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791842338 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788518695 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789955923 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78878525 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792312885 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789848909 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789096673 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791750814 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792651455 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789804128 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791316423 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792056385 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790256067 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788485249 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788547621 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792631791 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789497954 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791555413 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789533797 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79000926 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79044246 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789749098 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792651551 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789613203 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790481136 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791807425 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793000959 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789907399 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79288893 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790176124 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793720017 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792993869 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791083866 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793368875 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793101712 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790429601 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.793957192 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79232617 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793098909 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790440724 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793502337 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790474489 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791396246 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790710967 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79033081 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793422174 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793494627 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791494512 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79349537 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793869512 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79447697 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794847463 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792289763 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792068611 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794609571 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79306128 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792874122 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794862363 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791838691 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792248671 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794309549 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792169538 seconds)
  done (took 119.969412732 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793154533 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.792281831 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792968805 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792941809 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791974159 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792319975 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792781237 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792107404 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792771112 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793072744 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794989936 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791819574 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792421135 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793275 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793105477 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792223892 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792186391 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79256827 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792420045 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796754369 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792878083 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792813422 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793346202 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793690469 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794236541 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795598049 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793147755 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793091331 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793470201 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793628838 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792986793 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793065463 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794276468 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.79395726 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793808928 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793787737 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793942198 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794139412 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794319964 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796585096 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794769038 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79679676 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794683138 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793829771 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794508205 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794601998 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795818979 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795958417 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794730928 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794119503 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795869823 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79486838 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79444181 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794867729 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795165018 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794406673 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79493006 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794989755 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794917876 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797228478 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796376883 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794837826 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799105195 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796387449 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795916019 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795359638 seconds)
  done (took 120.143312161 seconds)
done (took 2449.007664032 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.880659042 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.821961762 seconds)
  done (took 15.431758648 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.959754226 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.910570964 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.795735285 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.797096749 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.796805 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.813759781 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.801283472 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.796400105 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.796848205 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.796054886 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.795860656 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.985179322 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.802935915 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.79833511 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.797324571 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.889858611 seconds)
  done (took 51.077096782 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.800385207 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.801975906 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.810771338 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.802165624 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.799538212 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.812813642 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.833661081 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.805140167 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.841843317 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.813451515 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.874157308 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.81304062 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.800257223 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.85587486 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.813577698 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.814527276 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.890713078 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.877030837 seconds)
  done (took 34.592018638 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.879426793 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.799332482 seconds)
  done (took 10.416050943 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.820566831 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.814754258 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.825358785 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.803379622 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.814239749 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.800427382 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.83925566 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.799403184 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.805661055 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.850840529 seconds)
  done (took 69.927765199 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.808602645 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.803618324 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.801799374 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.80032229 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.796083538 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.800826434 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.80570388 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.798488881 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.48213427 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.836592555 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.80826659 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.810647781 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.805020431 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.805598444 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.802047707 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.827232298 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.995125328 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.802814285 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.800392024 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.810700227 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.804378406 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.864341094 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.816530733 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.804487531 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.833430151 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.48997004 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.811146321 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.80909702 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.928909807 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.801970165 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.804698577 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.803664372 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.805676596 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.176122725 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.083121526 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.803735006 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.812572813 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.810064492 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.801782802 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.914296954 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.803717648 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.808576362 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.677976007 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.060117765 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.919483142 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.846961959 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.180923248 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.809398397 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.806071357 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.83406484 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.808318161 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.804768156 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.81750604 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.310275695 seconds)
  done (took 129.007808211 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.800109647 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.061474099 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.956915434 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.802123056 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089381446 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006640692 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.80054468 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.849433307 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.803832104 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.031576694 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.021565673 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.910987511 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.802083394 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.799227668 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.801028135 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.798366001 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.962588515 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.876167745 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.80350078 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.799147192 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833762519 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.046698159 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.93482783 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.803615249 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.822749609 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.016833747 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.93845271 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.911061142 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.249928351 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.800678981 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867161241 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.802305205 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.802706736 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.798819973 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.959193194 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.898464845 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891214516 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.804141355 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.799627438 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.800297849 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.47473852 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997823354 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.899458299 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.946971796 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.05043281 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.007903861 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.593017274 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.799036373 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.537934373 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.963116427 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.036495975 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.03398115 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.929086075 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.802858449 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.31496928 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.79981418 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.801327528 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.03783356 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032296789 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.905526034 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.804552998 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.801894381 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.801319373 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.050858533 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.805946964 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.897401024 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.806227853 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.802276719 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.90021579 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.909361181 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.032370679 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.01630183 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.838271347 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.135299485 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.282435373 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.052225949 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.87247311 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040314512 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.805858511 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.801819642 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88988339 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.765819676 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.00434865 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.053907291 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.060428026 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842060581 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.5279734 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.802344865 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.032698267 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.030451924 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.107769761 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.045153399 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.958020807 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.11326607 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.80253871 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.803911308 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.051020078 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.942780154 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.805519986 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.163017704 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040046112 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.377777399 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.835252464 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147636381 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.941961249 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.806977628 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.451225388 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.806790007 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.035385124 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.851011757 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.805953826 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.805398253 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.027417724 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.885225261 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.804708459 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.4279379 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.868922382 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.807350969 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040580106 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.807799566 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073034186 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.807144291 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043825098 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.126437283 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.840495589 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.035709433 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.046295803 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.807104847 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.053686923 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.05295344 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.92506489 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.027405092 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.432373498 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.807525546 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.096545906 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.807029906 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.805901053 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.97936079 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.806332353 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.954966156 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.807800307 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.140283138 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831916087 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964331999 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809585068 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.064345075 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.843762726 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.859369169 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.809282952 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.940464881 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.810305898 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.823146013 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.962004174 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.808720332 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.8043291 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.545580208 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.807823978 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.964187269 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.042050379 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83447469 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.883656531 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.479165454 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.807290589 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.894708906 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.83585636 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.155055607 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.807197619 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.021614975 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.810039218 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.336153647 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.805805674 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.05041045 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.993151581 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.81020186 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.807516365 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.713944875 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.806119411 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.806213151 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.970581073 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.170199807 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.806841748 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011991863 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.811635239 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.952649548 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.81224384 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.896454676 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.162778502 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.807736063 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.806389941 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.807704173 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.808097309 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.809338341 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.07422695 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.841074408 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.333992586 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.950068076 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082007381 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.129894451 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.061221945 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.857518103 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.810352296 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059488536 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.811897137 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.875299632 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.811470328 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.832656946 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047751935 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.813237388 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.023728313 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.092033141 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.733470976 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.861367023 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.81220475 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.81010389 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.767048229 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.968391869 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.904059012 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.813688565 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.809346236 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.935760332 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.942827308 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.027105343 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.810063108 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.143620337 seconds)
  done (took 890.416040517 seconds)
done (took 1202.596464461 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.811244736 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.809639743 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.800507064 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.811318792 seconds)
  done (took 28.979694531 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.817045976 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.815511603 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.815865084 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.814201857 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.816430969 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.813914186 seconds)
  done (took 12.639884731 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.82111816 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.808168888 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.811881419 seconds)
  done (took 21.187688991 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.884781809 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.225005911 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.928714302 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.259870026 seconds)
  done (took 10.045612411 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.818193418 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.817918003 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.817769325 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.818850394 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.819315072 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.820233725 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.825491469 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.821228128 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.820188792 seconds)
  done (took 18.12696657 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.155300159 seconds)
done (took 96.881677328 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.055732386 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.497115402 seconds)
    (3/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.928064056 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.108491695 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.987791198 seconds)
    (6/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.623829033 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.156451724 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.801106379 seconds)
    (9/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.954852893 seconds)
    (10/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.917610641 seconds)
    (11/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.837663459 seconds)
    (12/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.958888491 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.946752356 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.859162836 seconds)
    (15/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.117421023 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.112116868 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.841828394 seconds)
    (18/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.941038739 seconds)
    (19/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.879024566 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.788943823 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.905927597 seconds)
    (22/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.420036232 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.063975158 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.915850132 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.449815571 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.227877732 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.800613822 seconds)
    (28/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.372733403 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.999899312 seconds)
    (30/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.954501771 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.197397394 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.119023068 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.818795981 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.727267985 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.936297235 seconds)
    (36/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.322632727 seconds)
    (37/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.099041642 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.460352075 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.981241532 seconds)
    (40/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.0016724 seconds)
    (41/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.831876127 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.612584496 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.29177127 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.058713922 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.815273768 seconds)
    (46/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 5.553433222 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.927704129 seconds)
    (48/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.954368407 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.801119359 seconds)
    (50/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.073710541 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.066462077 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.839087808 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.099986196 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.058930275 seconds)
    (55/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.001436825 seconds)
    (56/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.723207923 seconds)
    (57/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.458200049 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.875419328 seconds)
    (59/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.892116344 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.045237906 seconds)
    (61/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.902804349 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.003618447 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.814382188 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.119338818 seconds)
    (65/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.393806747 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.846141281 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.292174586 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.111152653 seconds)
    (69/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.997032261 seconds)
    (70/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.913021822 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.148346221 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.14075788 seconds)
    (73/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.639299302 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.824361466 seconds)
    (75/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.732323658 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.484989611 seconds)
    (77/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.045213254 seconds)
    (78/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.81619738 seconds)
    (79/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.449627781 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.303967455 seconds)
    (81/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.808693214 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 7.123276152 seconds)
    (83/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.90429842 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.191494659 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.106636239 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.154976713 seconds)
    (87/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.368955227 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.818358444 seconds)
    (89/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.057623401 seconds)
    (90/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.999201367 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.922942163 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.819780848 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.885128696 seconds)
    (94/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.059388297 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.887796104 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.815436077 seconds)
    (97/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.901697195 seconds)
    (98/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.218456857 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.2760905 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.885564681 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.838191225 seconds)
    (102/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.902847772 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.878512657 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.951425355 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.037424551 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.820863085 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.452050509 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.898612544 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.801578276 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.154656331 seconds)
    (111/309) benchmarking ("sort", Float64, false)...
    done (took 5.586412588 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.730811726 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.851886265 seconds)
    (114/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.161316235 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.373910832 seconds)
    (116/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.829922603 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.611264958 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.523311149 seconds)
    (119/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.945021548 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.02028896 seconds)
    (121/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.02631417 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.018257779 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.03898639 seconds)
    (124/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.297076087 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.042716903 seconds)
    (126/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.040849342 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.823753423 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.204799168 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.594955659 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.29067822 seconds)
    (131/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.805312008 seconds)
    (132/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.994956206 seconds)
    (133/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.261122916 seconds)
    (134/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.222355326 seconds)
    (135/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.215452569 seconds)
    (136/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.928582717 seconds)
    (137/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.916445265 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.910786839 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.806107006 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.919287047 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.045506836 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.821200639 seconds)
    (143/309) benchmarking ("sort", Bool, false)...
    done (took 2.318563212 seconds)
    (144/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.841227225 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.83575825 seconds)
    (146/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.828859583 seconds)
    (147/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.818178025 seconds)
    (148/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.888807578 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.071733636 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.04200147 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.884508221 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.124448326 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.209575017 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.082354763 seconds)
    (155/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.989078471 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.84939799 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.61486707 seconds)
    (158/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.122816396 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.293611341 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.85381852 seconds)
    (161/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.955768168 seconds)
    (162/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.929476776 seconds)
    (163/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.820688859 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.895148742 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.884720673 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.912951105 seconds)
    (167/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.047435555 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.848659556 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.956474367 seconds)
    (170/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.905062677 seconds)
    (171/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.822132197 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.930130867 seconds)
    (173/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.122617481 seconds)
    (174/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.957929988 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.081331596 seconds)
    (176/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.929154885 seconds)
    (177/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.844415728 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.821265155 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.826558953 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.929637646 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.425447385 seconds)
    (182/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.268603114 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.923033118 seconds)
    (184/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.823431992 seconds)
    (185/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.979822592 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.840176987 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.820627192 seconds)
    (188/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.17031599 seconds)
    (189/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.839984404 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.903948663 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.847285978 seconds)
    (192/309) benchmarking ("sort", BigInt, false)...
    done (took 6.820773837 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.903542897 seconds)
    (194/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.821746276 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.918066681 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.898418968 seconds)
    (197/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.12290768 seconds)
    (198/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.85314315 seconds)
    (199/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.847815382 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.731873225 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.887666531 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.880196102 seconds)
    (203/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.337843603 seconds)
    (204/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.520464312 seconds)
    (205/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.990553282 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.185760335 seconds)
    (207/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.852175346 seconds)
    (208/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.991093241 seconds)
    (209/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.853009262 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.928294087 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.616135809 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.026384898 seconds)
    (213/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.20990165 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.520245664 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.1949524 seconds)
    (216/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.898000336 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.834303693 seconds)
    (218/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.865343342 seconds)
    (219/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.529238511 seconds)
    (220/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.039725182 seconds)
    (221/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.016913914 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.842890349 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.768439209 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.824347946 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.843989488 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.983100436 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.828728465 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.946764961 seconds)
    (229/309) benchmarking ("sort", Int8, false)...
    done (took 4.797290492 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.892551049 seconds)
    (231/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.038293747 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.020550688 seconds)
    (233/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.808451143 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.780552491 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.763136578 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.747337744 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.980207844 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.220347591 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.952220653 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.874451232 seconds)
    (241/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.850382398 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.810422431 seconds)
    (243/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.903198269 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.247588033 seconds)
    (245/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.405136233 seconds)
    (246/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.812358253 seconds)
    (247/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.851583164 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.470685008 seconds)
    (249/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.170477434 seconds)
    (250/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.141861184 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.520103741 seconds)
    (252/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.292347986 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.214278467 seconds)
    (254/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.33639343 seconds)
    (255/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.959291246 seconds)
    (256/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.827676655 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.916041098 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.920510363 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.138844145 seconds)
    (260/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.978293833 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.15774533 seconds)
    (262/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.140238649 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.855308228 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.464764265 seconds)
    (265/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.921053151 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.155442401 seconds)
    (267/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.121656293 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.196262449 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.575923172 seconds)
    (270/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.927787087 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.88553696 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 3.4155686 seconds)
    (273/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.944189322 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.014445486 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.856720616 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.815345382 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 9.351205499 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.55171002 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.822338676 seconds)
    (280/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.089020404 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.146680907 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.918711235 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.399097438 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.911424704 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.166035577 seconds)
    (286/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.917233954 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.947459451 seconds)
    (288/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.835878556 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.995462539 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.10874092 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.584638059 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.071288639 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.891153873 seconds)
    (294/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.021457084 seconds)
    (295/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.022919756 seconds)
    (296/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.814225425 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.873866801 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.948747612 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.201865458 seconds)
    (300/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.913847723 seconds)
    (301/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.933404489 seconds)
    (302/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.844259197 seconds)
    (303/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.85769916 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.85404017 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.82916145 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.816239295 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.876765703 seconds)
    (308/309) benchmarking ("sort", Float32, false)...
    done (took 5.55085977 seconds)
    (309/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.920483974 seconds)
  done (took 1003.777210699 seconds)
done (took 1005.587648997 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.863589153 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.856986173 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.839183388 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.861656814 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.952017775 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.871060338 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.849687176 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.84314814 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.888106408 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.88964284 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.840292335 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.870182481 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.842983605 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.841165658 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.839380999 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.854558161 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.149104735 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.869249036 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.859421814 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.849823851 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.858034639 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.841059074 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.889775671 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.870642433 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.844499443 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.8436424 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.844392251 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.86194059 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.954016614 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.845271874 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.843757087 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.852666782 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.150389227 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.867380804 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.836736633 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.862255929 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.856433431 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.850938055 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.844899352 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.874266608 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.291263019 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.850449855 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.845863546 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.843497224 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.841814867 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.845495507 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.845906037 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.849669001 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.857472934 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.85649125 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.290159587 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.866595024 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.846701385 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.842676298 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.853222939 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.843988054 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.84944724 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.859458921 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.863830746 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859916025 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.144444394 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.8731736 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.844175656 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.860826848 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.852525964 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.328188307 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.845245135 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.847012203 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.292030849 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.855048677 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.32768971 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.859839 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.844300232 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.859702689 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.877048528 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.151815539 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.864533255 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.843404261 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.851836722 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.843847292 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.854710229 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.857237286 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.849223095 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.844912692 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.85796757 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.876605289 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.854411498 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.84706362 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.853909405 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.865255876 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.8523575 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.856100115 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.847729105 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.839447733 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.856439409 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.852009333 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.848997553 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.849227253 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.849265506 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.856510797 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.294141704 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869219396 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.845520201 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.84273255 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.845165149 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.860260644 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.294786801 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.853412096 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.867234381 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.893540851 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.84818302 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.147491272 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.877226037 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862274954 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.854002392 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.850736546 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.841379597 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.145367612 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.324326046 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.869099837 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.847853595 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.847141467 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863566172 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.849590749 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.842406965 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.156149496 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.875830493 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.861709522 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.968744953 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.857074842 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.879934522 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.846773712 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.849649358 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.879430516 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.86379491 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.879736227 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.850928493 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.863851445 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.863375933 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.84424776 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.859761626 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.858270356 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.849192818 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.854824209 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.842324263 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.879837554 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.86166904 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.861789984 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.868067964 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.970006001 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.845182067 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.147979174 seconds)
done (took 290.212517177 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.915846038 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.836414572 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.943588749 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.845001089 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.926689349 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.930313044 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.841859437 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.841501936 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.841703157 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.236009591 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.841821575 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.842054502 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.839649764 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.841859213 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.92626457 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.845753353 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.842575197 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.180196872 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.844886542 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.916763429 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.836854965 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.842055639 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.84494843 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.21831184 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.842481617 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.838914182 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.917451978 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.846189057 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.184496518 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.84066665 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.842183181 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.182868725 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.937236674 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.864432634 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.856860435 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.85220854 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.928596347 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.850692868 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.925492802 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.926245687 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.945267175 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.886238557 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.844071653 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.838930313 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.849206117 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.848106639 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.842643736 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.874216167 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.83873087 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.844138616 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.18136651 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.856863551 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.844159115 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.844389056 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.843942206 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.877272868 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.844521799 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.847634207 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.938764634 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.846926631 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.90888148 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.221186203 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.218370329 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.846891678 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.840057592 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.84549236 seconds)
  done (took 182.653462292 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.913809347 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.919748938 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.914104253 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.849997917 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.899398529 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.915635569 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.851365186 seconds)
  done (took 15.040036498 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.854040916 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.847251175 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.897083732 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.897164661 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.847679997 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.9971468 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.84898793 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.85903949 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.847398461 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.90093251 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.847671152 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.848112572 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.855743597 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.844836448 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.896590461 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.858815514 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.963469473 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.848798294 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.84797776 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.999075052 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.846200952 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.85499064 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.902048256 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.858769593 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.85031729 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.854683129 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.432493618 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.848281634 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.846560881 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.848891278 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.846662738 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.895141738 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.85032516 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.849198389 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.846103415 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.965111019 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.850430473 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.847453944 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.850742646 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.846887074 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.85121378 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.850689962 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.849915518 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.847362376 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.850430627 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.87259264 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.850078252 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.850427771 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.849336159 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.850598281 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.900583689 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.850132494 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.847861392 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.848356495 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.904450507 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.856891536 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.850843366 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.846979842 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.850471923 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.847235827 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.002081977 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.898080228 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.850470092 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.898973044 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.850897828 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.850828827 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.850787438 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.850074475 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.94467033 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.852179982 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.899349206 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.849037376 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.009766889 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.874623497 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.851789604 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.85471451 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.853513223 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.851272783 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.850920053 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.857088382 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.849221596 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.852713113 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.8575461 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.848952923 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.848458392 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.963681233 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.958865855 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.849137711 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.864257001 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.859418856 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.849117825 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.904566038 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.852263008 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.850353961 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.907460033 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.967816754 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.907705805 seconds)
  done (took 203.898906577 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.857944657 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.860296313 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.853446027 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.869988029 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.852922376 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.851875798 seconds)
  done (took 12.927886944 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.854719623 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.853050499 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.852889973 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.852643088 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.852078965 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.853854541 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.853002681 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.85475504 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.85682752 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.853473848 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.854628849 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.854058623 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.854716119 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.85314485 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.853179492 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.85354113 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.853142824 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.850541332 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.852949171 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.852971164 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.001336033 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.853008909 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852558117 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.854111812 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.858843946 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.854710177 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.861127057 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.854019502 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.853285154 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.862886324 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.857610886 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.854824559 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.854106517 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.859180833 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.857762311 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.855187546 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.85920533 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.85493719 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.851877616 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.855572858 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.856266436 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.853850451 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.855957248 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.856203601 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.858274765 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.860666279 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.859767651 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.863639021 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.856628958 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.856276834 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.856763996 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.855639687 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.855705442 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.856204658 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.856685832 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.860717232 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.860254359 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.855415847 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.855273223 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.856710054 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.857673738 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.856243782 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.857929602 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.86020659 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.863429023 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.856620745 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.856616394 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.860164076 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.855913972 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.856349776 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.856983645 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.854112651 seconds)
  done (took 136.558719733 seconds)
done (took 552.865948741 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.952310258 seconds)
  done (took 8.735879399 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.963443352 seconds)
  done (took 8.83428983 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.500381142 seconds)
  done (took 10.285365386 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.85758688 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.863895267 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.84954631 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.853443491 seconds)
  done (took 29.221210641 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.899841579 seconds)
  done (took 8.684471413 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.864388696 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.849866799 seconds)
  done (took 15.533464918 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.880791577 seconds)
  done (took 8.666482911 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.009628078 seconds)
  done (took 8.797207026 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.862789074 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.886898676 seconds)
  done (took 15.549704812 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.836171007 seconds)
  done (took 8.621193853 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.519029898 seconds)
  done (took 11.314071926 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.857070096 seconds)
  done (took 8.657183431 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.910260933 seconds)
  done (took 8.695878919 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.101216433 seconds)
  done (took 9.88718633 seconds)
done (took 163.266492207 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.854277321 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.852225469 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.852721376 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.852960958 seconds)
  done (took 29.19822804 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.890873463 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.890212798 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.892448744 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.901070572 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.894926962 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.890740725 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.883580235 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.883304371 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.901420897 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.894064594 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.893637564 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.893958606 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.893613817 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.88308861 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.89313062 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.893954067 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.901800365 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.893228844 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.884021155 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.896443407 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.85867845 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.903390085 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.895233191 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.859721886 seconds)
  done (took 47.153238032 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.058220535 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.932178765 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.01283438 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.911658687 seconds)
  done (took 9.702035627 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.911912283 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.911942226 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.923712371 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.962044075 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.996085286 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.928378937 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.886105712 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.881106613 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.866826366 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.913238611 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.988376265 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.909066772 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.998905231 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.859296257 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.062642791 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.859360459 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.859995075 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.910785052 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.962660928 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.976777195 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.863996312 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.915471269 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.918944891 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.911401993 seconds)
  done (took 47.967309425 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.861607482 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.868145637 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.866076935 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.858831808 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.858271556 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.858949592 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.864923812 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.86011966 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.880674217 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.860699638 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.858546744 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.858815684 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.859095201 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.859431661 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.859199098 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.872674593 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.873127927 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.859501172 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.862475257 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.865826632 seconds)
  done (took 39.0591879 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.853713907 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.70817157 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.206760325 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.110734426 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.853313589 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.852941786 seconds)
  done (took 31.37449843 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.874220255 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.866052887 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.860960567 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.915572913 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.997581662 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.867670621 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.860540468 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.870365709 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.905548851 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.925158652 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.880757425 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.889267275 seconds)
  done (took 24.503515634 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.856975425 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.857851597 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.856955203 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.873470878 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.871620559 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.868751187 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.867861541 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.854612673 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.875338317 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.87957845 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.869391132 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.87298419 seconds)
  done (took 44.199540566 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968132432 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.746903389 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.887525296 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.578059984 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.328409302 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0686887 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385151153 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191857216 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.860297011 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13101651 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.862259578 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976257149 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.110489032 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857305653 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.883418773 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.331669973 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148660484 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0852315 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884741317 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.61393427 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907843107 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402094019 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.682774449 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.914732866 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069515319 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.989952212 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.117073342 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.808601904 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000513466 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894294998 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868312403 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.858575096 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131390323 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235529912 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963400489 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86839705 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.516545715 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.574807348 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.851557638 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.627092016 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.622104594 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.976379596 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867302723 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857770727 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.793520413 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356088993 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235755933 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.864365598 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.57032422 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.858916993 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870917853 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947981295 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.862811412 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.675001127 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81330486 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.139575394 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.858246075 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866288014 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.433514429 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.952124358 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392578286 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.83764847 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.052534833 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.605464645 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252479199 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.006434555 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.863886156 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863588405 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79469121 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.615179771 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912393596 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00605737 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.881993205 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510474878 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164871396 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.929269153 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.254636352 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145735869 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.6489569 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.837496709 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089056345 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.818875819 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795461451 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.736664766 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.794717163 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126316428 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897970372 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.500503426 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900604686 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.192822653 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.872811649 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878482322 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869263051 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084718996 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.427401934 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861418011 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.644597637 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013495929 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883364237 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195308379 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797243211 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.865599439 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118008377 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.074155496 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.104547429 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.375199684 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016215009 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862188575 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.94495817 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.780823784 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.912103301 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.134422317 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919462031 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.95241008 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921349147 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.825085013 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161235234 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889470983 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.032953129 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.919933802 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992106931 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.192094984 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.156274333 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928544702 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.872213052 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.864120871 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.696984536 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.416945509 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.130288487 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.864460258 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385517296 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.913153028 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.864812527 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799454559 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.469645343 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.861256069 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.838745555 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.087967569 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.824332481 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179430479 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799099385 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009894542 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.978371882 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.087464033 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.505232809 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.932447571 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126678853 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36583592 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.1401092 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915438327 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88556454 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983654439 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887103392 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.300205962 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.158594132 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.868891991 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.869892311 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.702253589 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.864765836 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86942947 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.869859812 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.667474904 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142487131 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.890208446 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865372705 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.756821402 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.880243072 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933428707 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871048539 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876437459 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.412556745 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617724507 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.876826133 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.494608035 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091733231 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876498779 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.625578754 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97853833 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.94918765 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140487272 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925811674 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.801275376 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.577967533 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.559543187 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868235792 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802577673 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.866292955 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876186096 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878270331 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.247965913 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.144393614 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910432057 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.626861239 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.910480367 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878935208 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.872733504 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868257251 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.408275781 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.971802609 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403649763 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.916016883 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006165352 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.88220213 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.803467482 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.872728888 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.873640066 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.86739242 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.824227116 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92191761 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.623442553 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247334875 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126867731 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.524990308 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887204802 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.651484482 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.926605101 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.890378305 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.674436709 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821960868 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.903599019 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891728782 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.880796654 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.626652144 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.577050436 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.433496287 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180695259 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177043508 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309253347 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.348520789 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.176244388 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206238318 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106142832 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.398637277 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929816053 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212337694 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814178749 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95534087 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.51221442 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218215619 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889014471 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097388693 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255086304 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.591529051 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038798302 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081733323 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904670677 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.795753809 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835148352 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.079266559 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011455466 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.590035666 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067037878 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199550993 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.550042559 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.98337082 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.869195305 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.553206208 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957150875 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.58399177 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.231601937 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.424961045 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.806511076 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333163929 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.872021219 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.317510872 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222278076 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.205677717 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.994423832 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806593418 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.882335809 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.883617205 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.872681267 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.869359885 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.7518668 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.124671795 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8833183 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108310606 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.153898535 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169741977 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.775754564 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.877401944 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87194161 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170646755 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.6755514 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043763952 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.322720061 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.401442561 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880400247 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.807169817 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809000222 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.566593828 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.874283727 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.848150769 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091889941 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.061007258 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832352505 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396418638 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12169557 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.127328012 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.88722412 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144496832 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146277128 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.608602398 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902250401 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.973739407 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.535584898 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.974629402 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.143075531 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109356713 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.676025624 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104005318 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.905534734 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.690860636 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.872760267 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088956709 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.144938719 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.770000237 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105328503 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.597296608 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.880714583 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191825141 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932370616 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.762904605 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.020874837 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.0691922 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884409759 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959110829 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884138618 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.887217868 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.886493009 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921785995 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.766237578 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.993582897 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.888880516 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964726058 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.972975225 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.405149715 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.881013696 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150806173 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232276547 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.201413525 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932922357 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876574891 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88259437 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809317447 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012382427 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.322960146 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150996777 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.006701854 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.175682642 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902230092 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.532125574 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.253170289 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122969943 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150967841 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.771932054 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876757015 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.905271156 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.14392705 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887865625 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.088244915 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104056753 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188511239 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347675855 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.134432606 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.244396998 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151711931 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.247498406 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.87715427 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.465508398 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.882541659 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.562046738 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.918384968 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.75287731 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139003501 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888966299 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253324553 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.900084323 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.077317558 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.394505267 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.642502358 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166476025 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.865002032 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.934833066 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152473554 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26037575 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188973689 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949921833 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889099445 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.586861582 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01594932 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.761158951 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.149322259 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880589699 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090952424 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.58898791 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.888928961 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15557074 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185503717 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.876101051 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.769441936 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887578104 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.889238525 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103542777 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144497558 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131641239 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889506735 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.880517816 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.695088953 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154207873 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937429194 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815098657 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.883782166 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978781851 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.128451327 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903661236 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.396912904 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.590127329 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173435863 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.798517962 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90249862 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419902884 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261364178 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200696456 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.42084106 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107572279 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.439047236 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.85022262 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187160947 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.886540327 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386938917 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193220007 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.885254413 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.504336175 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924390464 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.149223022 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197607642 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.891819181 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.641996858 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.851981222 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104649466 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.479952413 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824227686 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890581272 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.942808507 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.881433947 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.013924396 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893865662 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.777217395 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831557564 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.634084751 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375237831 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.887543757 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.867514669 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.585541864 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.507262748 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919442436 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025609772 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886069138 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.593383557 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.174803502 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.137785045 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.516852213 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.894645946 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.88700435 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884492992 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810894905 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.082169929 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.263672524 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174476746 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.336296523 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.924958706 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.886371824 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.098622592 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095201039 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.733277531 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013372066 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386904525 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926339988 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.620224703 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.56324814 seconds)
  done (took 1685.069450377 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.893419743 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.929687779 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.913768984 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.958113379 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.91932684 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.917063512 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.925308422 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935799762 seconds)
  done (took 57.210426815 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.882404007 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.085663499 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.89261821 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.88312736 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.892666567 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.883412274 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.059195037 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.900907133 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.902350803 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.896052724 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.884843415 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.883813964 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.210548041 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.909259838 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.884715299 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.883674116 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.896581625 seconds)
  done (took 74.68323041 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.884240475 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.115841039 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.908023395 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.898976314 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.849339631 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.899880618 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.910184084 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.903297732 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.892677732 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.116009007 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.520657135 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.909628278 seconds)
  done (took 90.629135594 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.896505742 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.89237099 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.892172301 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.891753041 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.892639409 seconds)
  done (took 11.289756809 seconds)
done (took 2193.851000675 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.134381939 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.114939431 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.121530943 seconds)
  done (took 6.056643954 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.037661992 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.084472068 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.205858958 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.210870297 seconds)
  done (took 10.364635357 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.181087146 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.259264118 seconds)
  done (took 6.263159626 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.299460894 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.902037286 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.287459526 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.88980884 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.890253624 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.892418927 seconds)
  done (took 22.499833539 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.892918621 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.89567957 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.892482314 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.895899205 seconds)
  done (took 9.400978712 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.873331249 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.622856739 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.874693587 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.889236502 seconds)
  done (took 21.082884391 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.639794507 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.325616471 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.637270055 seconds)
  done (took 9.42704459 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.463406755 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.777432373 seconds)
  done (took 9.064296006 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.168361601 seconds)
  done (took 3.992006066 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.921403616 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.1639103 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.410274992 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.402296565 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.491271705 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.744333082 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.217121888 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.139461973 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.299588701 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.327940107 seconds)
  done (took 24.943108105 seconds)
done (took 138.537449413 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.276707918 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.136208787 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.097516268 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.244991382 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.115777169 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.097769814 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.286375094 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.230578131 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.74360029 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.738293004 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.245571173 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.124132517 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.036233403 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.133024779 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.037702389 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.132693253 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.120959381 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.299670619 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.98043274 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.142112375 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.306031414 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.872757986 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.086890327 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.889645957 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.126203187 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.113161778 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.465599912 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.893377671 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.132193418 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.477119594 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.055361856 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.295144072 seconds)
  done (took 172.758370069 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.635527564 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.89339788 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.891943572 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.891633709 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.153444922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.893330727 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.892798025 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.893860159 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.030297556 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.004134103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.893056907 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.152092694 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.894840063 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.893242789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.89418542 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.892943701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.16935955 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.698725244 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.899415374 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.901534549 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.905829782 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.025584369 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.90743884 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.06662818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.205250464 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.910480305 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.882972948 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.910542536 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.898102998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.869349781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.902566104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.894894603 seconds)
  done (took 207.677675308 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.894200732 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.894961125 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.893095429 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.895433208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.895358397 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.895124595 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.8940757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.894047106 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.591958458 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.58394162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.902753188 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.900651555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.897544634 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.895253984 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.904327105 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.894170155 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.906930563 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.906043051 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.902372382 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.907502362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.914361619 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.66490656 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.916775794 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.668895384 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.9108875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.910824738 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.895862441 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.912224334 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.915074453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.916598131 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.91178692 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.895060553 seconds)
  done (took 221.623086984 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.092532974 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.90322928 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.904037492 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.847661906 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.903225751 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.902623353 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.864674919 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.092826569 seconds)
  done (took 19.365733 seconds)
done (took 623.261954082 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.4127817 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.252774281 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.081489004 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.92693644 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.203008807 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.966013902 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.922610648 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.988712912 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.651918934 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.993900723 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.618596162 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.941229289 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.710831799 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.948955456 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.047397702 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.98180428 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.52189735 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.62027584 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.102623454 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.029583711 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.105698206 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.865980114 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.003645019 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.686498777 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.734049693 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.905453067 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.108242841 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.531734324 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.93389411 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.088319283 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.723748549 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.327921145 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.935905494 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.921662043 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.977218352 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.955990792 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.269487657 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.933367241 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.042510885 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.666555639 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.017768901 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.540828736 seconds)
  done (took 105.031187042 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.894467961 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.893331591 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.89414882 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.894104272 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.894423544 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.892811814 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.892591394 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.89211258 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.894067636 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.892625392 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.892834902 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.894930735 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.894093692 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.89446879 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.893220916 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.892829565 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.893870997 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.896371512 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.893474107 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.894238454 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.89419812 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.892403751 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.90651777 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.893389751 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.895233816 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.893657807 seconds)
  done (took 51.094935506 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.906619555 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.05634949 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.158861213 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.925263747 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.906326742 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.908495597 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.926361624 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.912387141 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.909361447 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.909101882 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.011587801 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.913903206 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.927630908 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.161098211 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.92253443 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.907132201 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.907374854 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.906887818 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.063426153 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.925373026 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.926045054 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.913486235 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.927608408 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.92226275 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.90997156 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.908785843 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.911529492 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.386851829 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.916083405 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.011942701 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.951562635 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.9285892 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.355383174 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.171743816 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.962809624 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.914648135 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.907646299 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.017281234 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.913642599 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.909595373 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.927042989 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.913728377 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.160447719 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.394247495 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.922639515 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.908843506 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.396544678 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.024417493 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.950015131 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.92059324 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.164736444 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.926415256 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.912047316 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.909798503 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.944881131 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.918859585 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.908928889 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.255457904 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.919939142 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.926695722 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.914820208 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.910143119 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.071140641 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.917108562 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.059075787 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.917971623 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.916755109 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.911448732 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.163437645 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925739554 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.404896908 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.923888214 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.910026524 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.014791694 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.063735225 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.424417573 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.923170737 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.074531242 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.373804408 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.935307133 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.917312142 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.376034629 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.938873738 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.917736278 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.913454429 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.913288765 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.911625374 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.957017643 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.9283839 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.337077531 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.4089602 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.269666581 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.938790655 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.927568059 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.911513773 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.254580372 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.921374071 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.913680017 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.157639873 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.41487597 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.924677558 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.919635267 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.390911069 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.926244841 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.930860817 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.92197991 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.169179072 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.927732415 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.956988265 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.913275248 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.919234715 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.91641233 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.931437662 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.919927367 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.913574392 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.376701821 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.037773522 seconds)
  done (took 237.060621541 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.90554202 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.907080806 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.907435915 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.906926349 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.905519747 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.91207557 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.905311752 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.905650157 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.912388358 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.90634897 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.905980498 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.905744091 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.908543328 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.915299211 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.408825528 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.918948375 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.562556701 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.912042382 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.908424559 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.911266099 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.590199556 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.917879218 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.908662938 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.908182335 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.910627688 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.908492629 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.909399744 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.942924737 seconds)
  done (took 169.171141147 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.917017818 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.096770055 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.935710315 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.951633774 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.928003064 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.914673014 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.939571145 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.935704055 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.922098034 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.914525314 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.913886839 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.97588387 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.930083038 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.055346513 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.949838799 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.948493083 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.023882423 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.927169952 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.914624957 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.914710562 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.944676693 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.911729848 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.977045185 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.046862559 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.937188219 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.032302798 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.925024429 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.917135152 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.914938154 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.035390737 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.938865873 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.977743019 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.947503782 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.93682718 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.038375561 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.042587516 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.029353802 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.948886819 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.92094235 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.915544383 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.914834234 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.908229161 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.032975025 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.942604042 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.9177209 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.02641693 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.944005758 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.918994196 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.927253645 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.916273102 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.929995997 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.937247926 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.984081993 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.053631862 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.956208717 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.946471018 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.944917073 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.204543363 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.926041848 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.020908406 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.915312002 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.037460034 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.941475839 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.906345678 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.91833088 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.923339383 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.946750824 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.949888151 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.026814117 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.928542244 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.020995713 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.956449655 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.925035975 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.917601396 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.920415822 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.035449547 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.046968437 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.957153026 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.959019823 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.950272643 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.915433466 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.918378444 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.908234983 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.936979387 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.925145585 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.03770962 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.043143899 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.930648946 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.92165567 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.922276204 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.921772025 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.947006511 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.047472028 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.96058457 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.022231045 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.989595831 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.000203153 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.9368742 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.932685577 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.923022175 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.983974991 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.938517136 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.932628664 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.255308673 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.991459523 seconds)
  done (took 207.975577029 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.386168849 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.976572139 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.976407925 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.251309447 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.350660473 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.813201017 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.969933794 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.969351226 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.99207784 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.168209079 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.045715119 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.987086464 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.956507718 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.942109097 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.971210741 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.988223719 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.978640175 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.301946888 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.091885595 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.067119849 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.952551895 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.281768447 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.291228361 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.42341898 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.005715393 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.315238882 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.656443569 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.219575566 seconds)
  done (took 63.184745906 seconds)
done (took 835.346405399 seconds)
SAVING RESULT...
DONE!
