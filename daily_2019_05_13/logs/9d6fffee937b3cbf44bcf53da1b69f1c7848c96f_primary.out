cset: moving following pidspec: 9520
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.308973616 seconds)
loading group "string"... done (took 0.59654067 seconds)
loading group "linalg"... done (took 7.204655305 seconds)
loading group "parallel"... done (took 0.169480792 seconds)
loading group "find"... done (took 1.140696297 seconds)
loading group "tuple"... done (took 2.013337127 seconds)
loading group "dates"... done (took 1.297852679 seconds)
loading group "micro"... done (took 0.241607256 seconds)
loading group "io"... done (took 0.968245519 seconds)
loading group "scalar"... done (took 38.778642879 seconds)
loading group "sparse"... done (took 12.381433307 seconds)
loading group "broadcast"... done (took 0.968271041 seconds)
loading group "union"... done (took 13.206401753 seconds)
loading group "simd"... done (took 4.428855584 seconds)
loading group "random"... done (took 8.939946532 seconds)
loading group "problem"... done (took 1.968688238 seconds)
loading group "array"... done (took 21.157967447 seconds)
loading group "misc"... done (took 1.921214487 seconds)
loading group "sort"... done (took 3.209724103 seconds)
loading group "collection"... done (took 17.924057966 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529473283 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140714452 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11709331 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137423514 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.182910865 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131744128 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143850897 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084799216 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.033226625 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159648752 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139438761 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.476855743 seconds)
done (took 5.037073376 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.199979669 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085781486 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095205577 seconds)
  done (took 0.885836201 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065656275 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126196664 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.07956321 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067072412 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066730304 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080395009 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06646212 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065259287 seconds)
  done (took 1.263383359 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073416429 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067888406 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083491709 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067232288 seconds)
  done (took 1.003649668 seconds)
done (took 4.141162178 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.896993768 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.232391657 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188768017 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45245581 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147449014 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.18685356 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.663753119 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326045769 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209937464 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099925447 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104130118 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376107316 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106490477 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668832196 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077449686 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105790063 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.157437607 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.429061155 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080389125 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082077975 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102478026 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141154043 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100346268 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076732864 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168121984 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068950127 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14748731 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094348656 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067263754 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.242265052 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188837065 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.683634394 seconds)
  done (took 10.4207611 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099835391 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.116115145 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068584526 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138334136 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103378844 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087481915 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07103942 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082840132 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090811923 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156445088 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113089568 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105230594 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08108192 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070153403 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099885263 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211482924 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107945034 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084424027 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085617645 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075258275 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12118027 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081914582 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092678501 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077456884 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150970125 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197316296 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113658888 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112984384 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070104795 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083045649 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132079866 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144221749 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067325591 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082701548 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140941889 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112631596 seconds)
  done (took 4.554073831 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.026213135 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160034513 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090316082 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151600368 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084643172 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108321428 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082137334 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099015118 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245353099 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.151710076 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.453631015 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085592923 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126209097 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107837552 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.086124129 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067166564 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084870964 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066480722 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.528384157 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109864556 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135328327 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083144942 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091518689 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06451475 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085943065 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068337033 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06670262 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087032879 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.10443405 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.322000987 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148367417 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068678339 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.21686198 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087644475 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088301849 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118340426 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.18225248 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096922872 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125361617 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083602369 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067856487 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173077401 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074670086 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084322698 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087637672 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119868472 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122158951 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06979539 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084379141 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183796815 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068534622 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101765019 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.883369981 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165697481 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079386712 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067495387 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290973947 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083402692 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08320128 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064306617 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081082481 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.247078172 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166880481 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073813628 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066840772 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084623757 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069411087 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368973648 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081635983 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.740965455 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070569297 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.0792697 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086321569 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068418702 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08958278 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072024749 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100608774 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067326177 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067237819 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083325534 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067353802 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084691089 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086295457 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.200967667 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082646297 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066829643 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063787055 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10154409 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10932421 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070266778 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064490136 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117416612 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068344968 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082700872 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100264107 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085642684 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101584634 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071501835 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129125138 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068437592 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.141134537 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067407254 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.11341786 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075996594 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11258838 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093098361 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067733302 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152224312 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063494799 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081718705 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068278835 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065619317 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085987268 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069317965 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099576891 seconds)
  done (took 21.00156821 seconds)
done (took 37.714401498 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.288818446 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090291054 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090680099 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076298056 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093749076 seconds)
  done (took 1.427827982 seconds)
done (took 2.189914286 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119780114 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116404712 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063732225 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114688473 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064592672 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119485059 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115918542 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082675328 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11724232 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069154716 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113802063 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06572801 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064392051 seconds)
  done (took 2.015397683 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082047592 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084344271 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086479559 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083166705 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079606904 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083972289 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081044411 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106348992 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080941297 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08888985 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065019622 seconds)
  done (took 1.680909541 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080852489 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083565795 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086266553 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082203346 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07941415 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082849402 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081559189 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103989345 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081482918 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090435132 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065064765 seconds)
  done (took 1.677279148 seconds)
done (took 6.126660837 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077232865 seconds)
  done (took 0.828080785 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.701633414 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.736051533 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082962234 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13304088 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222234451 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153976762 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.446249679 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112178729 seconds)
  done (took 10.512173993 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08958721 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097039479 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067921141 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087553583 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067968414 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086916653 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068485835 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069125405 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084731675 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071618184 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085945263 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071893505 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087093012 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073250777 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069768763 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088046196 seconds)
  done (took 2.086432057 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092559919 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091259253 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089541103 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07556726 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09016196 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074017481 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093782467 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075762229 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088351783 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07359963 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093035838 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076038206 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089528899 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066411399 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092213357 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078295604 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087946181 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076295848 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092906425 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.0765565 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092773245 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066849925 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089043673 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076430658 seconds)
  done (took 2.860329964 seconds)
done (took 17.046040645 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.12964757 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075229048 seconds)
  done (took 0.963811484 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080666917 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096966196 seconds)
  done (took 0.944337699 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081418678 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080788208 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090763786 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09426818 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067238457 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.0836868 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10438395 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067922812 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082127596 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068277241 seconds)
  done (took 1.587498755 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067879992 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092148928 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071600233 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098631803 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075104861 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081655555 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075275034 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084952333 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080218129 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079912288 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073151733 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100134866 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072387378 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10237043 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074316429 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08561376 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088624917 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068731293 seconds)
  done (took 2.24187995 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065005778 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066709083 seconds)
  done (took 0.901731613 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067102775 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063687072 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082784392 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066181435 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080294892 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064426576 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080404147 seconds)
  done (took 1.275006082 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.403064997 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110675854 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.248208637 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089636975 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105283988 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263936099 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08389097 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07199343 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089696876 seconds)
  done (took 2.276020156 seconds)
done (took 10.956296348 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078482198 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085138117 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111140683 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.423965807 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108582848 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067506718 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.133085227 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.222994901 seconds)
done (took 2.003076757 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125083095 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.604879974 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.398991109 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.216689036 seconds)
  done (took 1.9955192 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.371489928 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09251877 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074960114 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068148809 seconds)
  done (took 1.386180081 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065746406 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068638697 seconds)
  done (took 0.912528693 seconds)
done (took 5.195102252 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066027606 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101984681 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063979793 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065793348 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080687686 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.063527327 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065789642 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.08155608 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06348471 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06643135 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082711638 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070189507 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.083468023 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067185279 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065405902 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080734656 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067422741 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065407865 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081592092 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065206091 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066719975 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080788931 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06473442 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066999837 seconds)
  done (took 2.538724519 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08494904 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082182494 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072193693 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088487793 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07233292 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089814858 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073552634 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068275404 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088864244 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070027408 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088013879 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071777133 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085765722 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072615895 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085882182 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072773999 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089895728 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068476317 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073555632 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088752304 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07297454 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085159699 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072440459 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089066729 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072432818 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08800332 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070366601 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084510574 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07428552 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088726497 seconds)
  done (took 3.167007034 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070265694 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063500936 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080737706 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071071418 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063653215 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0829461 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065497333 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081959913 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066448959 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065775318 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083274184 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065156522 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066367566 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082979483 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066446541 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084533087 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083141184 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066143787 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082087882 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066413782 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068201681 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081911951 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066009965 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081834227 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065842049 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064885738 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082237795 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065327174 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066270251 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082344943 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068361727 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068228669 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082590349 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072280917 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08521054 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065416268 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070385618 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080855768 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065509385 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064582986 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081493511 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065233174 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064725443 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088569218 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065295264 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083414334 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065721784 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066036235 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082483142 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068256723 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08132342 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064751997 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067191191 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083021453 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069974059 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064574596 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082438501 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064801135 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081919768 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065426505 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065029162 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081555551 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067644554 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065988151 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097079183 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072468479 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081014103 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067004499 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066503813 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084574947 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066818548 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079396795 seconds)
  done (took 6.041040267 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116463479 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090712681 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083639777 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066898558 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079962365 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066006259 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069360677 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081931363 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067438504 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087495335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06597117 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066735892 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084051694 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077942093 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083190182 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067352523 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088145152 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063928329 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065344799 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085562527 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066292972 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08533006 seconds)
  done (took 2.49659133 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187086891 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089734148 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110995463 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091933773 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085216759 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075403169 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071451203 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088535773 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071641118 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086718212 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069840097 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088099489 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069820889 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086812596 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070517164 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086967996 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072241452 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086739064 seconds)
  done (took 2.376982381 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077283902 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066003691 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105529279 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066279562 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084901894 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070535973 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090139494 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076147871 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087109054 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067756027 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092989833 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070767318 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086188809 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068103238 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070357613 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084478873 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070351676 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085212847 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076719176 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08939985 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072690306 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093673425 seconds)
  done (took 2.540481967 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08033498 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067379871 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099677086 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086005905 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064358546 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066343279 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090204346 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068255786 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089877872 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070379645 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06754313 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082797304 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073054455 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08480614 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072388653 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08438676 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069424353 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067630315 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086898299 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064171675 seconds)
  done (took 2.326066306 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08670189 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083135711 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067704877 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092898864 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068496013 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084384173 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076427344 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083809038 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068071907 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109477964 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069193482 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086920149 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078190397 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090697639 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069400673 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094354976 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076912514 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09351148 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068854925 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086606801 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.221075808 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069590512 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093710172 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068869082 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08540104 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069178051 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068651842 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091245228 seconds)
  done (took 3.198103269 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066327361 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066244574 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080085083 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063843588 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063700048 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082184505 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06617785 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064842083 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084750246 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065825437 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067130618 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084370102 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067943906 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083729896 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068315597 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067899454 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084481946 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065993681 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065873961 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082530533 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068589253 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067007886 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085379743 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066250053 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081446108 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068271785 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065446008 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082418395 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067805761 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06548314 seconds)
  done (took 2.953826117 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076416644 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090039874 seconds)
  done (took 0.965334471 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064309661 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08068091 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.0801571 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070405385 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089095207 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067416912 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092035016 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071606386 seconds)
  done (took 1.411385553 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081210224 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076630057 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084748238 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076856284 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095771487 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084621642 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157539593 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087070603 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074818323 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08377767 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082503563 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067614982 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092409293 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068568045 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090935451 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074539285 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06611866 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090991085 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071290632 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084104324 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069201222 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093664616 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071431208 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064943698 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086942935 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077186057 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096548211 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069111595 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087853401 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07568613 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073146565 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07999506 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06809819 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086002334 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065552301 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094945363 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084333938 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087458924 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076826113 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068933457 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096009768 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063106232 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090819611 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074787577 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09459331 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06908892 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069200703 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.081279776 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065789769 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086751988 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063885749 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068032367 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080057995 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075535605 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088503216 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078636455 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06967124 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087036062 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070451922 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088464978 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074960599 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086137573 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070745375 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067526708 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095141145 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072602067 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09381142 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063281727 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062233134 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082820555 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078011296 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108019108 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074871829 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085889424 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069064595 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082366387 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071304377 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069853288 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090624846 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074176601 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085603325 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074122041 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092627935 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068013459 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070365505 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093546251 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065625896 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087523642 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066439796 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101617331 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067262788 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081620952 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065930774 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076990742 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087456644 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068036307 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081899574 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074872362 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062284669 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085904292 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069134649 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085105178 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078799393 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090790333 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074116127 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094060461 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07623461 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067782892 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088860642 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065984212 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086422661 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067184501 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074728645 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079858054 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071447535 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086248207 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068490769 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075748859 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082997189 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066354627 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090256494 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07220721 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081363583 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063529688 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069852224 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083081692 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070328258 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091223952 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065463843 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061745522 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078863696 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070240954 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084183278 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071802525 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090018062 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07131417 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063682552 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083920039 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072552569 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094804633 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06876463 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068673426 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091932292 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069469791 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08538904 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075360463 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087430657 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067789726 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073298469 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086311193 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064167624 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088714282 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071148959 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066468843 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089746653 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071776464 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088189073 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069045535 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083632866 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073562592 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06833813 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084986986 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068676716 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083534847 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079462358 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069680968 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080836287 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06565475 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09263703 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066372998 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06679276 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085339971 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070103923 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086439508 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066707863 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067625758 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086723047 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07854644 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089814929 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06909266 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09128509 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078872481 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084651912 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070301979 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06799591 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086127168 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069446643 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093590586 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074560398 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090245758 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070711878 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06483067 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091409915 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075405026 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084664905 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065978904 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066973438 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088709644 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07293245 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088079144 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068947998 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082636452 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068722192 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071127053 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087988096 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068471911 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084134608 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072675511 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08402991 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074804458 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0690399 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094966543 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071198869 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081386328 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072048123 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083647946 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074275685 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062920741 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083665241 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067565274 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085500165 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067373314 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070958001 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079196278 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074896034 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092051209 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069170923 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067340209 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085234555 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075293094 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086552561 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072112176 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071779257 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092274703 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078370067 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084861909 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070966772 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095338403 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068710671 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061806537 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090996306 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067368812 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08469826 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067120897 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06563019 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088117505 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077922252 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092304155 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062671156 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086418613 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067038698 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067475588 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081158448 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073196016 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088112611 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06902628 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074648113 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08661898 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069342385 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088590438 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068430312 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06851559 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086615058 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07103944 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087197843 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07128894 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066931172 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089345226 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067380166 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084141557 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070550674 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068354778 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08645902 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07403982 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085672016 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068970332 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069687418 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087373304 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069678604 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086837986 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068442249 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089021559 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06907452 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068446942 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088612864 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064154198 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091613084 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068896013 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075955278 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087062902 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065205074 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090660489 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070949641 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07292296 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087105422 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068974022 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087847719 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068850076 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087737469 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075198598 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06603836 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095745366 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074841339 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08593982 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069693023 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066340516 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087912431 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066378244 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086170607 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069651288 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067877956 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085144476 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072912932 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087873253 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068388236 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069459722 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086815095 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067923871 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087693025 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063572344 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066816432 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085902167 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068134858 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095433559 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068880555 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084760403 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067270438 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070252509 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085136729 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065534259 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093265043 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077146433 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086412047 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076388984 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066028998 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08719581 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076023481 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07801988 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064935108 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063965631 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081797839 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074104011 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084595313 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075404769 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083337727 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065911746 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064074558 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085052816 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066150278 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061505267 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082313021 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070085258 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084205428 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065798425 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067187853 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089176271 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067941461 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094232488 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066162688 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085571339 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069332056 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065551536 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0846299 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068504538 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088904237 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06965705 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065750094 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084272831 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068142521 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068639786 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087237573 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068047974 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087365063 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075418868 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067191703 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089766073 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071433332 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.084498256 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071304525 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085785325 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068437524 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067497084 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089422358 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071589214 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08625939 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076829724 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06528822 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087140109 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067516718 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083419926 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068632169 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065398975 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086128332 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067520939 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086079077 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076973567 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08310887 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071583874 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067974819 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086344039 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074958785 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086622331 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072169872 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09261348 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06892939 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069925901 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094108243 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072893247 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089472853 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069597776 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069650837 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093043105 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067208834 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093062176 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068979419 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086497215 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070502492 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066543466 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086387022 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068953428 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067497699 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09221158 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069092631 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085872771 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067716622 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06541924 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088065137 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071568323 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093417719 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07122763 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088931621 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064449848 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065456172 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08676678 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066930417 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.0873601 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072243823 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073564224 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088313284 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068602063 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084823609 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077660243 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071880806 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09013666 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065153409 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089189011 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069966485 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087784191 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069171943 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068310999 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087993545 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072608243 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08697601 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067863386 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075691084 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090176521 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069946869 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087675584 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069178926 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068707917 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081914196 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069595812 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087776539 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074378673 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069874617 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086748273 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078313357 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083498217 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06866869 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089230638 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067820929 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072023243 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081694082 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06986665 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087289393 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070479955 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063570844 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085340769 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066745445 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087681347 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067433573 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064062621 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096847791 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077227594 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089876608 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067204598 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066295878 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082567005 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063561109 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085467908 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069653365 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070113024 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097548268 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067477754 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085887565 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063858236 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067783992 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090004467 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071351987 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083743256 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063926837 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06725112 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089457441 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073551359 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084866072 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068693546 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071288126 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088553447 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066452568 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089881649 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065462112 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071454127 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099531306 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068783969 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086490096 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074406885 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093629471 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068917909 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080806679 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06936961 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071041019 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08756391 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069394601 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087358443 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083645814 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088695843 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068435655 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067365998 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088870433 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067964638 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093628014 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069647538 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068351364 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090929317 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070698353 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095348849 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07170105 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094657189 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071540425 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089470179 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067783187 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068783903 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084653485 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067921688 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068298997 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089333026 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073125367 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094330646 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067832159 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097969083 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077591317 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088558676 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065256058 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067820135 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086189195 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064041588 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086934367 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067025901 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06701068 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08418327 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06775277 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068447578 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093966883 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068693727 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087920386 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069049275 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062488618 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089443303 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070292334 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087702631 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065245028 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06766364 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088554745 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072807821 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090249688 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066556269 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068907054 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08906693 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068632946 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082060447 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075073726 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066554807 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088682574 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067504316 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086284701 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070049641 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070831498 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092958481 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068442313 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089145122 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077668896 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090261229 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065763633 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065062802 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092333588 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066962684 seconds)
  done (took 46.97414937 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106373896 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083386432 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062288604 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081343977 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076763865 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083682091 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063822182 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064345831 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083407087 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067632937 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081991279 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064312808 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090960943 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08764949 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096402204 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067682215 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083293719 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064715746 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081831446 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065419067 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091500079 seconds)
  done (took 2.493674713 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075462364 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090402006 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075520236 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096447816 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069899415 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091239565 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075205225 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09184519 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095959435 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069585837 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096698839 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073547502 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087181086 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069875688 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087290227 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073961485 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097412788 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069756456 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091093415 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074874302 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091127076 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074474455 seconds)
  done (took 2.659059446 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067180144 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066127932 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087047933 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063582271 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065477074 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081454081 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071894139 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084592858 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071413994 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066430304 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08514451 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.075698559 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087127778 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063448037 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067486105 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084150967 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133694701 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071881165 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066912776 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088453225 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063339393 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089195329 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064139107 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063392849 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085762938 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072150139 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086814498 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066319635 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066871879 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086097212 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068198727 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083165495 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069591364 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067537572 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085797315 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067672071 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066512199 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086631988 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063414677 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083706088 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068863928 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063578578 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08689752 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069502355 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06565314 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084500705 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069469158 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08609899 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063788413 seconds)
  done (took 4.541535628 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084563181 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130819664 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088113933 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089373502 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102959609 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095146154 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071984423 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111979137 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065269288 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086234329 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085004728 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105792456 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088554163 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072785845 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07091462 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087526922 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06830618 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085680444 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071886638 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086763012 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072459538 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094508706 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101561526 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082864077 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0908131 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067522346 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085615437 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073582695 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100712626 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073209433 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091450034 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074284646 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102005573 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069879343 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086242804 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069934714 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10360561 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068150637 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089161225 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066071738 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089172088 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072953556 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093110184 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085042461 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086511414 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073143013 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086531494 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065413787 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100201522 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070806844 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09489908 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101535875 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072022305 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067664809 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091859427 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102345989 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068644686 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065542993 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090557156 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099116369 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06659877 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070499155 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10192121 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088532092 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075109638 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102052109 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073948489 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090905058 seconds)
  done (took 6.733574477 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075300862 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092153241 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083452888 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1030998 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093343098 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075868297 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0931022 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075273122 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093369253 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080226297 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093731654 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1145804 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069473434 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097153101 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074768561 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093316021 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074988255 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094470982 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073695874 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094596983 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092677561 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083257451 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094075355 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101226329 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105576094 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088243443 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075301161 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093975229 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082253706 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094807426 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105194426 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075290208 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094077256 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101499416 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087095424 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093889322 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066924861 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09312453 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074655731 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093606759 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070438418 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102140319 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072999377 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088581861 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074257333 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094057445 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102285896 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086057755 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097011028 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098500761 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075516275 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102007276 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073875235 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093709727 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102260846 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107879525 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102306512 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101443904 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07404502 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102468577 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102170404 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108757608 seconds)
  done (took 6.427711489 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087571343 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095782651 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098488489 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063416846 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06590614 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092079919 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066079179 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.0840781 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077426707 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096663623 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079019308 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091475236 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074901662 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098580373 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090315736 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075514444 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09145573 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072642609 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096219868 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072028015 seconds)
  done (took 2.52377065 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075465231 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103300645 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069349135 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071689455 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091220594 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073376654 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090646993 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071327381 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088102966 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071754747 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097906494 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078663546 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088921623 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075166573 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097860997 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073803846 seconds)
  done (took 2.177183899 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078378442 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097073095 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084184621 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088481139 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066279646 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084690596 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069294744 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064256022 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084535882 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082461833 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088572844 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071087513 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087589804 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067255048 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064233268 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091291598 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06468149 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085793378 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068463811 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102384135 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079791085 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085495545 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069731134 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069173397 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088527625 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072893279 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088414906 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066015379 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085880814 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068783569 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087823873 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076528865 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083900374 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067548706 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065626903 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084520682 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068035774 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087497979 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071363313 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067794159 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086316884 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068044771 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086869733 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069825579 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083297473 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069286753 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064030432 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094150185 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065790247 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087575271 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068129429 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088712001 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069485476 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077499445 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092655415 seconds)
  done (took 5.158956918 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08049154 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068637025 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083549157 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066617875 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090065701 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07023442 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070110397 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090063816 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069691361 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085533139 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070936515 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089744782 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071092101 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071177021 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090325517 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071981013 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083221346 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070686901 seconds)
  done (took 2.257315871 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072916023 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066335022 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09390809 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068541312 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087131204 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070833509 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063621726 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087021456 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06711716 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086499488 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068411775 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069750156 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08592144 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071092607 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08686958 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068588602 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069988363 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086043579 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068202951 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082757198 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070437298 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066169097 seconds)
  done (took 2.523653174 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072371471 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092240904 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163330728 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108115436 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084236857 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101910886 seconds)
  done (took 1.489116131 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08933169 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099224371 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069188045 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108503796 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076792555 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089455639 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070373009 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088847595 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079083846 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102343946 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069738238 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099399083 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097845734 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078644889 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095411909 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075453258 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089701299 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07023166 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087883074 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10786629 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071001582 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097529066 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07130964 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088932897 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07111826 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097900424 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078476594 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10268635 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089362149 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079358146 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094668335 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070694396 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098074252 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102567981 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071772218 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098581356 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071283614 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108835167 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076162927 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098053199 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070769845 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096950034 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098498088 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076213056 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098417586 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070564787 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094708243 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069950123 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090674399 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114706049 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075658594 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098787403 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095195055 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079313466 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097851497 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114989534 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083690752 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098585186 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09497071 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084461758 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098729164 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074851944 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098411892 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10361136 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076041114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098616377 seconds)
  done (took 6.707226089 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084079268 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106449893 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070486762 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104101509 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097756571 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070389471 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089671243 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07022842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088936146 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06995282 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130804185 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070649558 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098631001 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098159478 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070447821 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088986754 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071252136 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098228109 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07009143 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114575647 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088778652 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07874344 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098656888 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097412449 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08406055 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096234991 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069815764 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090243936 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070163991 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090221685 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074939472 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090586274 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097601753 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07016177 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097972383 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070469191 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089507153 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075307175 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089899974 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075397113 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09867688 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107607743 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070968204 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089554627 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08354026 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090584645 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069689282 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090225894 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0697482 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089481115 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082873366 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104516349 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103627778 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09792743 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071267478 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089548853 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07116067 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08953404 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071454913 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095775314 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07894687 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090101187 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114551032 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070605246 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089867891 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078769155 seconds)
  done (took 6.593246708 seconds)
done (took 130.053893808 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200238494 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183192735 seconds)
  done (took 1.24969186 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068269956 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094593038 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09959584 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130290528 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087741886 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100021987 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118428628 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078442587 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065844818 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08751606 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068881721 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088438736 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133594936 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065980064 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087162394 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069453218 seconds)
  done (took 2.31801956 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10160829 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.199584655 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111388544 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067202733 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101700795 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079941767 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086736492 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078254512 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09632814 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067650909 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079335512 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097996599 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06668547 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098114087 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075797275 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099940757 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066027135 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100222001 seconds)
  done (took 2.552835972 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104019203 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142508253 seconds)
  done (took 1.121664391 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.198378524 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122005116 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201735348 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.419007353 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.212233044 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.282467991 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.1767988 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.175184275 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.161442666 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.17114092 seconds)
  done (took 2.990749672 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098377533 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172412702 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315111662 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139719508 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.088860757 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118739051 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141464787 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.091363188 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.104486125 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103404728 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083031069 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099878153 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099905625 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099062195 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075350525 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100337547 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123511983 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076795477 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098716291 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077503371 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120519761 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068385286 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076305341 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097729101 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078985417 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101432092 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067090563 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087720598 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076686453 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096693487 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079861708 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117502108 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099718292 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134325179 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083226043 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.133265549 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100437474 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074222874 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097048438 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073951551 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099857816 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078786386 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106124798 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078076077 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088499711 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079566932 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087092459 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068332684 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101521863 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079710834 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101313483 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080713722 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133412668 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099843275 seconds)
  done (took 6.330372376 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.756396253 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110506784 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095965225 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.818211195 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088321524 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104969823 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.711444575 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11747414 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210225489 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764956255 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088386665 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097936736 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.18058632 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.215562734 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.933058004 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286448743 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.630274976 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103546372 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107986182 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131730339 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13869877 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.176826124 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149902932 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.407514697 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074040905 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091469481 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135892208 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074269754 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160025851 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.083695938 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092333515 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155841514 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.22698391 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155660763 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095619695 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068925796 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090102969 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148222894 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217427386 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19004264 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157110277 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067228384 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090122028 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139864321 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130602698 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067552253 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138350756 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.151542095 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168705726 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072661716 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094563098 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140993377 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138177622 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143226971 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099800526 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.265799619 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289694603 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089645828 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098809382 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102833918 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21438746 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103761885 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199714578 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138809238 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.168266819 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090539679 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.745173155 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146750945 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091111628 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074340564 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118072443 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095241829 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138101259 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143809067 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.362566406 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162233694 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073635579 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069091683 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203004482 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082653604 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090050804 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1414799 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074482324 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120663393 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163616124 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142193178 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147438006 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.210613218 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142021212 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138108035 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094417389 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123591079 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074521188 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190305294 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193777118 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140205834 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.189990133 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.159341349 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141141803 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146872302 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075552087 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170203775 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097700219 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100657647 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137939326 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190519584 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122435818 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082622064 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093787833 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140674771 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124853951 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085113825 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139303573 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169806086 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.43311692 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146715012 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066952989 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107857721 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138756565 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139359546 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096057769 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215788667 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12193576 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145391976 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119811171 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088339378 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11832501 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.14081633 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077756809 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121114126 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136036999 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096529103 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.214832318 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190035954 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077706376 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.192603486 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.159808608 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094902087 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148682073 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118669584 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145266365 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075543341 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.157662595 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07494403 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760503467 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143014587 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11996247 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072798111 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165169498 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068706783 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103889532 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102280654 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068282805 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764095482 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106103955 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099287719 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083443538 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09456417 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120626496 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136495314 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073030218 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13849187 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204550547 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09474168 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097019591 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103527512 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.13881981 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095415811 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083538411 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103603425 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082886851 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120996271 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093837152 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081963278 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144800933 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161588322 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.172723202 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569302953 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07072763 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10242006 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179194218 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090957056 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.244268137 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15805779 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.17807829 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14016089 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100743177 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.29039262 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.144260004 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.165187757 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085804981 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151049118 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0886649 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137814381 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143011203 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069444031 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096758917 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141032587 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143210589 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.162311511 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925111662 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090805626 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20671722 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068615144 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.150119403 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096439912 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076386081 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.264684469 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070001151 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.166934492 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142577992 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073971185 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103064718 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.815976695 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102873661 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138769271 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073913034 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.192888514 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.142087235 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134871551 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135748882 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096739315 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138811758 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.190556412 seconds)
  done (took 40.413534359 seconds)
done (took 57.852931964 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258272895 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177001382 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243328537 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145228376 seconds)
  done (took 1.792510549 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.143083761 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107254707 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119054687 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086208038 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.106165465 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088087635 seconds)
  done (took 1.547638591 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.41097156 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272577918 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234736964 seconds)
  done (took 1.817538959 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.260351542 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211125223 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.447961434 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299633527 seconds)
  done (took 2.247944523 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.174409125 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113117982 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066914577 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105882211 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158788904 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.253588444 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129980837 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.191555809 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080498279 seconds)
  done (took 2.222775354 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197162246 seconds)
done (took 10.726328857 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.187178386 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133046211 seconds)
    (3/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.210704243 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.218244941 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.137052868 seconds)
    (6/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.195057425 seconds)
    (7/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097053481 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.123727204 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.269996639 seconds)
    (10/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.174616341 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105698848 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.198304096 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.130441098 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.143604336 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099307263 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074028025 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.099030447 seconds)
    (18/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.117551719 seconds)
    (19/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074107126 seconds)
    (20/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.101654173 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.202542254 seconds)
    (22/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.156170011 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065971509 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117877227 seconds)
    (25/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163928689 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.214876874 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.200940421 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.131963501 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.182481011 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.177598989 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.100501804 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115549148 seconds)
    (33/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.219047047 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076190923 seconds)
    (35/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.09990077 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072990869 seconds)
    (37/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082305734 seconds)
    (38/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.208842717 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114365585 seconds)
    (40/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.178997508 seconds)
    (41/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079873005 seconds)
    (42/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093770851 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051770163 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064775018 seconds)
    (45/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09500936 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.074161902 seconds)
    (47/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087547592 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.165660617 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.14784006 seconds)
    (50/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140868489 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073858443 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050610703 seconds)
    (53/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.088907246 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091901213 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095135653 seconds)
    (56/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073807147 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172390067 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.209220701 seconds)
    (59/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074540655 seconds)
    (60/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080228075 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.090799861 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.203535602 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119635744 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088749865 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072805077 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098537268 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.207956944 seconds)
    (68/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069864332 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073204018 seconds)
    (70/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099011811 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.100125864 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157515559 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051494759 seconds)
    (74/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.207086186 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091939314 seconds)
    (76/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077043384 seconds)
    (77/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.127893967 seconds)
    (78/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.0709639 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.06661762 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116072639 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052611692 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.128166337 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073276599 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086299719 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135981793 seconds)
    (86/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.132360022 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076904582 seconds)
    (88/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062276635 seconds)
    (89/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.14497141 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087857809 seconds)
    (91/309) benchmarking ("sort", BigInt, false)...
    done (took 0.227703157 seconds)
    (92/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091100431 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127227011 seconds)
    (94/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052900068 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071145268 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072618003 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065474001 seconds)
    (98/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088568611 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.157623003 seconds)
    (100/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072845283 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094881405 seconds)
    (102/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077235305 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094876983 seconds)
    (104/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053000156 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156707356 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144665154 seconds)
    (107/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094585156 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.134937036 seconds)
    (109/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.166570613 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09651303 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118634779 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071025922 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094716161 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073175472 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06637203 seconds)
    (116/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085378888 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 0.158050498 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074965144 seconds)
    (119/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052290366 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094304326 seconds)
    (121/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09038638 seconds)
    (122/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.072351958 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071299022 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073017219 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09760319 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104645891 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.183142711 seconds)
    (128/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054379932 seconds)
    (129/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.177927279 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.195499301 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072132458 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094276195 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066481628 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053460947 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094696584 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09029942 seconds)
    (137/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.120809902 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066425839 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065798832 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169071069 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073177163 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087907912 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067235946 seconds)
    (144/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051739019 seconds)
    (145/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096227841 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052112235 seconds)
    (147/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072020531 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096104276 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087360647 seconds)
    (150/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.072078182 seconds)
    (151/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074507647 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067706478 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.20059491 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100829103 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.170895204 seconds)
    (156/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.093513371 seconds)
    (157/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079038569 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053577207 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086960494 seconds)
    (160/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051947432 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.073400233 seconds)
    (162/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088712453 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167957295 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.121014075 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051423646 seconds)
    (166/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.129696198 seconds)
    (167/309) benchmarking ("sort", Float64, false)...
    done (took 0.126365515 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.125271931 seconds)
    (169/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062064504 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118695029 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073327705 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065465495 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108530017 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09141371 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088906069 seconds)
    (176/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06487744 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071949981 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088967342 seconds)
    (179/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075484738 seconds)
    (180/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.158163563 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066201585 seconds)
    (182/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193588108 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120403537 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070326704 seconds)
    (185/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192768498 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.138211404 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114543881 seconds)
    (188/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070022436 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195135826 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065693956 seconds)
    (191/309) benchmarking ("sort", Int8, false)...
    done (took 0.164630763 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.112769706 seconds)
    (193/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.168557413 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090311572 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10907131 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160644118 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.149175593 seconds)
    (198/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070490106 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052151788 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098466325 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074735172 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06508259 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.303457008 seconds)
    (204/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06840897 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198759235 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066372748 seconds)
    (207/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097988851 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095753353 seconds)
    (209/309) benchmarking ("sort", Float32, false)...
    done (took 0.150616223 seconds)
    (210/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099234552 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.144317665 seconds)
    (212/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069948668 seconds)
    (213/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052168323 seconds)
    (214/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.074465496 seconds)
    (215/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.157807449 seconds)
    (216/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05169702 seconds)
    (217/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066317784 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088244227 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051680458 seconds)
    (220/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052533685 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.109866502 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053104068 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071350593 seconds)
    (224/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.073224047 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091344804 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087912334 seconds)
    (227/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067099642 seconds)
    (228/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051937711 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086206042 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051455648 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052961156 seconds)
    (232/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087930809 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166564441 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.073867173 seconds)
    (235/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080984052 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.160538831 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134847002 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088822187 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.137162396 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051237424 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07227417 seconds)
    (242/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112213663 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090077916 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125035452 seconds)
    (245/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065077565 seconds)
    (246/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104214512 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068749912 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065207292 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.15714639 seconds)
    (250/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05190972 seconds)
    (251/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.073740086 seconds)
    (252/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104887723 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093292534 seconds)
    (254/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052296286 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051946764 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067407815 seconds)
    (257/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103276394 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087377891 seconds)
    (259/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.074646987 seconds)
    (260/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.0529038 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07396352 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086731464 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145405314 seconds)
    (264/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.07537049 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078373696 seconds)
    (266/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.129858699 seconds)
    (267/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053079288 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073979668 seconds)
    (269/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.084114496 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092153101 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050744921 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092696167 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095891505 seconds)
    (274/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06212489 seconds)
    (275/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.074287569 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065245973 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072702276 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.097809584 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065632859 seconds)
    (280/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109593876 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064465603 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051161556 seconds)
    (283/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073159487 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068614522 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052445907 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.074807919 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073952313 seconds)
    (288/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078281485 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198019328 seconds)
    (290/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.072994687 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073016999 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06605515 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.073929562 seconds)
    (294/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062044773 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068976337 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096740089 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051735917 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.190700524 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052965947 seconds)
    (300/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052627291 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090326191 seconds)
    (302/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075378176 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07064202 seconds)
    (304/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.076909361 seconds)
    (305/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089494278 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090200022 seconds)
    (307/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066465401 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051854252 seconds)
    (309/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092621021 seconds)
  done (took 32.96461312 seconds)
done (took 33.876433836 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080775556 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113474547 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075074402 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114496353 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081426899 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099051733 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073058346 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078199645 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102938133 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082130896 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101177466 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054601643 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096939645 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07516434 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096471173 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091728155 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.09995248 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073352599 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073394742 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087341229 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07503372 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087456747 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067640491 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056460588 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099823123 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072965698 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072736349 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097765936 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066257598 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087913173 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069429744 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073229824 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087696734 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079580867 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093343458 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074528063 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076044258 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098352047 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068421923 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087638963 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074319737 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065645163 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093899177 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073093276 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071101089 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093278569 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073886538 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102089676 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091037393 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089777228 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073593553 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098365338 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076594899 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072453581 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091822456 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074308478 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092345386 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091424108 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095978181 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067939824 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07373397 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096249424 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07163633 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095110715 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073914613 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075105041 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09829934 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071057302 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097041848 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071812208 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065568856 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095283027 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069494477 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065571705 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097765173 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076420826 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085962295 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071449509 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07256034 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09408398 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065035191 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088662082 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067836019 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072214444 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089680481 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055054221 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069701633 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093066144 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065689556 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074571357 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093612654 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072141747 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088439072 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077749192 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065298873 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093392642 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066506732 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066192152 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.0899143 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069976269 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065385138 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089469892 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075179751 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088712153 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072020984 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080379769 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088504395 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072718894 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086847302 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066048382 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081839007 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097404403 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066388824 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090089175 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066043825 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072930279 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087035505 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06651079 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065790053 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087958263 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071640276 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065031572 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089943426 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073366327 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101769211 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066458429 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069953961 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09020989 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066101776 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07139802 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089021159 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066399327 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067202838 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.085785508 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068385166 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087741856 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073379061 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068475581 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096207183 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067668868 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096458459 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070323399 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072087069 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092592328 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065684774 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059259454 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089921032 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068007881 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068260803 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088008339 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068386676 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065242097 seconds)
done (took 13.117218545 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066196789 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167294391 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125560609 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095746037 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110399907 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066510278 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099625937 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103261724 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.089987976 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126116309 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087970587 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.106993336 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113926619 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087632404 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066890038 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070005783 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089637197 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087867667 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123632281 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086397728 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139993914 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08796191 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120177165 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090724939 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111440358 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094217009 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.089189787 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06986815 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068960119 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125289068 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107948904 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069772425 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067175135 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122379988 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116226812 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086319071 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087674066 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085072481 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08794487 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066477452 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11332854 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101305144 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104015618 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082431464 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094254289 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069320826 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089418464 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087047442 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113546011 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080755566 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110553162 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134328875 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069417888 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105102705 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065987963 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109741023 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.082392662 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091273329 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067322821 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091915216 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066346639 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069607874 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11046975 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114996876 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070803819 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105174427 seconds)
  done (took 7.226107247 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084531957 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115987431 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083900827 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106913666 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066231357 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066799656 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.08993804 seconds)
  done (took 1.582806509 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067719595 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088702926 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11162853 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088801064 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108673382 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087010128 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099218459 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06793697 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106766418 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068656439 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087382862 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127639323 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068165921 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096812809 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090872555 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089993832 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09121513 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089861047 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070807114 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11309681 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070122787 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.086896021 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092418272 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06768692 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104353498 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067841048 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138026851 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072406124 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090607152 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070938055 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065853896 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139753845 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104074664 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078944646 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067019035 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104768475 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08220393 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087850882 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084244562 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094356903 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081649216 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068371889 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090950929 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066099314 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071858471 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100461481 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068727534 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090524564 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070561926 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087044919 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091012532 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081129 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089798498 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071415902 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06843368 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095483393 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077912155 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090796507 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087280181 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068711729 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106717275 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083896663 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104235129 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083949945 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092267576 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081205742 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103782306 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070419001 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069557426 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093581309 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08330836 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087431309 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069671236 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078794762 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091386806 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091063263 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113274452 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068994772 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099398325 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068033898 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068242162 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091081637 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090436379 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093429588 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068074359 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071992911 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094277288 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065533481 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066569249 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093656015 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065896669 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090500579 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070466839 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067920387 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091751005 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084071875 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067849195 seconds)
  done (took 9.264650043 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068973474 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068589981 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092239324 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068658146 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067893964 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091087453 seconds)
  done (took 1.441717433 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098204014 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091964147 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082130785 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095477123 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107228688 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104306441 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082505543 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106061481 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085230121 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10211843 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082891665 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105197895 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088553647 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096350461 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082099508 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095851566 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083184776 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098847523 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079209347 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096087754 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088500066 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095943275 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073994244 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.10643314 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071529467 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073217261 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100578076 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079700153 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101467104 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082872911 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09585589 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071378668 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094337843 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082872943 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.105081332 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072211154 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095807071 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072401213 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099974114 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070805427 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105585394 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07466706 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077807857 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094905637 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105617742 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072603467 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072001599 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100558511 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081949755 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094457753 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072774692 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095435052 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071027338 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094604963 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072248298 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105583779 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071739031 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105407708 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073241156 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072126738 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093888145 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07149012 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105689499 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071058651 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103318224 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071763957 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094121181 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073929089 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096406306 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073352513 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071532803 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09345656 seconds)
  done (took 7.314479901 seconds)
done (took 27.796348169 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.648569332 seconds)
  done (took 1.626305257 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.760576104 seconds)
  done (took 1.741681448 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.632400955 seconds)
  done (took 15.617022713 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.608343351 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.757361166 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.819634946 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160105504 seconds)
  done (took 3.329311595 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.887784665 seconds)
  done (took 1.888456191 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234318731 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22252284 seconds)
  done (took 1.44576792 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.730560545 seconds)
  done (took 1.725187268 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.277002588 seconds)
  done (took 2.264852133 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.319060541 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181202211 seconds)
  done (took 1.496705737 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.519374027 seconds)
  done (took 1.515993168 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.528537254 seconds)
  done (took 7.534191826 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229345443 seconds)
  done (took 1.240518316 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267943866 seconds)
  done (took 1.268267683 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.124204373 seconds)
  done (took 4.125037882 seconds)
done (took 47.807408732 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078048712 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081696728 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104239513 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078644552 seconds)
  done (took 1.336620641 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077371207 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07339832 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100449836 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072844908 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101179828 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074407501 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098081586 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077425072 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072177068 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097294863 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073134187 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095518941 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075298104 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.09776184 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07122304 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075897399 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099689103 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073393304 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099502193 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073547 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07125684 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09806194 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076217116 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094989465 seconds)
  done (took 3.026638971 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077793941 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072788644 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097519472 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072006078 seconds)
  done (took 1.325065754 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077050483 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115312436 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088817994 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10103314 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092190206 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110563003 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070309455 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068853074 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094278392 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077231675 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090778543 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09861411 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111036718 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076775107 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101862159 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066833451 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068613124 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110149986 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07781978 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10022714 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069882972 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079927888 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091526214 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090520355 seconds)
  done (took 3.140225026 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077126668 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127157517 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078115839 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113517998 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092242857 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064942191 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.099608494 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.115092022 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125063148 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089979963 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070365493 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066365726 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096040926 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065890348 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076353641 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133536147 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135506785 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068784771 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120707833 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065833908 seconds)
  done (took 2.896967715 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075009899 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070025057 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089048567 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06927933 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076141956 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09659667 seconds)
  done (took 1.491415569 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06800903 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067053377 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090146867 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066713284 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072315527 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090240163 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06576712 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066792385 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09038526 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066871655 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066248514 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089418081 seconds)
  done (took 1.911707414 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.381122395 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092673128 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069077913 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088864922 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07039361 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089940857 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080629042 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067813515 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114361335 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066890081 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090201362 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068626106 seconds)
  done (took 2.296704652 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261323999 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077267254 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323612329 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167873227 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140439709 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154624678 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106216795 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139181631 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198397995 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13851077 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199912551 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22422421 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133564453 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167988322 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114510626 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132126372 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185488776 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221038198 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129835262 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199325958 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206237475 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155462197 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179549793 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12765413 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134365865 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150721169 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071967825 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105883298 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231483516 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15981743 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201008043 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137436851 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097330331 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229545289 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223890052 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195337606 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161306942 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084448945 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156829791 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164087433 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254477013 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114206319 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193768315 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133620249 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106234644 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172437664 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14631701 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.145891193 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137145381 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11454972 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17431972 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237893817 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165578896 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112409371 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136024237 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141493286 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143031333 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104346669 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268072511 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195002321 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15883148 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095743127 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099088305 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209809946 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159615401 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141775688 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153363824 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11901528 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166319556 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210938943 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146008026 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173706977 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.17969147 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089746132 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146981696 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194471061 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156036794 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229421484 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157190908 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074218786 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154499175 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129650034 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106771281 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142900228 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10112237 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2077261 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124588942 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139244218 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140205948 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135261744 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136591024 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194732358 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203311018 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129605148 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066638269 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130297757 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149820349 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17541236 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113681476 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134994044 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14829449 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079936214 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190824782 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076231369 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152655683 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104117951 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151918956 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163484495 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076324246 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178507275 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103543821 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128614243 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163175632 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22018741 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115864193 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083637514 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226836175 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155764976 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132244993 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175321667 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214402802 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102226512 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129283758 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208151076 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248172648 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091122593 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227901904 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136156544 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082949579 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112536506 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155024829 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139216798 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.147511996 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108344589 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154267499 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226456959 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075254242 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122605981 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167211533 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082448027 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108014587 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141711181 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127774134 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095519783 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12683039 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133601169 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168949457 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182619217 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110615684 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180493706 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100023521 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229294636 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118621608 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.135413064 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106649948 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096722479 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167353778 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224614306 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083110463 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229788695 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155097066 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134448105 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148778595 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084266894 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194186257 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079473033 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071919391 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199701695 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137531236 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136895721 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184606634 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130693542 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155470465 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152766973 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163353162 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187488885 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163916319 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132950438 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08847845 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139571279 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153236119 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099251039 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121380499 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08380833 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131899076 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122611748 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083578122 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197952182 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156743807 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12568461 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114359982 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12357238 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203703575 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078312117 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158699215 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146297235 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120458949 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211126247 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187807357 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164372016 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126122748 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20144511 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074004182 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074552174 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116438074 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154083771 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109956864 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08383351 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170299384 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179745684 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156933515 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165921997 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137478909 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149357679 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213535913 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071736015 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142712865 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178798775 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153364776 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154233179 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112974551 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100439427 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199971946 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110024226 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272964302 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144500846 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152526422 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180928502 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.13054692 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080834569 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132145474 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193313085 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133837014 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18231056 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126145369 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114506799 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111520338 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10730916 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132376175 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155384426 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147373812 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189336394 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143862875 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160852942 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077004575 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143885622 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173983316 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151391336 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066002704 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147767121 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220409133 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121015426 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146398566 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185276354 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105215246 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126749143 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236226286 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20202458 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109855063 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112082877 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153858628 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181983127 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148180223 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170560244 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139257723 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164243212 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137909836 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085962041 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115507949 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125883595 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134495493 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096644955 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139470696 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144796042 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121210733 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158697642 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139160907 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13856279 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146214628 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125110794 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09125882 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125915205 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235441661 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150483014 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235291852 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101838581 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.209037606 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230712932 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076036228 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10685595 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080956875 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169053498 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110593103 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161097903 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125146626 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131685923 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156369173 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173127688 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122981152 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068631586 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138114749 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16377301 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138273849 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126127893 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132811391 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223910028 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104307565 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106955413 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153389842 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105687332 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12910322 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233641231 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.086190478 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099411535 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10228074 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081868249 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157403887 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216969542 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110359598 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.128867246 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143862916 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146776465 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157442115 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128088822 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12690505 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141166343 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180557991 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185575818 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092111819 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139798162 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157368045 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215242963 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133729283 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12164247 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204751487 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215920289 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224529454 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090251645 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143245291 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142591257 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13694542 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195699865 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084471323 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226452339 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082778836 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19254478 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132602134 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120814639 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158872305 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099451639 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114741061 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205569091 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14879045 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100015806 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107672618 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1464458 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151197408 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13434146 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075703079 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19697815 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073461482 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167456078 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230668985 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10876062 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107889821 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122337187 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107983266 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135548159 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130040966 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08691666 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143235091 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230794749 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091710917 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208581378 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170070825 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14080898 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193874185 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127866742 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66340438 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079647729 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214052616 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149894444 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242409429 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10115275 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147535589 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137493482 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15179948 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201523334 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132871421 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178807372 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1875135 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.148836203 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079007636 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129894187 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138060814 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117326474 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134608898 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142601956 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145560828 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127550811 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148796285 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157266589 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081869254 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122310648 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21708966 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147092002 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174584923 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172453644 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112457178 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147192562 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195231847 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081502229 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151000929 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216153339 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138664142 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126019473 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083360392 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134605694 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233316348 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074345103 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222225806 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152100558 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137639463 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142220915 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147357198 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161522095 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135448163 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180921704 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097298769 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139317713 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143797483 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111190261 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078111094 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133422924 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141113932 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126792984 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128530506 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121766302 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206209781 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071507842 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123386991 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130171134 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17566736 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239942727 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116312011 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083874045 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147209137 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140667121 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144371872 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152853937 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107722993 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109027726 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083075466 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.137106721 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112078309 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143357215 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131697948 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13906725 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228037966 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084268688 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254185719 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122371998 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133179238 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070545757 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105612497 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097088431 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125845656 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136952394 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1275884 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2059871 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125940333 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11697786 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119231801 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074546004 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083742919 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185446124 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141240016 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152474979 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100114518 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.089591412 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138325894 seconds)
  done (took 71.348298322 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.13466043 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108890044 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.125270631 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.180134802 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149311181 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240926892 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.187387163 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22814349 seconds)
  done (took 2.44812738 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06947108 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116028723 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102427224 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115663402 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089693068 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06835933 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293465807 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109901414 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066266028 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114327671 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119510674 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.090864411 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.469817682 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067611574 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096939425 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084116389 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06770422 seconds)
  done (took 3.22876211 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.425119278 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.626415961 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.447619444 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073067738 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.852437583 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.105917783 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.353177604 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161081915 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.089781842 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.428949508 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728325479 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.147207952 seconds)
  done (took 17.532390094 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074725805 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068809907 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110133139 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083866632 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097891507 seconds)
  done (took 1.531595441 seconds)
done (took 114.511586897 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079183065 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.344242735 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053224642 seconds)
  done (took 1.527338207 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08332872 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084039445 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110497667 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08279874 seconds)
  done (took 1.464318872 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075504235 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076630321 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110705079 seconds)
  done (took 1.363658842 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.279495736 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164243903 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087280392 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082778101 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077492547 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103756569 seconds)
  done (took 1.367476736 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072823451 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074919538 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099267264 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07627658 seconds)
  done (took 1.419108698 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076380688 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052232244 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054812107 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081476714 seconds)
  done (took 1.367163224 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089080749 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105198167 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080626981 seconds)
  done (took 1.375079435 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106324085 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112169039 seconds)
  done (took 1.322940834 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08117632 seconds)
  done (took 1.180245069 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094568171 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.138821781 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154076461 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137761807 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166337668 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137237979 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.114452376 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087980919 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104668462 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.116477891 seconds)
  done (took 2.358949367 seconds)
done (took 16.452005716 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077979141 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.487692349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360780653 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118209183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668034835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356532481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006037943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118968341 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121652671 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094931801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083820566 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674275893 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969211851 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.438001529 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955922545 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.315545515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674857429 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068920323 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092713107 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068113827 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965007351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093690183 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068008639 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067806333 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674294775 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371462122 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094293469 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320493223 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06754871 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09607711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354678929 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094404403 seconds)
  done (took 16.115352574 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070251006 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144225664 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074551216 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083696793 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097147734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070279895 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098107787 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06930961 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15236778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067459353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111124766 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067931737 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097613696 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068811621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087211383 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09417724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068447608 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06794498 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09442788 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068044636 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112606976 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067978658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068422154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094848449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067793487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106702587 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068814377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068317185 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093603161 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070042262 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096837216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069002436 seconds)
  done (took 3.842944727 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114269676 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152550446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074023814 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128268998 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113141818 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09625432 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169746223 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094547587 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155177902 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068614759 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111063385 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068284684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127550698 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069233748 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114075931 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069040276 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069154525 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094369796 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067729834 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094680915 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086991414 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093314957 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068776936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068713049 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094332354 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081056842 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094672047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068636127 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068027315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096973177 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071785275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094259023 seconds)
  done (took 4.147999546 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072588566 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074716137 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108468366 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083533377 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095676415 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072230216 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07321246 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09624294 seconds)
  done (took 1.781477661 seconds)
done (took 26.990381496 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078451742 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069839129 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099083728 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080967498 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099449244 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079205277 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067717365 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101718912 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076403284 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072748901 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10303145 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06711228 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097830818 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067908527 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074905101 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094608276 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079547466 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098657642 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079050541 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079109872 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096624766 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076672722 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100446201 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079675598 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106358894 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079765153 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082582624 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100790448 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069190209 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096820385 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076485298 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083589104 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.095069944 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079495343 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095390649 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068163666 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067539481 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094659576 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078813851 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100687442 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07023895 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100193973 seconds)
  done (took 4.667602217 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087613383 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090344165 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112193334 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06520938 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097531823 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064949993 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115095758 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063200864 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059058866 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11558859 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056102945 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059353431 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089381146 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05375855 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058407444 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056678682 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088597449 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056393604 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05879676 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.086527665 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05782468 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053702943 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086802413 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06281945 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05595864 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087177689 seconds)
  done (took 3.05433615 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074539367 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082778705 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115033729 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126437494 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132033856 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07638333 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104425706 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086810787 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112799344 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066913633 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070681845 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121338709 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086933522 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101284313 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067502178 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114030125 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081319035 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06843451 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100546341 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089741719 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111577014 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077260226 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118133895 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080185409 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066353035 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096317313 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07067918 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107257039 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07286467 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076387389 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09840281 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070749927 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096590979 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078669301 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072304013 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095521847 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089094877 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104510315 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077645626 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067981887 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098183443 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068443072 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11606222 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111231178 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09413245 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074464979 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074773424 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104126405 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067560596 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113840064 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076436563 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067617312 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098302264 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06758216 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094586058 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081401341 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069418905 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097246777 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076320356 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097621693 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080551102 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071334225 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110476435 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066692763 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101670143 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067328168 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068299174 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093574632 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090887456 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068552607 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135660662 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069019701 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095440147 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075828351 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101871372 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0733176 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068318194 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10992823 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086739328 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098186313 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075602689 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097913714 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070734866 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087168576 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097214152 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.0692286 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068643783 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100784321 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07006767 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095384824 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080726586 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067678071 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096840712 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084321497 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095084308 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069440852 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073340796 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100455785 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067036287 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106777782 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072994298 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094894213 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076726873 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067166607 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.096778644 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077047288 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.099687917 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066805756 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072522612 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101369649 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068556283 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068637921 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098396659 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069138967 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103988877 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074044688 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07176113 seconds)
  done (took 11.268928249 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.191355156 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.185363779 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070880097 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179566348 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076021903 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107029239 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179172564 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095671699 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09675038 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068518509 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069151587 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129924794 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.12388399 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105183829 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106065817 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067385085 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113606835 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104599621 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.180628302 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174948443 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115058263 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076373728 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069432501 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097675041 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070783177 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077064403 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112112545 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.101881279 seconds)
  done (took 4.273616228 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081897724 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128637495 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073020403 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089077558 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.11877022 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067929586 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100777328 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06903195 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107370366 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079724729 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094684092 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073941004 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074305467 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10523259 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068088826 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104844409 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077671206 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068837076 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.09813496 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072632965 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104558007 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081178464 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071812007 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.094519688 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073879414 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094896626 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064070138 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.11241627 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067252079 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118492713 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066384653 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073915149 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108347428 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067981195 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094459085 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070957568 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070961812 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09809575 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069172349 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066883573 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094519613 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057682904 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067010999 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107395252 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073497452 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087146903 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074281564 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072798711 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100235676 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065982284 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098018978 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070813179 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070624095 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10485785 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072607108 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072530791 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100795604 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065396952 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103406737 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071124872 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064203265 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094372877 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072589245 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066346391 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102946265 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072732043 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093598258 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071184955 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072939656 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101593279 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071702873 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070340265 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093105669 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07018571 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100086053 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07251998 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071944097 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094912738 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067615006 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068505943 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.083035231 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068138331 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054141118 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098436907 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066039713 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066509846 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097782966 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073541272 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.107779316 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069614028 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101403888 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069511531 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067032094 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098423886 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064358896 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071333499 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111507763 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.111709531 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06887404 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065905304 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109974699 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072627771 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067224396 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083749643 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074044561 seconds)
  done (took 9.798989228 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096177115 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092042269 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097300257 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082644139 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123357609 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092649278 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103308473 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073828917 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06992021 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112467018 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067871257 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103683851 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068327807 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076460647 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123227102 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074888068 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09677911 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077372274 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071808226 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134275066 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082069794 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109689792 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.079852744 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096081921 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072509604 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079193737 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.123382706 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079226733 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106307252 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084461281 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079455147 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122812813 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085432246 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099189334 seconds)
  done (took 4.281362292 seconds)
done (took 38.450363842 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.214594249 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.402323369 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.188644943 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.091746935 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.222836886 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.193637472 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.197182679 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.199374156 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.391159332 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.188412293 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.436595513 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.825846956 seconds)
done (took 58.687933962 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.21019138 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.327113306 seconds)
    (2/2) benchmarking "String"...
    done (took 1.454631094 seconds)
  done (took 3.925047901 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.532300957 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.068559068 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.448197136 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.186942885 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.190250173 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.509274468 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.77135607 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.000253927 seconds)
  done (took 27.307476483 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.190796441 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.543755892 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.472857839 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.487962238 seconds)
  done (took 17.827115218 seconds)
done (took 58.935021808 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.182894799 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.203826698 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.191758104 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.173758712 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.297209558 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.22243551 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.324079701 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.30444414 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.18903468 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.176490393 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.211807359 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.193403021 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.191761871 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.360471134 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.201725951 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.193671313 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.213519942 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.860505996 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.575381367 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.19064065 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.202883135 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.231847968 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.188577831 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.193539023 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.223672713 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.191453353 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191246628 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.197013935 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.379655874 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.187833714 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.278824181 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.5695094 seconds)
  done (took 189.62204527 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.18848797 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.260116259 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.353944631 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.214101547 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.641993333 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.38851684 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.318768569 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.708407079 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.210254058 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.222467442 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.499205187 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.191358839 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.526677214 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.165736723 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.195565668 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.293993233 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.377280036 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.510226816 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.206888344 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.462596814 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.209471979 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.42319888 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.334863485 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.431869897 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.226658092 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.230208703 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.206150986 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.213202294 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.383966313 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.311307408 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.200580691 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.23308561 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.754205763 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051458047 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.198704822 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.19564671 seconds)
  done (took 149.67390845 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.451412719 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.186571717 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.188862326 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191050316 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.21961624 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194842145 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.711307471 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.717116365 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.738183409 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.612977466 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.248692281 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.189327419 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.427398974 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.19642817 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.191349186 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282867008 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.203065347 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.19163963 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.207829001 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.218400641 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194035424 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191882869 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.716627223 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.197381734 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.205976988 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200528913 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.192642554 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222860171 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.586505241 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.247796712 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195034473 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224035202 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.509115729 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.234518699 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192438947 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.486370534 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.454256773 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301670492 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195660557 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224778871 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.196554619 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.464027409 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196431196 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.196877697 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.198082435 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.764924448 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197260159 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.718310813 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195992947 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.110100809 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197305498 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193458007 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.818317152 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.651901882 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.198168011 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.192799916 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.196880494 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194204473 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.192505395 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.222434374 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198023152 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.762708672 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.296313791 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.197259904 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.197538254 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223213554 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198464997 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.718190274 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197474456 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.436724824 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.253812698 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.412409354 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.718400222 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197915506 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284588587 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312600582 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.196070094 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.195498157 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195889967 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.195607837 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.300709888 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195511356 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.591627068 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201207747 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.196203849 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.254861753 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.289214178 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.196341958 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480428814 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.199563773 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.196103197 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.925977285 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291288911 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.195247758 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.196275877 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194888106 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.592731441 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.724243256 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.371609845 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.198923331 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.7690204 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.19939529 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.60536833 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.722189437 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.788324322 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.201677481 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302917807 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200257912 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.19685058 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197470378 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.22475735 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.197767361 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.255635401 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.196824197 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.59145853 seconds)
  done (took 345.363650063 seconds)
done (took 687.237313763 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.882540856 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.863864502 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.964457595 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.85672559 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.83451369 seconds)
  done (took 10.545144318 seconds)
done (took 11.686403347 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.376173704 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.379571356 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255424346 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.383767842 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228556671 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.39660224 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.361195243 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221881201 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.29508163 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.272071387 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.29983744 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248506936 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225849229 seconds)
  done (took 18.087076082 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.495745282 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.491519971 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.2584273 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.494229418 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241068429 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.497256054 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.386325751 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395164279 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.381538398 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.212153604 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21114336 seconds)
  done (took 16.207588826 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.511522891 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.494053208 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264328671 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.506538508 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240687991 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.501335005 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.388033944 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.394207553 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385952542 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21385683 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211152477 seconds)
  done (took 16.251731916 seconds)
done (took 51.686756041 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.206826903 seconds)
  done (took 2.346266497 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.240660551 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.405401454 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.222602856 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.211243542 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.208480498 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.208150589 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.209900046 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.205510133 seconds)
  done (took 11.057355416 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.204550147 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.204289794 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.204086618 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.207475021 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.205265869 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.208820229 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204692148 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.203986296 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.205493996 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.207766289 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.207030754 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.207487549 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208750345 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.2102752 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208270542 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.208880154 seconds)
  done (took 20.444415934 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.208749313 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.206262555 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.206841733 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.207500815 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.205008237 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.206005478 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.208434253 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.206778427 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.206740704 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.20798841 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.206882914 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.208160737 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.208341113 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.207447559 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.207041576 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.209313785 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.206306708 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.207072092 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.210330281 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.20646118 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.207256571 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.207278171 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.207565801 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.207944143 seconds)
  done (took 30.128093837 seconds)
done (took 65.117245251 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.212681242 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.820465622 seconds)
  done (took 9.178240581 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.210264355 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.209888669 seconds)
  done (took 3.56955073 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.21081248 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.211656126 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.211149416 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210037574 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.208769928 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211161055 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.210849405 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212514696 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213050445 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.212554402 seconds)
  done (took 13.25875479 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212708262 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210598598 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.208394554 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.210000874 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.209700196 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.205057553 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207479432 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210299511 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.207337878 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208295926 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.208530303 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.205675603 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.207956219 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.20674269 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.209033202 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.208008411 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.207954691 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.204074672 seconds)
  done (took 22.893282889 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208041026 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212460473 seconds)
  done (took 3.569032615 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.210305912 seconds)
    (2/7) benchmarking "second"...
    done (took 1.21039854 seconds)
    (3/7) benchmarking "month"...
    done (took 1.211040289 seconds)
    (4/7) benchmarking "year"...
    done (took 1.209683988 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.210102372 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.207659621 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.210087791 seconds)
  done (took 9.61660782 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.211566077 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.37783004 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.459269492 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.818450289 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.213825778 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212383717 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.048091196 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.216636811 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.214949429 seconds)
  done (took 13.922257537 seconds)
done (took 77.154802171 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.215774406 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.204429556 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.031829323 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.220921312 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.221921314 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.546365382 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.208057165 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.324451566 seconds)
done (took 37.119633037 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.215377721 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.902040533 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.939377395 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.207449838 seconds)
  done (took 11.200266694 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.196309953 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.109231289 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.200175612 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.203946463 seconds)
  done (took 17.860612775 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.814802435 seconds)
    (2/2) benchmarking "read"...
    done (took 1.540500735 seconds)
  done (took 4.504266922 seconds)
done (took 40.926512726 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212164592 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.214932943 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.212013407 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212456628 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.208159396 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.210369613 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.212560245 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.210064114 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.210299756 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.20882713 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21235454 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.213450975 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.212975638 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210333287 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211710504 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210192178 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213792779 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209394847 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211197801 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212557405 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214730011 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.210820938 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.211604023 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215263081 seconds)
  done (took 30.228711678 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.213974426 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.212311821 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.215462858 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.211491007 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.212712189 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.215494917 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.213472778 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.213725015 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.215177284 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.212734451 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213271464 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.21334117 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.214667385 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.215740698 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215883534 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.211918738 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.215403601 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211283719 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215255133 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.213533742 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.215160743 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212442259 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.213437322 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212054046 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.212572956 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211323685 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.212436271 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.213491376 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216115804 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.212484089 seconds)
  done (took 37.561614668 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.219453912 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.221787944 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.214180636 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.212133762 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.216233937 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.214200859 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.216579172 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.216109736 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214947926 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214589384 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21621526 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.216904004 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.215809043 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.217000371 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.215608104 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.215137186 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.214613233 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215433679 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.214435187 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214177872 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.21581801 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.213818236 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.215233899 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215288406 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.217203848 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.215411324 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.216417271 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.215024111 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.214583069 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.216621359 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.216102971 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.213384699 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.21599183 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.218611197 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214605299 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.219271195 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.22328577 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.222895314 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.218779968 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.219933278 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.219605051 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.219074872 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.218996951 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.218645905 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.218301441 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.218071838 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.218901823 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.217515147 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.217842745 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.217964957 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.218608639 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.218270677 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.217667945 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215812334 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.21791513 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.213856637 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.216491078 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.213718953 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.217333664 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.217810694 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.21547831 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.2166929 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.217683559 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.217244476 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.21491604 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219245339 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.219438194 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.214354235 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.220058496 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.218263659 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.219580944 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.219220424 seconds)
  done (took 88.7728415 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.218544904 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215227055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.215892562 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214729961 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21722224 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218057518 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.217537927 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220767355 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215516753 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.221354791 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220211149 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215092335 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215826528 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.221787773 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219861969 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.21763348 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.216000952 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214891132 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.215618398 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219412517 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217510716 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216750608 seconds)
  done (took 27.942115467 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220417839 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219223892 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.217093606 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218035306 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216120786 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217405685 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220732653 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220912935 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221275246 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218660477 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216236731 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220443395 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218417384 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220741022 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220199171 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219398611 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222077403 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218444668 seconds)
  done (took 23.095608217 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.216839348 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.217115534 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.221451304 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.220141241 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.220174739 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22056416 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220260808 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22348968 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.220601097 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.218129128 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.218153112 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221235621 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.21958924 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216025973 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22100688 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.218889046 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220728978 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218090795 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219896662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218433933 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214082129 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220845733 seconds)
  done (took 27.982442039 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220001117 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.222603807 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.21988024 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219510007 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220250309 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223606392 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.224531554 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.221331446 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.223191704 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.224752417 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21977438 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.224088785 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220086425 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219390367 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.222001691 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222243854 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.225584679 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222915745 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22560999 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.221349953 seconds)
  done (took 25.593545582 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223354603 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224415209 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.223723563 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223329356 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222007857 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.224252738 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221664553 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223809183 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223948413 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.220650003 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223507184 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224335571 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224512285 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224299237 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22451696 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224038127 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224276973 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22430501 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226236829 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226130662 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.22674513 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225216442 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226282412 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.225838114 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224554729 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226573653 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223374994 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223739564 seconds)
  done (took 35.439522466 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22730321 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226631017 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.22461698 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.225833597 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.223877494 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.223198829 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.223550213 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.222874287 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225090044 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222266848 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.225167516 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.22461318 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223913982 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225556263 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224559959 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.224106539 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225567335 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221807218 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223209934 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22115786 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.225798635 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225139302 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.226418835 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224028367 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223616818 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.227044402 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22464171 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2247369 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225746084 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223886835 seconds)
  done (took 37.898184604 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.243880001 seconds)
    (2/2) benchmarking "in"...
    done (took 1.246680257 seconds)
  done (took 3.65397043 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.224775636 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228372469 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.227334736 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225024257 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225603154 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227311608 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225752072 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225362583 seconds)
  done (took 10.972223549 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.227339148 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226422653 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.227167234 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.22719337 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.22665944 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227488002 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236260042 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.243093845 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.227638568 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.226540478 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.232648125 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233608843 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.23078112 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.227908423 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.228265337 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23036276 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.227240256 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.229536218 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.228787137 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.230018385 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230378718 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231765546 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232350903 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.225794891 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.22875171 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.241917404 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.235555935 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.228239991 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227672578 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.23424086 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.228588004 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225859244 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.22988251 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.230159951 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.231032765 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.230912681 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240200202 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247055711 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.235270433 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228419233 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228088734 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224698276 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.230267658 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.229525694 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230764042 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.22848121 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.227544763 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225404285 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.227895405 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.23188064 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.233373693 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228614046 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.22546793 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235635975 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.231106111 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238637669 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.245822935 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23097415 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237803913 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.241125587 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.24421631 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.237146927 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231125852 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.228476519 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238546025 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.252834462 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237050935 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.243777061 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.226761127 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230703919 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.240046165 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243991821 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.239441125 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.228731496 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229410921 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.228795851 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231584308 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232124206 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238750211 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.252366204 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.229373084 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232078617 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241406124 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252194134 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.228970175 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.229953302 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.232344008 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.231425892 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.233799138 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242213823 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.248251528 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.232162094 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.233494904 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.232300566 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.236879148 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.232558952 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233257848 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234020635 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.230609477 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.23380422 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236036693 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239247484 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24251322 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233415274 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231108769 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240934347 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.231761306 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231400554 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.244792578 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.231451483 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23113597 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.232244227 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.241733725 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.229630619 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236460996 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.241236695 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.232351718 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.23446826 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.233515656 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.233972034 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242753496 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.260551772 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.233835806 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.233246081 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.237389732 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.242759558 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23272168 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.237592032 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.232901663 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230023396 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.229677759 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.236478887 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.233765549 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.234373726 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23234585 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235512281 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.231400308 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.233105699 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.233069973 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.23439667 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.236506741 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.23382161 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.23455418 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.239483068 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232953434 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.235975692 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.242308806 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.234121312 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.23510681 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.235558387 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.231416655 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234928221 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.237860796 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.237630997 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.23749023 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237209083 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.236329779 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.234969123 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234629144 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.235426896 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234501774 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.237460808 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239494952 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.235672027 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.241891469 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.234635735 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.232253646 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.23600958 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236956381 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.237609661 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236796868 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.23470086 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.239160513 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.24380346 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.234541477 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.235202536 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.239523807 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234717065 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235535861 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23349564 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.238446684 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.242780234 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.23714565 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.243826084 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.235044836 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235679598 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.236648772 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.237727048 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.235299775 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237056064 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240517579 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.24378532 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251741578 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247168672 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.237672969 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.239757687 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.237890978 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.240158576 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.24322606 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.236369877 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.237265729 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.234705072 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236153154 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237664354 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.239838811 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.236602266 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.237277415 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.236254766 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.236830768 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.236062925 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236395816 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.239794666 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240027857 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.233995277 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237231822 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236878534 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.236460205 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.234924991 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.236074724 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.237672341 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.237990711 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.238235261 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.249210016 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.237480937 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241331381 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239341274 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.238544908 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.236115875 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.238434235 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240967998 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.240025303 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24945314 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.258127063 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.241973395 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249150301 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.256556089 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.239975814 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.245245095 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.240001995 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.236450741 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.242257313 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.247015226 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.237785254 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.238909476 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.237887831 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23904276 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238674405 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.247562929 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.236930255 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.238841921 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.23880904 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.242581875 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.236627045 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.240662801 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.24110439 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.24055204 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242703012 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239965689 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.239759622 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243259632 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.241174088 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.24043146 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.240915242 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243992262 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.248968061 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.249507916 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.241178869 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.244924991 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.24424203 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.243713646 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.243380717 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.241985038 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.240836207 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25675964 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.24886237 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248778458 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.245315785 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.240995343 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248001681 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.2420688 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.246273703 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239855885 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242552219 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.241295169 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.240401586 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.239251303 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244176993 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.239726318 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243303615 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.24137309 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.244206497 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.240722383 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.240779319 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.239854808 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.240797749 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.241656386 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.243333306 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.241567308 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.245528945 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244169896 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.241765214 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.244173761 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252825663 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262512365 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.247061892 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.243462308 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.245751232 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.242878903 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.24433978 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.242081038 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.247313846 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.250959867 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.247492301 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.255262862 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.245454842 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254837891 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.243285854 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.246649523 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.250586302 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.239423527 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.241883225 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.243643183 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.243750604 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25069922 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.2583816 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.243652131 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.247312557 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243287714 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.242758917 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.242546417 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.243853714 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244161307 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.245291196 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25666319 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.264933524 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.248520729 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247717678 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.241808645 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.246839626 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.246392101 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.245621708 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252850112 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.244764874 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.246366703 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.244527871 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.246407826 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.244773038 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.243358588 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.245612221 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.242036872 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.246102455 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25536813 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.262469619 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24850692 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.243778998 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.255591491 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244992018 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25467246 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.262069285 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.246394238 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.245246025 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.244432607 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.248775631 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.244610458 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.248219379 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.246021839 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.246675528 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.248634412 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.245167771 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.24888332 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.246199863 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.245045342 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.245964707 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256034354 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267591518 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.246759268 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248863834 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.242268504 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.246396742 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.249267332 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.245817122 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.244433727 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.247654612 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25613684 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253531051 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.24634605 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.245564359 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247071712 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245655999 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.24643013 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.246847306 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.245120378 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.24582386 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.248202679 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.245725616 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254954796 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.246765646 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.247650318 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249969723 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.24781251 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.259959685 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.24812464 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.249541771 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247048929 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.247330534 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.248412864 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.247542654 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.247479863 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249093711 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246518188 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.249117028 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25495323 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.253280212 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.251932968 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.248041588 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.246837192 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.248338818 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.249536754 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246602684 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.247187385 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247211256 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.24972459 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.24838584 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.250512764 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.248402114 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.247304327 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.249299302 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249128503 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252271228 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.256547855 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248632624 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.245787972 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.248553503 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248259095 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.248530518 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.249283092 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.260398322 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254144314 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.26035663 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.258517795 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.25426779 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.253112088 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254618766 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.260399009 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.250286513 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.25331245 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.250270823 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.25469018 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.2526243 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.255382645 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25100103 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.259514686 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.250455957 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.250541471 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260125893 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.268480935 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249877229 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.25060852 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.254827413 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.25129743 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.24710366 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.2502466 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.249894219 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260267271 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.27123121 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25002511 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254013033 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.24936883 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.252798874 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255341791 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250729439 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.25196527 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.249068022 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.254018599 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253707453 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252666119 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.251152536 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.252094342 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.253113444 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.253889282 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.259155265 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.249970553 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255126162 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.253160241 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.252429295 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251972504 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251766325 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.249916405 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.248775767 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.252143143 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251184168 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.252887519 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.254870301 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.252528004 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.25271482 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.253085689 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251644855 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254158504 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.262672698 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.2595075 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.249678552 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.252881515 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.254471852 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.257467572 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252927735 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.253222882 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254263953 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.256902357 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.253087791 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253633466 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.252358013 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.255517859 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272146281 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.271135196 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253366881 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.254987958 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260838588 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.254097195 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.249631927 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.252732986 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.257965791 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.256850611 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.25997643 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.252926362 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262275574 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270302267 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.255019475 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.257013687 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.257715495 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.262699365 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.257840229 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254430962 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.253295685 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.258265022 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.273020826 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253268515 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264076197 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28529287 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.271671912 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.257299369 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.254349608 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252205892 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.255085827 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.258226971 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.253676795 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.2538427 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253685761 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.254720545 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.255102016 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261779686 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.256950031 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.255074144 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.255560071 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.255519198 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.25851402 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.251819303 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.254265242 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.253411612 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.255779764 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.255749727 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.256392143 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.25804997 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271177177 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.267151707 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.255691355 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.25631075 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.25174038 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.259956272 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.258361489 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265877354 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.26279664 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.255845356 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.255344635 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.25919074 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256512143 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.253797361 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.257029549 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.256175281 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255483989 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.253048205 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27242337 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263724882 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.263939075 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.257983463 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254326299 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.257744643 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260615993 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256452814 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25674439 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.260471147 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.256110093 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261940239 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.257144731 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.257768953 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.25981828 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.262150181 seconds)
  done (took 743.09548615 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254932062 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253333299 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255435836 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25414341 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254539895 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255575941 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255549412 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257822814 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256136212 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256186185 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256996098 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255729278 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255369306 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254178932 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256307136 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255892334 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255846621 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255705344 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.256098021 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255909395 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257423544 seconds)
  done (took 27.561623672 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.256418655 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.255790898 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254689504 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.258228033 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254960843 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.256728519 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.25565209 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258383551 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.25769057 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254083863 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.257789063 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258397762 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.255500531 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.254807096 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257135749 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259590212 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.259816243 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255991136 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.259028962 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.255873844 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259561601 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.256509186 seconds)
  done (took 28.847143454 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.263233829 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.260679819 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.259615758 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.258844091 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.263043189 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.260239491 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.263386743 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.260646086 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.260631186 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.262342323 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.258931108 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.261573641 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.266885125 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.266209719 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.263287426 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.259905988 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.405241827 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.259910936 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.262078568 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.260278666 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.258208476 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.268089083 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.258675808 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.257661195 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.261026136 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.26356528 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.262653558 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.261960586 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.261915659 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.264198716 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.266788742 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.262098126 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.261843287 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.266351796 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.262206562 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.264472762 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.265109668 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.261527688 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.259253923 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.263988117 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.275008482 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.284165929 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.262770353 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.270795312 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.262301534 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.260507984 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.265236763 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.269701068 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.260705431 seconds)
  done (took 63.237710748 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.263138398 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.263093876 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.260389324 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262966225 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.262792506 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.260238022 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.26153804 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.261371685 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.261340584 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.263337314 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.266316675 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.262230582 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26120668 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.262902611 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.265057564 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.26113864 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.261312325 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262142092 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.261289078 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.26025786 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.259783665 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.262443072 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.265244335 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.261884304 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.264416419 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262508488 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.259863416 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.263162241 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.260684447 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.260430356 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.262689241 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26261087 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.264280021 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.261669026 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.261815685 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.263060528 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.262769018 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.261563077 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.264681636 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.261388252 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.262351448 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.265457613 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.26327804 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.265792386 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.261855716 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.262264473 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.262049129 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.262634044 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.263970756 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.266113535 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.2650577 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.262135057 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265388618 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.262177604 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265162483 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.266379078 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.264617706 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.263730248 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.267761014 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.262772769 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.263759528 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.264332504 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.263173049 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.265355471 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.265479599 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.263132026 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.264950152 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266099501 seconds)
  done (took 87.089066183 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265687514 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.264626003 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265792473 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266482919 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262964811 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.26517523 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266180623 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.265493548 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.26622904 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.264562318 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265981556 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264596401 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.265193721 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266858212 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.264776905 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265340484 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.266572648 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265516238 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267858073 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2661619 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.263285994 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.266755573 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.264881838 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.266935459 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266899207 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267034079 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266812344 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.267451715 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26668602 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.266729515 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269425587 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.267165274 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.266460804 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.267646363 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.267324571 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.267205565 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267252145 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266669174 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.269029044 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.268062672 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268294166 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267638598 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.2711073 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.269158608 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268035314 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270789958 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268363077 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.270105156 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268321389 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269969474 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.268195035 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268162189 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267331518 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268771359 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270185366 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.26891427 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269166932 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269593622 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268277074 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.267951237 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268036936 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.268261212 seconds)
  done (took 79.771119876 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269445732 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269013966 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.265118034 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.265708149 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.270029028 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.265832436 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.269431711 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.269846286 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.267422651 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.268946675 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268377024 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267453489 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267115027 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268683027 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.267937123 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267312525 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267052983 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.266128853 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269458148 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.267149947 seconds)
  done (took 26.562610483 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.267004963 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.271211439 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.268084911 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268270989 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.270547781 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.267655394 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.269582187 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269766401 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26811912 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270184747 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.269761364 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.270678846 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26831709 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.267234971 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.269650031 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269236092 seconds)
  done (took 21.509059136 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.267237773 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.270802234 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.270762359 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.270961368 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.267867946 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.26789875 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.270955132 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.268454695 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.269222742 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.272002667 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.270619178 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.271582411 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.269744482 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.270707557 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.267829477 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.270313408 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.267839739 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.269053547 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.271730456 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.271718719 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.269934215 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.269881731 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.273095677 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.27033997 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.266908518 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.270959984 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.269130433 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.269235152 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.268983763 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.272831898 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.268426871 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.269678377 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.268402355 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.268680843 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.272864904 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.268626144 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.273314053 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.272685093 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.273264478 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.272933759 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.272248132 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.270442578 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.272319214 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.272963052 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.271233238 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.272713278 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.271972243 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.270265851 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.26984733 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.270401447 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.273650392 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.273352483 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.272594092 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.274426052 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.273496144 seconds)
  done (took 71.097791032 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274757025 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.273464349 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.270349193 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.274152126 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272206294 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.270714222 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.271896405 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.27053535 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271578751 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274691939 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272188936 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.273221183 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271460904 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272729691 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273273734 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273664872 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.268879422 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269660302 seconds)
  done (took 24.108269299 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.270942453 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271620577 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.274007421 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.271229013 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.271087582 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27534149 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272221309 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.274039536 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274904411 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.271094241 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270600571 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.274701736 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273644416 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.27558238 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274430851 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272740225 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.27378694 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275568173 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.273524705 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272741002 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275858546 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275914265 seconds)
  done (took 29.22316732 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.27537605 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.273918463 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.291626525 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.320647805 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.306858355 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.275072234 seconds)
  done (took 8.953561354 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274175408 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277203502 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273737159 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276738048 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276423836 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275091366 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273622229 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273302335 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275483332 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274421597 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27479517 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275972129 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275330487 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274899658 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275979986 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277469298 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274704228 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274442301 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275539089 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27795623 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273294449 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277324938 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274126076 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273557626 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273502046 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272907481 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277685333 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273791084 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273060147 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277130863 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277458609 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273979575 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277061748 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275335378 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277313317 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277841187 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27547495 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278065978 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277921326 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27723829 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280544093 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278849148 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279044657 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276574998 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280158859 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276134376 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275025943 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276692744 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276048102 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280161825 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277620748 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276800023 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277991936 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27849885 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279655027 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27956939 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2771261 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27612901 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277568163 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276226918 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27738622 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279035871 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276129211 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275549413 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278928202 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27581786 seconds)
  done (took 85.453100827 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275944841 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276107835 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276641433 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277919162 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276164183 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276798065 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277371594 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276279106 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278480096 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275741635 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281310912 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278133069 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279155883 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277745869 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278750944 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27695239 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278710774 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279645739 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277791262 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280889872 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277918324 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278436743 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276704033 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27759087 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278601038 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279313255 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278491535 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278036313 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276319504 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278564141 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277165392 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277192593 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278619036 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278028342 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279360346 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27960577 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276963774 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279179158 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278778703 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281504553 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280260011 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283203277 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279205469 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281453599 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280084746 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279420798 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27813232 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280253578 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28025589 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277677092 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280787709 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281970929 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279687186 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280716169 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27910087 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279387435 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281187975 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280337984 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279624729 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281729439 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279246282 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278637552 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282623405 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279005334 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280758885 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2799819 seconds)
  done (took 85.62292149 seconds)
done (took 1732.424818921 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.376229182 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.320247635 seconds)
  done (took 13.914910006 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.443168505 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.398519423 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.282604089 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.312590965 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.28168204 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.285593041 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.292342556 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.282845225 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.280885472 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.28116054 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.28217632 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.481765094 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.28714341 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.285493851 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.284019852 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.376077722 seconds)
  done (took 42.363173147 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.311842024 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.289897169 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.400759362 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.307094687 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.310522818 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.46537747 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.339955186 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.28770489 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.45740785 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.331463395 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.899128545 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.31126091 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.288110889 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.373639833 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.303803746 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.466249566 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.531684981 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.828557089 seconds)
  done (took 29.722426819 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.730963716 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.311227362 seconds)
  done (took 9.262554328 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.289552666 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.333441822 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.319976507 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.284784987 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.281170287 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.319082847 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.336721474 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.329279571 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.315895345 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.31936197 seconds)
  done (took 64.359074832 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.304364547 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.287113265 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.288810771 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.284984154 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.278094003 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.279067895 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.287261183 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.282551845 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.865033822 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.416558152 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.304471819 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.292563933 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.28827747 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.286829153 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.286010853 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.324041266 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.444037951 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.282218512 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.283708842 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.294044644 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.289065414 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.373749919 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.328435144 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.286909405 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.412843947 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.882541181 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.294649666 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.294103839 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427776233 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.285353609 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.287100722 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.288549269 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.288437183 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.866129056 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.735853026 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.297499655 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.313433868 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.298215247 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.285435757 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.410814526 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.289615328 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.294595945 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.281723923 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.706492387 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.444929515 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.40102901 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.545778993 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.291746139 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.290914296 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.351823316 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.289996727 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.289317109 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.316411785 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.049421638 seconds)
  done (took 108.674402757 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.342789437 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.774186356 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453062889 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.307945582 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.117469794 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.021290419 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.285299916 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.569836173 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.350324986 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.28280317 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.616753175 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794638932 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.287309201 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.29278212 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.463534843 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.281033243 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.28263664 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.107540252 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.286223198 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.287149558 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.714489363 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303882745 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.299836699 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.44462781 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.320977908 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.757399611 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.813402747 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.791122942 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.290724269 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.282863106 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.753806336 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.286626266 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.324862823 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.282124276 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.555381971 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.647235279 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.62776147 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.287371824 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.297893348 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.285093166 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.287632913 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75289059 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.640975028 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.285260661 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.304683006 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.759359497 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.289215952 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.288531311 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.288399696 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.48442454 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.08121454 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.285289915 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.81232477 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.287005337 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.559534405 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.314341828 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.371564313 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.783935423 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286665582 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.419377177 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.302784709 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.285578292 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.287423472 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.289749799 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.288715902 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.642225655 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.521276067 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.29032024 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.633095833 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.751655594 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.288540231 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.812873827 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.216400354 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.294324639 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.354800958 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.284358715 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.924085152 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772189805 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.315158308 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.284316631 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.615365313 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.285692998 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.605260723 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30107625 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.286563645 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.727222008 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.315817062 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.307042356 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.30103436 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.291580872 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.963708549 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290878838 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.553864563 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.303297969 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.285936515 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.287114854 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.324264495 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287672412 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.286889058 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.291722736 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.814609449 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.293192483 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.58619076 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308088702 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288851061 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.29173758 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.291226055 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.286638388 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501535935 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.791017581 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.294889777 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.288124714 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.286643348 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.294938185 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.433155228 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.288714723 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.596052816 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.290344957 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.287867385 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.292410963 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.074021353 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336316995 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289143025 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.308416568 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.133958914 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.499029647 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.306067431 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.289327948 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.287510172 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.310902798 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.723745751 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.292746832 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.306369538 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.291853064 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992686189 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298824368 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.290545709 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.745316536 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.292272882 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.290405759 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.291832009 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.287513125 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598836253 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.570371335 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.46073687 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.290962413 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.308386556 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.988843577 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.334672832 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.43061697 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.311663647 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.340100249 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.487687302 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809557158 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.290542161 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.856035293 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.292657706 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.49996657 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.290303897 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609847555 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.780781541 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.290660918 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.291981148 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.997798909 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.968871028 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.039758392 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.292952511 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.6242805 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.305281938 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.748571005 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.289285803 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.299019867 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.783283201 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.291773795 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.299338884 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.291457885 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.291296565 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.454451782 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46688496 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.056001325 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298713733 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.753916149 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.302258922 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295627533 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.296098698 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.293245845 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.643395977 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.308714761 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.298243308 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.324248939 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.291424226 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.295576277 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.76222485 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.259647845 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.295490988 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.445224918 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.925017621 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.291075603 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.294303019 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.033199581 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.565006333 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79901655 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.292886636 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.600136755 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.296359342 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.333590813 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.054680853 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.356307323 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.802325442 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292865324 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.296584013 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.893817308 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.295017528 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.648822547 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.295148272 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.292969798 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.84794559 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.293942704 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.298207759 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.676751933 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.291935614 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.557105115 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.294111606 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.342709908 seconds)
  done (took 1102.947085076 seconds)
done (took 1372.459831851 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.293161109 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.294855189 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.281153303 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.296062964 seconds)
  done (took 26.399852682 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.300927097 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.299465059 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.300604383 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.29909947 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.300409119 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.299390476 seconds)
  done (took 9.037055826 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.445735612 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.299238614 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.298316764 seconds)
  done (took 19.277025991 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.521361933 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.556869698 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.66681212 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.451640627 seconds)
  done (took 10.43309354 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.30037017 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.301715028 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.302708561 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.301353924 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.302163617 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.303680609 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.301592459 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.301205805 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.302987253 seconds)
  done (took 12.954878062 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.250850338 seconds)
done (took 84.588183858 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.422734288 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.033329167 seconds)
    (3/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.291638571 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.328550375 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.29951009 seconds)
    (6/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.913153953 seconds)
    (7/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.321511836 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.692490562 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.232941314 seconds)
    (10/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.621245731 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.555955568 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.293461046 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.943446561 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.405044732 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.334787475 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.321712377 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.42208064 seconds)
    (18/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.78834706 seconds)
    (19/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.360494463 seconds)
    (20/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.308457663 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.77762214 seconds)
    (22/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.283278437 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.963593688 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.657289738 seconds)
    (25/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.228358906 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.226749612 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.661567848 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.830169822 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.317162548 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.136878145 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.297701135 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.698486704 seconds)
    (33/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.613123084 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.298489915 seconds)
    (35/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.332800952 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.399230973 seconds)
    (37/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.689777076 seconds)
    (38/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.717883379 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.298399252 seconds)
    (40/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.448614634 seconds)
    (41/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.421984909 seconds)
    (42/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.323585924 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.958007925 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.879806984 seconds)
    (45/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.399833841 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.291961226 seconds)
    (47/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.312338526 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.958603457 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.321863241 seconds)
    (50/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.301863841 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.409138908 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.664473623 seconds)
    (53/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.281812281 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.592564416 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.312750909 seconds)
    (56/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.324672362 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.318900275 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.291891904 seconds)
    (59/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.298480622 seconds)
    (60/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.429910735 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.356070138 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.914804853 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.400453864 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.299359351 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.0877353 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.385671717 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.87859006 seconds)
    (68/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.444757079 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.32367561 seconds)
    (70/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.436467181 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.28181865 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.366142034 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.531318505 seconds)
    (74/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.829639444 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.365867968 seconds)
    (76/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.299648776 seconds)
    (77/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.681478844 seconds)
    (78/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.386289178 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.514987511 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.255159712 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.290624562 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.673620193 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.422356059 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.711100656 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.670599926 seconds)
    (86/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.64874211 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.366515187 seconds)
    (88/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.495558152 seconds)
    (89/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.099406574 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.762202278 seconds)
    (91/309) benchmarking ("sort", BigInt, false)...
    done (took 6.302616954 seconds)
    (92/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.347329969 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.376338725 seconds)
    (94/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.843002037 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.408842267 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.717214621 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.719076904 seconds)
    (98/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.368343197 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.652281974 seconds)
    (100/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.328496309 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.327271355 seconds)
    (102/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.312584116 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.514745853 seconds)
    (104/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.776158513 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.610893219 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.306130065 seconds)
    (107/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.409349614 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.11168128 seconds)
    (109/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.62770206 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.349563237 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.171101602 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.564790029 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.348121167 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.175280414 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.39279538 seconds)
    (116/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.35386447 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 1.831689677 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.327465654 seconds)
    (119/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.492750431 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.584537535 seconds)
    (121/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.320250615 seconds)
    (122/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.896737625 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.097918855 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.585004371 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.656548779 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.49768876 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.194514462 seconds)
    (128/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.323302843 seconds)
    (129/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.964240578 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.730080123 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.323332055 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.752514644 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.092311505 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.87578528 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.406727305 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.291273168 seconds)
    (137/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.921916612 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.086197312 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.101514674 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.3064282 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.330060693 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.258227446 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.311570243 seconds)
    (144/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.160536717 seconds)
    (145/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.317406862 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.793357981 seconds)
    (147/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.331285321 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.327304997 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.288520618 seconds)
    (150/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.8958781 seconds)
    (151/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.335004129 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.415844217 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.32406721 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.624484039 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.182244325 seconds)
    (156/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.394265426 seconds)
    (157/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.614895423 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.251838569 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.711178127 seconds)
    (160/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.620223639 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.503977161 seconds)
    (162/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.410857175 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.370455849 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.559627885 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.503925183 seconds)
    (166/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.688147825 seconds)
    (167/309) benchmarking ("sort", Float64, false)...
    done (took 5.645812568 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.55189072 seconds)
    (169/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.64609847 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.353499731 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.079036596 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.271426502 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.719438402 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.84801698 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.325679953 seconds)
    (176/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.166200618 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.331022704 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.20494486 seconds)
    (179/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.346565924 seconds)
    (180/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.870310447 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.189302535 seconds)
    (182/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.305998194 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.974644501 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.305305664 seconds)
    (185/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.321152756 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.893725595 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.146016274 seconds)
    (188/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.396216134 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.30772439 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.364135082 seconds)
    (191/309) benchmarking ("sort", Int8, false)...
    done (took 4.36207343 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.163150825 seconds)
    (193/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.364451332 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.363490046 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.293386095 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.896529788 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.383735055 seconds)
    (198/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.367888712 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.105774552 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.860166807 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.520447825 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.38716471 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.039357236 seconds)
    (204/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.429384722 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.304868935 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.044627608 seconds)
    (207/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.391143636 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.15907603 seconds)
    (209/309) benchmarking ("sort", Float32, false)...
    done (took 5.350139693 seconds)
    (210/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.943845457 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.330808337 seconds)
    (212/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.949681238 seconds)
    (213/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.599381541 seconds)
    (214/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.520245378 seconds)
    (215/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.292035329 seconds)
    (216/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.651503635 seconds)
    (217/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.726417849 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.260294499 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.769312573 seconds)
    (220/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.171734759 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.852451352 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.619504259 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.328290811 seconds)
    (224/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.554274389 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.471311369 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.321718923 seconds)
    (227/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.327966304 seconds)
    (228/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.4780038 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.363446752 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.721947731 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.310141072 seconds)
    (232/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.31965056 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.306886283 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.962774432 seconds)
    (235/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.370802317 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.307157925 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.311715567 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.3218344 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.318859336 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.738000899 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.333335268 seconds)
    (242/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.388937911 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.85148444 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.381615928 seconds)
    (245/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.387066316 seconds)
    (246/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.795766861 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.371837502 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.52071783 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.433158037 seconds)
    (250/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.693095719 seconds)
    (251/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.472889348 seconds)
    (252/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.681330712 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.335941645 seconds)
    (254/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.498240122 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.171045104 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.326224759 seconds)
    (257/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.801528877 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.903096302 seconds)
    (259/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.282682368 seconds)
    (260/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.947808326 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.698524701 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.523668515 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.324175895 seconds)
    (264/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.972940522 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.319109904 seconds)
    (266/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.102458659 seconds)
    (267/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.293839522 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.329200214 seconds)
    (269/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.699574753 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.753740485 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.190428103 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.783557351 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.361020115 seconds)
    (274/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.940352415 seconds)
    (275/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.715843134 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.731527444 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.408807381 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.406725343 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.391784648 seconds)
    (280/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.327529576 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.425929592 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.913466069 seconds)
    (283/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.678823452 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.376694889 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.295936389 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.977642565 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.478208792 seconds)
    (288/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.045881007 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.326857755 seconds)
    (290/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.313532047 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.354609132 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.81669235 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.768351323 seconds)
    (294/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.670408401 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.313570458 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.484109495 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.299849789 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.33205068 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.425776553 seconds)
    (300/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.307352442 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.399817993 seconds)
    (302/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.323405904 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.336647337 seconds)
    (304/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.297893965 seconds)
    (305/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.348871965 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.413686449 seconds)
    (307/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.312696847 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.598471357 seconds)
    (309/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.414776354 seconds)
  done (took 921.684217186 seconds)
done (took 922.922464501 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.345223381 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338429706 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.322753323 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.344159306 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.43436341 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.350526854 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.332589053 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.325300911 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.369763511 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.373704495 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.321493382 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.349641376 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.324756932 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.321600295 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.322555535 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.336772074 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.336084214 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.321527294 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.338044318 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.334019907 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.339167204 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.321344796 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.371404111 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.349807517 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.32738048 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.327486291 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.326495047 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.341899614 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.434083326 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.32713156 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.328432431 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.334841877 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.33939259 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.321613854 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.320058388 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.343716677 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.335113147 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.332546289 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.327370189 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.35702138 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.743715473 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.323481653 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.323885363 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.324073786 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.325871986 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.32940656 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.326165577 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.331307294 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.337373834 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.337824921 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.734478806 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.340480048 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.328847403 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.325882172 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.337199176 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.326467712 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.329675077 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343915544 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.345763979 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342948085 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.334213688 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.332236484 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.330931157 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.343230932 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.333505047 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.776201272 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.321944076 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.329357374 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.747014822 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.330833223 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.774746896 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.335137209 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.327949422 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.340655418 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.35775558 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.342599967 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.321560316 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.325215588 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.333199942 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.325857388 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.335831265 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338753099 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.33267669 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.327960262 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.340661014 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.354137207 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.338752982 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.328447927 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.335162422 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.347199031 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.334866963 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.339243053 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.331468032 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.323734678 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.339391436 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.334008532 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.333055684 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.331878183 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.333246075 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.340906842 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.750663342 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343981687 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.324314582 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.32470827 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.326779559 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.340461209 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.749476563 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.327182273 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.349953333 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.375545496 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.330256011 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.337727212 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.331407783 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343053657 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.338009867 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.333032405 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.324692941 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.341265997 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.750207707 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.345372127 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.332591991 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.328887582 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343561717 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.330440747 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.326419723 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.352009402 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.332092353 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344468055 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.451556605 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.341808996 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.359902642 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.326994325 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.332933733 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.357008781 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.345401304 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.360412779 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.333287584 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342873993 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.34543346 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.326427555 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.340460596 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.341052261 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.331695607 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.336762652 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.326446119 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.359329998 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344707965 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344296029 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.35192791 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.450822614 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.328089104 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.340897045 seconds)
done (took 224.152612151 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.390422436 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.328531598 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.419417676 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.326528301 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.427218075 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.429066638 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.324116628 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.324176587 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.324851662 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.70568221 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.324222311 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.323850073 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.318672352 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.324903658 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.410116223 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.328216063 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.324739586 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.669822201 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.32826906 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.398587124 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.321020504 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.325863978 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.328776417 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.708018157 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.329344956 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.327433285 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.400538715 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.327792113 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.674711105 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.32555609 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.321606205 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.673322929 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.417229592 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.345439664 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.339920151 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.33804636 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.431187354 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.348804633 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.41338504 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.412322233 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.425382356 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.369051611 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.323285513 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.32195633 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.329578191 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.328463734 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.326687271 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.354573737 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.326996906 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.326662816 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.67242976 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.339765433 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.32789854 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.327414156 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.327529388 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.358805086 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.328575592 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.330223345 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.419103005 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.330387162 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.392885192 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.710844195 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.707493487 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.33033691 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.331676117 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.326941017 seconds)
  done (took 148.119607423 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.399214226 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.405463626 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.443914225 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.331877727 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.38301055 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.449369195 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.332362693 seconds)
  done (took 11.008229718 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.337288663 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.330612187 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.38156544 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.381804304 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.331170098 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.479659177 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.331842547 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.344515006 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.328565795 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.385514294 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.334139114 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.33305743 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.338360377 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.330427738 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.38019036 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.343029275 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.448191508 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.331696248 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.33189659 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.49034298 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.32902897 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.338784388 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.395065506 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.343486115 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.332574143 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.338593104 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.904068554 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.331949746 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.330678199 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.334367294 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331739123 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.372566909 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.334113256 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.332348243 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331814863 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451170742 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.333559825 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331090399 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.333150266 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.326040741 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.332099378 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.333062144 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.332645515 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.331874678 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.332463657 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.357824786 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.332563235 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.333737375 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.333047494 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.336185833 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.386136672 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.335377942 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.332004586 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.332154067 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.390981953 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341964811 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.33478591 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.331655279 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.335963849 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.333582352 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.491592291 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383051346 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.335716342 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.386558147 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.338104474 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.338372712 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.335223689 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.335815361 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.390419989 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.334963821 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.38390015 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.332064797 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.490909267 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.359527637 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.335905755 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.33814354 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.338091239 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.334772269 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.334756889 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.343538181 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.332281748 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.337043723 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.342402631 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333137087 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.332395651 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.43962412 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.444396576 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.332743972 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.349086483 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.342775867 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.33332898 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.389905771 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.334747129 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.333076016 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389377741 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.451376168 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.403514332 seconds)
  done (took 153.309733579 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.341852233 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.345781664 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.33804848 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.354442303 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.33687672 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.33586171 seconds)
  done (took 9.320538473 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.33933415 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.337460584 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.336122807 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.33643609 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.336208395 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.336380211 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.339024523 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.340560167 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.34209017 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.33916245 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.339629733 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.33907015 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.33925602 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.338750154 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.338728301 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.338082721 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.339536571 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.336978504 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.339866948 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.340933934 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.435365066 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.339362736 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.33887887 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.339998611 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.343448429 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.338203128 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.347060044 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.337933644 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.33836756 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.347404643 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.340860452 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.339492842 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.340633089 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.345621016 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.342990877 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.340736801 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34123268 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.342033851 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.337982513 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.341367353 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.342399876 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342175912 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.343177994 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.342294488 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.343588817 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.346838032 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.347328375 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.349470893 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.341931505 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.341302115 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.340553271 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.339344112 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.339748158 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.340519815 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.346378297 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342726592 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.344477175 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.33996937 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.340267279 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.342016114 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.34183828 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.340992766 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.342271818 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.343347124 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.347711563 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.341434298 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.343322214 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.343686266 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342682678 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.343510351 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.344833197 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.340485535 seconds)
  done (took 98.936624731 seconds)
done (took 421.954443703 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.739772187 seconds)
  done (took 8.013046299 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.432448691 seconds)
  done (took 7.707190364 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.333290691 seconds)
  done (took 21.614220053 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.423189911 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.441795313 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.352216851 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.335271018 seconds)
  done (took 26.825977131 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.473028632 seconds)
  done (took 7.74614561 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.342938159 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.333273581 seconds)
  done (took 13.953694262 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.38559424 seconds)
  done (took 7.66110048 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.765576899 seconds)
  done (took 8.045364243 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.358884805 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.333762203 seconds)
  done (took 14.238114754 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.31975751 seconds)
  done (took 7.593376748 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.337169498 seconds)
  done (took 8.613351706 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.349595684 seconds)
  done (took 7.624933523 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.348954506 seconds)
  done (took 7.626234018 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.266848777 seconds)
  done (took 9.541512737 seconds)
done (took 158.077699963 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.334882284 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.338520592 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.34115389 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.336725625 seconds)
  done (took 26.6250437 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.376287599 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.376165019 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.376286281 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.386955774 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.378201558 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.37534658 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.367318018 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.368286534 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.386849641 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.378060388 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.378403911 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.37804119 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.375355782 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.36916156 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.379003838 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.377997163 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.386978915 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.383046268 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.373426326 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.383350021 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.345011884 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.390544576 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.38223893 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.345337596 seconds)
  done (took 34.2976919 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.545812597 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.416947617 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.497818744 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.395536774 seconds)
  done (took 7.133918836 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.39604014 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.398987094 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.413526017 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.448244336 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.473643214 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.405623379 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.371179041 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.365392849 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.351304575 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.397755175 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.472600153 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.413880954 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.481154839 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.343827599 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.525763916 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.34439287 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.345083746 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.398791735 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.451330223 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.465983051 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.347752613 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.39735634 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.412222425 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.414546063 seconds)
  done (took 35.114215546 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.344363807 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.351856451 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.349427755 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.345280112 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.345860391 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.345389742 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.351064339 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.344645225 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.364982724 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.344801864 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.343515506 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.343495486 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.343464627 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.345123506 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.343829537 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.357735418 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.35786728 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.344393531 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.347299907 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.351607437 seconds)
  done (took 28.245068275 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.338853423 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.448672105 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.690691576 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.59531954 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.338705975 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.341533673 seconds)
  done (took 28.032055875 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.417125522 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.54638276 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.345850414 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.714159238 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.791648399 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.346939069 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.347399007 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.583080402 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.900996549 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.913689329 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.407030226 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.416639133 seconds)
  done (took 20.012339158 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.355497045 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.342810655 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.342539099 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.360171071 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.40157473 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.350941012 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.354759362 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.341567696 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.40534736 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.407637725 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.351198693 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.40418425 seconds)
  done (took 37.701401052 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4279061 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39261031 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.386886338 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.176246352 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.72855283 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555530495 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.226450014 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.784302489 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.348651992 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614779962 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3443735 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433566509 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599620064 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348317176 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.344433498 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.40544585 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571541924 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867244059 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346870455 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.392918799 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372320141 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343062848 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.510019177 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.373747325 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554590908 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.480450702 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.60309066 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346327797 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634652194 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358410954 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354528652 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346048944 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617231761 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034931347 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438602749 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353538794 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.209825204 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.062306726 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.346983748 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.39758764 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35892192 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348917138 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355146648 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346871759 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.277571532 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344292305 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794364389 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.352273755 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.055210381 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.344486805 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355653948 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440530256 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.349688885 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.162997671 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427398639 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346692656 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.343155788 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351593856 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916535248 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.938210358 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350374273 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.282642028 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.51334575 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.406973188 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997895066 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.450550266 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.349323811 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349515111 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280009914 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.40796311 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366411771 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485227362 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.366417793 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007579947 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096863487 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.360721789 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.403371657 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937454183 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350888489 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.283048018 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578990449 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34932419 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286848745 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.297851245 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.280497502 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102168836 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357162957 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.821870136 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356176321 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.783725034 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.360330849 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361857904 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368323368 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.572812442 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.231732381 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347389202 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.353529965 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484506115 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368253586 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.790155892 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285563797 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.350028064 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604715947 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.559260358 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358791092 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.41204501 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557137492 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366257268 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.36530022 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.362175365 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.359503041 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.943886731 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360827798 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.959901556 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36626173 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.346988197 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18361794 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35770525 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.450783844 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.347818419 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603555296 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.183918162 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351347817 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431374822 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356664839 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.348249813 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.53368241 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.869671727 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348681608 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.350099144 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358154 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.362427223 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.350009828 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310722005 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.348167622 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360230872 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.352231916 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.574258367 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357845068 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627784998 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286509137 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489677254 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.451543806 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.574436029 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.574071576 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.349397277 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610092508 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350006512 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364685414 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362494099 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367821112 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446577455 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371499895 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.363751313 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.60974221 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.356874165 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.356829863 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.542062938 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.823495317 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349885915 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.355013942 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.250928674 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948329886 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323402869 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35545084 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.243799378 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.363761628 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41394974 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35582761 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.362729269 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.246211965 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321171442 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.357743788 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.346365182 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575467005 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362626661 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.404268661 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431914338 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.553284768 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954419151 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367005277 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.28504495 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.062464284 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.043446317 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350504514 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.288292261 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35214834 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361749191 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362458128 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.672166141 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.954140507 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357708267 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.405885581 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.360382236 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362224372 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.356609376 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350848029 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.227991159 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.965571302 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370860758 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.366375321 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496246873 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.36736633 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.287213739 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.356707648 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357971609 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352236018 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.351686314 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384687042 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.438315844 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845943734 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613090597 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.181143235 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369529947 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.534446744 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.388438526 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.35821487 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362908046 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361476076 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.36861979 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378118297 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.363718312 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.425819096 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.037702828 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923997303 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129700416 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907573682 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368357125 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.368697145 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357158853 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.81013633 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29034954 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.918743768 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552199743 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.799566474 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311327088 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560957543 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.579446574 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153384902 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366456568 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583710834 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359907112 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.371095 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368896392 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564965573 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389117741 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.356135338 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.284078642 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.640471494 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590842153 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358025731 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437718325 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796271092 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357439022 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359348941 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.356253521 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.783269336 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536828519 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.070546663 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.534574444 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356699162 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380512035 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847839213 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.364455014 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.587015982 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013423742 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372304293 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.562558146 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300750385 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.368221822 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.366043827 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.356062143 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.710812674 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.363864016 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.614325521 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367616399 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291168059 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366682204 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909156955 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.216254564 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.36335718 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355783955 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154316149 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368788551 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650700506 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.370618462 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.198434576 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364165847 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.292769316 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293181972 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.051088919 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.362277019 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326707645 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884364929 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.470009528 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.429422438 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392895002 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209611453 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.61464175 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.371420109 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.970217224 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587283149 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.29034137 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382714682 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.457933414 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36924377 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.346021731 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35804888 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594306856 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251710814 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.584981889 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.424533564 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.267224764 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.359206867 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574867763 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358696594 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368915658 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615630018 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.072415718 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.378457426 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130935365 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387190843 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368087837 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.282774764 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.526910987 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367250908 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437566459 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369748713 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.369759449 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.369960532 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539470465 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373518135 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362561365 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.37547534 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453834685 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.010533473 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.236720788 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.366676912 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984764237 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147557996 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975252448 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376377309 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36264882 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360780672 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293238707 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510620512 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.591614187 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634013758 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48003496 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.578639121 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384701901 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375478414 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377954913 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575553638 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637231842 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.261760351 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374852013 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.376601799 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.36162737 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373991259 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.575183868 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894753945 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960089758 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485559765 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.368969054 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.812161165 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641194184 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365852772 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364357812 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956855829 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.364204244 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.799481927 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.369138539 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362160536 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513512415 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373583897 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065335427 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.376007571 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.522974021 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.137891312 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.550318474 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622617051 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.894530663 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.373917906 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973796984 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099147218 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630530592 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433094299 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37459599 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.473460369 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510921621 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.366981412 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366979365 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36646222 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212683588 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.073750047 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.373646118 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978688174 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630969182 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.361057587 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.361730232 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389449603 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.375395897 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.589540262 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136718175 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594174893 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375647519 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370800418 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.182399258 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976757891 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380434815 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299571466 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.367319608 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617521513 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602200254 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387069496 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.816378573 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.076046528 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96561088 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.343930912 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387045784 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365136295 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104758914 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978956206 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.246187173 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89782939 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927104676 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372170064 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643439933 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.369937754 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.372844034 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643332385 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.367383753 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.371820266 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378741445 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.974051474 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173834714 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.36723932 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.474692371 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.304040791 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711010486 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.058687884 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305378715 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373338583 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.56263757 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372800754 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486322601 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37918157 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.370262935 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371612159 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.123149188 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651245406 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.372082184 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.370456756 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.355584186 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393349489 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374707654 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604726709 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366612472 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.042823734 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.719429307 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623606851 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.377528159 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.353574824 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.371522777 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368654657 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.366356722 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.574476319 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.689156633 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964185112 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.370674402 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.379359387 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370129998 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.584837104 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579683895 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372131815 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383267845 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367676193 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38540346 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.280723376 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.875637015 seconds)
  done (took 1610.043682845 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.41398269 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.377522955 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.398431197 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.408635162 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.40180611 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.469037664 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.405283508 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.445366514 seconds)
  done (took 52.627419398 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.372320072 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.597135897 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.40059962 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.369459517 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.380839332 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.370635565 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.826069044 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.37957379 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.378348273 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.378845021 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.370949988 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.375079658 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.013996384 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.379254193 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.369353551 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.367105045 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.37993555 seconds)
  done (took 66.019275398 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.370644303 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.53830508 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.477206496 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.368890614 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.666637527 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.385954664 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.457312389 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.434297244 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.379781561 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.461670014 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.040497061 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.398798364 seconds)
  done (took 80.28855176 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.375597653 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.377114761 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.375847219 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.375341517 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.376954897 seconds)
  done (took 8.188491339 seconds)
done (took 2035.60891802 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.626207701 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.097623981 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.038717202 seconds)
  done (took 5.443260719 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.51311506 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.565826406 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.682867737 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.688192847 seconds)
  done (took 7.753200633 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.643470377 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.74418343 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.54641789 seconds)
  done (took 6.236374759 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.79689658 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.373527417 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.440915745 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.36203541 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.366482429 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.366934209 seconds)
  done (took 20.397201732 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.367771265 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.370190529 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.367787278 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.370273339 seconds)
  done (took 6.779878882 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.348173983 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.124871108 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.349871818 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.367380942 seconds)
  done (took 18.490712819 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.114096005 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.128036199 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.111577946 seconds)
  done (took 7.654767697 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.363963399 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.213374866 seconds)
  done (took 9.879384842 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.689739269 seconds)
  done (took 2.991545247 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.49901699 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.631537532 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.428364979 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.369966572 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.450293741 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.233513262 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.036287247 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.604016136 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.354000414 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.560009176 seconds)
  done (took 28.470846524 seconds)
done (took 127.641456083 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.182897376 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.729600989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.564058649 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.151320262 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.585879075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.564967136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.5892245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.104230857 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.78374683 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.635643455 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.174781217 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.584458572 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.530264833 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.729564661 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.529164843 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.60221535 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.593016124 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.170561426 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.77822234 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.969568131 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.593009929 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.713201238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.938170097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.834053904 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.592604133 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.512840906 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.275777368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.602509826 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.921275551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.303828294 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.513138024 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.11992206 seconds)
  done (took 192.776130859 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.360193084 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.359590307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.360947125 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.365157471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.371024941 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.362210641 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.364098702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.374965579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.361197226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.362124592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.361912941 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.362811012 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.381462443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.361107834 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.361009176 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.360175561 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.361056006 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.361160167 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.368904029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.364134211 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.3637519 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.361542072 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.360915165 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.366421643 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.37128594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.362412555 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.362991253 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.370549437 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.362338316 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.361089401 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.365965746 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.36522614 seconds)
  done (took 204.959702697 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.37324225 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.362918953 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.377511602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.362059747 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.361949487 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.362034171 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.363836638 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.363922764 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.385368728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.36304777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.373427459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.374888742 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.364657278 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.36369365 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.379866216 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.364698336 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.363725147 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.370381142 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.376274164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.363304545 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.364656646 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.37164605 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.370634119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.362847449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.377481561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.364290364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.365902783 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.363219914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.388457009 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.363246837 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.368268476 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.365336758 seconds)
  done (took 205.099654689 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.565386248 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.371913779 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.373284425 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.322906375 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.372764051 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.37179097 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.364512391 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.568525176 seconds)
  done (took 14.613841153 seconds)
done (took 618.750621907 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.66173217 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.376175406 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.568500781 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.395000963 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.139242051 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.396435479 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.39256092 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.559657801 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.29781875 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.563927715 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.596435089 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.388751084 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.752540199 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.393244665 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.640940401 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.4959194 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.227921024 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.345319714 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.707121485 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.899030946 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.639760255 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.845866807 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.563637246 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.295520519 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.743255754 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.847517365 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.053336268 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.220310758 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.391581243 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.708679867 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.007515674 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.314294556 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.449629939 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.431072439 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.48718866 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.46944726 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.307412275 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.432734521 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.573371721 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.609640814 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.923140963 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.115962188 seconds)
  done (took 92.535118916 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.362986454 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.362110917 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.361637533 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.3625682 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.362166907 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.361129602 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.364205923 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.360035163 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.361443863 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.360398478 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.360134834 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.36342285 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.360721179 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.363283819 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.361153124 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.360635449 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.362785457 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.363933287 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.361426844 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.361239929 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.362230361 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.361268109 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.362259991 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.362066312 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.363020495 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.362178559 seconds)
  done (took 36.718702707 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.37631252 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.609875568 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.794106822 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.385374677 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.375752367 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.380438957 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.453372663 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.379141346 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.379520276 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.382218936 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.530765353 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.38353696 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.416886837 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.799600338 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.380961586 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.376841185 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.377353543 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.37746045 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.618249967 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.389735407 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.456303809 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.380545866 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.453526983 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.390254744 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.382229232 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.378694578 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.381660181 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.867664064 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.38442946 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.531445073 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.141257292 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.453223004 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.825211176 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.804130843 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.138351671 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.382583676 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.378522926 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.535121818 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.382548786 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.379186213 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.454117372 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.382079738 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.799807476 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.002174025 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.398251928 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.378144248 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.892255916 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.539040285 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.62139624 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.390570761 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.822041839 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.385488076 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.380662791 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.380913952 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.619150763 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.387921604 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.379383026 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.908808667 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.387655899 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.454268162 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.382238503 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.380513577 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.625256877 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.382879967 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.613402633 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.386245236 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.389776473 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.381737899 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.803420084 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.38646164 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.01869636 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.399775225 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.380340522 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.532218508 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.61296988 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.926294324 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.388110112 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.633978595 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.845544427 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.457262518 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.387596174 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.860446275 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.461092378 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.387999136 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.385170184 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.383534296 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.381334289 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.423741128 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.4546144 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.951297626 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.014388487 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.924988442 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.458943112 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.394609038 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.383815713 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.910466197 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.398644594 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.381946362 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.799060299 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.026093616 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.398916423 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.390233528 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.003835186 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.403862994 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.45851553 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.390036679 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.809843471 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.385727161 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.425490867 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.382667149 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.389802447 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.386719794 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.458549596 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.389054212 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.383288375 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.993917181 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.560235311 seconds)
  done (took 180.779411807 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.375963866 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.375978804 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.390379985 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.376827832 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.376403925 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.382559244 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.375698919 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.377111723 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.381518327 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.378217457 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.377394001 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.377683721 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.377214468 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.379642182 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.402904931 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.384378287 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.989544109 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.37636394 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.387631438 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.376215651 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.168916751 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.382092943 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.376657614 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.396090002 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.378815081 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.379747674 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.383441096 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.397979019 seconds)
  done (took 153.399344194 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.384305557 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.948311834 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.389289936 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.513201216 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.407565401 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.381366594 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.511102548 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.442581739 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.386626347 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.381979914 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.382412794 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.686586245 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.38724575 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.894536057 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.572606038 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.514980322 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.898620966 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.389190555 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.382432963 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.382618546 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.514355593 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.396314158 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.687604499 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.950364773 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.388518933 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.947607255 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.377031856 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.385121265 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.385100628 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.94965302 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.387481864 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.684648424 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.463762081 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.446151347 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.951681273 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.900036417 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.887473353 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.528123891 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.388711166 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.382353784 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.384118078 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.372987872 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.951625767 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.389063076 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.38840191 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.944005219 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.404483476 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.386698258 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.395333112 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.386166907 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.448632304 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.450908172 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.701185689 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.968723205 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.464630543 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.41090084 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.514786948 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.757856402 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.388891809 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.885394763 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.37545079 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.953560632 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.391273209 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.375022634 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.386423098 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.39054845 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.531535046 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.51669969 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.890008058 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.387388708 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.887353386 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.532643794 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.388794153 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.38635768 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.387428924 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.942164276 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.887771034 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.530741161 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.520375247 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.57692808 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.378730287 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.386699168 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.376683922 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.463013366 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.389305744 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.941703885 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.902460334 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.391540255 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.389573544 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.388341304 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.388265164 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.558318875 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.947214142 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.463861175 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.898412818 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.703002471 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.68599113 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.389815147 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.444070224 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.38861966 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.687739668 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.391039375 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.443676031 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.81831367 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.687652949 seconds)
  done (took 164.69750495 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.624385882 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.588803168 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.478733402 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.503377778 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.91281974 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.94890026 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.550835169 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.51358038 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.495166103 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.635291571 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.530631009 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.479469572 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.571549069 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.463795243 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.106002829 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.457688233 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.480243698 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.516171013 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.495716703 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.408582176 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.003953836 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.670426216 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.560743707 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.506204477 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.482576544 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.142969865 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.933038686 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.886995692 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.556452622 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.626402837 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.904358305 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.497348254 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.319645465 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.036122673 seconds)
  done (took 66.210450929 seconds)
done (took 695.64356874 seconds)
SAVING RESULT...
DONE!
