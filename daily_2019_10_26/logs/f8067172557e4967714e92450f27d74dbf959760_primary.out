cset: moving following pidspec: 8836
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.377150986 seconds)
loading group "string"... done (took 0.558601645 seconds)
loading group "linalg"... done (took 7.194371302 seconds)
loading group "parallel"... done (took 0.155727234 seconds)
loading group "find"... done (took 1.133662948 seconds)
loading group "tuple"... done (took 1.805915721 seconds)
loading group "dates"... done (took 1.283722552 seconds)
loading group "micro"... done (took 0.219071207 seconds)
loading group "io"... done (took 0.939183196 seconds)
loading group "scalar"... done (took 37.757929257 seconds)
loading group "sparse"... done (took 11.805506127 seconds)
loading group "broadcast"... done (took 0.938173672 seconds)
loading group "union"... done (took 12.599092786 seconds)
loading group "simd"... done (took 4.158658861 seconds)
loading group "random"... done (took 8.543762462 seconds)
loading group "problem"... done (took 1.879466912 seconds)
loading group "array"... done (took 19.743546639 seconds)
loading group "misc"... done (took 1.659907053 seconds)
loading group "sort"... done (took 3.179313353 seconds)
loading group "collection"... done (took 17.088586495 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.48732803 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125428678 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116306795 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120437705 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147503087 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11617939 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125218798 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084709138 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.834877746 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153321991 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119050628 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412731282 seconds)
done (took 5.167554141 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172121264 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082778352 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081157555 seconds)
  done (took 1.323110883 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066795184 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120724069 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066154943 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066612126 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066120697 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065770562 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065677485 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065793369 seconds)
  done (took 1.678067159 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073304273 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068718886 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068513644 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067472967 seconds)
  done (took 1.439584592 seconds)
done (took 5.849487473 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.767335262 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204906155 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182942648 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397387903 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132120111 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157042289 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644986611 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.309304277 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182872431 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081678409 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10448593 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316804512 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106649738 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635514668 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07683543 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090289511 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143795907 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.424978952 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067261144 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08301476 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089415239 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128557772 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085304995 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074266145 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14308291 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067544025 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133436279 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080084121 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066506501 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207020552 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172257946 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654406308 seconds)
  done (took 10.211136092 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096409846 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098953543 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070134962 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142965227 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099298662 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071275477 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073345429 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0685276 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089674687 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131044481 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09214651 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104076658 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067290355 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070841024 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08705347 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206805085 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079832273 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081206813 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071492846 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077436402 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122092489 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080415403 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08021936 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078660716 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129235751 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182538718 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099633466 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099123144 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069221931 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08254251 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116460409 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128835248 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067386277 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068251584 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126806825 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096220145 seconds)
  done (took 4.705997727 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.297590564 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140865549 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092593021 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136305852 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066406648 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109802684 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067045192 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082891132 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.205881523 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.296793611 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.584112705 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110670178 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103829137 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067369851 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068297248 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067064929 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.357642077 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.112267505 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106869663 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083327839 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072178992 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070485845 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110288087 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068662062 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065555211 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069903152 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.105398814 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.302540293 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127472478 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065608468 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069917743 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.933553899 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.128201831 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068701865 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102821815 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.171302778 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.221759348 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144606994 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068176625 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065588896 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154879857 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072881871 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067859941 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086191271 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10551283 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114027765 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065593991 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067142543 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161645537 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064225167 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079364675 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.984787976 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153006045 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077276091 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066380629 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.250585344 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087833309 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071362551 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066497975 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.188792199 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137489331 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069522066 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068525843 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070151559 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071414441 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.353238742 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06827595 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.916380857 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070532408 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078660083 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071602713 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070054543 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074610511 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077114979 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086980445 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066092562 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067898895 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077455202 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067846601 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06746959 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068384796 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065218234 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087708392 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356714554 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066078919 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069658802 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066041962 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087494864 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098504684 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065909306 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065607604 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.205062346 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068953339 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066818951 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106101605 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067716759 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087878409 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071706046 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115706325 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069335371 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.095292868 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072227963 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100190109 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072468638 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100919485 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084221173 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070824772 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.402169876 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064491618 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064658212 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068508836 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066369135 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069893128 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068054823 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082190877 seconds)
  done (took 21.290077467 seconds)
done (took 38.664863042 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.23701252 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079232278 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079340732 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079180053 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078115818 seconds)
  done (took 1.806588282 seconds)
done (took 3.044694713 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120475209 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100753937 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066316841 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097827973 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066055445 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102192377 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100566471 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080458011 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098822688 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064008373 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095320934 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064913358 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065955258 seconds)
  done (took 2.377783633 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082319557 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084949075 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071600649 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084654181 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064819663 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083971233 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082449986 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090443568 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082137116 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073912562 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065489174 seconds)
  done (took 2.096222641 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081432932 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085991184 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071552171 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083512032 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067380149 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083082196 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082363643 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087655407 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082749255 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075812151 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065365651 seconds)
  done (took 2.091261514 seconds)
done (took 7.788082774 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076953923 seconds)
  done (took 1.293967502 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591501888 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.051039542 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080962232 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111901946 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.186006479 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123191725 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283960123 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089380822 seconds)
  done (took 8.914937778 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.089810585 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071705389 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070412897 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083427331 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070764965 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073385415 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072556092 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073999043 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072581698 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071284179 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073949795 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072883427 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07019893 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071315129 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073098665 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070525106 seconds)
  done (took 2.466943862 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092299693 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092686635 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075420256 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.0769505 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074315254 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073758393 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076356439 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075012422 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07265683 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073834549 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076706609 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0755469 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073326433 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066619154 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075946607 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078002661 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073081791 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07607518 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076456117 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076813595 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076380183 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066134739 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073104668 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076098034 seconds)
  done (took 3.145708189 seconds)
done (took 17.045659931 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114186544 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071136315 seconds)
  done (took 1.408269063 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081893538 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08401253 seconds)
  done (took 1.39580287 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08321891 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065734212 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092215749 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079127579 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067863064 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068121388 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.092406856 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068251575 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068171096 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068169184 seconds)
  done (took 1.983774251 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068826352 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078881792 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07067712 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082479168 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076229617 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066077545 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075501688 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069724173 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080171809 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064456776 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073455417 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084345851 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073804789 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086438861 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075531084 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070601381 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073199893 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069129675 seconds)
  done (took 2.573605277 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066118835 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067044952 seconds)
  done (took 1.368600067 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067514457 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064063058 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066944567 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067738286 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065562778 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064529508 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065568438 seconds)
  done (took 1.693850333 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389515859 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114032997 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.307190588 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071960958 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08345857 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253082994 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066802686 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071613696 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071821507 seconds)
  done (took 2.707784841 seconds)
done (took 14.368650469 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078830285 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085212348 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095408949 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36476338 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093509266 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067689007 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114858946 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193277335 seconds)
done (took 2.340095519 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213737748 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.610771518 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.396524007 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203667861 seconds)
  done (took 2.448918252 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327037004 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088343296 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060423908 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068768939 seconds)
  done (took 1.794244615 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064836479 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068805852 seconds)
  done (took 1.380013628 seconds)
done (took 7.083519719 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066064561 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084662216 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062840756 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066658895 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067002668 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.064727791 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067279196 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.065148481 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065066416 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067854153 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070416801 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067609849 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066929188 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067226888 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064845423 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064701284 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066988889 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064905059 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065203936 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065239413 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064686955 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067451135 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06460796 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064599342 seconds)
  done (took 2.88288873 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082752332 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066728257 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071148314 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07059904 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069862015 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071767849 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074428384 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065737677 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070759642 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067528747 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069210217 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069855586 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068969277 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071839728 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069148559 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071503758 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072971327 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067903019 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069486547 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071947126 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072096977 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067750876 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071494812 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071947193 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071089314 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073390611 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069264062 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067992037 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072390549 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071224286 seconds)
  done (took 3.377242437 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069561879 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062668163 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063419326 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07129894 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064124782 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066182524 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065133818 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065425076 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065877791 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065301202 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066788361 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065199516 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064821081 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066047433 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065792167 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068469922 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080549456 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065359084 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065293131 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065580466 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068693135 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065261045 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065162227 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065023023 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065298206 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064489933 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065554579 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064649444 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065800966 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.177870219 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068324347 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068830548 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064831578 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071564717 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06711786 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063246118 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066996101 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062640817 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063840293 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062708366 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063291342 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065030242 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063691435 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070409423 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063719792 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064659532 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063232753 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06436388 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063641583 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066928371 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064358205 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064249727 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066190057 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065042815 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068039544 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064444748 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065335418 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064181779 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065735394 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064398877 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063796761 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064125901 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067193993 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065270328 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079127708 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071759423 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064415266 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066668633 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065706876 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067184184 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066430104 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077884757 seconds)
  done (took 6.138340693 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090292291 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087276943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065269091 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064808603 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061496344 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064525951 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06818224 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063524878 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065531106 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070961874 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065438973 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066044118 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065884118 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077720888 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065927379 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066728819 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071436602 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063454648 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065767876 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069050491 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06569791 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068958875 seconds)
  done (took 2.781528436 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152437303 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070356453 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10715636 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074641533 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067196977 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072336447 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069687318 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069422234 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069881276 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068106397 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067641687 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06950944 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067304555 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067423046 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067527526 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067597411 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069500307 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06815564 seconds)
  done (took 2.627325833 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076566551 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066043098 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085680559 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065660513 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067329909 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069474635 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072535116 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075642864 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069927106 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067468982 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075930761 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069532462 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069948434 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067213578 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069536585 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067344184 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069727255 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067154892 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075513902 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072173475 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071937233 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075449218 seconds)
  done (took 2.830521383 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079662203 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067280506 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082187815 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067968425 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062301292 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063962237 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071299622 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067326397 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072091983 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06962277 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067339598 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065912606 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070839693 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067541324 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07094027 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067356341 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069403206 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067171851 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06886577 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063561515 seconds)
  done (took 2.645328637 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086309065 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067441224 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067438339 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077914881 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068761802 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069325614 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076682618 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068495065 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06866138 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088890884 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069097241 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068742832 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076895097 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07381403 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068859434 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076448886 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076415096 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076379196 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068471815 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068367522 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088746973 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069033521 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076801724 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068642993 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068819754 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068608095 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068562076 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073742692 seconds)
  done (took 3.310618174 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065777029 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066389046 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063115563 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063351958 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063592654 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06276531 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064082938 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064814396 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067357396 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064760382 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067075298 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065593301 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066729546 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067138884 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067364459 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067453642 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067228824 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065005271 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064771235 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064902313 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066868937 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067073251 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066982006 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065205591 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06496147 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06713693 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064962718 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064745972 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06721514 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064686198 seconds)
  done (took 3.237189437 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075415935 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072468744 seconds)
  done (took 1.416882356 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062533125 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079688104 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063421197 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06961363 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071236164 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067830983 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075683396 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071736065 seconds)
  done (took 1.827209646 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080674412 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079245432 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069853962 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08204935 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078287714 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084122867 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13453198 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068999295 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074493609 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06599499 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08122468 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066836421 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073894683 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068158287 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073508036 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074319524 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065212633 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07372065 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068932693 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064923623 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067147799 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075912984 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070032461 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063301913 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068831147 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089480861 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076861921 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065840055 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068871662 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073015285 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071523949 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059921398 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066372996 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067586857 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063529576 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075559084 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082049798 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069977933 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076351107 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068509156 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078404681 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062858135 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072088431 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073889309 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077201923 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067949813 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068077976 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062570283 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065033916 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070196534 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063248684 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067535985 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06299955 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077517393 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071278226 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077947062 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06644076 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068870768 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070687491 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071408805 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074371222 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06961878 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070379469 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067905487 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078009612 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072188265 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077300663 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063245267 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062184073 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065886107 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078517657 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091104389 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073874272 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067111395 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067023427 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064062783 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070285018 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068953311 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073961396 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074246703 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067778827 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07369817 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07573081 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067898253 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070947442 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076173025 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06652004 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071193594 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065859091 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085009438 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067080559 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06617893 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066013437 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079094737 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071210778 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068004462 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066209155 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074907048 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062043046 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068560653 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068966579 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068426318 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078646124 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072670422 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073246445 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076603046 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075035993 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06733714 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070372092 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064022901 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068292347 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065922196 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073906949 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061431379 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069658599 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067820743 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067527917 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.204057756 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.068709438 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070429716 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077145046 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075193766 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067308653 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065365777 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07185626 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.069073526 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071768279 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077217734 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067800838 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063960632 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064007701 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072126898 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068518923 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072097633 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073766523 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072311328 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063196523 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06687998 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074129004 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077596879 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069267382 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069436601 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074465268 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070063432 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.0677952 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075611928 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070935713 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068259378 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074767833 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06792091 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062717929 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071765241 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071315946 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067352616 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072403553 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072560014 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070761382 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069496858 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066911183 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076032623 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069375775 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067093784 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068462256 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06657343 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07958166 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069941442 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063919277 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065021355 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078373589 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06566691 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067998511 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067762671 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070999926 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069085857 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066072694 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068149648 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070625377 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079717386 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072487444 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069518528 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074251412 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08012556 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068569752 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07090346 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067918917 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069875963 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069233983 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077674905 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073571511 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073150102 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070414165 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064592409 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073753594 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075628417 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067448269 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065894034 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067459002 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072376471 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073311968 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072503906 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068770284 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065667614 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068234454 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07110949 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070463099 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067373212 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066903725 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074895173 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066428417 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074879295 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068420773 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078033867 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071143191 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063240836 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071245903 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066014598 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073799188 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062864343 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065873508 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066981738 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06878597 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066458501 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069942443 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061692474 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074535321 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075191797 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067209895 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066375313 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066626269 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073594026 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068425799 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070654446 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069988961 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072769505 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076794203 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06594303 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070072456 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07714695 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066494783 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061197374 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072074145 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06492903 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065272872 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06563414 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064702614 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069680154 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075443939 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07371546 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061123322 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069240104 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065343596 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065774037 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061872606 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070706477 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069538494 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067801221 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073278227 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067283662 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067099505 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070447227 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065983652 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067546295 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067808102 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069537171 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067593443 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068446846 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065690084 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069584492 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065885315 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064152045 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068345 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066248186 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066459805 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071754127 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065959079 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066805944 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069041644 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067040379 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067114453 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067108459 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066308536 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069763562 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067407528 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066592817 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069192097 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061852818 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074128945 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066003315 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073925356 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067447491 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063616969 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073499431 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069128191 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071978171 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067351999 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067427585 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068470673 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066910735 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069724835 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074033681 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064973557 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077463029 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075301869 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067699138 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069729236 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067349565 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068674798 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065812506 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067833947 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066358376 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065139284 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063424236 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068059573 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066328476 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064846939 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065355837 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064435019 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064465479 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064757646 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058390572 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063317276 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063264671 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063868978 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072005579 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064200861 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.0636635 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063210234 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064126236 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062785869 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06167913 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070998637 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07206184 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065130742 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.070742795 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063290695 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065793877 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.074205913 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058635807 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06265216 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061893643 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062881989 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071405427 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063834977 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073427602 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064815011 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064523034 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062098535 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064499466 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063013528 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059354631 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061779946 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067915175 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063417801 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063527957 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064708443 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066766627 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065075911 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073265545 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063292849 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064677303 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064714525 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.300270711 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067384258 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069518917 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073970849 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071754777 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068821026 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068964642 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070050905 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.07290211 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072576232 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070507327 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072798528 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08011937 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070329939 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073706554 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073899604 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064607889 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073680972 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070211094 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069713961 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068968076 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074241763 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074232927 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070746925 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079528542 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069334143 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07079793 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069641236 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067664087 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069749053 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069376394 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06931307 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06846993 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071320439 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077473841 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067249456 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072654266 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069669045 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069803326 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076121234 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070092318 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072509168 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076399253 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069452105 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07124744 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078126314 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073930906 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072617581 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070479783 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070922627 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07523545 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068926301 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075349223 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070120897 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.07030936 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070587472 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067599934 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068939586 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069301177 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068179908 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07528719 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069995931 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068518629 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068864666 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067240274 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069565709 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072748018 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076662166 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070960092 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0723325 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063657635 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066175673 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06986386 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067460388 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070744329 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071655711 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074388284 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071194217 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069297517 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067826489 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077163172 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072972305 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070653629 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065536334 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070409242 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067579126 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069408967 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06783365 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067522719 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068110476 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07065542 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068805533 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065752789 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07406976 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069965575 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06784698 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068306882 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067894902 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067423397 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062424579 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067445739 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06879804 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072422638 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068975941 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066915806 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077180004 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064819872 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067057578 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070129693 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066142179 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071043399 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061489898 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067638352 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06732817 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067124497 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06148338 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066155666 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064610885 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068563889 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065854981 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061863109 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078472356 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077453884 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071328534 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067308126 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.208336669 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06422157 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064839973 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068161582 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070127837 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070374749 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079641766 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068113359 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067207035 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063540973 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068325444 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071531791 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071253857 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06601475 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063335794 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067453845 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071843645 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074480237 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066984203 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068322023 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07209638 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071087169 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066728135 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071880515 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065458774 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072291677 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081898441 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069310408 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069230915 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074959723 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076614759 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069253851 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064054301 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069925652 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072160383 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069527256 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070144663 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069806696 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08438497 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071229249 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067955188 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067556002 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07100714 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06787011 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077304137 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069892525 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069523749 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073374241 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070458932 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078623003 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071168225 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077461753 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07225893 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072032537 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068302595 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069556957 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066804744 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068796326 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069881939 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06956891 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074136282 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077795156 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068366263 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079640665 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078554688 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070680634 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065069328 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067673485 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066471206 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062053455 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067462781 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06479826 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064864237 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065197723 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06562002 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068020502 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072272454 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068037417 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06747014 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.0663316 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061001199 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068877072 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068779629 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067209576 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063521236 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066395412 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067134225 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070464457 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069889138 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064490239 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067801877 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068021343 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067246285 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06167024 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07264593 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065492391 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068193006 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065777551 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066667124 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067216713 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069462496 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070870777 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066991956 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068365882 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070090125 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068107047 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06392585 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064293507 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073539804 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065727691 seconds)
  done (took 43.297420995 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101228679 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064176417 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062368042 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062768948 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074745901 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064407132 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064474494 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065215775 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065140387 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067594735 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064078686 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06425517 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071296966 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078797993 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074456339 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067078205 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062502068 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063604237 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062283609 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063808538 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071891361 seconds)
  done (took 2.844788041 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074382939 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070752117 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073326671 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077700576 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067545777 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071661351 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073227021 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071296781 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077247073 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067892457 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076548533 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071572493 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067629744 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068297795 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067461366 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071594334 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076328972 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068562569 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070996633 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073258739 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071485916 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073075713 seconds)
  done (took 2.953561662 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067229984 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067253009 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069990853 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063362899 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068752483 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.07314457 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072126445 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066273596 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071831159 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066193347 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066186634 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065579603 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06861539 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061992441 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066711239 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064402019 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10858882 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069638485 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06596628 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067366299 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062054785 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06863028 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061970271 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06259592 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065224911 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070170008 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067156346 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065058045 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066297835 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065660114 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066065739 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064335629 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068120295 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066962996 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065614048 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065610979 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066157949 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066130546 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061920079 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064630055 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067011742 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06238353 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066434036 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067534814 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064451806 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064342259 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067752811 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065814578 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061658831 seconds)
  done (took 4.664349876 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081177858 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112140819 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06960187 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09136181 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082858932 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078414119 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071398719 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090111166 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064084776 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064485164 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081803731 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080161081 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066053057 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071279368 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07262784 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066205234 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067428804 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0654007 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069960523 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065610339 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070446083 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072468261 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080675405 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079113199 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070062429 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064994977 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065259804 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070681019 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078931902 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070560153 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070804154 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071593008 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080462862 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067965327 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065224591 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067531067 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081189941 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065664783 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067691926 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063103578 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067372072 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069825056 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072023914 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08175278 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065776737 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070497677 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06548337 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062882634 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079786008 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069721072 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075019588 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081749878 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071610675 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067695198 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071977883 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081399852 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065994228 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064612118 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069234036 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080315341 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065424567 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071568276 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08162292 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069438742 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074757677 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082044726 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073110931 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071323078 seconds)
  done (took 6.476163239 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07534953 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07202102 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08227692 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08164591 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072686106 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072424733 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072447539 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07239147 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071945687 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076997994 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073020172 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093287235 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06777706 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074885663 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07261841 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072563394 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072684049 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072551347 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072889268 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072589078 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072485587 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079890553 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072448529 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080105755 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098365576 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067863825 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072777046 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072604224 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080759615 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072313046 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079457847 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072607897 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072450056 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080584745 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079828212 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072086516 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065335152 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072049334 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072396225 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072101223 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067670077 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080159679 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072037013 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067621982 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072315531 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072023126 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080046967 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07949425 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07476696 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076966104 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072650799 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080409187 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073963442 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074389214 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082482081 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107716769 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082364525 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082146844 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074054724 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082217646 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081995204 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08815861 seconds)
  done (took 6.12758414 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08394555 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075527713 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076600595 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06264098 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06446215 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070975822 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065847788 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066305581 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076987166 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076798114 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079244033 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070916569 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072725342 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076663911 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06983046 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072867358 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070137165 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07029009 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074265829 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070013511 seconds)
  done (took 2.846508756 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074193272 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083155757 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067267513 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072579188 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069592908 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071950675 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068542584 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069543112 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067348909 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069314823 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076372362 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076462432 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067357854 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071774077 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075977229 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071778147 seconds)
  done (took 2.543913116 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075837409 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072256823 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080553084 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067479118 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064538586 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062863334 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065897847 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061753837 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062705874 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078196351 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066240715 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068192051 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066521098 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064625066 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063051012 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068724073 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062499394 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063971087 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065884776 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078476154 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076782018 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06452765 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066367635 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065883261 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065956229 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070977552 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065696176 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063624477 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062932623 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066013539 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066341382 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069106472 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063105335 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064140856 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065626447 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064806302 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067444249 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067855259 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07054023 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067915289 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065607577 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067241693 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065776009 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067975286 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062638957 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067369499 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.0634121 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069781772 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065784725 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068549633 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068034632 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069911206 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06804378 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074389654 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070266581 seconds)
  done (took 5.102417926 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078764878 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070308416 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062126139 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064784008 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069171521 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067949086 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069620859 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067690343 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067819017 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063858777 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067675145 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068920609 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067696439 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069746063 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067614762 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069529952 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061977234 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067839328 seconds)
  done (took 2.628486226 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071100196 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066103518 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07283591 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065731245 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066042707 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067787634 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062447476 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066047198 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065688359 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067654538 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067750463 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069565792 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065968976 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069587262 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065979955 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065647049 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068557898 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064700102 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066036907 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062477886 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068153258 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064522494 seconds)
  done (took 2.86734024 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093044517 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081636635 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140265663 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081394695 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085976891 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07208199 seconds)
  done (took 1.953466792 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090435269 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078677441 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066997872 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087873552 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073714191 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067826758 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067603088 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067546146 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075821546 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076099874 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067282516 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075972507 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076095504 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07579399 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073317179 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072951336 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067836372 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067796864 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066345807 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084200385 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067681986 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076220048 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067562541 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067454513 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06773928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075890034 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076693989 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077658133 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068098932 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07664604 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073341698 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067717723 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076255534 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076540508 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069670992 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076287006 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067947742 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084236927 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073491411 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075716209 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06933643 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073689772 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076255078 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072390638 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07615718 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067804833 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072500404 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069253328 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069258217 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087771339 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075333898 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076355813 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073552143 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077464286 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078256005 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088837196 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078833077 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078092619 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075800168 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081407447 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077181156 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074056779 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075738545 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077179498 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073762587 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07588919 seconds)
  done (took 6.317528391 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082279086 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086576924 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068815636 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076917499 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076593401 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067716 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067839694 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067697912 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068034282 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067608874 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107737479 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068417405 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076422083 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076246902 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067839046 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068171059 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06835616 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075888522 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067974094 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086713588 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06765875 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07549618 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075801724 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075623958 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076994145 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073910053 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068087452 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067940707 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068086665 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067859526 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072786351 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067939143 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07559707 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067591535 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075812445 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068396796 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067947276 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072625879 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067808062 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073182876 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075782329 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083978193 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067921537 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067700318 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076330993 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067492893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069126454 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068989421 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0693956 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069348838 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0782799 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077916459 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077598657 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07747008 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069579195 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069664131 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069895541 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069564603 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069940915 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075474196 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077506564 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069746255 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088475912 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069732212 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069758212 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077842205 seconds)
  done (took 6.24339613 seconds)
done (took 131.184811529 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182784863 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166035798 seconds)
  done (took 1.745200654 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068863442 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097765585 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079786555 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13193353 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06688279 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100509704 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099457413 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07852772 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066734736 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066387563 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066873273 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06874386 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131871693 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06651383 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066999656 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069423716 seconds)
  done (took 2.737583872 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097230061 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15963551 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10287715 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06744807 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100697765 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076115425 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067073594 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078075237 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073727004 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067590916 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075994573 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072550766 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065344004 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070918875 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072630193 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07557554 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067850106 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075794193 seconds)
  done (took 2.879499445 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10150939 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091928008 seconds)
  done (took 1.608185975 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160627457 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107254024 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.152083183 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347254991 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167490713 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231822628 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129282481 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130349217 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121942762 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12535017 seconds)
  done (took 3.083355955 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098285186 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153670986 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256829939 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117464993 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073222883 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095499522 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11673444 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078005014 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081199542 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080385968 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08062026 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076476836 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098921131 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074066612 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073433133 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076171462 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102058698 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072425683 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074055691 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077146115 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099273343 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066223177 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073649833 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072179157 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077513073 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077316612 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06560314 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065273941 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077292708 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075829602 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076711963 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094029979 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077131649 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106965324 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070407607 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107891191 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076477072 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073989312 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074666334 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074123171 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079068662 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078782519 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072209387 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075850522 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065457002 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076959839 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065495818 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066154313 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07857966 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067240138 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078369421 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077301809 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106960481 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066828573 seconds)
  done (took 6.032270842 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101354026 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104321725 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072024191 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1115716 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100160368 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072243543 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101539691 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093498092 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103303132 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070340435 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06844483 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070390568 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082674642 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083106216 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113572973 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104528309 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073855001 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07146769 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103922394 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102663305 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068749559 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095229952 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089459702 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101997297 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067257048 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070245535 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068170077 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070354525 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077320736 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078982252 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069826891 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081323635 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085074407 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078166516 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067473635 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068036468 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068439251 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080134397 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079339662 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079034891 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078145495 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067451953 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067843633 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069259365 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07077268 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069195607 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081493611 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083400761 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08126552 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071529933 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071979809 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069720648 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071454396 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082893873 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080251898 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084726922 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083221434 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070463878 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070378743 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074413572 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083773218 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081187634 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082073419 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071591333 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081414877 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070327758 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082825436 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085477737 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068777833 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070016972 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06856693 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069237584 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069349043 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077932656 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078310005 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071490572 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07179872 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06950376 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080435261 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078594216 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067900605 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077236455 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067443618 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068281442 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070185962 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07178787 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080549946 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082775069 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072412393 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070838845 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07192571 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070990386 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069266647 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080393904 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08270161 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081365751 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081510107 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071329012 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081733404 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082171668 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072455488 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082457788 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071107949 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.203442682 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072417802 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080944355 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079506916 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081294456 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070033188 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068791008 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079089744 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081636955 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069597409 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080372302 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081174307 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080249688 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068985185 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082323354 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069579413 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080167137 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070429728 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080155083 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069486933 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081461227 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069322243 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06806875 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069390401 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080371899 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070432396 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068190449 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070393786 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069925703 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08091554 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082703027 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071363083 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081668744 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079240233 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071059975 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079294209 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069217764 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079272226 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070388907 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07038881 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068294177 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082763651 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069411488 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069029096 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069391575 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080773353 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068992927 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080839441 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079084493 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068433419 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081706804 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080919225 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078591964 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08117309 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071198466 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068500984 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068115787 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069805468 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078714429 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080379956 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070867455 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068891955 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079502468 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079834803 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067403172 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078842397 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078715365 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078861731 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068850693 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070535045 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083716305 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080653842 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078738619 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078272693 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078783391 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068866866 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078012403 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078857912 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068131603 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085126857 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068047062 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082984075 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079266453 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077381419 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079141096 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080731815 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080178903 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080646348 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084093599 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06837474 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068297193 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080913791 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068651703 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069537009 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078989478 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070252209 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07137769 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086080713 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068791849 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079527967 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067573037 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.0790937 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067010273 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06962578 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083842911 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068170335 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.204143818 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083474599 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072058923 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08073583 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08489637 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080038509 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07092933 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073260495 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082997887 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080118723 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070610567 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071702907 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073087023 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.08219506 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.08096326 seconds)
  done (took 18.930935402 seconds)
done (took 38.437655497 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212099379 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151477975 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198920549 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118223608 seconds)
  done (took 2.190739511 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121864868 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102472778 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098271065 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06709857 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.106029909 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067317883 seconds)
  done (took 2.012162339 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312398204 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211946386 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182609489 seconds)
  done (took 2.151591227 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205206836 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192760741 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.403428666 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255350704 seconds)
  done (took 2.614327247 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14746758 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093312516 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068549023 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085471971 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138795705 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163131664 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101437265 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126313539 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077736262 seconds)
  done (took 2.498933326 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147478106 seconds)
done (took 13.063032185 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Int8, false)...
    done (took 0.182473054 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.129042606 seconds)
    (3/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.232091689 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085081726 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.151927098 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10629735 seconds)
    (7/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.204596708 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084487236 seconds)
    (9/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.177259117 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079577257 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084422788 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090163047 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091153702 seconds)
    (14/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07880931 seconds)
    (15/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.181168044 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075461842 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.11016875 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122584154 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090345539 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090005986 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102976251 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079328886 seconds)
    (23/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07352507 seconds)
    (24/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.158009872 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107183594 seconds)
    (26/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.153280566 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.192991649 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.2179092 seconds)
    (29/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.0715478 seconds)
    (30/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074878438 seconds)
    (31/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075168932 seconds)
    (32/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075194755 seconds)
    (33/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06479746 seconds)
    (34/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.119708534 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112765991 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071918557 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07139397 seconds)
    (38/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071068288 seconds)
    (39/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.136908903 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.151933144 seconds)
    (41/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.162563951 seconds)
    (42/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.171466196 seconds)
    (43/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071742193 seconds)
    (44/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.211079335 seconds)
    (45/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062578281 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069040623 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076185217 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092336683 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.167832221 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096852213 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.149879075 seconds)
    (52/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108339193 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072584526 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131399366 seconds)
    (55/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075404027 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073492957 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.174214365 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065260159 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052298598 seconds)
    (60/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.175618377 seconds)
    (61/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075045932 seconds)
    (62/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104650241 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066699945 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052332391 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102839507 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06655984 seconds)
    (67/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053205948 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.175338268 seconds)
    (69/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06217363 seconds)
    (70/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184932711 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151743617 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089013601 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075666631 seconds)
    (74/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065717957 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.157127349 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05353235 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184441262 seconds)
    (78/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.157115983 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064409557 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087397837 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.065826272 seconds)
    (82/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.156451139 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070366404 seconds)
    (84/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.0723729 seconds)
    (85/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108602492 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.316180459 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134364494 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051586419 seconds)
    (89/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073026482 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098364452 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134375718 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.075139766 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.350501849 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092868365 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176899658 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097778378 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.203743822 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063845769 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156861925 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07768676 seconds)
    (101/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120956769 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066401391 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.186623685 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072891383 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053772044 seconds)
    (106/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076409753 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073590416 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.150498043 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09082513 seconds)
    (110/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107997599 seconds)
    (111/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.10702961 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07308027 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070225271 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135643486 seconds)
    (115/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073288809 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127956708 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067179044 seconds)
    (118/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053545138 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091266517 seconds)
    (120/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073799755 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114225566 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064932366 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086863642 seconds)
    (124/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.157852353 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.150065776 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.157342581 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149994972 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072647462 seconds)
    (129/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087866491 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075351756 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.133011525 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073083957 seconds)
    (133/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052363702 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073124804 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067143485 seconds)
    (136/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052411447 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.204104594 seconds)
    (138/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149770718 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070396923 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072132018 seconds)
    (141/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.0790517 seconds)
    (142/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076571955 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066835188 seconds)
    (144/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072491142 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051112966 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073439405 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066937956 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06805737 seconds)
    (149/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109378232 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.186963351 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074994514 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068773728 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064910986 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072059252 seconds)
    (155/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051135234 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051431296 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08097376 seconds)
    (158/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066623313 seconds)
    (159/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108687496 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052407475 seconds)
    (161/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064486565 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073180776 seconds)
    (163/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065858547 seconds)
    (164/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05308736 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.145557961 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096248772 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06065174 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066400279 seconds)
    (169/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051027889 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06509016 seconds)
    (171/309) benchmarking ("sort", Float64, false)...
    done (took 0.124354178 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052620475 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071678186 seconds)
    (174/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054924629 seconds)
    (175/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052173153 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070934312 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07213146 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053583671 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069959667 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052516678 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072998144 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086883279 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052886207 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05093976 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095111299 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08038921 seconds)
    (187/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068501029 seconds)
    (188/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055203989 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055467912 seconds)
    (190/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152866393 seconds)
    (191/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065201325 seconds)
    (192/309) benchmarking ("sort", Float32, false)...
    done (took 0.12915105 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09843555 seconds)
    (194/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078333685 seconds)
    (195/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073776988 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.319301745 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08869542 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052339738 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052450491 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087328918 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074702515 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074475157 seconds)
    (203/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052951062 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13876464 seconds)
    (205/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08065295 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075061953 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073946853 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142644713 seconds)
    (209/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073024442 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138796042 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055108105 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054899575 seconds)
    (213/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052071493 seconds)
    (214/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05159834 seconds)
    (215/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080503837 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052360348 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06690632 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069459127 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072715906 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090956419 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065535954 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068119571 seconds)
    (223/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053210837 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164685387 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064076722 seconds)
    (226/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078799367 seconds)
    (227/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.150961174 seconds)
    (228/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066321578 seconds)
    (229/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051128583 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074243749 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139495398 seconds)
    (232/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070179145 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134937228 seconds)
    (234/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067104108 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065755841 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055843162 seconds)
    (237/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06984328 seconds)
    (238/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067595044 seconds)
    (239/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075740126 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053391709 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089312528 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053421132 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170963629 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063491965 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178134842 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093097032 seconds)
    (247/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189889339 seconds)
    (248/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055045722 seconds)
    (249/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054412441 seconds)
    (250/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054245173 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07447583 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067497459 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092378572 seconds)
    (254/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054653617 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091821889 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092741543 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066946918 seconds)
    (258/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053995168 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166928448 seconds)
    (260/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054102695 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068525017 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073995471 seconds)
    (263/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083355414 seconds)
    (264/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053147442 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066885029 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053346714 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068174882 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139339458 seconds)
    (269/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073383791 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.0746255 seconds)
    (271/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068863323 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067213045 seconds)
    (273/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.186289645 seconds)
    (274/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051289722 seconds)
    (275/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062749817 seconds)
    (276/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079760456 seconds)
    (277/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073191355 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085120529 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072470928 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091175317 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063765596 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065095743 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051145693 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063712898 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051758975 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089897161 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073232057 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068577418 seconds)
    (289/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174227546 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051742614 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051618049 seconds)
    (292/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052511235 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070982873 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099141402 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065627166 seconds)
    (296/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072051496 seconds)
    (297/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068016217 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052850715 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064315231 seconds)
    (300/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053291427 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067366223 seconds)
    (302/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067896862 seconds)
    (303/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.0727308 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090320462 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053546787 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072354295 seconds)
    (307/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053208558 seconds)
    (308/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071229258 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091354032 seconds)
  done (took 30.819336087 seconds)
done (took 32.278171246 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085820305 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094513002 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075725085 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094962914 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082911229 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079559824 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074659163 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080166908 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081723892 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083924872 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081138743 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056856518 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074739226 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07413739 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073715717 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091207156 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079435365 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073258854 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074299472 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066389664 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074801766 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067712296 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069175889 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056753145 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079543508 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073832886 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073279876 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07465818 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065825268 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065416714 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068689779 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072474901 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065428294 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077523491 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071418623 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072327152 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074566988 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075461344 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067497839 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065844463 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073903765 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065831657 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072494212 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072819377 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071650352 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070669728 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072956131 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077651673 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091190405 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067917377 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073683397 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075696312 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076434037 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072227716 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069263996 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072601781 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070354111 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090809461 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072714169 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067384074 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073415744 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073213031 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070407674 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072277656 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07253021 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074464106 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07459499 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070743686 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074827682 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071399463 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065037359 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072363652 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068459866 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065445483 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075704041 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076793478 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064305361 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071913892 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072671547 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072543449 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066273508 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068938441 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06771436 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071398886 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068303287 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055008154 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069502841 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072619 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065382797 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074763799 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07339025 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073565 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069284779 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076915913 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066404261 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072137193 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06716994 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065898382 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066882746 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068596234 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064760018 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067041008 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073668541 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066343909 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07081142 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078536281 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066579424 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073132857 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066084783 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066594573 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081700227 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076435886 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067160709 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070522577 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066227714 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073849596 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066184558 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066680869 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066900992 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067178779 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072515103 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066838168 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069862374 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073701409 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078952071 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066557945 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07026785 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069355839 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06710756 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072050171 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066826122 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.203235845 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069110933 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062572289 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069707477 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065575487 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07384051 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070150676 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075513082 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068612339 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075583622 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07194247 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073223412 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073050637 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066349597 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061036268 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071236134 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070086178 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067185509 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065522565 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06729139 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065341606 seconds)
done (took 12.623383619 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068954137 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146368455 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.102602082 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098883983 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088957401 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068504538 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076720059 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101510494 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067141614 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101981919 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087142091 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084647868 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112595547 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064431096 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065433458 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069503398 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067437267 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081443156 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100768229 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086480386 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115895426 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065540529 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093979704 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090231739 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087086138 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092281249 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06662709 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069342305 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069259258 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099975505 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086061232 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069100849 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06605057 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100611817 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092109291 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083292334 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066232895 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082043976 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066273083 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065613625 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067237754 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097892459 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079840579 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080219764 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069889059 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069116058 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067010953 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083017163 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088422218 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078629965 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086128011 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102036743 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06848106 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065687723 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064393915 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084971856 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065003753 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068432907 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065969346 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068018454 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065901351 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06906786 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081195585 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081785242 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069270188 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079855874 seconds)
  done (took 6.855389368 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086687595 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092612419 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083480346 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083049001 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06521104 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066238937 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066212754 seconds)
  done (took 2.102947569 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068395934 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09090234 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089045992 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089702112 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085591184 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087359324 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07563988 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066244868 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.0803453 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067367918 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087219994 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101723377 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067026095 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07244294 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090353553 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066132302 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09101522 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066515268 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06919184 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089640682 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068065971 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082160007 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069442074 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06697052 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080770179 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066724287 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11266398 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070482215 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068091134 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069084608 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064436802 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106457915 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079586672 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075527826 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067148026 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082618948 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082879072 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066871144 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084973223 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074246661 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082641896 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068850764 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069532625 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066414542 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072229725 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078399113 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069511376 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069196425 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070982011 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088918769 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06907099 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083102219 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071991233 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071413476 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069862531 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072994084 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07838272 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069496423 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089042376 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070041728 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08637173 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08599909 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082718809 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08568171 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070863981 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08291628 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082808621 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071449554 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070630505 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071434505 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085728153 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066769653 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069956807 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078900149 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070199067 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091936537 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09197937 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070289049 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07779479 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068051277 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.0669572 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067745674 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092043666 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070655165 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068340582 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072872923 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071474671 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066808268 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067966743 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071939547 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06665303 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070192107 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071833218 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070594264 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069279224 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083695522 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068866861 seconds)
  done (took 8.949729719 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07041123 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070427266 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071882825 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070267637 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070420606 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070509284 seconds)
  done (took 2.005020807 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096258285 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069732033 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081255332 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074260205 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108232314 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090698997 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090479755 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081899701 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086739378 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082138354 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090343303 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091455157 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095106685 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073249205 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087029562 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072000741 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087139171 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075679555 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078277719 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073177257 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086325535 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072576288 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072894169 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081407976 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075279694 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072067081 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066813669 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078619207 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078713122 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078714733 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072751193 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077225553 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073628941 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080576394 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090329529 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07325225 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074583361 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080064888 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074935843 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.078922216 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.09123968 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075743793 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076546368 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078413918 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078789046 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070620949 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077001296 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075735724 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085801717 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077100144 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077092013 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072095635 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.0770675 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078960274 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.0729036 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079837251 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07664606 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086510603 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07283811 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070190581 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068803439 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07520265 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077523648 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074902625 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078987928 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076657048 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070649469 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072658415 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072839612 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071528023 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076705701 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06870345 seconds)
  done (took 7.219324306 seconds)
done (took 28.675968885 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545798712 seconds)
  done (took 2.085637875 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.60698655 seconds)
  done (took 2.172763356 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.712713856 seconds)
  done (took 8.282524648 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399205811 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472611448 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.685879782 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130423039 seconds)
  done (took 3.299258953 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.674736498 seconds)
  done (took 2.245315547 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209775192 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195997907 seconds)
  done (took 1.985320688 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379500911 seconds)
  done (took 1.945607515 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.12149195 seconds)
  done (took 2.68866162 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266114107 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163480424 seconds)
  done (took 2.004165938 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.471025511 seconds)
  done (took 2.044617799 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.892134546 seconds)
  done (took 6.467222237 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209324431 seconds)
  done (took 1.828119532 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240752783 seconds)
  done (took 1.818921612 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.690999685 seconds)
  done (took 3.269550532 seconds)
done (took 43.706678729 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081637125 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080359659 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081017564 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077239169 seconds)
  done (took 1.885221591 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07942126 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072543523 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075565484 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071885898 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076132485 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071744974 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073629388 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076367718 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071686493 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072473099 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072052098 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072077134 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074109469 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073685732 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069964006 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074602312 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075179808 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072398828 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075672524 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071480121 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.0700948 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073911367 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07401141 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071327735 seconds)
  done (took 3.346871155 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078560375 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072611505 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074195023 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072000265 seconds)
  done (took 1.883710015 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078140227 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091961892 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088373339 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076612353 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091597834 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085430297 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068314046 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068605081 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072588493 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076615314 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067399202 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095406231 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087092025 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07624995 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078513696 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065637284 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067550675 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086186604 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076747148 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076619565 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069512295 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076198809 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067499602 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087599544 seconds)
  done (took 3.456932704 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079427028 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10509602 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077779789 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086471008 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089890739 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064789124 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074014078 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088694995 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121774162 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06479892 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.0696202 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064997056 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071934715 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064681929 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075382757 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10383599 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10721436 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068306075 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094840144 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064680236 seconds)
  done (took 3.230591333 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074513105 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069578208 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065685372 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067837254 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077094784 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072065993 seconds)
  done (took 2.018744858 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070049676 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067230456 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067168906 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065997678 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070862924 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067016373 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065612767 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067009686 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067008089 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066328444 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066026752 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065080513 seconds)
  done (took 2.395258027 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.177416298 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068539388 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067916358 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065099285 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070134477 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066161688 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079296424 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067496095 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089827541 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065791895 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066099715 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067723894 seconds)
  done (took 2.53928737 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209592105 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078211122 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242082733 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140601695 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111106087 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114872647 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103658983 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112933339 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143185782 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101299498 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167007536 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165249279 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106344116 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136153113 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088795431 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097414564 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154865116 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161634208 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103281101 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165234308 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143185943 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123882329 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145691684 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101489783 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105380193 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121229978 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070625943 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079477449 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169876038 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130799669 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14615712 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110377061 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093029809 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176045635 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169532144 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142273167 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13374419 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083064986 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101120058 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132595326 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199287437 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088441215 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163459638 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246957754 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081212539 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134374585 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123512192 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121609771 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108669109 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091273359 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146487048 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182556822 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139120607 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086123726 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111691642 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113990317 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116933461 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10377505 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181983156 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160340006 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126754379 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070587512 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099185892 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152690247 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131553069 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108533452 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126582517 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092328562 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132557157 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154158888 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118490243 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142616274 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.130466436 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088152734 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118480929 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138630315 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128075407 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169418771 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124088665 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072320292 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124540683 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102633773 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080503964 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14175959 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0753505 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17444977 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097521667 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105487755 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112320317 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10817868 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108649974 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161294861 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285899775 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107181372 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069239895 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105851669 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.125015395 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151234641 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090487024 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110196429 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11727327 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077045678 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138935657 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074606874 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123613185 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075279882 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124550798 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131723306 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074576438 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121535474 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100801594 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098624973 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131908722 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160110787 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088857322 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081497443 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167698903 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122586068 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103886737 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14363444 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155102806 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098732071 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101453592 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149079088 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178971865 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089355504 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163290993 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106643468 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083054864 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087145454 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123205779 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111891208 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121731606 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08179055 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118052719 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167158749 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074409186 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094638697 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132917303 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078673609 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079772889 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102560659 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099772407 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093983663 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100100264 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10363506 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136814386 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122943333 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104358299 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271413739 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099537917 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170265621 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088595023 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09992743 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103404912 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06939898 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136599802 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156174454 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079060592 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163499255 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122959132 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104939027 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118849494 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082187285 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139543062 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078117363 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069758066 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143550661 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110329018 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109935722 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150788175 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104629951 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12683386 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119130223 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134766001 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132314934 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128665425 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10444846 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087770181 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110760494 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12494177 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072641761 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091278342 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079647296 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103095916 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095114884 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083359629 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142082449 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124983912 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099740843 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111374113 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096309637 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146371133 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076229531 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128888612 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118762574 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093037667 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15085256 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151525525 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130692124 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098455928 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143971819 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069994454 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073529776 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.235186981 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124171009 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083350087 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083274773 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11694212 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146786881 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13025817 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137838489 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11142392 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12130484 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154158406 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068972565 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11516285 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147520677 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120583585 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104531279 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090055206 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098777445 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141717092 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108110686 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184212076 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113180587 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125560943 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152624867 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099415746 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079099113 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102521947 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135241001 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103998637 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144606034 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101408727 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091055511 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112985132 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076254566 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101613561 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127217834 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119445109 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135078916 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.119195506 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133464709 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076674455 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116865896 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119951377 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122423597 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063645365 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119460813 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160661762 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093254265 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117864992 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152269151 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078548627 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12366962 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.323238134 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149134295 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08450849 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110563999 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118018967 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1282309 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119512346 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140385481 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107976498 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134844181 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109195682 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084956218 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086164086 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09695564 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105473827 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094609194 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109511629 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115449104 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094463257 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133546374 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103965737 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110096734 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11717958 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.0974032 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088488234 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097074033 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17378533 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118902438 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170725697 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098888714 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144182446 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165040788 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074534221 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078488085 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078303801 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139227709 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083379431 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130396724 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097269967 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105397803 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12370371 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142033688 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094607668 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068383471 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108331686 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133865685 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112154028 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097739482 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103498639 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161872141 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099672414 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078539262 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113238296 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104445817 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101792158 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318887609 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062033647 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098737873 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076291659 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0808067 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127948296 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153038331 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080354129 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102851446 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120268777 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110240239 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128313955 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100667865 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099828215 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114180338 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150335414 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128375135 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089441738 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112159219 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129810531 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156803604 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10531851 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095303422 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172387842 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152189543 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161572913 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088351723 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114049213 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113688792 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107738377 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138831755 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082731327 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163876092 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081798376 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135544818 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103975908 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08989344 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129973272 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115179221 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08778556 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148125997 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11742656 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081874207 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077894277 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117538934 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120439513 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105618745 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074564824 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138163867 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072159263 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131959159 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167683059 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080379839 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252492429 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098743911 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080295133 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108739338 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103263238 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090090907 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098784747 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173075824 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088203281 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149450043 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141475858 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113369979 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13700796 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099510225 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636461767 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077387608 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152034991 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117234741 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173641581 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097877828 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117008215 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109077865 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123659279 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145111826 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104475357 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176724953 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131044673 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115380558 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078844948 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102295027 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102878627 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088562714 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104747925 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113075178 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11563312 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092979216 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115615668 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123277962 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082286079 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094661531 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155314603 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117261628 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14418443 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140042029 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08481813 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116643916 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137928665 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079035261 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121443073 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151058099 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105375565 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244775125 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083478251 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.106014243 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174100683 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073380885 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166345091 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122547239 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112955841 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114816687 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113348751 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131499462 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10839745 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121489488 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093565693 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110553519 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113115503 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082375673 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076256946 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104092725 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111544564 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097328107 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099274343 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098346753 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150728113 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070675413 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09523463 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102629626 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144775887 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17517745 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087799468 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082208148 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1184046 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112063906 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112624933 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120141181 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078994475 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08198867 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081442817 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076603096 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10771585 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111562792 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104534532 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110981408 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163923954 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081716124 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223944473 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094850723 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104465945 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06900836 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078642564 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095637111 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096960885 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107639155 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10020302 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16808541 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093845426 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089405395 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091190188 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072341193 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228006471 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127875694 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110046114 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120116092 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098110779 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062748358 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108599722 seconds)
  done (took 58.883300832 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110279566 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081665205 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096237709 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148638744 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121769012 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212213385 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156983818 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199281481 seconds)
  done (took 2.816955847 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070651951 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09357746 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099882415 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081759487 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06602022 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067949636 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224529325 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081184513 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065688973 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088114835 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077993303 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06864772 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.419414365 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067786913 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069841793 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064718962 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067179482 seconds)
  done (took 3.455707603 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36815349 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599716592 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371764474 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072684865 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.883425908 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088180412 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.08233731 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127541789 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073221857 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538971251 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701431142 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123799628 seconds)
  done (took 18.722107879 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077781439 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072338664 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086451116 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086225076 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074914658 seconds)
  done (took 2.083448502 seconds)
done (took 108.330724733 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081799345 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409391606 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056128722 seconds)
  done (took 2.182987411 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085099498 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087404841 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086836522 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085457021 seconds)
  done (took 2.044953581 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076848918 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078681182 seconds)
  done (took 1.846873433 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.227130973 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.157639979 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086157078 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08495897 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080220734 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079028312 seconds)
  done (took 1.941234435 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074996272 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077031848 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0737278 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075905163 seconds)
  done (took 1.993474187 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07836506 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054444773 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056604177 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057679341 seconds)
  done (took 1.939926425 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088398004 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081340522 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080550789 seconds)
  done (took 1.94507978 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103914229 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086898277 seconds)
  done (took 1.88468037 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084583987 seconds)
  done (took 1.779146184 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102570154 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114588277 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134366817 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112737401 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138117756 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110699659 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086587528 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086519845 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076606032 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086925449 seconds)
  done (took 2.744874658 seconds)
done (took 22.542964719 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080796333 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368939996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362434222 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091464646 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670465056 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358649231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.018609771 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092596593 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1179142 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069641718 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086985709 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649534628 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973181732 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326167612 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96203942 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321715305 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651527369 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067824961 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067506498 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067445365 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.003422219 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06743733 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067294501 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067925887 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648098011 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370962103 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067798039 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323545077 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067555435 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068988338 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354588923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067724861 seconds)
  done (took 16.262832447 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072931963 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121981312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076394357 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087057565 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072747273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070813559 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071329331 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069169102 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119097438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070070668 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086980053 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06988319 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074612167 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071093246 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088745513 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070328887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071355929 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070981332 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070805914 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069956767 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087795762 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068188154 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068131323 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068005497 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067226402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078756607 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067909514 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067507485 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067859552 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069328723 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071000868 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068521487 seconds)
  done (took 4.133061595 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11769165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128746318 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076172408 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106043413 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11545829 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072642399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14625091 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096257239 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131298218 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070503786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088198953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070761781 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104166793 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071354242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090305588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06972345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069058515 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068233265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068127638 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068449741 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087044505 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06752214 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068177819 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068504585 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068145667 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081284312 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068345248 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068103904 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068225436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069756283 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070942319 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068517434 seconds)
  done (took 4.393273102 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074780052 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077316033 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085424091 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086271357 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072122399 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074016318 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073835959 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070555887 seconds)
  done (took 2.325472073 seconds)
done (took 28.820660508 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081161711 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070903992 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074918398 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083701332 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075785066 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080941668 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069469995 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077086684 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07339479 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074770831 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077000061 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069793235 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073498741 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068741055 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075568121 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069635203 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08235448 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074026838 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.0820122 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082538135 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071598929 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07384956 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073836079 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078611289 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078934074 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078841559 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076837229 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072241393 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06856254 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070137674 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07647144 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085110995 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070248439 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08172869 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070301001 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069981507 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073603598 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070125894 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081457173 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076828225 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069134978 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075654759 seconds)
  done (took 4.849033668 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090543371 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094266172 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087364481 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064071425 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069890539 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066175493 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088205692 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060444405 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059151074 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087362488 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058285499 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061971333 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06444876 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055166042 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059331068 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056325073 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06121389 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055680289 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059153177 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05907692 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057742192 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.0543191 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.05999727 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062334235 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05882482 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061715839 seconds)
  done (took 3.437907222 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077453136 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086335904 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087839078 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125822748 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102804663 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076389371 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07727198 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091981753 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084344653 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066494729 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070213156 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092697772 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087311497 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073455943 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066952897 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084110877 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081565263 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068677945 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073166642 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090392736 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083537883 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082729105 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092099985 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080460604 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066245664 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069391697 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070980625 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08052124 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072024665 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075937015 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070864454 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070664101 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068895695 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078191054 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072736329 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070920614 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09167257 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077369889 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076756876 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067566283 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070733169 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068075667 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.08905849 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122801081 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068684614 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073421962 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074618792 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076219813 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067003698 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085454234 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077749806 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066825017 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070619326 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066538871 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067437015 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080178518 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068895235 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069660475 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076318517 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070485983 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084926186 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071203435 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081973705 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067028588 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074596064 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066336543 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067799596 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06616712 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092057515 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069660273 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107457882 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070902808 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070770661 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077232331 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075604118 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074373495 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068919359 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083377139 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079487984 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072755023 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076643146 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070804477 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070233332 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087189413 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069090019 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068679479 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067982815 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.084722969 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069694567 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06866569 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079918814 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067142357 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070024128 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083531188 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06662614 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068476532 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073476555 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071851514 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067224046 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077931385 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072514532 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067961251 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076268751 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06718022 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07025687 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077394627 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073264889 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066365337 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071815284 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073279352 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068133043 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068720539 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070185712 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068699281 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075264554 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073382708 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071611759 seconds)
  done (took 10.618630243 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165038767 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158250991 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07171439 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144022276 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076709465 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07904476 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146980727 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094242569 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067117877 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068119806 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068564612 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109204337 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105090915 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115012517 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07845802 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067752606 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082749615 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113491733 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149440073 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142474223 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083064248 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076121391 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069691388 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068753038 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070035258 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07759378 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085081362 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076440122 seconds)
  done (took 4.462271544 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083783865 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099419617 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073439423 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08948653 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090751726 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067461411 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070004641 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069930853 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079876155 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07884557 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067430281 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07340628 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074111336 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070687015 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068358001 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074094581 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074765418 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068852149 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070442087 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0726916 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076759801 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080232791 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070953746 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066970786 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073975382 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066525276 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06437823 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08469016 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067843193 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089646954 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065539399 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074417212 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080738945 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06817158 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066992927 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067534261 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067113559 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066997241 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06939157 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066034184 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065826844 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057879752 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066399539 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079106503 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073702935 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056341867 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072139354 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072262333 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07265158 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065350062 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070389229 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070377697 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070506278 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074528728 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072181009 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07222588 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068303091 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073538236 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074692981 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067188906 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064216901 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065670325 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071961402 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065946633 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075037279 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071759548 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065897695 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067043927 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069095371 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073087297 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066876175 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070026216 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064829475 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069338327 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071543549 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068739221 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06797694 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065569004 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066561774 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067294234 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055237938 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067601773 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053248438 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07006769 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065438511 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065820196 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066787365 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071967267 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079490426 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068209871 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072697162 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068141818 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066317241 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070799001 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060148019 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069809685 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082596034 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08265016 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06734185 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06544542 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081242966 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071663875 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066463048 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055852881 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074710226 seconds)
  done (took 9.179093461 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092113588 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072255733 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084798394 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091004557 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085932953 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074146239 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076251484 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069262364 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082069678 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073179955 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076218806 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067787295 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076853099 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076411664 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069553997 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076647291 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071648371 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082338435 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081188629 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068054397 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075847763 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080000681 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089053685 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079661782 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078306927 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.07965381 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088913546 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071525296 seconds)
  done (took 3.950686874 seconds)
done (took 38.202544304 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.789663147 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.962093872 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.790500138 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.167446816 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.970130977 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.905943934 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.900627646 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.78726046 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.927383749 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.834237745 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.081084124 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.859723619 seconds)
done (took 65.699107156 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.83118594 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.929359473 seconds)
    (2/2) benchmarking "String"...
    done (took 2.06578263 seconds)
  done (took 5.722884576 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.087143401 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.338409341 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.035585781 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.789054136 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.791318003 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.080982084 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.602562706 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.322598292 seconds)
  done (took 30.689492312 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.946423636 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.018427982 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.481584053 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.511987477 seconds)
  done (took 15.737844811 seconds)
done (took 63.875974059 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.794822452 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.850909776 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.790958766 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.772850554 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.847400821 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.810710748 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.049964512 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.791612833 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.787325311 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.778610653 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.790037749 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.23879554 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.800227439 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.138140082 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.791057591 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.800228586 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.848243524 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.279642294 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.944977577 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.797833277 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.799658791 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.804590047 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.790893476 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.794553696 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.797727533 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.789323773 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.229664231 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.800107141 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.41600335 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.788548647 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.820613967 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.237679115 seconds)
  done (took 204.501372522 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.791449899 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.78867279 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.856716901 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.826977938 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.285003561 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.967964843 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.905821326 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.339937524 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.794549672 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.803689009 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.997418141 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.791833907 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.024788867 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.733592134 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.822201243 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.882121843 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.944094903 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.017518666 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.821939902 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.962474243 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.797297786 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.89877875 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.840531254 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.972530698 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.805124198 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.869193674 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.960279778 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.80994462 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.982765589 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.938841432 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.83071297 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.838003546 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.011530593 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.66534232 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.808461101 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.817930606 seconds)
  done (took 170.937067992 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.953880541 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.794283479 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.792682213 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.793013189 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.80483724 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.793564438 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.913795952 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.915694657 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.251014234 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.978835295 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.845168163 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.628337417 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.789558957 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.861882481 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.805054141 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.79208073 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.810051346 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.82213438 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.793907677 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.794314385 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.919025348 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.803372164 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.791173425 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.799876878 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.79368983 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.800166002 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.163482455 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.812284912 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.791895557 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.794112053 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.798330511 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.057319418 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.792232518 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.793468601 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.692153641 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.203342373 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.884062798 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.793253144 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79830697 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.795722744 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.015846266 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.791903331 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.794607344 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.797857659 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.971963212 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.792084392 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.920533949 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.792253911 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.302132489 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.792075214 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.795954954 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.547141407 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.476974354 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.791265018 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.795277237 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.797799389 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.795404615 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.795333166 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.801485749 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.460717747 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.86713031 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.798744677 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.799186311 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.801429443 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.797528931 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.847170773 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.795852604 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.151080892 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.851232227 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.902389451 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.917366073 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.796264776 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.862204467 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.887691015 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.793423665 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.795986846 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.796140963 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.797366059 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.79674677 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.879065952 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.793345594 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.796005946 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.923456186 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.800024653 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.797324886 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.847093739 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.866520755 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.793434588 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.692685032 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.79455374 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.795900557 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.113383118 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.862337882 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.794158155 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.798106838 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.796383916 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.931840402 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.917191493 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.584500831 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.797829877 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.524562265 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.797269997 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.94632232 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.795454236 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.978854677 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.794346443 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.878701047 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.799868996 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.798247848 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.797264564 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.829543712 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.799011088 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.859355833 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.793869496 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.168492382 seconds)
  done (took 404.822873747 seconds)
done (took 783.999790501 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.481278023 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.433781921 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.549378362 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.456027795 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.433020847 seconds)
  done (took 14.087371165 seconds)
done (took 15.821619244 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.885913159 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.889668882 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.823993107 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.889692131 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.820772123 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.889023438 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.870711899 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.824245927 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.855410384 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.824802882 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.856571121 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.825031907 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.813457813 seconds)
  done (took 25.803135531 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.032811632 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.028986334 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.869659141 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.026199096 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.845348193 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.034639377 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.960132039 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.948847011 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.949760628 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.81522876 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.812694521 seconds)
  done (took 23.062186012 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.032170134 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.035858189 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.871317697 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.03094119 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.845772405 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.029952269 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.966161377 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.947997998 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.949797291 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.816793433 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.812267977 seconds)
  done (took 23.076263122 seconds)
done (took 73.676305291 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.809356234 seconds)
  done (took 3.545279829 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.831090349 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.969664882 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.816866491 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.813231592 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.808944472 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.810113335 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.814321832 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.810073971 seconds)
  done (took 16.412661395 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.805233755 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.807317073 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.805282365 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.80771591 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.808421085 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.807521029 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.808121443 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.809160186 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.807859816 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.805687661 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.809612966 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.807676624 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.805362319 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.805718334 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.808655007 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.821289178 seconds)
  done (took 30.668112548 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.805260531 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.803843011 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.803903412 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.805741263 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.804909564 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.805503929 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.805044038 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.80486453 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.8037795 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.805647162 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.804139095 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.803827283 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.803694498 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.804041927 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.803820221 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.807815881 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.801107494 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.800556225 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.806099066 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.800163235 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.803062666 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.800761618 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.800437545 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.80093405 seconds)
  done (took 45.028218658 seconds)
done (took 97.391475071 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.680389843 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.194842838 seconds)
  done (took 8.604899124 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.802457498 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.80108967 seconds)
  done (took 5.371359784 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.80078476 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.801241317 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.800879398 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.803492161 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.801202016 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.800434477 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.800575993 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.80171821 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.801379872 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.801691348 seconds)
  done (took 19.74203168 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.799951815 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.800247671 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.797834145 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.799760038 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.800836324 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.79751893 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.80120088 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.799761863 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.800726098 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.798116366 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.799947044 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.798592018 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.800028311 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.798100616 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.800248039 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.798038262 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.797948898 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.798718767 seconds)
  done (took 34.117542678 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.800719512 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.801221234 seconds)
  done (took 5.331469652 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.797811928 seconds)
    (2/7) benchmarking "second"...
    done (took 1.798002892 seconds)
    (3/7) benchmarking "month"...
    done (took 1.797751102 seconds)
    (4/7) benchmarking "year"...
    done (took 1.798776795 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.798217102 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.797799473 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.798718706 seconds)
  done (took 14.317022766 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.801961198 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.965634201 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.040182328 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.493869932 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.801771422 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.803437284 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.730888473 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.803134106 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.80574919 seconds)
  done (took 19.976845448 seconds)
done (took 109.191088101 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.606656005 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.793405484 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.157064552 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.843143859 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.854599157 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.137764361 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.816557361 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.011373634 seconds)
done (took 42.949298374 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.805742923 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.43684875 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.479323337 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.823614697 seconds)
  done (took 13.469535164 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.780473205 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.312003203 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.830993274 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.399046981 seconds)
  done (took 20.071396135 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.163380304 seconds)
    (2/2) benchmarking "read"...
    done (took 2.150753913 seconds)
  done (took 6.050307463 seconds)
done (took 48.12844029 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801426966 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.799971246 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.7986285 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.801491158 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.801428042 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.798953571 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.80173933 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.798759081 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.798761303 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.80251798 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.801874338 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.80223518 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.802192355 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802618954 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800702192 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798689506 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801619839 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.79926825 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.799047018 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799890363 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800578674 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80227949 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.800766483 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.799900453 seconds)
  done (took 44.946201203 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.802588734 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.800672506 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.803834947 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.801943529 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.800088991 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.803944366 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.803682365 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.800745782 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.802771329 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.803486189 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801069589 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.800787626 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.803886577 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.801602758 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80338644 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.801286207 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.802966422 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802040856 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803790855 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.800927893 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.803772122 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801089602 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.801427588 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804482691 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.801303817 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.802973406 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.803433273 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.80203443 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.803701618 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.801819353 seconds)
  done (took 55.805578032 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.809089293 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.812383305 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.804605577 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.804991646 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.804360981 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.804300195 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.805482904 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.804785742 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.805079225 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.804792454 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.805033943 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.805168947 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.805493197 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.804557141 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.80593305 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.805018511 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.80570329 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.804994202 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.805449329 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.805153512 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.806878083 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.805357138 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.806920093 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.805893605 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.80606753 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.805881264 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.806210619 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.806324612 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.805661615 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.806895438 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.806935328 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.805813521 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.806211082 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.806271933 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.806316741 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.806091467 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.811419239 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.81577064 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.805532765 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.806379266 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.80755911 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.807360606 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.806636461 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.80650326 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.806872801 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.807142095 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.806717799 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.80686059 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.806076754 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.806398944 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.807173115 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.806553202 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.807450351 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.807306552 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.808170508 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.806861066 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.80669269 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.807091399 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.80797034 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.807266145 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.807111114 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.806838408 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.808288006 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.807242841 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.807935111 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.806728523 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.807415431 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.807436983 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.808290044 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.808099253 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.808592968 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.80846551 seconds)
  done (took 131.821073206 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.808114922 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805862556 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.806494704 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.806588583 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805634117 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.808730975 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.80507507 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808555922 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806208609 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.808796072 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808481371 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.806178402 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806958456 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809400536 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808768344 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.80591591 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.808342408 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807030194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.80947945 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809692913 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.809699186 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.805685992 seconds)
  done (took 41.503384198 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809293327 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.809562321 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.806463059 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.810096659 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.807325727 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.809052372 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.809183465 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.80892 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80999286 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806326867 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806902893 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810269455 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.806100564 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807712882 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807934256 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.807323328 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811500894 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.807772593 seconds)
  done (took 34.290807997 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.80868128 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.809258125 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.810679197 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.80732724 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.808391742 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.810326331 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808087413 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.810371217 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.810141379 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.808153884 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.811317187 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810878857 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.810497909 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809146773 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810831563 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.8089904 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.810781027 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809223686 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811522072 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809008939 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.808761312 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812579056 seconds)
  done (took 41.555586875 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811088217 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.81165507 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.809043978 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.808378875 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.80939129 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.811176108 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.811907154 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.809664832 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.812669803 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.813144585 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810303193 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.811987946 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.810254562 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.809584272 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.809753941 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809568527 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.813151612 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.810975382 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813431192 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.810336711 seconds)
  done (took 37.959129081 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.814585111 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813952374 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.814424439 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814856859 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814977194 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.814595509 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815036357 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.814528733 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815637896 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.814960286 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.815643995 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.814442732 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814721026 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.815386439 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815362261 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.815857602 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814558755 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.815145032 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.814912608 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81562319 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.81567043 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815795845 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815056559 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.81588075 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.815950437 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817333756 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815949948 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.816926181 seconds)
  done (took 52.570903462 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814577239 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.814331892 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.811538749 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.812429822 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.812677712 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.812114508 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.811987479 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.812401864 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.814061924 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.812299604 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.813854356 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.814920782 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.813995873 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.813815989 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.814499382 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.814552371 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81479328 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.812144942 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812140025 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81275823 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.815169057 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814627116 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.814601475 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.812786383 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812387096 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.815627149 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813120032 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.812553229 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.814356468 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.813171298 seconds)
  done (took 56.148626499 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.834337447 seconds)
    (2/2) benchmarking "in"...
    done (took 1.834883703 seconds)
  done (took 5.413981429 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.81268463 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.815577463 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.815312886 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.81310168 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.812775227 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.816141141 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.815461853 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814726307 seconds)
  done (took 16.260962565 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.816138053 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.816851213 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.816124576 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.815927138 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.818292097 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.817560061 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.82420883 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.816111508 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.819353796 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.818781791 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.825052775 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.826276472 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.819991958 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817940781 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.817241177 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81949609 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.817358605 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.819652968 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.819673345 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.818915856 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.819093735 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.819666833 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.820267225 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.815186963 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.819427579 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.829328535 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.822138764 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.818146897 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.818449227 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.822352246 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.818174721 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.814565889 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.820402271 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.819366728 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.817481375 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.819792526 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.826245306 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818489703 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.825392844 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.822307972 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.818540119 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.816203002 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.819971136 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.820312638 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.819561402 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.820458643 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.818708613 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.814968627 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.81854661 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.822235743 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.825841131 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818838514 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.81546658 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.821898513 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.820850175 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.825334213 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.820635381 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.822093669 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.829674344 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.830406362 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.832683601 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.828543001 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821928858 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.82019659 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.829117796 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.846977931 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.828038677 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.818261214 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.817141951 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.821516686 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.826872049 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.834825885 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.830814689 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.822251858 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.821193466 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.820666548 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821817008 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.820708332 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.827789917 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.824115359 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.823806014 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.822413263 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.830877373 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.847164644 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.820745475 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.823679856 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.821876358 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.822838215 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.823399849 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.83359456 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.823248765 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.820713108 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.821352171 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.821190884 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.825816674 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.823292202 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.82125563 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.821994552 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.819699251 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.821643203 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.82307138 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82548167 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.833451048 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.823872212 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823462219 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.829167428 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.822251105 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.822220743 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.829951373 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.823266097 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.824177704 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.824116179 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.829742025 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.819987584 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.825673321 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.832436893 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.824096687 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.823887684 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.823340202 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.822909004 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.833722443 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.851242555 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.822689899 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.823698696 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.828214156 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.838002998 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.82501905 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.825237086 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.822702326 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.820816509 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.820493019 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.825247855 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.823345406 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.822503916 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825077705 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.824516552 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.821718542 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.823404854 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.825741552 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.824603014 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.825981198 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.825215747 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.825220657 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.825877663 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.82659751 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.825450801 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.83136363 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.824334375 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.826307653 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.824499442 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.821627163 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.823484836 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.824785477 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.826911424 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.824863951 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825546489 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.824940683 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.82555866 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.825521991 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.82516027 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.824832619 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.825810931 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.829731317 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.826453001 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.829911702 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.825707852 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.821844586 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.824784981 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.824488292 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.825302511 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.825724604 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.824368282 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.827919178 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.835521262 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.825052427 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.828398836 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.829444566 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827395926 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82661542 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.826536153 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.830294592 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.836291993 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.828026368 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.833486597 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.8287792 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.82797284 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.827286416 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.827909586 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.826872673 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.828502709 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.831030444 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.835838529 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.841333473 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.837824426 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.828008295 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.832153201 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.828578282 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.832816907 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.831086219 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.828930899 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.827452183 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.828719089 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.826621786 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.82877866 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.829165221 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.828238448 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.826568824 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.82711772 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.826820754 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.829467199 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.82720012 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.828110074 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.828898105 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.825147534 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826969476 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.830123302 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.826400469 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.825827695 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.827628447 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.828243519 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.828595217 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.82960455 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.835844942 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.82590332 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829518923 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.829741341 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.828862371 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.829014057 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.828352255 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.831145464 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.829401448 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.836149502 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.829612016 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.830530064 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.835973483 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.829629018 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.829680005 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.831962006 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.830152821 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.826775801 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.833714982 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.839573397 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.830036229 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.831116759 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.831378848 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.830908295 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.828806591 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.836701153 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.827179079 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.829295903 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.829896407 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.832496483 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.827222825 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.831756481 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.830693364 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.832391946 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.833232853 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.83040988 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.830737758 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.831461017 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.831478725 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.832627512 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.831954944 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.833633467 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.841741343 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.836289935 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.832245537 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.832645794 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.83176631 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.835740245 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.831326351 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.83235722 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.831790235 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.845093284 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.842300914 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.839210677 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.833098932 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.831195845 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.83756303 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.832288967 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.836242039 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.832289621 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.832406145 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.83096323 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.831335949 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.829333749 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.833297519 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.831798 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.833919602 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.834618451 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.837016056 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.831716662 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.831944042 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.834434455 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.834695672 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.833430129 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.832307917 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.832299327 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.837224401 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.83522134 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.833166388 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.833026264 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840885415 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.83323489 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.834518879 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.832866853 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.832810149 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.833772782 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.834162966 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.834923461 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.837415168 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.843810371 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.836592957 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.844621538 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.833864964 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.844211005 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.835122751 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.836985382 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.844439775 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.830404081 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.833264392 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.834247309 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.835345877 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.840841369 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.835039834 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.836868591 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.840049981 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.835324747 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.83573449 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.833605374 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.836382777 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.833966245 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.835524723 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.842409072 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.83647728 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.838257503 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.836707029 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.830843475 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.8371527 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.83443847 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.83387552 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.837866657 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.835816934 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.836518482 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.835469058 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.83564756 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.834623476 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.836296098 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.836239083 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.832610999 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.83486689 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.84200098 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.836469039 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.842986679 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.83665556 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.844396936 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.837886921 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.844062732 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.838075298 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.836357209 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.837482843 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.835736046 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.837723066 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.835041571 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.837585002 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.837166061 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.83668096 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.840457777 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.838577676 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.839035005 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.836359998 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.839685722 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.836907495 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.84710976 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.863589984 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.838959336 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.84025847 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.833569023 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.838668889 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.844202614 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.838131672 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.836448684 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.839419934 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.84891696 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.84637184 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.836892212 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.838914099 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837218644 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.839881638 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.836962517 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.836275037 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.839160106 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.83717296 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.838695728 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.840085044 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.84008087 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.83678587 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.838595835 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.839928204 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.839895907 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.850413767 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.840912768 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.838976491 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.839266388 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.836773914 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.839121764 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.838818001 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.839385093 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.83928116 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.83778843 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.841063937 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.845303484 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.846461887 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.841289928 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.838174555 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.840279309 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.83949446 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.83987565 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.840300892 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.840261656 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.841487462 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.840650274 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.840741126 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.841055871 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.838020436 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.838770771 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.83951933 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.839065686 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842049517 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.846870777 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.839938 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.8364813 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.839713541 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.837861668 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.839318294 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.840412141 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.847679703 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.843621041 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.853474466 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.849085213 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.846085389 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.840251264 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.84368087 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.850709513 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.840419511 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.841029434 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.841848136 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.842281308 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.842125331 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.844847377 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.842539138 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.847946281 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.841749819 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.839826395 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.848600948 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.841224522 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.841982637 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.84300815 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.846366496 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.840096116 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.83870734 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.840877952 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.841816284 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.849492452 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.84406795 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.842911679 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.843286008 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.840401312 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.842852758 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.847772368 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.841338708 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.842376751 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.837835065 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.842649924 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.84320671 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.842462002 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.838976506 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.840481015 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.841133895 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.845109124 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.850652886 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.83885815 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.843956203 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.843183935 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.842746847 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.843373727 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.841413611 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.839045862 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.838501418 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.842923952 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.842888648 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.842027864 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.845125687 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.84179732 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.844940451 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.842917173 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.843619069 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.846086169 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.855252767 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.851658644 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.839923566 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.842865613 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.844549163 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.845572112 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.845645823 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.844862724 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843575934 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.844954941 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.843606327 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.845167022 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.844258769 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.847543171 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.861686806 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.844895087 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.844299037 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.846227271 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.849004863 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.844673221 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.841891246 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.844494156 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.845731047 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.847826354 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.854457768 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.845770941 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852109102 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.843594086 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.845997311 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.849141055 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.847398933 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.854097714 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.846263256 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.846801736 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.84725919 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.849549144 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.863974748 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.845412997 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.854803622 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.877860715 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.846130057 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.846592726 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.847741814 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.844769694 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.848212686 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.84665743 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.848259434 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.846545704 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.845352303 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.846767059 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.848029226 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.853455442 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.848208737 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.846596987 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.845567816 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.845967023 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.848286572 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.844083852 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.847561648 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.845215351 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.846928051 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.848746456 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.849154623 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.847448074 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.861463301 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.858211172 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.847275891 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.84901989 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.842899132 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.85093806 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.849817631 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.859659873 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.856195042 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.847893664 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.848602668 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.849223414 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.850343783 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.846025959 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.847482922 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.848428882 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.847814816 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.845136639 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.861802343 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.859607597 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.853492184 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.849615408 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.849808109 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.847333507 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.848440739 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.849787011 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.850392533 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.850346941 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.848392427 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.855412688 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.848513559 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.847855664 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.8533843 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.858440924 seconds)
  done (took 1095.364219666 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.845798403 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846783206 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845773276 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.846186699 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.84576808 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845925565 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846249662 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.845924713 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.845720926 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.847485786 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.846772343 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845632747 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.848139725 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.847450921 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847392469 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846288394 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846950241 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.847411298 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.847159273 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846439139 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846472727 seconds)
  done (took 40.554020695 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.848926873 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.848204463 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.847189853 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.85068908 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846914209 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.849698251 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.847440116 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850287638 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.850081632 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846664534 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.849284625 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850495572 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.84849853 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.848639469 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847935129 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850845672 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.849441793 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847008297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.850905481 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.848339832 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849756532 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.848170457 seconds)
  done (took 42.454067507 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.85267697 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.852719075 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.850011172 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.848198662 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.85134502 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.848304116 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.8527263 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.851058077 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.851266331 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.85116165 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.850453054 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.85235867 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.857950396 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.858606887 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.853066098 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.851602513 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.996226635 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.854433614 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.854145004 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.853929599 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.849139634 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.859710337 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.85055193 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.848108297 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.852626996 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.854267973 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.852440166 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.8519409 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.855252414 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.85582982 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.859469545 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.852504953 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.854436072 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.855294622 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.852356581 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.856229327 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.857936249 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.854893111 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.851222661 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.851944394 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.864015204 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.875698886 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.855270167 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.86202991 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.852887461 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.852978416 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.85818635 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.86386154 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.850556635 seconds)
  done (took 92.784913939 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.853034156 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.852906278 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.850676426 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.853195381 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.854157185 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.851826204 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.853273099 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.852039909 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.850522221 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.849917791 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.854795352 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.85122076 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.851238728 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.853701766 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.85323032 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.850569483 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.851669969 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850702376 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.851456758 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.851188651 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.851793489 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.854657682 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.853633355 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.852312673 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.853643558 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852463006 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.851061869 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.853998358 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.852198357 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.852226243 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.85461585 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.854498949 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.854107626 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.853335162 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.852113876 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.854522987 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.855474958 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.852099381 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.854688783 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.851438176 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.854974519 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.855463211 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.855187299 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.855801663 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.85279889 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.852978768 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.8525232 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.853786884 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.853110707 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.855997539 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.856328522 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.854712672 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.855659191 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.85278563 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.855874404 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.856478221 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.853007411 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.853196571 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.856621453 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.854816453 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.853106623 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.856237657 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.853720439 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.856330121 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.856592486 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.853361928 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.853450333 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.856931057 seconds)
  done (took 127.821947128 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.857797994 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.85846485 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.857971857 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.858861425 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.859154963 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.860087123 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.858978833 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.859078849 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.85904068 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.859078318 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.859706588 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.857412091 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.858556938 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.856532108 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.859330555 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.859186117 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.859203657 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.85952732 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.859201268 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.859623892 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.860237568 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.860641775 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.860471354 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.860876646 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.860995335 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.861208272 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.860737708 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.860967851 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.860400211 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.861293357 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.861487163 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.860051393 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.860733764 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.861606161 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.861575895 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.859937369 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.860480672 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8599639 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.860336298 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.860590813 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.860667923 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.859973653 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.860444592 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.861084849 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.860733639 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.861631963 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.860689096 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.862473687 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.858789114 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.862023267 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.860977489 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.861517208 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.86225759 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.861414199 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.861179996 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.860707597 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.861420944 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.861872229 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.861847365 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.86152886 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.861786276 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.859420782 seconds)
  done (took 117.123145201 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.860402349 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.860579436 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.856719686 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.857441681 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.859755621 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.857080198 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.860916119 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.860529634 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.8608477 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.860627563 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859503392 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.858075734 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85785412 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.859259326 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.857354593 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856878943 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.857492 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.858497534 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.859860901 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.858663144 seconds)
  done (took 38.967023873 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.858324676 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.862264823 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.858260282 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.859768735 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.85999996 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.859061095 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.861220051 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860126209 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.858660183 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86153439 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.860640387 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.861430619 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.858581997 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.859746244 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.862039836 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.858756021 seconds)
  done (took 31.549792051 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.857602658 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.861626402 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.863592837 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.863064748 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.859240795 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.858884908 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.861410402 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.858946332 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.859513608 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.862422494 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.862952334 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.862101693 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.862613763 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.864820697 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.859840268 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.861363298 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.860648516 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.860300318 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.861996544 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.865528713 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.860470409 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.860338178 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.863270032 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.86140457 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.859926927 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.860412222 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.860775181 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.861591635 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.860117702 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.862902148 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.861616832 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.861452798 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.861032417 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.861394095 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.866206496 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.861873094 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.863342738 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.863780219 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.863920036 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.863716859 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.864834048 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.860985082 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.863715878 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.864029494 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.860148805 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.86427357 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.861883305 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.861820615 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.861867863 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.861550695 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.864498414 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.867231778 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.86451853 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.864830398 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.864059026 seconds)
  done (took 104.20988916 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.863978686 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.864997912 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.861485567 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.865407544 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.864642557 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.86237433 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.86474834 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.861983927 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.862324466 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.864307485 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.863667556 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.864449775 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.86269884 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.865344873 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.863980561 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.865198503 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.862309464 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.862841759 seconds)
  done (took 35.339142011 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.864321327 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.863261376 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.865789693 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.863268041 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.862739166 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.865814364 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.862980399 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.865495606 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866358158 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.863319336 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864361715 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.866599484 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.866481307 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.866401938 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.863763621 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864496347 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.867016094 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.866465314 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.862929172 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.863543802 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.867405772 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.866622365 seconds)
  done (took 42.823238584 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.866823066 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.865410278 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.882548082 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.888623514 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.889488048 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.905377701 seconds)
  done (took 13.092959347 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864051532 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86768872 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.86446704 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867653463 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868460358 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864787267 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864940977 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865113804 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867463149 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865419627 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864287986 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866180015 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867340812 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865201867 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866666654 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867036993 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865546693 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864815736 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866355268 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868796278 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866034014 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86892103 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865179897 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865175568 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865432348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866301523 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868531188 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866379112 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866213022 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868521896 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869801502 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867412301 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869287851 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86669459 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870235923 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870162362 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866603296 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869162223 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869169374 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866902464 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.868540078 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869551256 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869931136 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867307293 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869065401 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866895633 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866852101 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867563057 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867810522 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870368025 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868745089 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866778137 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869891751 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869689355 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868926871 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870499554 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868055804 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868012197 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870986056 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868490751 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867940234 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869773083 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867906144 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867782653 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870871177 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869206348 seconds)
  done (took 125.058873802 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86811165 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.868859478 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867800729 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869551884 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869507809 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868884171 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867753537 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869643728 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869265638 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867960398 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872496331 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868323519 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868585264 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868555939 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868152126 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869474193 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869702216 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869185613 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870346827 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872791836 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868952166 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869496595 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869646294 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870073025 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870221403 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87258866 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869073104 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870454883 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869249002 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869792622 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869983147 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870757657 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870508718 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.87039398 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870788056 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870085061 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870170319 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870105451 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870243543 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872571655 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870078406 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8728079 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871557388 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870038052 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870766195 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870735693 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870083503 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871339137 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870803484 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870295822 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871695914 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871141084 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871456534 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871083405 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871474567 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871222189 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871162005 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870734999 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869706501 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873487292 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871313715 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871280927 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874486164 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872525271 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871503649 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871618408 seconds)
  done (took 125.24566971 seconds)
done (took 2552.394816001 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.873750005 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.988643834 seconds)
  done (took 15.662082256 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.036152276 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.991428823 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.873361357 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.882642292 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.870088065 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.893036102 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.885441772 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.870296892 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.87468481 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.874008944 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.873326144 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.065382524 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.877369487 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.869783235 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.874047011 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.966822587 seconds)
  done (took 52.560633296 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.877056164 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.877368192 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.889958359 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.879945098 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.877338732 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.89691656 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.90985274 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.882201471 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.937987375 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.888190169 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.999194431 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.886769741 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.87786318 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.93767135 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.886627137 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.891844588 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.966945478 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.952348642 seconds)
  done (took 36.11922205 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.959172392 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.881472342 seconds)
  done (took 10.653276546 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.874175662 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.892195567 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.877849812 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.873745352 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.864652483 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.863067431 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.904664326 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.892855462 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.88604577 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.901230554 seconds)
  done (took 70.636562193 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.873052537 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.870803234 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.866039598 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.863776538 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.856905079 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.857698968 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.86390004 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.857063727 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.564198405 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.896156648 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.870254897 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.870008699 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.865214134 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.866397715 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.86117113 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.88681371 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.003032648 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.861495331 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.860650971 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.869926577 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.864411252 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.935199845 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.879182283 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.865320272 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.894227705 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.560813279 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.870531226 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.871057884 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.974768576 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.861822766 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.863812266 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.863229988 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.867766247 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.241734348 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.184119421 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.859834879 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.870506323 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.871770909 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.862011865 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.991206115 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.865567012 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.870560774 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.859310186 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.169649415 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.96166608 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.909450617 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.277828727 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.86592697 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.867347797 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.895267186 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.868494587 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.866777714 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.878774976 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.37981199 seconds)
  done (took 132.573608338 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.86194475 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.15820022 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.014873056 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.862802951 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.132532443 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066007573 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.859198259 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911040201 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.859430195 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.066078536 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.023233673 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.967323285 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.858778168 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.860387357 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.855680017 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.85616787 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.023308024 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.927359671 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.860200971 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.859377443 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890548913 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072462706 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.984581625 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.860681902 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.880613685 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075830611 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.98372786 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.969415579 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.135558046 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.861216238 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.928363568 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.861115123 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.864552135 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.856665128 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.020581318 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.960785039 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950198018 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.860031617 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.857958709 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.860733536 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.529192842 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059914681 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.958653557 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.004310184 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.012539365 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065570995 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.50804263 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.861696842 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.504552698 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.025919359 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.077683981 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.075113799 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.987250105 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.86134844 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.068822919 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.862161248 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.86191884 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.099077913 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006137549 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.965401885 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.861805768 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.862184567 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.862346583 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.108459218 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.862137217 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.959072426 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864863166 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.860513843 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.964156616 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.969674942 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.003469401 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077131702 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.89697016 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.590799915 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.140113402 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.081300608 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.933817185 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098270996 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.863414901 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.858929737 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952523325 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.614784668 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.023989865 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.111628282 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.088465279 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89710377 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.47215853 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.863690084 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.060077822 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.050153843 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.059090424 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.013765311 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.01576284 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.364574494 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.862884695 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.863511441 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.09469495 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.003809302 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.864671231 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.224463819 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100335739 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.458912008 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.888233388 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.165830022 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999053679 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.201858021 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.492316323 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.866446994 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.034353077 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.90740726 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.866680909 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.867143999 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.056013683 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.678164897 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.865747382 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.627344291 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.927918546 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.866459719 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.071336767 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.86528799 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076581811 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.865144343 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106524754 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.195716295 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900978017 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.039295242 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.014463071 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.683186855 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114596581 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.110344623 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.984671497 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.137103747 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.659062136 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.867255617 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.143851209 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.865371666 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.866137563 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.034818955 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.868571135 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.017067856 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.866017744 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09902242 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894453659 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.026697548 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.866252563 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.106942513 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.904312824 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92074137 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.870011932 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.989537809 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868169681 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.749438947 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024926683 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.87154774 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.868747562 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.285563254 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.864792198 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.016464943 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.103899696 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894918287 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.940779436 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.39768861 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.868137192 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957541694 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896659209 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.611433258 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.8698912 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.025966977 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.868408274 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.317544442 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.868857671 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.114028716 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.102758567 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.871728035 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.868696447 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.614440245 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.592129985 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.868699709 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.02979034 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.075777644 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.519722988 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073292811 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873903612 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000254294 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.867520667 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.943515046 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.216783951 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.869062656 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.867894782 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.867304721 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.867415746 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.869632378 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.078117765 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.903585527 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.378281989 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.00537615 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089006612 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.181449735 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.097085421 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.915937115 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.870836527 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.116107237 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.873994485 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.936939582 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.872181197 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.895473502 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105288665 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873483241 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.083654477 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.130700808 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.799449877 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919903288 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.873539799 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.865266485 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.867849173 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.020932017 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.959863817 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.873664093 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.869848728 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.982153586 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.990943456 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.061916209 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.486680598 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.943260596 seconds)
  done (took 898.012407419 seconds)
done (took 1218.017428137 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.870138031 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.869979949 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.855959047 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.863195602 seconds)
  done (took 29.261360222 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.872381041 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.869640708 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.872389184 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.869953951 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.872594495 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.870184128 seconds)
  done (took 13.025319163 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.992304788 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.863254009 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.864609456 seconds)
  done (took 21.517349652 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.939245235 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.283903147 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.976763345 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.322725161 seconds)
  done (took 10.320578036 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.874198572 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.874519297 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.874059733 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.873492484 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.873819999 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.876226978 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.872960881 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.875223149 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.87608383 seconds)
  done (took 18.67027652 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.228429556 seconds)
done (took 98.825991189 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Int8, false)...
    done (took 4.877864071 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.252459474 seconds)
    (3/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.347258645 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.223291327 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.850758613 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.914900985 seconds)
    (7/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.805428929 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.009085031 seconds)
    (9/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.006665231 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.909751707 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.083486791 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.91500317 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.169323675 seconds)
    (14/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.906891266 seconds)
    (15/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.376320938 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.895711296 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.148744997 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.944911368 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.235756063 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.192583096 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.536598881 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.978579554 seconds)
    (23/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.951552622 seconds)
    (24/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.994972621 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.882129859 seconds)
    (26/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.783802803 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.034674831 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.852239851 seconds)
    (29/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.283662672 seconds)
    (30/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.977579715 seconds)
    (31/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.47828961 seconds)
    (32/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.973053767 seconds)
    (33/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.135572383 seconds)
    (34/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.195267445 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.938686679 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.218850968 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.973715602 seconds)
    (38/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.949689922 seconds)
    (39/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.093307244 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.035435052 seconds)
    (41/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.444166614 seconds)
    (42/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.336450851 seconds)
    (43/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.935902606 seconds)
    (44/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.226194422 seconds)
    (45/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.037951304 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.871840316 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 3.352041922 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.271559296 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.173957712 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.915566184 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.973984912 seconds)
    (52/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.06323238 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.982666628 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.89361922 seconds)
    (55/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.867957007 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.190078119 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.052256738 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.252999436 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.854285719 seconds)
    (60/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.764084361 seconds)
    (61/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.989226656 seconds)
    (62/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.041680406 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.931829222 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.466283671 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.376692156 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.255326804 seconds)
    (67/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.354341088 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.07445799 seconds)
    (69/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.079349306 seconds)
    (70/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.039083237 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.858607309 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.95411446 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.88015749 seconds)
    (74/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.970615029 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.868855273 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.509019341 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.259910012 seconds)
    (78/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.463612511 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.117713161 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.785592136 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.576289981 seconds)
    (82/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.854227228 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.512713396 seconds)
    (84/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.903449484 seconds)
    (85/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.074091428 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.87381951 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.988507698 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.176151275 seconds)
    (89/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.525933806 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.320865623 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.870160929 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.144755509 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.832910014 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.250933571 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.870467642 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.86836153 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.173160466 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058517361 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.947078951 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.974508768 seconds)
    (101/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.873972647 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.163924799 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.857423917 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.204736499 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.17687895 seconds)
    (106/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.877825764 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.15255026 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.848943924 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.095372707 seconds)
    (110/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.38326869 seconds)
    (111/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.051060714 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.519240607 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.111368362 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.871659153 seconds)
    (115/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.901020853 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.980619534 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.473459046 seconds)
    (118/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.260133503 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.170607034 seconds)
    (120/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.899605804 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.97527695 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.094194921 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.790811133 seconds)
    (124/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.07762748 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.859889612 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.07689355 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.186081507 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.881735444 seconds)
    (129/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.961917665 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.388314742 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 2.457585995 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.898132568 seconds)
    (133/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.894217046 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.130923388 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.196776537 seconds)
    (136/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.021714519 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.863192003 seconds)
    (138/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.524353474 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.09453632 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.134735928 seconds)
    (141/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.390705772 seconds)
    (142/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.905318746 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.098262868 seconds)
    (144/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.972658562 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.315116141 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.006353356 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.119791995 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.878566052 seconds)
    (149/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.162297736 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.310133072 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.074472808 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.939603372 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.100605861 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.901878184 seconds)
    (155/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.972271816 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.495786745 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.719529174 seconds)
    (158/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.988834262 seconds)
    (159/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.167484553 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.258115216 seconds)
    (161/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.283992783 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.894509668 seconds)
    (163/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.118150243 seconds)
    (164/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.323376466 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.949492597 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.35562033 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.484820603 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.958569995 seconds)
    (169/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.505528219 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.113119525 seconds)
    (171/309) benchmarking ("sort", Float64, false)...
    done (took 5.690141413 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.265940584 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.910267066 seconds)
    (174/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.416541197 seconds)
    (175/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.035908559 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.025371183 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.909436324 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.860913374 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.900047987 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.839670302 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.016913094 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.233426074 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.948875883 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.525891249 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.923360148 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.571054989 seconds)
    (187/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.024233936 seconds)
    (188/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.276877438 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.864854755 seconds)
    (190/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.145773862 seconds)
    (191/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.940157384 seconds)
    (192/309) benchmarking ("sort", Float32, false)...
    done (took 5.651868783 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.867583169 seconds)
    (194/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.920077336 seconds)
    (195/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.9574193 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.170875294 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.842581649 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.154456201 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.101840401 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.805616138 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.009621781 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.901889868 seconds)
    (203/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.008544638 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.87753921 seconds)
    (205/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.817350662 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.773049815 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.080683257 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.899320416 seconds)
    (209/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.904051373 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.877746174 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.862881521 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.007252066 seconds)
    (213/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.513260672 seconds)
    (214/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.980947626 seconds)
    (215/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.013928397 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.777380928 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.046040376 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.880332998 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.220113279 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.531003342 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.162916244 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.034596788 seconds)
    (223/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.223929998 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.836813161 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.921020107 seconds)
    (226/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.574357739 seconds)
    (227/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.995710164 seconds)
    (228/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.178634046 seconds)
    (229/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.123539641 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.910645029 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.980294668 seconds)
    (232/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.944187922 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.809628123 seconds)
    (234/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.966830379 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.865278374 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.921191449 seconds)
    (237/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 3.244988645 seconds)
    (238/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.876481273 seconds)
    (239/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.924603293 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.184476981 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.902750022 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.117663803 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.883858816 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.20138445 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.877726627 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.882195593 seconds)
    (247/309) benchmarking ("sort", BigInt, false)...
    done (took 6.915490729 seconds)
    (248/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.229919236 seconds)
    (249/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.011404065 seconds)
    (250/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.027626748 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.910365076 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.176389918 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.847440847 seconds)
    (254/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.380021246 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.696794266 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.535343252 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.986077732 seconds)
    (258/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.020103325 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.885636655 seconds)
    (260/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.067285848 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.901561556 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.906779727 seconds)
    (263/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.733477474 seconds)
    (264/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.901978373 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.214734841 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.175596343 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.999479563 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.881182443 seconds)
    (269/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.018677576 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.262411151 seconds)
    (271/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.985067611 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.222565038 seconds)
    (273/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.237964103 seconds)
    (274/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.488369132 seconds)
    (275/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.427925084 seconds)
    (276/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.45074371 seconds)
    (277/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.994979979 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.823051152 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.989823503 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.931725842 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.965061352 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.98082531 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.964096862 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.0265703 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.267308346 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.578078769 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.684851914 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.91555183 seconds)
    (289/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.014420238 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.183197894 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.984594869 seconds)
    (292/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.502038422 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.921825432 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.955821738 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.883729686 seconds)
    (296/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.946370238 seconds)
    (297/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.946450903 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.097223614 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.962213277 seconds)
    (300/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.833518965 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.569741846 seconds)
    (302/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.881643348 seconds)
    (303/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.958159506 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.927734863 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.869743726 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.934268542 seconds)
    (307/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.262258906 seconds)
    (308/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.986584611 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.695221627 seconds)
  done (took 1022.107584581 seconds)
done (took 1023.968633809 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.923260431 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914250874 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.895669246 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.91791891 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.009530028 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.933228483 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.908104632 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.897741056 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.94387651 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.944835792 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.896414787 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.934171742 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.898428427 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.897306391 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.896518663 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911599629 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.207021901 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.922620403 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.914614175 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.905996282 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.913112183 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.896552751 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.945353156 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.933720467 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.900354003 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.899752263 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.900835424 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.918331762 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.009455355 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.900951424 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.900230209 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.910198448 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.20493426 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.920843549 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.892340898 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.917472256 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.910153542 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.906809618 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.900362381 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.930563479 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.355850278 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.901217773 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.901393917 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.899301961 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.899075732 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.902148439 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.900853545 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.904433738 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.911430065 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913574033 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.353784284 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.918288514 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.90270997 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.899246826 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.907974759 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.89889608 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.9017916 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916831445 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.920480495 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915721303 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.198997565 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.92819458 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.90081474 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.916855744 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.908101593 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.390018702 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.89806207 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.90290105 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.355190863 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.907109062 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.390015009 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.913859032 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.900729841 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.915344791 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.933208911 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.209226141 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.919137581 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.899162947 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.90878222 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.899585853 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.910609781 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914223095 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.905527417 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.900536029 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.914156 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.93717112 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.910105058 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.902093698 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.909979705 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.921189655 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.909843442 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.914203863 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.904637239 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.897394979 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.910268346 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.905592378 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.905078973 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.905961239 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.906633864 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.913327955 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.35617136 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.92295568 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.897399447 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.898069524 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.900500261 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.916808163 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.355015413 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.907638989 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.92368545 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.948775417 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.902173917 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.200723992 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.930477352 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.919569368 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.911400676 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.905054126 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.897744604 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.199923674 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.380669534 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.922165138 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.904160894 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.902409067 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.919011556 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.904578032 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.900360716 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.212083997 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.929992369 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917915454 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.024819183 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.913401869 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.935755399 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.901503362 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.90660627 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.937228294 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.920100361 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.935904334 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.906046777 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919414716 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.920183123 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.900146466 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.915131068 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.912920886 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.903905295 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.909870893 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.898736914 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.938324363 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916759346 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916957086 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.925813238 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.026371738 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.901684229 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.203069342 seconds)
done (took 298.811983123 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.97253359 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.898225186 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.000562535 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.899036945 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.984770317 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.98866735 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.896808619 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.897129677 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.896915241 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.279538856 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.897712204 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.898120089 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.892278011 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.897247867 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.985212764 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.89947629 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.897649397 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.241888019 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.902421162 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.971521175 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.892574049 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.897964052 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.90013256 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.284151055 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.897332137 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.897641526 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.971630293 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.900245862 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.248947768 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.89531583 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.900681657 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.248350784 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.990767999 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.918520775 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.911897924 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.909005074 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.987686206 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.907164894 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.983979085 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.98311896 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.002943582 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.943582997 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.897150055 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.894876963 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.904852497 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.905050995 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.900423586 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.930078722 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.899184487 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.898665091 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.267423628 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.911886098 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.900489345 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.900202157 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.900280851 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.934472233 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.899546052 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.903802294 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.993451813 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.904274623 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.966456541 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.286020126 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.283508769 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.903064984 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.897572865 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.899829807 seconds)
  done (took 186.478718294 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.968621537 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.976243615 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.970779714 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.90578944 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.954441537 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.976557615 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.904540118 seconds)
  done (took 15.484505584 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.909849477 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.903343595 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.953407192 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.955191343 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.904241735 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.053998294 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.904689018 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.91663577 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.360150179 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.956926386 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.90524506 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.904900434 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.909333827 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.903563784 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.954603456 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.915490287 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.018746712 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.904055725 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.90532637 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.055370912 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.901128459 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.911177274 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.957789568 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.916018266 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.906295779 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.909472218 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.487112989 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.906257656 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.900702457 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.904688263 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.901261787 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.947476377 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.904366689 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.902421749 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.901445522 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.020395447 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.905246916 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.90184727 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.904476159 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.89942917 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.904005591 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.905240022 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.905254895 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.900587994 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.904110676 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.927857665 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.903753339 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.903180327 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.903851488 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.906294346 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.955065385 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.906206045 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.901259961 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.902131317 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.96209415 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.911353728 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.906927435 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.903447299 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.904900833 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.900925409 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.058224486 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.952528501 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.904950364 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.953577717 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.905881764 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.906960019 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.904867894 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.90526677 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.96008827 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.905879223 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.953765344 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.903204876 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.065823187 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.929671982 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.907335816 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.907710413 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.910077021 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.908034439 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.906034955 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.914423717 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.904565489 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.908352997 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.913478825 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.903792403 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.903958067 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.019547838 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.015271777 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.90389355 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.920012283 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.915274996 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.904803897 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.962039176 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.907072866 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.903538149 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.960694716 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.022430946 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.964615454 seconds)
  done (took 209.731619909 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.912733075 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.915078369 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.909599036 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.924538343 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.908057432 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.907860693 seconds)
  done (took 13.309383182 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.910360452 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.909004979 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.90752363 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.906755154 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.909136992 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.911219421 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.910671718 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.909049911 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.914140604 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.907753921 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.910497406 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.910115205 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.912627653 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.909425431 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.909248857 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.90699499 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.910630006 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.905194065 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.907449548 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911036045 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.052944807 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.910142068 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910351545 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.911424066 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.91491903 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.908424289 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.917037989 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.908542842 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.911565026 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.918838647 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.914198471 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.912058419 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.911876536 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.917642537 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.915657908 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.910492571 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913236757 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.911148275 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.905723503 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.912847172 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.911513584 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.912324706 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.909679642 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.911931537 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.911904372 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.917972551 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.916371805 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.918506634 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.913354633 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.911869821 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.911993412 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.909728733 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.910402112 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.912663954 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.914008698 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.916036812 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.916759506 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.912407551 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.911699269 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.91149079 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.912547751 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.912924294 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.913134879 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.916730789 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.918489722 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.912563803 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.912601632 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.918306021 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913562154 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.910155118 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.913345057 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.907271027 seconds)
  done (took 140.636868205 seconds)
done (took 567.482796788 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.136040049 seconds)
  done (took 8.96843979 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.043168264 seconds)
  done (took 8.95782153 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.612134739 seconds)
  done (took 10.447920988 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.925758075 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.927280816 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.914344712 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.910744498 seconds)
  done (took 29.525214273 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.910999547 seconds)
  done (took 8.747465951 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.920663815 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.900066783 seconds)
  done (took 15.689501455 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.021862689 seconds)
  done (took 8.85888516 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.033180899 seconds)
  done (took 8.872303672 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.928982508 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.916017809 seconds)
  done (took 15.694610997 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.892709717 seconds)
  done (took 8.729327568 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.664973003 seconds)
  done (took 11.509015585 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.919140508 seconds)
  done (took 8.769428548 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.908660341 seconds)
  done (took 8.745373807 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.152430413 seconds)
  done (took 9.988992006 seconds)
done (took 165.338342285 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.910810949 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.900692441 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.900853731 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.901726118 seconds)
  done (took 29.449041257 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.946208178 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.945543011 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.946758931 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.956770763 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.948372874 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.947610389 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.940159644 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.938789498 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.957775915 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.949633699 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.948849205 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.94788787 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.946366735 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.941610772 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.949877623 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.964705201 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.958119939 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.948773611 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.93881169 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.949449925 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.914049629 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.959577576 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.949700963 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.914592977 seconds)
  done (took 48.548347103 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.115460404 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.987355186 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.068082721 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.966613432 seconds)
  done (took 9.975345793 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.965315596 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.967949914 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.980535445 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.019692704 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.044506221 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.97764625 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.941870689 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.935836688 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.922020092 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.968386358 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.04459292 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.984504247 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.052281269 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.91436375 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.101331648 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.914286555 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.915347551 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.966645336 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.020578484 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.031326309 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.916050309 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.966995194 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.970317439 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.985664192 seconds)
  done (took 49.345975861 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.912341956 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.922083187 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.919967412 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.913410965 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.914736277 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.914458745 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.920903798 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.915323455 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.935693484 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.916326398 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.915437215 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.914778272 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.914404047 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.915315447 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.915892664 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.929784529 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.929946516 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.916519925 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.918311892 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.921930265 seconds)
  done (took 40.216602504 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.911318759 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.850185883 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.261692316 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.167637398 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.912402009 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.905062669 seconds)
  done (took 32.848720827 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.930469625 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.918516328 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.915905498 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.974948124 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.054440921 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.922485726 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.917078485 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.928862931 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.965222441 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.980399595 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.934041053 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.944942989 seconds)
  done (took 25.230506868 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.913106467 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.911323527 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.910602767 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.927985985 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.929273396 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.921925034 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.925046302 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.911386373 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.929029909 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.932024927 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.922914107 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.931184539 seconds)
  done (took 44.912419478 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002824926 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.956175477 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.942648532 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593009587 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.296407948 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120108826 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.56471534 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244333626 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.913537634 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187677173 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.974544353 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01597188 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.169589166 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.516213094 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.949470278 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.379844517 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205774563 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123484228 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939938538 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.583604752 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976807942 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.204295003 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.705649161 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.972647058 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126126272 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.043679527 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.173786144 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.912885716 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045133984 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949055365 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925834671 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914980707 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187738262 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296412927 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015350697 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923640763 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.535273978 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.624297633 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.901920167 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.705219264 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.612863285 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.031846328 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924929746 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914714852 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849950542 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.178461133 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292953762 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.917081788 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.62698911 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.915503887 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926954306 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008816297 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.919020857 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.735541715 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.903867434 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.9161095 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.911763651 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921551522 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.482978406 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.029872056 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.218783706 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.890934793 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.007879148 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.591681503 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301391673 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.059748151 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.919620188 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919008906 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850256378 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.658675282 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971173897 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276580377 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.933875989 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.580046856 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224140717 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.010887476 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.861126376 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184202556 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.575334223 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.890924876 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144435578 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915939228 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852897838 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.864516047 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852437077 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178554592 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950872431 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.692919728 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957152274 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.248918032 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925494161 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938223479 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94007464 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.141376093 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.80194247 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920252019 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.730168816 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061002246 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935756591 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250072847 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851508348 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.917504469 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175635334 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.129208835 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.090274765 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.421697722 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071916459 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.621221939 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.972213277 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.173662366 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968219026 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.185030257 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97460016 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.028222705 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969741062 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.920038222 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218719274 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.623356884 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.057399594 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.975709208 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048380412 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.250194228 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940924244 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000109991 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92195813 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.92171405 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.7184702 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.472379712 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.919828348 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.922396871 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.096332134 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.96894643 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.923945084 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885840252 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.561427761 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.989991502 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.937053864 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.146284648 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.624241308 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233039749 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856620147 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260781659 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983055798 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.141260068 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.561489943 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.986485787 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18601286 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.096858593 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.131087541 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969035892 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941842382 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019517022 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944553429 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.167554299 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.216647378 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.927183848 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.92564148 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.687754631 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.957155654 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927961176 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.927916855 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712040092 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190370048 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93976471 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.925722916 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.811191293 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.935872367 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987598294 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928654961 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933501533 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.471600525 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.632777843 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.927834836 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.533348359 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148225231 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932606711 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.621086774 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036575931 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.005596641 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187770081 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980440146 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.857683571 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.633358939 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.616353501 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923428812 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857701336 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.922424327 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932701485 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93480793 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.120263905 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.194697567 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963867067 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.598111062 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.96768886 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936778585 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.930783275 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925702316 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.443660474 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.040339415 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.220807214 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.972300258 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07020145 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.937532891 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.860870501 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.928651462 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929745671 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.924181591 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.925710554 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95714527 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.596295647 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319985139 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184243811 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.66278506 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936158632 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.621468217 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.982942227 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.929868607 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.745882058 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.205591552 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.959513542 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949758397 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.936155861 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.679860694 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.632328284 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492395042 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248477252 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222634013 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358804789 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.25856202 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.95287531 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265660063 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858012177 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.49111871 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.99099767 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266968715 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879130421 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009210537 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.561936542 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260670606 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941582207 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155726509 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304984249 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.672058822 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067153216 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138946122 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962140845 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.189164034 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.889938292 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.208585815 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07284314 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.600600882 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130988502 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26251388 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.601137398 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.048442938 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.928751688 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.605517296 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011724788 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.638837787 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.108041567 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.212050158 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.897720384 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413775087 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.935001953 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.160125162 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280238119 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.195976019 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.053820213 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860043678 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938828624 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938530266 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.929945761 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.9330829 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.819275479 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.178648734 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939130995 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863389287 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.139621348 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217078114 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.829564368 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.933325902 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930826588 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229633431 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.586636117 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094910604 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.123511305 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.459379404 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934584242 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.862913923 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864533374 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.622531022 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.937166196 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903148261 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133139808 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.03190252 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924031024 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.104273136 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015363606 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187066752 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.944059026 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195533406 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202553592 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.628166264 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952855864 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.029703921 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.621577564 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.034034831 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930793936 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166575951 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72261198 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156064835 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.979180146 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.877520567 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.930139726 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145211798 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.931385777 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.860241404 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156556954 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.648105595 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.938164321 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264133402 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001608496 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.863672498 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.979655934 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.024753868 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941339392 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010427668 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942427476 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.941665118 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.942540544 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976956309 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.86081657 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.051530336 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.946651947 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026704536 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.051989425 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.461753266 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.934827697 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20300636 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300189284 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250128862 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989318715 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.932013132 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942025587 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867880798 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077133044 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.163287366 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2051568 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.0527211 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.048118292 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956815691 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.626602117 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.232767689 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175220048 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207498299 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.832853434 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.558593433 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.974738054 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.933118624 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945048176 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.144721582 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143966656 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233617771 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071264504 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.11687518 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.29679775 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205349124 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.935025215 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.933669522 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.524544359 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.938823772 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.620116687 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.974533139 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.870772197 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208170963 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944519341 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31051466 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.951168376 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.094035105 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.707510922 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60876205 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.226458406 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.915949568 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.987162794 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205126077 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319803708 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247649324 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002083241 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946027124 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.052883731 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082799334 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.824793873 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.931886112 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936688199 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.984261027 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.645978764 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.946072966 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209176949 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245816989 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.93219078 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.835357352 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954439441 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.945663403 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.159890037 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200149238 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184561854 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945118209 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.943652917 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.752013818 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21037239 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992936016 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871150773 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.936429126 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032762675 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.18376235 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957719997 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.387860877 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.648759868 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207539933 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.937008543 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957824498 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.21552877 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304713759 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254036242 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.479950928 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142323045 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.524169579 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.647941957 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241592245 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.942608575 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.198631594 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241199873 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.94018695 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.126166241 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97768769 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.202836897 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249238062 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.947840614 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.619721685 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.907902361 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.280085072 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.503767871 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87741041 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.943660797 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.998949835 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.934686782 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.059318216 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945532616 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.835368739 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.207187161 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.698820201 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220083477 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.94001187 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.928837463 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.662333595 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.331275714 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9732032 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088877856 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942941504 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.613378784 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.289457499 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.196293809 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.131860527 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.945690565 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.94437657 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93953546 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.937967182 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.142635645 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.137575173 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21067671 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.15580781 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.97682436 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943214868 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.156277513 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152313935 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.849476269 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072959446 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.127495158 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982470883 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.848675229 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.450226215 seconds)
  done (took 1705.781078712 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945082539 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.975426843 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.996471541 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.015392755 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.985109047 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.991430053 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.018359535 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.974318112 seconds)
  done (took 57.772283487 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.954569829 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.132214422 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.950130455 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.941510198 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.947084936 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.942206737 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.107892249 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.950058466 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.946861027 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.951353901 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.940074545 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.93671553 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.252471704 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.965518746 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.942375438 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.923573666 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.946039316 seconds)
  done (took 75.615123284 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.944052238 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.073739481 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.970001134 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.951070248 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.905839408 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.947501881 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.757681031 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.012166236 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.940966538 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.19228142 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.574848826 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.979836506 seconds)
  done (took 91.121976485 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.953256025 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.949815902 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.950364338 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.950903215 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.949580134 seconds)
  done (took 11.630611897 seconds)
done (took 2224.311049337 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.258726429 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.162337117 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.173688217 seconds)
  done (took 6.209631459 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.093420259 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.138898919 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.261752536 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.266886938 seconds)
  done (took 10.63739888 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.22853264 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.330345096 seconds)
  done (took 6.433143592 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.355489791 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.955556183 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.325539554 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.94300525 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.939115021 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.94523847 seconds)
  done (took 22.706432957 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.947838295 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.952849504 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.94792504 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.95013441 seconds)
  done (took 9.67170549 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.929852903 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.628811723 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.931125281 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.943281444 seconds)
  done (took 21.304250584 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.69760865 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.707591769 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.690351424 seconds)
  done (took 9.969633216 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.403657156 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.823878658 seconds)
  done (took 9.099797111 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.205963644 seconds)
  done (took 4.078911929 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.078849234 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.25447172 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.454284707 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.468555992 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.553206229 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.660104395 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.280247743 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.203813211 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.341075306 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.399025801 seconds)
  done (took 25.567420693 seconds)
done (took 141.444430863 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.337036207 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.186446172 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.163850245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.293281128 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.182047925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.162890499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.353076875 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.275690184 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.797528012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.793702957 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.286823379 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.174899552 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.088302755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.190034022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.086978844 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.192684334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.216265176 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.348827739 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.024498517 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.184367113 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.353597428 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.931397172 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.130799927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.943009064 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.190291813 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.109064717 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.507570168 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.190726245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.181800818 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.513651737 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.113175004 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.338963612 seconds)
  done (took 175.717311669 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.715713721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.944817264 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.944896623 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.943646393 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.544813231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.945521702 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.946490609 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.945575587 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.232580494 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.21409151 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.94293205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.528103003 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.946166857 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.945236668 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.950082201 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.943869703 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.362556968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.783906302 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.957235383 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.960044573 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.965036716 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.491875603 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.961856242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.541308484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.376747339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.962555768 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.944515362 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.961259179 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.946103938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.949269907 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952301381 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.947453711 seconds)
  done (took 211.578738205 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.948489793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.946808555 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.943128309 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.947564209 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.968234705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.945096491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.946503109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.946279933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.50722723 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.502383392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.944942404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.966077686 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.949462275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.946113617 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.952920533 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.945930392 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.954299842 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.946217614 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.945888434 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.952399086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.954198352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.758341163 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.952224398 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.767809824 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.951999014 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.95052724 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.94913033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.955783845 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.954667506 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.95616807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.954649127 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.947567891 seconds)
  done (took 223.048773583 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.154047879 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.957222202 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.958906426 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.91151982 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.956543981 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.957943015 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.950945985 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.154549337 seconds)
  done (took 19.895466207 seconds)
done (took 632.130546817 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.399381562 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.241258555 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.132654701 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.97916394 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.216435028 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.014002777 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.977472275 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.041109824 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.714906013 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.04474027 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.662690792 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.995387839 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.757428678 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.000527133 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.104955903 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.033426009 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.511654016 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.601963824 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.154188407 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.038658387 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.144192635 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.936553383 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.055274245 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.733768523 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.774649973 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.986045191 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.15025579 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.521521265 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.987988523 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.144182431 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.709304112 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.377025028 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.991182251 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.975163652 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.027619622 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.009171216 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.32670713 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.985389697 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.097101007 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.746382655 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.030208797 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.597638905 seconds)
  done (took 106.810110427 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.949649295 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.947146369 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.94810621 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.948389054 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.948508763 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.948993336 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.94956156 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.947173702 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.947115531 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.94729961 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.946843408 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.948599702 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.948452361 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.950443226 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.946891577 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.948145669 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.948972219 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.949761906 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.948564154 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.947672619 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.950400219 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.947071222 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.950629675 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.947588188 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.951012751 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.947425839 seconds)
  done (took 52.55445188 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.963330217 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.103305925 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.183777751 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.97814092 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.959926575 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.964630272 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.981333747 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.965484242 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.965097151 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.964401026 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.050750979 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.967093788 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.981571446 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.189846547 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.976096522 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.96217631 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.96476933 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.96437807 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.113320255 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.979171775 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.981868597 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.969375563 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.983899331 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.976117811 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.967188479 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.964935791 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.967180531 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.432985195 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.97129721 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.055030492 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.007525708 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.9824147 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.398988858 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.195544128 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.014650743 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.968003131 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.964810846 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.058952537 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.969606907 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.963327783 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.981819601 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.968453591 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.188350028 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.457119175 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.975007438 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.963674322 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.44546814 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.062998985 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.003230188 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.971991807 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.193524282 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.976954115 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.965325282 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.96335109 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.000500187 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.975593852 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.964252735 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.328196055 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.973192069 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.982711347 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.969612589 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.967080885 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.118127367 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.968404175 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.108774167 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.973686389 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.973435095 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.964851595 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.192031067 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.978871531 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.460510808 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.976997179 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.963719643 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.055157386 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.109530677 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.467931702 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.975110298 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.121255918 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.417572373 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.986677368 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.971007336 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.425067663 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.989323028 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.970904588 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.966940875 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.968332617 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.966386262 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.020906487 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.981987823 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.404076082 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.463026897 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.341581122 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.990876931 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.982358203 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.966383335 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.332012734 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.970198329 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.967491143 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.189790909 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.474417233 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.975902998 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.973543166 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.451338825 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.980501922 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.985512742 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.977044274 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.196421336 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.979028093 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.010580238 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.96707831 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.975240125 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.968823168 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.985413634 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.974187398 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.96712795 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.44162537 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.072469117 seconds)
  done (took 243.176910534 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.964820852 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.959257384 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.961884766 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.959433822 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.961510361 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.969507301 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.961955399 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.962037644 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.967172119 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.961525164 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.963853891 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.962596047 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.964796905 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.965567714 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.405737493 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.971121365 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.573798759 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.964192914 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.962660953 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.960347752 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.642159588 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.966638682 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.962901512 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.970651161 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.963638022 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.966189032 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.965041467 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.995098521 seconds)
  done (took 170.650142256 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.970167617 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.151966388 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.985378728 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.006172098 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.974908944 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.968269095 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.995896641 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.988417426 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.974250143 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.968137742 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.969717683 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.032539643 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.979644883 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.101871275 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.002289594 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.001093805 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.073288222 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.977022188 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.96919728 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.968402051 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.001062755 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.967702526 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.033221295 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.094361665 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.986047071 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.091201646 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.973592399 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.972090397 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.970601454 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.090484281 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.985848089 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.032356668 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.995933798 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.99015605 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.090972303 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.086138838 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.076535416 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.000751939 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.972539489 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.971967992 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.973891857 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.960541193 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.089803118 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.989407154 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.974295962 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.080865627 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.99137706 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.974865129 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.983266887 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.970758843 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.985109184 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.990194856 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.040058067 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.101658496 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.006435231 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.998945362 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.000174138 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.261528766 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.983522913 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.075051374 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.966168019 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.094104988 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.991753053 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.962482703 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.973667087 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.977772282 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.001973468 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.004314868 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.075618431 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.980473415 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.072702034 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.005030767 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.979217696 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.971931426 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.976585428 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.094760884 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.09483389 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.006128432 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.0108918 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.005694002 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.970371407 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.973955384 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.964562591 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.991033744 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.977241935 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.092263075 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.090549797 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.978395486 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.975908453 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.976101342 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.976417161 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.000664008 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.097832159 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.010058022 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.073430214 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.040284718 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.048497135 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.989315354 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.986838369 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.977336698 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.038296828 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.989099149 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.984345859 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.315884412 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.048203746 seconds)
  done (took 213.582734843 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.432710429 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.026397909 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.031196516 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.262629516 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.414157175 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.841859743 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.021534123 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.024397835 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.050038843 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.189302398 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.081514686 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.037421527 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.011846711 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.997129453 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.025381508 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.047819184 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.030545003 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.324027102 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.146739207 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.123519245 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.007417923 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.309416303 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.346000909 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.397362121 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.05603313 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.348644152 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.698262684 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.268613641 seconds)
  done (took 64.460083505 seconds)
done (took 853.110918192 seconds)
SAVING RESULT...
DONE!
