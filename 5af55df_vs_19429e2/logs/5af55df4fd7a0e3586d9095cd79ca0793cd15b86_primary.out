cset: moving following pidspec: 8442
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.162148273 seconds)
loading group "string"... done (took 0.564252339 seconds)
loading group "linalg"... done (took 9.726683261 seconds)
loading group "parallel"... done (took 0.16852569 seconds)
loading group "find"... done (took 2.489138947 seconds)
loading group "tuple"... done (took 2.257741714 seconds)
loading group "dates"... done (took 1.403265597 seconds)
loading group "micro"... done (took 0.582561721 seconds)
loading group "io"... done (took 0.559700644 seconds)
loading group "scalar"... done (took 53.484614141 seconds)
loading group "sparse"... done (took 13.711890388 seconds)
loading group "broadcast"... done (took 1.333598358 seconds)
loading group "union"... done (took 2.550982636 seconds)
loading group "simd"... done (took 3.558228529 seconds)
loading group "random"... done (took 13.456634954 seconds)
loading group "problem"... done (took 2.278386309 seconds)
loading group "array"... done (took 23.359504865 seconds)
loading group "misc"... done (took 1.08773944 seconds)
loading group "sort"... done (took 3.752940929 seconds)
loading group "collection"... done (took 20.436146314 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.783186186 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.158429993 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.238722116 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.882053158 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.295225531 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.202863367 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.19743621 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.171551843 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.636755205 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.231157119 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.191925664 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.399816695 seconds)
done (took 7.203651735 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.346258138 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.090059777 seconds)
    (2/2) benchmarking "String"...
    done (took 0.20730646 seconds)
  done (took 0.950426028 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.091517295 seconds)
    (2/2) benchmarking "String"...
    done (took 0.150400132 seconds)
  done (took 0.894188081 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.131324451 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.164087556 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.143309565 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.126896793 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.143508612 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.126711155 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.143679724 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.124974971 seconds)
  done (took 1.624419208 seconds)
done (took 4.600763966 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.519842223 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.969556464 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.559116561 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.202051811 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.347253935 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.353515625 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313246957 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.256216311 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.145761971 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.096829073 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.221547935 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.480736272 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.450149282 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.98825528 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096961074 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.150653655 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.184795846 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.875139639 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.119385223 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.154170513 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.532974689 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.241855197 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.15620024 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.135470998 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.243087686 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.167516972 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173665729 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.191678774 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.809169657 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.175468612 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.23878246 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.123391879 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.173012085 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.204635589 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.27912481 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152790519 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.779714027 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.240641844 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.125831295 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.141431812 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.767012201 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.163743727 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.238876885 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.145557546 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111975133 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181320195 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.141623945 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.118235915 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.14992535 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.140078148 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211218689 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.572614436 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.14501006 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.227469569 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.149823871 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.769398679 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.136886681 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.324645194 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.163246947 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.147489635 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.131842254 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.1279324 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.212496436 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.136382916 seconds)
  done (took 23.063411905 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.205287138 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.221911809 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.136052497 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.183752347 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.189948457 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.137251253 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.128349702 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.136458623 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.155083268 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.236100764 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.185352272 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.231433411 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.115677001 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.148116461 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.178683616 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.294445963 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.165550451 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.149073845 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.148353363 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.134517246 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.185424836 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.142276612 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.154757808 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.136846033 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.219702101 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.266505538 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.153369922 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.168492376 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.148912512 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.138699621 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.186685751 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.209390803 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.123564526 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.148200899 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.217270157 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.168525131 seconds)
  done (took 6.933815536 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.262939023 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.143763114 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.270918879 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.231498014 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.188585853 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.221114361 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.208492923 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.334627888 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.311219325 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.244735312 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.233168199 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.223505377 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.169902053 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.13855498 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134265189 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.121643192 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.119103903 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.888452645 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.218571649 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202711043 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.214495293 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.15176469 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.122867371 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.808632858 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.127130273 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.141310428 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.133349639 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.093320038 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.265137138 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13538663 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.521055715 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.140290395 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.137298186 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170385563 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.239224066 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.178072854 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.159569244 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.151512005 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.141794568 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.251730195 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.141172212 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.135430071 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12184685 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.173400123 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.157580723 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.148112479 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162330559 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.175567787 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.142541729 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148493604 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.962076742 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.249484659 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.176672047 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.143590326 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321366634 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.146247997 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.157174316 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.148308944 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.286928387 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.160025726 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.138913894 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.118911071 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.151519129 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.119709567 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160139219 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.927191719 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.122834266 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.199747399 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.151260157 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.141176961 seconds)
    (71/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.785466434 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142768294 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.129664883 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.163919658 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.126776946 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13756058 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.126775898 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.13553637 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.129913448 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.135048947 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127228748 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.13811903 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.188300691 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.136925163 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.162139892 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.16507155 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.129857785 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.141900796 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154269897 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.138618744 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.12767294 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.217416265 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155044228 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118950042 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154824087 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.186027148 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.143483121 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.292276483 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.141081907 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.121357402 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.166109112 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.141223754 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.154243427 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.140194295 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.135165792 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.13988357 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.125593625 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.14207072 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.11903455 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.140776352 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.189342374 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.141259095 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.122822393 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.147154886 seconds)
  done (took 28.579260533 seconds)
done (took 59.230483641 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.408361566 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109272345 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108438161 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.128417029 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.109061425 seconds)
  done (took 1.599122835 seconds)
done (took 2.314465059 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.234812891 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.334733488 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.247192607 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.145043304 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211103591 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.193756832 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.215295814 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.208214187 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.197391023 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.231685887 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.142311603 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.234224967 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.204599551 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.213348219 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.140817278 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.251846341 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.189410608 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.215374595 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.250407052 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143549819 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.143092707 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.162601124 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.142746505 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146093369 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.142240504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161914445 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.142914962 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16202235 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.136602986 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.14573194 seconds)
  done (took 2.358454451 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.169524141 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143563787 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.142500035 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.154116456 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.141801063 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.145980016 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.142262085 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160376609 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.14625093 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160460908 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.138736916 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.147359102 seconds)
  done (took 2.352409619 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.118800233 seconds)
done (took 9.80515113 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.086982919 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.67996028 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.193342393 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.268306186 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.392710274 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.291369664 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.568238392 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.23095877 seconds)
  done (took 14.549989703 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.156880703 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.152681217 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.137505405 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.135252534 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.206094644 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.155512513 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.137238123 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.151922252 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.134059575 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.152157687 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.139396148 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.153545014 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.139947824 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.137764656 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.150909903 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.134281601 seconds)
  done (took 3.157625631 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.161891955 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.177971654 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.140229354 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.161064685 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.138358376 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.157429866 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.140857088 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.159042711 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.137150681 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.155794602 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.143485286 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.158353098 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.139546447 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.154416144 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.141744631 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.161184673 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.138283018 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.158723536 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.143010574 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.159833942 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.141851977 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.158029593 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.140943482 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.159820953 seconds)
  done (took 4.42909863 seconds)
done (took 22.867428882 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.192853016 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.145786905 seconds)
  done (took 1.077384073 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.197741975 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.218598468 seconds)
  done (took 1.161654635 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.156788373 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.151036176 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.162512355 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.163368889 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.136089443 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.151502506 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.157452075 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.152736531 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.13404002 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.152687503 seconds)
  done (took 2.268514453 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.13888945 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.137720306 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.166516077 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.203349322 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.140989857 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.155048767 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.1409835 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.155677199 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.139473043 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.151924417 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.138425982 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.168661951 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.138616789 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.170177158 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.138639558 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.156453135 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.142739311 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.154672462 seconds)
  done (took 3.48726748 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.134650782 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.13478355 seconds)
  done (took 1.019163261 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.136982364 seconds)
    (2/7) benchmarking "second"...
    done (took 0.132855931 seconds)
    (3/7) benchmarking "month"...
    done (took 0.153801751 seconds)
    (4/7) benchmarking "year"...
    done (took 0.135772712 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.151247027 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.134293404 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.152289269 seconds)
  done (took 1.746901963 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.617256496 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.271253069 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.424723284 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103816204 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153602913 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.37005893 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.154125186 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105098979 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103555976 seconds)
  done (took 3.080282416 seconds)
done (took 14.586750661 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.135539792 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.22397059 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.677394311 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.157535047 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.152608582 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.195886852 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.341607896 seconds)
done (took 2.644229131 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.374186759 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.184724608 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.119435509 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.13818545 seconds)
  done (took 1.567201039 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.126004291 seconds)
    (2/2) benchmarking "read"...
    done (took 0.142556466 seconds)
  done (took 1.031278838 seconds)
done (took 3.360116185 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.15113996 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.152662779 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.139614821 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.15406149 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.139248853 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.155970882 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.137434935 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.152647344 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.137537462 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.134177258 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.155507415 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.136927188 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.153125268 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.137000872 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.153234919 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.137254116 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.156869599 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.134654623 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153767459 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.137618687 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.156306818 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1352987 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.156826297 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137422085 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.154940443 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.138553653 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.154447154 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.136085043 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.155240482 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.137379691 seconds)
  done (took 5.129274261 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.163980908 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.130498858 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.152298138 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.14171439 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.149538708 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.13433482 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.149642493 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.131917194 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.153159281 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.135405767 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.153736868 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.135322166 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.131600743 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.153303224 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.135072554 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.178055464 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.142804123 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.149909217 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.1317736 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.154430532 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.137548707 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.150257725 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.134899975 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.152954995 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.134196814 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.132120573 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.153931236 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.135086452 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.153698735 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.134111188 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.15576038 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.138037526 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.152868601 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.269761469 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.157486716 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.135358764 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.15877466 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.132284909 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.135168515 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.150595966 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.131853988 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.153000811 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.132897417 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.159497238 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.135590008 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.153336119 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.132566369 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.153418252 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.13622696 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.136304414 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.150336855 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.133185861 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.155824913 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.138192923 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.156131935 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.131585169 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.153463929 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.132725817 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.153756284 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.136921881 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.131638388 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.149972354 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.140514935 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.154980462 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.149685376 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.159808381 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.132559524 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.155292723 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.135967989 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.160057225 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.137746846 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.163656915 seconds)
  done (took 11.321226464 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.137295462 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.13519289 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154390932 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.134981411 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153552558 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.13530303 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.154835123 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135982585 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153264113 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137546332 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135306522 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.154244545 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.135131081 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.155142913 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135722566 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.153585802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.135138694 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.153811598 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.137937374 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.135623601 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.155888119 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.135159646 seconds)
  done (took 3.931175257 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.279966538 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.1425462 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.205394555 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.150976042 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.172944269 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.168257989 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.140504669 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.160370813 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139995806 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.163952134 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.144997629 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.16046 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.152640849 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.164503181 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.144827426 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.166170782 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.140548459 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.165393169 seconds)
  done (took 3.744618223 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.136468472 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.134752401 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156710501 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136760338 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.155765897 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.136030985 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.155254519 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.137020846 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.154381433 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.136690567 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.135325729 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.155370456 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.135890255 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.155238177 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137768078 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.157311834 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.137606186 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15507363 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1374151 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.136933754 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.156874767 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.137408256 seconds)
  done (took 3.963482856 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150973458 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.158450037 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.15748539 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.161004482 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138185309 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.137554713 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.162934965 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.138965158 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.164240788 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.138503576 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.159666044 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.137383532 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.172655754 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.139514948 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.163182832 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.138454688 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.158743301 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.138340497 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157754907 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.138294542 seconds)
  done (took 3.800732412 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.228945524 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.176451838 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.154278837 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181751045 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.176099628 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.155075865 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.180151052 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.15497236 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173825456 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.165446388 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.175673736 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.154626227 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.181431103 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.158528748 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.174137298 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.181755306 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.161174965 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.181096772 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.154597802 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175124155 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.163677098 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174724454 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.181851896 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.156454043 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.174361139 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.155299707 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.173678859 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.159332692 seconds)
  done (took 5.576757212 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.150205763 seconds)
    (2/2) benchmarking "in"...
    done (took 0.167379246 seconds)
  done (took 1.113312105 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.140396834 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.139900681 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.160892178 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.139042472 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.16000645 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.139630955 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.15997125 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140795209 seconds)
  done (took 1.972868547 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.202279983 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.227729867 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.166397068 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.151062576 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.227778546 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.216902303 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.201010058 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.165165416 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.140887957 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.153418462 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.221412723 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.130774032 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.159148869 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.137026294 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.15945212 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145493712 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.158906939 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.148205998 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.165586839 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.141392352 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.143370327 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.165160737 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.160729657 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.148433959 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.134368903 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.163589937 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.162641143 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.149980595 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.156286983 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.142155717 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.137000312 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.162229639 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.143953781 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.163611518 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.140855272 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.228352642 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.169301347 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.136717246 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.16330275 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.144365565 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.193191327 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.140784523 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.162089677 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.138954332 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.16439409 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.143416701 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.165478096 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.141046497 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.151957662 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.135579253 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.13959806 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.156054342 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.139961514 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.161954463 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.141057742 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.168150014 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.141813285 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.157641276 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.13608616 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.156163224 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.13907404 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.157913377 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.150872328 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.164229613 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.14064931 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.162490007 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.138966345 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.16191207 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.140379584 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.162766019 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.139564186 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.200669093 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.142842257 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.165748102 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.14423126 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.162499505 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137693139 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.166363823 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139583043 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.161738375 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.144056727 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.189218825 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.141985304 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.157977841 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.136391995 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.16694183 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.141950034 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.163901639 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.13378524 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.169880541 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.142492072 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.140634015 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.154265287 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.139237958 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.157745199 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.143976409 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.155783777 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.140428961 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.161333435 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.145064886 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1665459 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.138356491 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.164777378 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.145746537 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.167956903 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.140608802 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.20941385 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138187755 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.157835643 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.141078275 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.167692484 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.135030439 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.163219918 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.139384415 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.15867332 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.136704745 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.166458039 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.14171893 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.165372496 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.145000352 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.164443676 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.143594587 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.165828909 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.141282911 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.158701257 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.145358568 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168997119 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.144550225 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.144089203 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.163432236 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.141590003 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.162532749 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.14499679 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.160554006 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.146697706 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.159847212 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.140869519 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.16411214 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.145578359 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.163855404 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.13714691 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.161160089 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.142866212 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.162102039 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.14446432 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.16336414 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.136900928 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.155942176 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.14321046 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.158933689 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.142658644 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170929906 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.138603519 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.143301673 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.159534812 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.148387096 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.160057644 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.146486156 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.165585302 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.147343597 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.168647773 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.134149391 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.161344261 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.145081857 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.164891918 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.138979266 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.17448797 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.142340866 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.171517411 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.135265875 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.16640489 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.134449569 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.159497098 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.146293743 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.143840009 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.167660427 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.137647182 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.200224553 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.152752455 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168505507 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.142355952 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.163767963 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.145161546 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.163677798 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.146374829 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.169619055 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.147718296 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.161722661 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.141026523 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.169421684 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.138547646 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.165081747 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.141726053 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.164038947 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.134493639 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.165436541 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.134820776 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.16658976 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.144929114 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.168289836 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.148311318 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.144029209 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161762819 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.150352569 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.160507283 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.145581712 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.156619847 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.147519388 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.174159647 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.148953998 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170486345 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.145411648 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.162187454 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.143888199 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172014681 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145307095 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.164548579 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.14544587 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.15755132 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.13758237 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.170377183 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.147141128 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.138445958 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.165481588 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.144157647 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167090312 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.140703856 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.157347173 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.146760283 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.16786101 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.138842306 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.164731772 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.139244662 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.163423994 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.150886296 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.158149441 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.139389373 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.167169163 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.148675192 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.164777798 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.143918022 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.167041563 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.149330233 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.168104826 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.145728169 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.161670698 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.151914919 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.16306934 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.144239851 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.13910498 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.167972967 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.136816072 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.166722667 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.144405863 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.161965359 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.139716999 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.169461424 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.149831274 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.170647958 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.14189472 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.169169906 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.147995496 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.171767583 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.142856574 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.169104605 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.139342859 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.157412406 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.141192186 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.157123472 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.146669489 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.138606592 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.170604307 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.140953259 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.16376468 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.147580849 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168079474 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.141246243 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.170428306 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.174242828 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.138785036 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.136563386 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162961505 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143194186 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.162244655 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.141861965 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.167282167 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.14493526 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.169650834 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146569896 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.1623608 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.143944561 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.170848541 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.144713863 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.171294129 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.149846848 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.171131678 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.140625075 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.169253576 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.142395412 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.168716706 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.138562662 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.164290445 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.144497914 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.164058642 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.141849113 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.163516394 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.140994257 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.135884668 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.162674527 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.148643204 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.164737639 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.147000048 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.167156382 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.141702307 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.163643645 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140446841 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.171659119 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.142942828 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.173000351 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.144913889 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.159263898 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.139101069 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.169392211 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.144802353 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.171067494 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.139981418 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.168973024 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.150394544 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.146682899 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.167352985 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.151668588 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.173672504 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.148154245 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.17035225 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.136276617 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.163937816 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.148011489 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.166476966 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.147492918 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.167918001 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.137964053 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.168475824 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.150120347 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.167362693 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.142847774 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.159375085 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.145044213 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.170275633 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.147764811 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.145777895 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.166870521 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.144001901 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.161422552 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147643426 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.171968028 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.144507343 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.17251691 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.144633615 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.169930897 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.141454999 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.170137976 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.145524231 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.160615746 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.138214293 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.162725372 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.151156722 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.158905613 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.149676436 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.147061927 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.162933988 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.142631825 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.170214243 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.140345292 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.169657259 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.149611413 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.164415531 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.152974621 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.167023824 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.143049616 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.170960427 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.148999674 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.160406851 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.144348035 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.166054147 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.151277128 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.165695023 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.151725719 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.165560508 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.150873166 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.1464226 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.171890573 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.149420608 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.172457894 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.13863397 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.174023666 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.148212773 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.16791835 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.142133437 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.166531093 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.139590866 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.166091163 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.151462767 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.164042509 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.152901776 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.170940103 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.144253749 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.164438648 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.149974798 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.165169398 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.151436227 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.162886845 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.147376702 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.159542076 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.147912734 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.164678833 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.151339567 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.140795698 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.163054394 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.149169668 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.171904681 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.148532575 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.171994497 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.150500912 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.161881759 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.138661418 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.169199449 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.142269349 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.176030905 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.147797915 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.165645087 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.144268904 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.170327317 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.14618074 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172446091 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.140677038 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.163791499 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.147447242 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.167639753 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.144212054 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.139257233 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.171152282 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.14496641 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.169790585 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.144413965 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.163331943 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.145161127 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.174967361 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.143753476 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.164537753 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.143268359 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.174238707 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.146719426 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.165129099 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.139781184 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.173389367 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.148297769 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.173588346 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.144241108 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.168272237 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.143389324 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.169050687 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.152057535 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.165570706 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146125496 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.165344001 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150964239 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.17183505 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.137101582 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.165191886 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.156659307 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.150102258 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.170754186 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.147051801 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.167708757 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.153078684 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.175005635 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.148108848 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.162640934 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.141009202 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.166652826 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.140195761 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.169974058 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.151633109 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.167165881 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.144406003 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.171967189 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.150227763 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.169850021 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.14864502 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.139317856 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.174894587 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.143076993 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.172044922 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.140624097 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.162274057 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.148494512 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.174265038 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.145017534 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.170212986 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.147144898 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.17099018 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.141393679 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.166569436 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.149791325 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.171530542 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.151343268 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.166993512 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.146626118 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.147767115 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.179104829 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.146864347 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.16913296 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.153346525 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.174654262 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146361699 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.169241424 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.150617827 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.175260136 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.149976893 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.17628394 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.144516631 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.168585614 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.153617929 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.178222664 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.156379872 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.167901798 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.14057025 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.172936517 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.145471502 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.162974496 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.150672862 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.175593977 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.153354627 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.169393538 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.143349304 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176650257 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.151861211 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.169156776 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.144606657 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.167977855 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.1521697 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.166158769 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.150812824 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.143475019 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.17813194 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.152917421 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.175021349 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.154614075 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.164256851 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.152592449 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.172623767 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.155379605 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.171093615 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.141901145 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.164100826 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.149635718 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.176368936 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.153584893 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.173733754 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.150986867 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.15134662 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.172083336 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.147356099 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.167642198 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.154463288 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.175480904 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.148071204 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.171671831 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.1463874 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.170698034 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.148621623 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.176463362 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.153652431 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.171085863 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.156465777 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.174646231 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.149469496 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.167099042 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.147975172 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.171560364 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.150083122 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.175631482 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.145253877 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.141613539 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.17747201 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.155009376 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.170429145 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.15401337 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.177443025 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.146496701 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.174708181 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.155538354 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.174858898 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.150090805 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.172813317 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.150405858 seconds)
  done (took 93.945007674 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.195535829 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.180885153 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.150603021 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.172500218 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166855087 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.17556178 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.149752423 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.174315602 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.151825312 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.182727427 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.15033448 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171517482 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.163943055 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.193903708 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.165722052 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.183471725 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.150081236 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.174639038 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.150646043 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.173972891 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.163189606 seconds)
  done (took 4.432672898 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.151105388 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.149332747 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.172659456 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.149794886 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.17373599 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.15022015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.172531018 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.151156372 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.171552612 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.150746334 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.150124118 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.172540935 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.150363814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.17305399 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149581242 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.172871774 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.15157982 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.172292929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.150940424 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.149717293 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.174164116 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.149287838 seconds)
  done (took 4.401896638 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.179829572 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.153842887 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.170767805 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.150406207 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.177058899 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.15091996 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.177457203 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.151839211 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.180985934 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.144927648 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.164213969 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.145069146 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.147545508 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.174727457 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.144716867 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.176537393 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.157288646 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.177883305 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.153860278 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.174212936 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.142552695 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.174909743 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.151624728 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.165999392 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.157324406 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.154184482 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.178831889 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.153731281 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.165630629 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.153627846 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.17429025 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.145439724 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.165968381 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.142416295 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.164377258 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.155510279 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.15386831 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.175141615 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.151031916 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.166838255 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.151679972 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.177914873 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.141845692 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.17558839 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.151946976 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.168579678 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.154535992 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.151209312 seconds)
  done (took 8.617390103 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.178513482 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.213296118 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.1539473 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.206242637 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.16186779 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.187110666 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.15354683 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.180690156 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.177755076 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.154000869 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.189501752 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.165201804 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.18110669 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.157960241 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.180264124 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.15491991 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.179252543 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.154919212 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.182352658 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.154423478 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.183756538 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.158430412 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.187169681 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.162943276 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.181120589 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.154063306 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.179168524 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.157126266 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.187928786 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.158406107 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.182094874 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.158489078 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.187893376 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.154409789 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.179117191 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.15554443 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.188805644 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.179287324 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.157186259 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.152857217 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.180312804 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158096082 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.182705357 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.18912838 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.157475333 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.179443699 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.155980171 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.174781165 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.165126654 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.180102162 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.162296756 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.188746418 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.157728857 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.178782442 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.158683238 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.189358996 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.155624259 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.177968581 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.157333694 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.187925714 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.154141738 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.180215794 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.163435029 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.181266906 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.160024888 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.191613123 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.157105174 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.182075808 seconds)
  done (took 12.692748708 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.186094685 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.183007351 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.165764166 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.191071295 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.159027695 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.183122868 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.15912666 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.183140677 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.158912876 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.188040322 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.15824212 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.289177276 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.189211142 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.164039087 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.185015636 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.159032794 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.185906113 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.159907904 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.183020061 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.159336393 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.184471014 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.190385313 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.163198686 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.190539802 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.170138954 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.181259363 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.159729529 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.184226849 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.167116014 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.184431903 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.169972801 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.18603036 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.15888452 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.190267421 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.193901264 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.160700743 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.178298022 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.160531727 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.182889039 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.159975162 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.180407858 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.166637461 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.185142887 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.158186317 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.183322894 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.159858178 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.191877403 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.17007463 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.189293555 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.163662222 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.183660087 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.165646902 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.184832233 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.184053503 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.168286694 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.19631435 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.166555957 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.19181245 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.159684413 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.190679485 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.188548558 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.173455437 seconds)
  done (took 11.924206004 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.156722443 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.155644094 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.180511084 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.156153866 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.180505287 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.155388265 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.180488315 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.156077808 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.178920378 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157011587 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.155025929 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.179471915 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155266183 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.180082607 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.155520265 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.17927573 seconds)
  done (took 3.586725659 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.174342002 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.196147359 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.235558516 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.441669223 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.183245998 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.163611378 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.155211707 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.186145598 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.156122228 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.18812518 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.158876419 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.183663649 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.171803272 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.183528576 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.156156799 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.183598836 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.154795732 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.185356392 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.15683391 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.261340287 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.186344507 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.160177841 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.181734842 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.160251174 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.18225062 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.161918076 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.187567777 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.160478089 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.157730184 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.182042144 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.158937879 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.188220234 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.15524118 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.188926679 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.157292209 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.184314639 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.156535618 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.182336455 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.159068552 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.182385064 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.159397923 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.182785464 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.157630031 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.183732023 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.156841662 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.181601096 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.158341923 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.186269218 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.158439421 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.157130875 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.18412956 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.163319302 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.185820347 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.163563118 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.18843758 seconds)
  done (took 10.80350539 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.168144287 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.158485307 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.194913334 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.155365707 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.182618962 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.157635898 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.184711966 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.159288552 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.18440683 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154520068 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.183292023 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.158597752 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.183679992 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.15844019 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.183119864 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.158413231 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.179827895 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.158285422 seconds)
  done (took 3.999752971 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.156307936 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.154863897 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.18234295 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.15581332 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.179999495 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.156722234 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.180057744 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.157270698 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179512282 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.157140304 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.155191244 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.181136303 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156015649 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.179978124 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.15691772 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.180517718 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.157250932 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.178767705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.157634431 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154674139 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.182748728 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.155761567 seconds)
  done (took 4.597172169 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.168094491 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.258493765 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.161682083 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.265653126 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.180382226 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.1525349 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.188796145 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.153407986 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.195036184 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.151825522 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.176728828 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.151858277 seconds)
  done (took 3.147543832 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185433147 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.218465212 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.159982286 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.183242087 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167082909 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18571384 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161536394 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185409611 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167728662 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197927683 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161188095 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192484254 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167529474 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193978299 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19017139 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166513424 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185787662 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162318825 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181892683 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174370358 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187151104 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167852699 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186409389 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161792153 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186852043 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168593786 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193652209 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19797797 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164256712 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193119739 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166574744 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186923351 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169584415 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198586845 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158069822 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193880381 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162548393 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200543799 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189267573 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170552205 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.183556931 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166326109 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194272261 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16702089 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194355511 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16177106 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193745098 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163076883 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187798044 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205442815 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167538483 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193941143 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166967601 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194434292 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169162015 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207943343 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196033168 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171740136 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191265942 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173389787 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196860508 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166257245 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194601632 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198995696 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16771644 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196491607 seconds)
  done (took 12.913148104 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197081347 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.186818938 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164949956 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200609169 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.169058999 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190642818 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162426731 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188937643 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16316614 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.185332716 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.227167924 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165114293 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195649879 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170747132 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189482965 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164564013 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188622241 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.17022011 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187443319 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.181681553 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189953974 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19535068 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17091957 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195863664 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175359799 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193359365 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163595385 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189016145 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164846033 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189468856 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167473252 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190442304 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169178427 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.186203567 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169944865 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188372069 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163841436 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193276184 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189648838 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169483633 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196988877 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176290225 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18983713 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164856229 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201994331 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163521633 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1901056 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160223517 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188688869 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160308793 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200816808 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.199401335 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174710555 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196499219 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16473694 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189921288 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163827747 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189723498 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163763772 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194131949 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170812294 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192627568 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.207091628 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165899798 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189393498 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171901329 seconds)
  done (took 12.949209953 seconds)
done (took 229.325988039 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.308746873 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.340525914 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.150488411 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.768959167 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.150979256 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.929580082 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.813979906 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.247173122 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.150134036 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.176822975 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.149773096 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.194627682 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.924963992 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.176991362 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.151036106 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.190559637 seconds)
  done (took 32.780926053 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.345936449 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.392658242 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.166854528 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.180712715 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.157721313 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.181954214 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.154760183 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.182759065 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.156234952 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.185103357 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.157624304 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.175136867 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.162550698 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.175493196 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.158041815 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.179924137 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.162330629 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.17981274 seconds)
  done (took 4.428782669 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.176158923 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.309524696 seconds)
  done (took 1.449681625 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.186418049 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.279180963 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.382945904 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.230024223 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.178416543 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.197389486 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.204971665 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.194498616 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.270507164 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.167550217 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.202466738 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.154366907 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.207829431 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.160708844 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.198582236 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.153808176 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.209803355 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.194616578 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.171568885 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.181443604 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.182166601 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.181211591 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.162033873 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.196463601 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.237643628 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.194676222 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.158524558 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.182824645 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.15693979 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.197607741 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.162390832 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.199265493 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.192754539 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.214149369 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.186541878 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.235248282 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.159712978 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.183254728 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.17042698 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.182912925 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.159287993 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.185693935 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.166381004 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.181051166 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.15466003 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.186885357 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.155000646 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.183228537 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.164473499 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.185618855 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.164185334 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.189273859 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.233212338 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.15997181 seconds)
  done (took 11.298033081 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.00607249 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.205413202 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.183489674 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.151074728 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.176777648 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.195765816 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.989961433 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.210480397 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.312132569 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.080218372 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.174729691 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.189517326 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.29983743 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.33976234 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.345286716 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.416992832 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.853187685 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.195026547 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.186569256 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.22445941 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.189453701 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173865685 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.198339119 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.514263231 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.157288088 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.182425642 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.16175395 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.189316253 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.235521431 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.157754838 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.184072918 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.257073193 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.353758114 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.267831335 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.158165643 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.181179115 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.157155599 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.246533236 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327039702 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.277370188 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.248079801 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.179031984 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.156623059 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.187241758 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.171217304 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.179560823 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.240085069 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.226560165 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.250551066 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.186100621 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.189178596 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.165868718 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.184939021 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.212856607 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.181745178 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.419304647 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.446917097 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.157602513 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.187655008 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.170685532 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.32176487 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.185349268 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.293428305 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.205604428 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.273686619 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.15708911 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.89405161 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.220925161 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.183200391 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.161821765 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.188147879 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.163103213 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.186723744 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.241908975 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.465513387 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190182983 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.160761016 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.183886303 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.287913707 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.15862485 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.184349351 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.240347044 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.158374399 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.189145281 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165950782 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.190092749 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.251911504 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.335319457 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.164023442 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.189489948 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.161925061 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.194052609 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.158973638 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.28965052 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.312251299 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.211008187 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.294293359 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.189486875 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.243488784 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.246664817 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.162292985 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.249923751 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.188556519 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.169931945 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.188432761 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.283867313 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.220442697 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16086033 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.189165326 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.163891791 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.222528996 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.188994774 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.166387499 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.250650309 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553183753 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.24768422 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.155620278 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.188742577 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163461219 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.239678034 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.190559498 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.321502127 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164381518 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.24611768 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.18953304 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.156383155 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.190042952 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.243597318 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.165980045 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191199733 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161770083 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.192791765 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.342390607 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.279992169 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192822285 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308981331 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.229241931 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.191121231 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.256988965 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163424413 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.245602391 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194503785 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.160925422 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.18769838 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873355613 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.195479886 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.16491322 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.18905344 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.239656174 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.186287795 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.163394871 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185374272 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.15641577 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.882926104 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.189655403 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.15679431 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.188742018 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.163224108 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.190587015 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.184293059 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.189906552 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.242935641 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306169172 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.195102953 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.162821264 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.185005719 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.238842802 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.161900546 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.184705122 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.160518177 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.15915292 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.19219539 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.163254489 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.190192063 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.250401046 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.238748587 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.29262967 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.628236872 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.18619756 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.159752996 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.327094458 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.160691384 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.386805612 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193183644 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.2984823 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.246314842 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156571167 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.444443528 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.245245083 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.239583888 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.190041135 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.254726596 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.156998177 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.191465549 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.24130813 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.159113948 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191954228 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.238862149 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168262039 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.192823683 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.327552896 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.158797358 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.307608879 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.185592665 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.251604342 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.161781886 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.191166907 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.391524718 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.184434557 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.171721139 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.243734416 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.188435834 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.162354026 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.039998802 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.15937739 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.194992394 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.189853123 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.296753728 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.244881978 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.164875506 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.193067499 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.168311348 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.243084264 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.289327644 seconds)
  done (took 61.256029208 seconds)
done (took 112.180132826 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320200984 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.228292927 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.423118889 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235114675 seconds)
  done (took 2.272105971 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.344850208 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.201547627 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.305718975 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.156514596 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.309719134 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.185911071 seconds)
  done (took 2.521928661 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.229196883 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.227698858 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.22704242 seconds)
  done (took 1.704299409 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269665577 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273632562 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.412348805 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326513519 seconds)
  done (took 2.364559209 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.338454842 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.175942556 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.216464258 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.287977543 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.303390955 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.266470408 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.183515865 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.237093628 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.216585084 seconds)
  done (took 3.279915344 seconds)
done (took 13.160269752 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.202198618 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.220334444 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.181628823 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.200108337 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.19322953 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.221236374 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.189707783 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.218012361 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.188565041 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.199499602 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.186750354 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.19609393 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.25319798 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.219275719 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.170748459 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.214718855 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.171158148 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.226593061 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.190330279 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.198177575 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.191759721 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.197818452 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.169923494 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.206956974 seconds)
  done (took 5.823022607 seconds)
done (took 6.843950408 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.26562924 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.181217737 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.167695278 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.196062363 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.276499477 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.177890568 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.211522639 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.171471386 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.205749209 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.170801469 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.15929386 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.210262073 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.167691226 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.269990688 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.201015297 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.160427873 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.187832545 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.181029376 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.212422823 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.187264036 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.277762626 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.189678031 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.181570646 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.159238615 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.27723295 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.19421981 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.1681035 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.198215988 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.184472411 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.198089715 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.169913856 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.187380253 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.187116602 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.211735515 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.161225111 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.196318889 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.161478845 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.133654916 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.199150255 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.17199352 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.21082269 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.170983684 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.197447315 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.160905518 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.198942617 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.1696127 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.188589764 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.173311425 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.186115008 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.170667582 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.189813244 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.186702862 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.196115093 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.160911524 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.185023529 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.162098616 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.207452009 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.164437461 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.182927941 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.189757301 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.161372057 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.190839841 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.173098688 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.188670152 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.170217875 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.186973427 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.170936053 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.199157379 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.171030967 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192152019 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.162503835 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.196381886 seconds)
done (took 14.621355551 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.166569157 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.235659298 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.244764087 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.278878759 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.242284581 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.175604453 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.2040543 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.185641833 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.205154789 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.17987455 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.225256787 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.221755364 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.256085288 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.208116549 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.203819005 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.176488645 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.172753881 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.199361455 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.282945478 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.18775125 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.214105439 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.177360054 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.214951915 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.205694104 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.16892169 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.21543389 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.170792389 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.202674586 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.166819886 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.209469235 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.188531446 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.191302121 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.169730033 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.212081229 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.184991122 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.202808262 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.178970244 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.202901291 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.165689366 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.191089313 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.172822955 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.21069062 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.165664502 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.205617768 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.17520971 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.209552975 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.173881679 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.205078453 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.16966557 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.200322821 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.168554185 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.218083109 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.180083445 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.21056239 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.179462766 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.20924253 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.18008554 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.206297113 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.170180021 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.20654938 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.167302071 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.193135315 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.16827922 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.213232144 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.170184421 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.207267349 seconds)
  done (took 14.058254126 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.184699674 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.224420647 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.176669254 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.205451266 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.171763742 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.189133409 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.160432413 seconds)
  done (took 2.369938734 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.162372184 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.290913251 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.28687838 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.286478399 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.25342678 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.292385715 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.217293065 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.160547791 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.229243676 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.197961067 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.260552267 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.32506941 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.203841634 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.176828073 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.289314235 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.191121999 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.290071594 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.239420809 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.208614796 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.292076038 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.179784245 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.225851555 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.173420238 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.192054171 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.284069294 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.163978743 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.335428968 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.212614956 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.172515793 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.207411432 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.177697737 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.272285743 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.285049377 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.175732403 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.200580815 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.285322177 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.282991992 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.177962575 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.297329849 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.165733087 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.282297071 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.208625972 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.178826861 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.208765514 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.178922124 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.271487317 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.213650912 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.17995375 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.205727418 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.293850007 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.17429493 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.288494507 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.17474792 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.20816467 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.172828193 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.208421964 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.186361687 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.207362822 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.297315741 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.18209222 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.285819307 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.295046248 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.287078336 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.289655968 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189218545 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.289309974 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.277980391 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.177576562 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.284782443 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.211500219 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.288798457 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.178261565 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.20454319 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.277524118 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.183974093 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.293544521 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.294080274 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.176313343 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.20807632 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.166888611 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.206764142 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.163679403 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.291951162 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.207908981 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.177611622 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.211700454 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.17647712 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.207804079 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.251238513 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.215868931 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.208051457 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.175538593 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.213554391 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.179398442 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.207295146 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.292825086 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.174131082 seconds)
  done (took 23.134161265 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.16733769 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.164743086 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.197793937 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.16529155 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.194205493 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.165432839 seconds)
  done (took 2.147761597 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.203048237 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.207705883 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.18859591 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.207119913 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.232243151 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.294434998 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.301239145 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.202307709 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.198429982 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.217659802 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.296672433 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.269231513 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.300087462 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.21611156 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.300728256 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.182318576 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.305812562 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.208179615 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.189324076 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.207214758 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.177921438 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.213574715 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.177208708 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.286691275 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.212786905 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.181364684 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.202176618 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.188570837 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.218190455 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.173301647 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.21311523 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.180313782 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.201527303 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.172921571 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.300856485 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.204716745 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.175534612 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.215445344 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.182784137 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.211695844 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.304242949 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.178166232 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.215736651 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.18234721 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.206155545 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.171902516 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.211721198 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.171523278 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.302898504 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.214257204 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.18358822 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.210948543 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.181768645 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.213736747 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.172115462 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.203666682 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.182433953 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.303053901 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.215762842 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.173616631 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.211469629 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.181816138 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.206058816 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.184985465 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.211409705 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.183022995 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.202779139 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.181694125 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.207353602 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.181495357 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.213203089 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.180123813 seconds)
  done (took 16.462510981 seconds)
done (took 59.211247675 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.638495719 seconds)
  done (took 2.730482976 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.258781372 seconds)
  done (took 2.353442501 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.657234486 seconds)
  done (took 19.790963362 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.48705216 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.41329697 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.103709348 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.21003467 seconds)
  done (took 3.313502995 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.158825225 seconds)
  done (took 2.279811909 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.476488317 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.343655921 seconds)
  done (took 1.92697577 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.82175345 seconds)
  done (took 1.942587253 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.821159101 seconds)
  done (took 2.931721276 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332296447 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.310576435 seconds)
  done (took 1.76102883 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.687373932 seconds)
  done (took 1.809598553 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.319338235 seconds)
  done (took 15.443192741 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.317757097 seconds)
  done (took 1.43890274 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.354078126 seconds)
  done (took 1.479343078 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.823695108 seconds)
  done (took 4.950237876 seconds)
done (took 65.259679462 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.182838823 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.208844574 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.183513001 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.179420721 seconds)
  done (took 1.866328253 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.18631231 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.179747928 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.214878932 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.179691635 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.216699903 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.179899693 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.211030607 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.18155102 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.209617997 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.181093629 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.21102488 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.179345921 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.212711547 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.178733413 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.207224396 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.182771566 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.211839718 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.181468887 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.210705635 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.18138787 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.209188473 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.182473274 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.211561749 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.184879166 seconds)
  done (took 5.815005875 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.177103108 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.169014719 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.202603557 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.168262389 seconds)
  done (took 1.848526967 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.192837302 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.223911225 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.19515687 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.218361218 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.197670807 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.222601701 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.180792473 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.206366396 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.18252775 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.219583859 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.198247277 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.225588393 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.19523174 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.215037751 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.194579144 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.204245875 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.186616399 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.223203244 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.191675213 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.22038892 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.18619763 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.218971281 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.18173596 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.219093783 seconds)
  done (took 6.034094978 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.257534704 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.223235371 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.207498803 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.240680396 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.179585058 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.238700885 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.225955759 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.217208208 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.215698868 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.196813366 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.209767527 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.183373738 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.257714965 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.187509878 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.212911572 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.182775827 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.218900253 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.186841427 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.255013295 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.185432868 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.217582348 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.192154882 seconds)
  done (took 5.82182888 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.272005958 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.204933462 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.169732128 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.201446147 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.183576486 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.205777215 seconds)
  done (took 2.380501599 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.172358859 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.166124198 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.197199728 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.16609242 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.200722871 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.167529405 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.194830572 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.166636972 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.19493261 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.168061245 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.165723868 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.195546026 seconds)
  done (took 3.29685877 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303565907 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215837363 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.348519808 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.465837172 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258309034 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224506762 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.378460348 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25480859 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.275177521 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199904541 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27754961 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255753472 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217592545 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.303170886 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.237755723 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.212820359 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266260186 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.329519068 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233676084 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327699982 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222177764 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273477234 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.287818793 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212122925 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.23369082 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256056444 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.182044239 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.22134805 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231761385 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258245968 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266690548 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243956302 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206178174 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281193229 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304253216 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267775253 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.36335703 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229112725 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.230858547 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.285565225 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.324759245 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236411208 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286568704 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215014213 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22526468 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.308357927 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21125787 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.281031408 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.229249474 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208631698 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275256511 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275263845 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.263661112 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20018663 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400423685 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228958235 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.205053031 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275145184 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285590298 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299592358 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27279754 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.187956443 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.265903087 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286239053 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311666239 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.204386046 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.256655473 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219026247 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230196941 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302885374 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277425153 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256309968 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.280238989 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194048908 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266486402 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259249448 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217089688 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301441475 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268503068 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.183200671 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244947838 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227030337 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191025758 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.285457879 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185464227 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.312685782 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225316292 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.241034213 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272582778 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24792175 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222572856 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254484247 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260264381 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21118733 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.186210271 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205422841 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.254154037 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249106818 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192377466 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246530302 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203480904 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.220835974 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212650156 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.219356107 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263537354 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.191519885 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254699568 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234252764 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.228264223 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276257756 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212468639 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.25860621 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262330845 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29073313 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195684521 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225919511 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313448868 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23396404 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.230913582 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265946599 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.292181359 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.205467958 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228963753 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226413639 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288877727 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238665895 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295124051 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201877837 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230096369 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.191925873 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269491044 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253961415 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.224562495 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22262419 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.258631632 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250175249 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.223240888 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231134211 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247932506 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227721696 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187152291 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231105646 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19821976 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.237814669 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.246867776 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.201679208 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24845017 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261476687 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231239391 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251586742 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227095499 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234963399 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227394559 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.265045786 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21359923 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.214413858 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.238272548 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295114135 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225948984 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275918188 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.224433498 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276671566 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270500739 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192920762 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.279646245 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223404527 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.185474494 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257019625 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266691037 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225911619 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.285466888 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272974587 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.261365569 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.259708514 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212329795 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263630452 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.28413257 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250264017 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.205667844 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269980701 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26217475 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.187305104 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.186275434 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.223612793 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230672559 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195773848 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232106471 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240062511 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259097264 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271193076 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.264833748 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202357437 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.293088178 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.219995364 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223056507 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.272014479 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23431618 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.253826133 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286280539 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277085375 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235386358 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22454706 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.217865065 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189649885 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.229639537 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.256585631 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201728307 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232568541 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204608282 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.290048686 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264972872 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211330785 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.314514297 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228171683 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.300662186 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.217727966 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.227177771 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262787817 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263532744 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.254172545 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228531226 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.224441391 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.292094267 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238312288 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289786082 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2335459 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277089216 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290251854 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.260518603 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196755747 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240176561 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22562052 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235659507 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.255538221 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207554746 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226060591 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212046239 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.234457887 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203205519 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279592328 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241366657 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272389806 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.220119682 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263748833 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222118399 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20662439 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273009787 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239765895 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.162429734 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259676528 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254016589 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245091432 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248669192 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232831983 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227461956 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.449722762 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276807547 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234873583 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234250808 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202449558 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271553387 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.255328069 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253433555 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251519206 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239144238 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305189717 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235894592 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.237802587 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225569676 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213754346 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248157884 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.193927315 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.249227434 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.259325086 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.20875832 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281400589 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233934147 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236159221 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27747928 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.24355688 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.214397934 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234844319 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324537149 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233548833 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268614466 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.263747017 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.258691066 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250026836 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221453021 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191805467 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.23000348 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.282989478 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196277194 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275891858 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.259912731 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275496835 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241792899 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259913149 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238829113 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.192561638 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.266617704 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213098607 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280900734 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231269005 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.233434713 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250836716 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.216303972 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196320007 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262509289 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390125658 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211351737 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264161106 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.161921848 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.382514005 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227001213 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197340388 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256337206 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265679176 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.198088108 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.283663586 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272619374 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206869114 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.257236831 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200918706 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274554397 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27856622 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264002846 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26810239 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.210692086 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260169467 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252219434 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236373843 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245217496 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.211850823 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257494895 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293723873 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.272314168 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.198572248 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268449012 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23545585 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270745463 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270825082 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205285952 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282062754 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226395131 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229750655 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236500186 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221220589 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225112006 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.262851791 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227924934 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237111018 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271094739 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229724814 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19532875 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2442782 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23241943 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237992973 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.226772343 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249421173 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.230161391 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281633859 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275990613 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230218242 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.26515823 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209310835 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227567765 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204712414 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243078676 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19739668 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.275700842 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274868962 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.197711316 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272712543 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264875722 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228305569 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251114545 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240569279 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.334720009 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.227560433 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290769448 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219943821 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.318555244 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247983909 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243947711 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270571697 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248072049 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229915061 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246238646 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.320545441 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230659918 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.267568942 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230784166 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210757807 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235040782 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.199801176 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25212019 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267043875 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207877691 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.234223919 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.235143659 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245127191 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.243781908 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209014707 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29950757 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.249024475 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252383072 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.288356012 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.23718952 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242264537 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27181592 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228805493 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.229235226 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270495989 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243647883 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216963414 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.234848719 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.203013037 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313347528 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.226595086 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225269359 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275854911 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272505742 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271715139 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.203389201 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279264773 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207245488 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277374867 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227531168 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.217856684 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.272070981 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201761202 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.226241061 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273070619 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224864279 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.267679361 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241548453 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.248782964 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297576249 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.190905003 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234439798 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387252317 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22782513 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296119709 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.224229143 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204926688 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245644855 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224619136 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.265846446 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272846009 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.197762928 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229592255 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.212513617 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.251399148 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.226989898 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241621927 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28467838 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255122177 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253882145 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.2361639 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.356557283 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209918454 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272723229 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.174769501 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.228901454 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209400441 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234419335 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209152645 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279393979 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316538507 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.267250814 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.21339648 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234784744 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.194604635 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232168909 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.260738883 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21736549 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270754821 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247146791 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.162843683 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207248143 seconds)
  done (took 119.849399358 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.319710348 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.327393239 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.265202998 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.379241941 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28774078 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.446072507 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.359535595 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.339911311 seconds)
  done (took 3.991947579 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.188733567 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.236075132 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.241243946 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.186424196 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.210793495 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.547122508 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.234938186 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.18768099 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.264095665 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.226357486 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.180748753 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.64260965 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.220069605 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.218405637 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.219268246 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.178526683 seconds)
  done (took 5.443408621 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.287386197 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.639589085 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.326283112 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.371267953 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.339411457 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.286197428 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.912958135 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.268283837 seconds)
  done (took 13.703301516 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.243749571 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.276724576 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.457034097 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.382473218 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.294810465 seconds)
  done (took 2.93279718 seconds)
done (took 174.097389834 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.19265732 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.192937384 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.225877048 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.195758344 seconds)
  done (took 2.065610997 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.237489977 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.15162382 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.187279053 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.149913896 seconds)
  done (took 2.004837906 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.477076589 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.151185636 seconds)
  done (took 1.925070081 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.214480836 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.237922713 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.206371634 seconds)
  done (took 1.944742834 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.206782999 seconds)
  done (took 1.487634496 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.189746126 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.187439968 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.31626012 seconds)
  done (took 1.973579601 seconds)
done (took 12.678765785 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.215419712 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.053440805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.654553348 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.204891768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.824681756 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.469277622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.533346175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.250145777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.277151375 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.214185896 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.215203065 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.79598062 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.488259226 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.989187871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.473596119 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.985587553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.765738925 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.213549433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.187623091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.215912094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.48407748 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.212324556 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.182511337 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.21394194 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.763666176 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.52100983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.180700911 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.999862971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.179925743 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.222487999 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.471544601 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.21278069 seconds)
  done (took 23.938025709 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.184651833 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.27185524 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.236520579 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.216816049 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191234305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.216312493 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.192536355 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.227334217 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.31906292 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.182208576 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.235747647 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.18158175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.187254399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.215672607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.206137457 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.216226099 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.1845433 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.215964963 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.18880725 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.216330443 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.2041643 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.214168505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.183710792 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.215533833 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.183129573 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.233879951 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.181192454 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.227239511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.18104963 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.224549016 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.187150754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.215232677 seconds)
  done (took 8.020661566 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.226182044 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.282780373 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.236791494 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.255519016 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.270584968 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.185447186 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.303320625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.220922367 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.326282623 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.216137541 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.204787634 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.21447462 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.224065853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.215698519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.207276359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.215032582 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.185802888 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.215572176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.190875879 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.217133477 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.2052247 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.215006601 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.184905288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.216548208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.18386968 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.236572262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.182471179 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.227167714 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.182929407 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.225613746 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.188607923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.215236868 seconds)
  done (took 8.372428715 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.197243378 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.197695181 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.239795508 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.207758752 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.22596407 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.196472889 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.230967918 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.19315054 seconds)
  done (took 2.984201622 seconds)
done (took 44.598939364 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.206758974 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.19886202 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.237784986 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.19959682 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.309022188 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.225867899 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.202463386 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.224322381 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.198653265 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.239859762 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.182628741 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.191407511 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.237224161 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.193548775 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.312795572 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.235655945 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.317306621 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.278695636 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.227489334 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.199276179 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.226996185 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.318699117 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.197433207 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.225336965 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.262304655 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.222574882 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.268171393 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.230594407 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.194797606 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.218235364 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.316153751 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.194108623 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.226731975 seconds)
  done (took 9.005638496 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.293512185 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.227760877 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.191420431 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.226380673 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.19367833 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.225216349 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.297102237 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.228526267 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.191291295 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.227237974 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.191274323 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.316118202 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.232763538 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.188325694 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.227320038 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.172560212 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.332757538 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.192852527 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.217301237 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.15643798 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.187868513 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.227052895 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.345823027 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.188781757 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.191765308 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.22714767 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.193510851 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.233663583 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.193839943 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.226807124 seconds)
  done (took 8.055392938 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.198679595 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.205417043 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.246150994 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.294096407 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.222427098 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.238071685 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.210069311 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.237625608 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.214695668 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.220179046 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.202128567 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.25632219 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.203196929 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.230468553 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.185363656 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.23547757 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.20186317 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.219643084 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.19503807 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.203685049 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.24002298 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.202354643 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.242853648 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.194555188 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.219181224 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.193531174 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.231083576 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.198988223 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.228340489 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.202040217 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.223212533 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.188138659 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.223363321 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.221777364 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.221688316 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.199748306 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.241446136 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.199469499 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.234115316 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.218615789 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.22316539 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.187496748 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.248343941 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.244571673 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.222986736 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.19770056 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.221418171 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.201179354 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.218673059 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204758999 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.262688014 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.186303021 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.242652854 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.186204754 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.219313922 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.195015511 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.22127758 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.207736473 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.235431614 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.188305161 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.242612835 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.196087156 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.232954903 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.189574527 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.231682464 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.186444799 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.185636246 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.225381384 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.213452982 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.229049728 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.225893251 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.221474742 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.198283385 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.234777621 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.198213683 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.233866122 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.185611452 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.233333862 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.197734014 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.744012839 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.205553932 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.225011295 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.188325415 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.237034472 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.207947882 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.236257907 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.199093544 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.231676458 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.188800615 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.222069999 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.205270656 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.22201259 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.190129764 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.200241735 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.221963212 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.19106012 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.231852319 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.196329785 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.219302609 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.21486629 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.224809174 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.186598728 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.249016233 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.191152939 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.225810419 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.196399696 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.261761639 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.186549072 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.231066045 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.198423138 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.220673313 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.19564988 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.188093681 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.221445548 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.203507094 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.23801253 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.194481156 seconds)
  done (took 27.035857983 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.411583275 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.405338835 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.291399067 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.452655048 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.238267451 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.287990533 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.438497312 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.406249635 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.188061484 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.256737117 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.242321946 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.405462525 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.189191237 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.25111636 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.407823858 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.450925987 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.253913504 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.26074482 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.222792787 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.236945075 seconds)
  done (took 7.640787422 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.197514921 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.256475072 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.211982613 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.24099573 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.198829683 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.200504477 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.223074248 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.208263635 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.234890415 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.196125568 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.225432019 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.196587779 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.236453812 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.20327592 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.237961335 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.210293432 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.231171645 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.192009263 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.245529058 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.192757054 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.241203299 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.21205455 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.23107694 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.24624968 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.207242276 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.197802458 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.221554012 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.192436692 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.23033355 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.197905613 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.228051696 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.19656082 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.230252185 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.169002986 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.200376458 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.2417614 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.194154019 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.226961823 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.194487441 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.226099841 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.202851354 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.236578339 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.196906674 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.19923155 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.243411191 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.174225088 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.23788884 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.202275094 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.168603703 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.243397572 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.19988303 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.236402129 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.195863804 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.244679439 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.195699747 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.240668453 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.199150046 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.237869425 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.193984305 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.222266043 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.186736945 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.225243517 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.197928242 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.237287926 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.200962078 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.23113016 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.197354286 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.18849045 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.226948832 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.191197638 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.226403232 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.201525138 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.244531235 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.197539785 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.231914547 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.199162268 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.232438217 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.159860552 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.195802204 seconds)
  done (took 18.217873517 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.214373211 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.199509938 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.242797495 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.256545543 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.20198637 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.194827778 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.235654828 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.207673197 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.240440002 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.2080502 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.240139546 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.202036027 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.248461693 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.199411461 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.235012217 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.205064066 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.236686313 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.226766476 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.238000238 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.216531097 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.24074458 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.193713111 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.237614923 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.201354935 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.255124133 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.200632706 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.253526932 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.202079538 seconds)
  done (took 7.59637954 seconds)
done (took 78.853304043 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.524518516 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.766369383 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.45181374 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.454816636 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.441173141 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.485769245 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.451540312 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.467454136 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.116411451 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.428000447 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.449839675 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.454877607 seconds)
done (took 31.892753681 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.830394214 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.211734956 seconds)
    (2/2) benchmarking "String"...
    done (took 2.257214553 seconds)
  done (took 5.829869217 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.207540498 seconds)
    (2/2) benchmarking "String"...
    done (took 2.211472772 seconds)
  done (took 5.759794944 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.440536188 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.441187109 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.927434557 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.442642113 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.459148611 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.449080362 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.458342433 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.462626008 seconds)
  done (took 17.985137146 seconds)
done (took 36.189357879 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.517457632 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.780052617 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.731600087 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.432870409 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.452399289 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.445873808 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.443506468 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.521242331 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.449134908 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.438951908 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.978335932 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.740123797 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.456534732 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.882654561 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.434884143 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.447846126 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.455429702 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.824753204 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.445321643 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.500338766 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.435254861 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.440450982 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.467170022 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.466554372 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.459590288 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.454018699 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.491889297 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.445651922 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.947614288 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.453618648 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.502109312 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.444451001 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.498497051 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.445269402 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.458672154 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.46247557 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.775114768 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.460674433 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.454580642 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.451024673 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.781410192 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.473505884 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.445900348 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.451941409 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.437567236 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.49258729 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.437564791 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.638286614 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.471478391 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.459418198 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.523926332 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.873699861 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.459848351 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.462920878 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.452916674 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.814764783 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.450367047 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.572250494 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.47800925 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.463257165 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.446387491 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.454184991 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.484995893 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.462610713 seconds)
  done (took 161.228428773 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.447237529 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.452480025 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.448949479 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.463986097 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.451102267 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.452446013 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.4478309 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.446752901 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.449870895 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.457609867 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.450345117 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.449823124 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.450178616 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.460960434 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.457106243 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.477328157 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.447871618 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.454204477 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.461300351 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.448179339 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.477810621 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.451831269 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.453266369 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.452113638 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.478001777 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.546158768 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.475944323 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.474047223 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.458119151 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.449092235 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.478221078 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.471831928 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.249774081 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.408405915 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.472624416 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.464890682 seconds)
  done (took 89.686687255 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.44861012 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.450271295 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.450878705 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.489106611 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.449482158 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.12480393 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.096357644 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.534424105 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.707673791 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.855514518 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.451052609 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.094170146 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.801055428 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.451950978 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.547126629 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.466925229 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.454191766 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.550127359 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.480633605 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.452857238 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.451341543 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.095086323 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.466141191 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.915294117 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.643929441 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.451527809 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.489635728 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.861400741 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.453114813 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.489588166 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.799913592 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.490725741 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.452875746 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.87038659 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.410906653 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.568439115 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.454886896 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.490002115 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.452553847 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.745335912 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.452408717 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.454670108 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.456428573 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.175627781 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.452949987 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.128191581 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.455856362 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.515951366 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.453534839 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.455059054 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.045334746 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.284824698 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.454117315 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.453000902 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.458522624 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.45434395 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.453732419 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.492924624 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.088085294 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.416369917 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.45551449 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.458615024 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.492283202 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.455231772 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.454703073 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.837855848 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.518538636 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.603792703 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.129628775 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.457536395 seconds)
    (71/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.52662046 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.555768509 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.579204311 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.455043969 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.453993486 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.455217944 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.455145658 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.571655446 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.455544451 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.944664542 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.64717315 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.457337417 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.064705715 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.55828538 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.45707209 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.882530034 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.457167982 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.455466719 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.278565661 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.555475874 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.456749982 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.456062954 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.455779956 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.945939913 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.101574718 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.897368164 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.461079652 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.04122731 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.459424275 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.456995475 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.953911179 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.09962028 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.230745544 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.459214262 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.457660852 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.57385824 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.649044127 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.457885741 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.460311818 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.457836014 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.058489002 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.459508434 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.525640866 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.459744287 seconds)
  done (took 402.535971379 seconds)
done (took 654.796286402 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.448287942 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.449482507 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.474646462 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.474081865 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.449427822 seconds)
  done (took 13.651104027 seconds)
done (took 15.007496414 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.458848363 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.459263361 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.459768243 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.273946918 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.461225341 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.481105593 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.482171092 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.460252802 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.490525506 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.462904885 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.267294535 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.461178897 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.46133178 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.455625817 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.263446909 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.463524167 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.379058399 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.476292761 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.467331565 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.868893244 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.899273434 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.592035411 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.833641345 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.533318937 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.855864562 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.925385833 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.766676195 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.714165746 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.51993169 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.511991574 seconds)
  done (took 20.379905084 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.379483104 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.871597708 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.911350528 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.594164384 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.845688198 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.534361667 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.858650531 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.893501541 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.782350395 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.708698431 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.517775899 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.51301838 seconds)
  done (took 20.391437767 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.279838937 seconds)
done (took 92.97543382 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.524975068 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.59874688 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.504341648 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.503551045 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.503926651 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.502909204 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.506113801 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.502646251 seconds)
  done (took 13.508912831 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.500414263 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.501077965 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.501565737 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.501598353 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.500964473 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.501012525 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.501248029 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.501034385 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.500853985 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.500715769 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.502007483 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.500479984 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.501715965 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.504376569 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.500837921 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.501230219 seconds)
  done (took 25.38359941 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.504090499 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.500940448 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.500325495 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.501686632 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.501441699 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.501232385 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.501189082 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.501479483 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.501538359 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.502975832 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.502405927 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.502041217 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.501649337 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.502240613 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.502605045 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.503540779 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.503114118 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.502955578 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.505389617 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.503770277 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.502693395 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.501689775 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.503897946 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.503023674 seconds)
  done (took 37.420711601 seconds)
done (took 77.674756269 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.478387999 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.470106779 seconds)
  done (took 6.311604919 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.619783354 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.602615598 seconds)
  done (took 4.588503608 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.504178499 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.504536995 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.504890182 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.504412607 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.504590214 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.503875737 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.504884525 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.504592099 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.502900124 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.504164601 seconds)
  done (took 16.407001059 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.504373497 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.510431739 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.504119414 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.504159712 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.50593843 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.503981058 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.505204468 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.504073248 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.503580658 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.504675699 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.504185832 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.505442696 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.504154055 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.505956728 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.505339541 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.506817941 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.504587211 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.505680925 seconds)
  done (took 28.457447209 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.525762319 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.531662441 seconds)
  done (took 4.421991512 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.685284979 seconds)
    (2/7) benchmarking "second"...
    done (took 1.590229596 seconds)
    (3/7) benchmarking "month"...
    done (took 1.669284342 seconds)
    (4/7) benchmarking "year"...
    done (took 1.663835534 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.586838941 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.534589978 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.587046021 seconds)
  done (took 12.682290465 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.513886367 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.869231066 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.06347127 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.735413281 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.505030004 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.527334586 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.459772504 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.529714009 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.531804149 seconds)
  done (took 17.10141143 seconds)
done (took 91.33314523 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.468173641 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.479986387 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.48435447 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.490289373 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.909067697 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.487989918 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.477483205 seconds)
done (took 18.164395766 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.462737754 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.48143699 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.469713432 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.479757028 seconds)
  done (took 11.260959931 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.473206824 seconds)
    (2/2) benchmarking "read"...
    done (took 1.880418173 seconds)
  done (took 5.720553082 seconds)
done (took 18.348980482 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.508649598 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.507327294 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.509959123 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.507825262 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.509242551 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.508311148 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.509178228 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.510450246 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.508124462 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.508775732 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.507663091 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.50884236 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.508920862 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.509074164 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.509351085 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.508747376 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.508064957 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.508834887 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.509051815 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.508555104 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.509506411 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.508193954 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.508546582 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.508716437 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.50970944 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.509131084 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.508906894 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.509720196 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.510031688 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.509293675 seconds)
  done (took 46.635503511 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.51701379 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.516617511 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.510604596 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.508898164 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.510317968 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.509038754 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.510399751 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.511239104 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.509917986 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.510715364 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.510194209 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.511043548 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.510036646 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.510251199 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.511484526 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.511327872 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.511396037 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.511525942 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.510953872 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.510883053 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.512683422 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.512090609 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.511722615 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.512521809 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.512372 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.511328221 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.511941497 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.512985485 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.513498888 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.512835816 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.512964184 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.511512882 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.512896228 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.51267553 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.514726349 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.514207847 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.519729359 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.519920445 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.512744532 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.513401739 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.51351551 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.511609822 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.512862355 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.512896787 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.513242641 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.511963008 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.512659885 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.512636977 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.514735079 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.513604488 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.512932406 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.51435605 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.513014609 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.514803174 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.51412774 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.515998927 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.513469486 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.514634857 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.514220768 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.513666717 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.513935605 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.514355701 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.514416044 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.514556006 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.514292914 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.514494476 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.513971434 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.514578495 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.515708737 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.514558451 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.514839282 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.515184997 seconds)
  done (took 110.311286794 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.513900336 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.514578844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.514044908 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.515118997 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.515772432 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.514534286 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.515199943 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.515697841 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.515309244 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.515169003 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.51656541 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.514997333 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.516527346 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.515864762 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.517047594 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.516344572 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.517222546 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.515998648 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.5168204 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.516835206 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.516320965 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.519638216 seconds)
  done (took 34.724262214 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.516521619 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.516535727 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.517312572 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.518821353 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.519287264 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.51856322 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.517081467 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.517879054 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.518689563 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.517671556 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.517207041 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.517082095 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.521006547 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.517589911 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.517226317 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.52101835 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.518867239 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.52001536 seconds)
  done (took 28.70523172 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.517994013 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.518896293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.517892115 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.518366127 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.518962502 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.519531708 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.518352578 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.518192991 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.517817944 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.518934775 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.518853899 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.518888401 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.518796699 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.519444057 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.519396636 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.518663163 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.518621956 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.518252356 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.519840687 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.519566979 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.519885175 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.51931541 seconds)
  done (took 34.792870868 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.51953988 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.519573265 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.521505214 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.519848089 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.519707429 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.518969905 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.519630465 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.519343766 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.521208458 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.520647213 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.520187169 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.520992229 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.523149138 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.520597347 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.519844527 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.521252528 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.520579467 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.520615435 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.52069289 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.52166089 seconds)
  done (took 31.788208334 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.522548852 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.521454509 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.523738598 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.521607392 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.521279347 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.521836541 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.522691678 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.520802541 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.523140338 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.522869773 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.523585576 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.52284037 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.522648864 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.523512871 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.522410776 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.522277937 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.523628947 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.523664427 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.522287995 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.522352389 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.52217122 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.52389623 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.522829335 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.523407062 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.522577347 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.523757316 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.523524605 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.523626853 seconds)
  done (took 44.017319661 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.549832489 seconds)
    (2/2) benchmarking "in"...
    done (took 1.549023169 seconds)
  done (took 4.479212266 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.522156902 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.523364459 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.523863754 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.523510985 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.524987989 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.523672599 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.524491697 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.523555056 seconds)
  done (took 13.571476303 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.520542032 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.524978141 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.524030116 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.525353748 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.524940567 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.518078241 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.533701109 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.528901266 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.521557735 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.520994534 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.526723615 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.524369615 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.523485982 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.521191906 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.51930214 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.532608092 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.528245945 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.527863425 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.527046631 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.529812624 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.526027506 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.523697252 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.526514091 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.529014897 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.520429239 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.539756068 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.535600862 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.529670009 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.520546293 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.532562765 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.522273677 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.530479399 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.527555075 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.52858244 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.52826124 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.527783177 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.541056862 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.528609399 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.538045865 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.531264555 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.528386117 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.528876402 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.525456694 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.526682478 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.528274091 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.531476523 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.528800415 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.529432968 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.521484611 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.528374034 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.53624794 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.522526852 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.531382937 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.53941203 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.529038365 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.541350545 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.535718543 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.527362244 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.529390923 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.541229091 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.550155155 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.540193275 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.540340779 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.534348537 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.536744791 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.539527617 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.545124488 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.536860868 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.531024161 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.530735438 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.54093897 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.553709798 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.546270653 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.534818569 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.530784396 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.530285031 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.52591611 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.537022341 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.541383161 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.54028337 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.5353282 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.532201407 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.539180087 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.535557211 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.528238054 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.535054841 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.532947172 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.531524225 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.526268599 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.546325689 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.540511612 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.533543127 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.526536859 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.529416345 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.530240473 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.535578792 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.527529164 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.533731489 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.536621172 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.53259154 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.5333746 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.532685616 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.542737453 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.537451515 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.533579794 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.544645796 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.538605224 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.528165278 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.546363542 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.540538011 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.53557041 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.530512156 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.541951319 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.536092613 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.5320766 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.541452583 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.539372011 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.536602106 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.539521192 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.534948963 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.541573269 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.551751937 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.540078735 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.535818766 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.53629641 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.542556774 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.535001973 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.542018856 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.540904678 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.535604772 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.537015636 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.537560887 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.541579484 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.53668368 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.540607573 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.541094925 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.54125542 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.536128931 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.535768271 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.539513999 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.535628797 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.538314754 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.540321643 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.544528952 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.542001466 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.539700335 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.552954464 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.537375947 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.544107529 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.540322412 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.542951168 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.538703072 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.539530411 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.541106589 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.53081366 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.539840785 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.531729768 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.542171319 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.538910709 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.538184849 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.538389274 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.531157838 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.537395153 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.542653853 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.548694076 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.538075687 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.540913688 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.538422938 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.539018265 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.532364207 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.540830157 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.530238726 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.538607808 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.545086076 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.539078398 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.538660817 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.544104316 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.544171015 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.53935497 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.539990735 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.536968912 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.545224501 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.544722133 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.5500872 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.546244184 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.539778488 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.539184836 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.535973884 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.537433147 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.542648615 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.539428094 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.548132413 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.55848757 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.554464573 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.537130595 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.543110824 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.536118665 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.544875783 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.548695543 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.546684603 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.540725814 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.540752703 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.537222506 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.545108146 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.540613929 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.545059955 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.534042143 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.542292704 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.542472964 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.541871072 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.541896494 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.545199218 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.547833422 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.544544945 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.542379098 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.541335808 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.540812278 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.545379479 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.534167159 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.537000551 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.546438622 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.54262396 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.552191239 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.549120527 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.544946323 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.549534057 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.543797783 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.544189314 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.545835822 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.546538984 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.54283139 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.55616877 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.54448579 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.546824146 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.557514262 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.545732456 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.537239896 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.550562889 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.553023677 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.544056196 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.539635103 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.551367322 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.545179174 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.543430069 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.544443326 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.539412659 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.548133111 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.555534122 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.553573887 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.538762506 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.548202534 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.540695503 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.548227956 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.548965969 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.552198502 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.547877213 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.553031709 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.551964604 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.545800691 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.54839299 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.548741708 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.544301409 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.546555256 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.540827503 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.552847189 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.55511263 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.546179441 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.552231118 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.545518044 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.549293174 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.538935433 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.547690457 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.548391734 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.569456143 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.564616632 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.560432371 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.555647335 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.551582711 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.558324212 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.550023575 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.544611644 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.543737231 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.549113613 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.543954716 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.544086856 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.552398388 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.548016686 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.552542401 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.551007569 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.548664114 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.550811664 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.548575207 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.542035059 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.551804388 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.547407041 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.548559841 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.546373111 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.549699511 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.552508807 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.556473278 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.547252413 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.544980755 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.565206651 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.55327343 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.555936199 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.554424414 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.544584755 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.5426769 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.55262649 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.555273056 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.548664533 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.557626707 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.546878483 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.560646434 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.547330356 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.562058205 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.557046954 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.548700781 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.55736543 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.550616039 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.543324468 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.546528228 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.551874718 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.56197705 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.559978682 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.544517148 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.555072191 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.551053454 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.549131283 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.549794356 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.551712686 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.550638598 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.551659398 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.564804714 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.555284579 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.54974861 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.560812727 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.560081418 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.551676997 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.552898941 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.542927142 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.56559001 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.560748332 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.555529024 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.561496054 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.5512583 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.55531063 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.551304743 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.553272242 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.555396954 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.553135284 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.564053012 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.557467957 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.55862858 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.554133245 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.565717679 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.563146333 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.564209737 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.56357453 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.552829099 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.558423107 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.553732496 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.551185315 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.549635816 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.5591827 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.558272948 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.5475924 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.559701621 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.554144281 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.560159361 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.562559806 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.560568631 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.547196609 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.562997083 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.566900791 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.547387695 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.557923393 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.554764331 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.549027289 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.558006364 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.554074998 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.546233708 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.554686179 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.555542363 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.563682295 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.549918534 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.558534225 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.551991842 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.559205469 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.555601379 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.555910706 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.555685608 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.556605348 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.548713702 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.557524529 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.564799825 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.56372867 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.558792428 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.562331914 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.552614826 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.572683649 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.565536721 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.557875551 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.562912435 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.559844028 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.553910871 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.55965392 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.562545419 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.558964517 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.561407634 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.550537537 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.5568419 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.556275418 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.566119337 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.566198327 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.561957914 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.553667614 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.553267074 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.561087202 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.559208402 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.557677482 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.56388232 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.565898848 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.55315435 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.552258985 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.559881463 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.558090034 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.565041476 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.55511263 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.558194027 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.557046535 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.562301533 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.560310148 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.559095259 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.552103378 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.55486155 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.574110018 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.565071788 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.558379805 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.557577398 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.562885756 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.554370217 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.560573729 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.562069311 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.557353138 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.561850498 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.563630612 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.564043445 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.55587411 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.558204434 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.562693761 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.574815764 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.562672879 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.555227588 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.57650285 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.574589897 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.567609191 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.554904363 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.559779215 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.558362554 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.563686485 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.561712561 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.556430535 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.576118374 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.57179883 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.565368963 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.566145458 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.55912145 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.555618979 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.564974917 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.560109913 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.566392906 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.569667344 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.56604356 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.571174588 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.56269872 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.561696498 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.55818397 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.556187208 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.560751196 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.56085477 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.565273489 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.566072194 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.564711965 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.566483001 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.567682315 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.562875209 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.560823203 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.563510346 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.556356014 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.565408492 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.55724712 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.571964563 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.56262846 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.558126001 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.566305394 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.563025508 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.559673964 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.563482898 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.570243045 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.562282815 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.557062249 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.567158436 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.575225383 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.570501459 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.56302013 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.559884187 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.570806944 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.567884156 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.56309046 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.564061323 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.561709698 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.583635181 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.575669224 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.561515329 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.564408784 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.578980539 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.572833599 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.566317546 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.56659761 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.572588316 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.56843234 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.571257491 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.566315381 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.576355625 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.570304855 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.563273724 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.570644773 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.563808429 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.565322238 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.575312964 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.57320732 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.566172486 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.56685749 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.585145569 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.574463206 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.573374379 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.589522802 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.573452113 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.574435967 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.571924823 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.560750777 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.56775935 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.570339776 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.573591307 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.566839191 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.568345528 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.56671215 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.559296402 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.576577581 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.580663714 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.576760914 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.567471464 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.560627717 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.563994276 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.569971922 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.56950182 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.570199115 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.56792173 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.569059236 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.568291681 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.565657267 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.591840415 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.59013517 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.573935833 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.56958102 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.56842801 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.576190589 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.575286494 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.569920589 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.57635758 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.569944894 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.570266932 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.575039955 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.577632323 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.57234897 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.569411306 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.566430061 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.566316289 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.573778551 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.588615424 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.588845621 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.580822673 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.572046207 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.57329483 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.570110417 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.573859428 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.574382539 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.57074709 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.574124265 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.568622169 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.573711782 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.571758811 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.571186881 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.567759838 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.577847574 seconds)
  done (took 925.796534345 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.571104188 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.571686176 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.571576246 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.572564011 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.571589306 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.572860487 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.572760824 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.572268304 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.572572392 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.572559052 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.572383262 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.572161935 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.572384729 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.572720456 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.572287859 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.571523446 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.572694126 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.577847993 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.572307693 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.572602983 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.572478316 seconds)
  done (took 34.44454899 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.572873617 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.578135739 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.572093002 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.573203897 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.573329541 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.572831434 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.572726671 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.572621979 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.574155136 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.573258583 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.575548609 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.575015859 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.574304037 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.574198437 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.573559738 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.575478557 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.576453472 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.573660589 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.573479631 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.573845599 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.574393084 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.574179999 seconds)
  done (took 36.05331565 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.574186074 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.575011459 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.569034792 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.577855746 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.575948101 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.574982894 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.575000634 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.57617285 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.578270323 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.568900486 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.570402842 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.570313306 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.574531789 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.580821835 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.580451257 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.582590356 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.57664351 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.576208399 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.577916647 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.576939009 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.587169081 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.584899169 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.578164305 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.568904957 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.577996685 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.577120945 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.577007383 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.576959123 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.570097287 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.582358833 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.577609695 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.572907141 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.586148001 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.577054177 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.573149351 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.581694223 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.577487403 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.578444158 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.578849168 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.58628936 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.590111983 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.580579765 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.594719971 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.587635411 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.578589917 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.578270114 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.586945309 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.579052475 seconds)
  done (took 77.183963689 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.580178178 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.578760888 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.579876813 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.578579231 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.578876057 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.580439943 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.580710717 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.579559034 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.579837003 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.579985835 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.579939321 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.57840386 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.579949378 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.580969968 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.579862844 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.580096463 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.579526559 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.578653193 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.580912279 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.580867302 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.580244597 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.580497282 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.580447067 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.581166152 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.582752737 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.581062578 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.579926819 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.581492591 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.581278388 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.581075009 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.582677448 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.582845696 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.581310165 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.581825454 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.581291517 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.581482045 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.581172997 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.58294508 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.582122489 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.582165092 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.585266325 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.583030426 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.582477911 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.582232839 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.581828597 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.582419733 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.583634762 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.584066522 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.584523563 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.584277721 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.583532026 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.583414134 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.589643837 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.583377118 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.587599792 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.583308255 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.582975042 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.583995143 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.584725963 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.584173309 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.584995551 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.583980477 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.584571544 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.584499956 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.584628883 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.584588445 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.584098788 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.584855658 seconds)
  done (took 109.014303986 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.583593836 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.585045836 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.584412375 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.584465315 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.585815208 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.585139772 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.585421093 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.584657727 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.584971734 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.586278116 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.585129855 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.586026058 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.585137678 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.586329728 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.586092408 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.584009531 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.586024941 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.586499302 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.585302153 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.587353881 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.586763931 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.586302211 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.584784071 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.587409404 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.586777061 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.586090243 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.588364205 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.586889646 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.586148281 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.587753023 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.587410172 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.587505087 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.588207621 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.589235615 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.586180547 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.586468224 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.587708675 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.588301767 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.593292834 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.587623189 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.588154052 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.58609562 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.588378522 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.588545094 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.587660275 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.589281011 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.587370642 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.588982021 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.588559969 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.588247988 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.58995491 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.588369093 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.588422801 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.590035158 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.58907456 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.589775837 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.588543417 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.589487672 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.59086152 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.588685824 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.591648351 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.589896802 seconds)
  done (took 99.848555465 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.588003265 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.588862452 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.588980205 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.58910138 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.589215151 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.590509589 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.588923494 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.591545336 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.590543951 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.590975011 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.589681062 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.590808091 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.590102415 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.590382897 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.590603386 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.59006498 seconds)
  done (took 26.876032979 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.5898227 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.589505202 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.591425279 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.592018999 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.591087107 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.59099317 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.591512021 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.591240967 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.59090545 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.5931051 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.593201202 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.590515526 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.592553913 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.592994193 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.591683691 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.592528142 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.592462002 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.591999234 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.592430224 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.592642681 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.594576099 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.592438815 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.593659501 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.627196377 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.592833558 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.592587996 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.593635755 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.592716644 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.59222552 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.593485736 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.593157832 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.592448593 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.592477996 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.590952523 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.592215533 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.593003692 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.59229997 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.592628155 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.593497818 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.59395018 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.593187234 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.593161253 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.594215298 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.591734327 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.593989361 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.591902364 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.592463818 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.595135597 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.594124783 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.592940555 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.594002072 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.594241209 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.593669488 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.594097266 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.595349031 seconds)
  done (took 89.070268365 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.592643799 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.595209279 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.594475108 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.594556613 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.595101863 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.594502834 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.593357717 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.596918504 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.593601742 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.594786041 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.596355305 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.596020695 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.594531609 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.596059666 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.59471159 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.596591508 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.594972378 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.594886962 seconds)
  done (took 30.149972005 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.596782593 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.596357819 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.603958576 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.598083108 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.599001451 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.597179502 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.595729177 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.597236073 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.598518568 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.59735599 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.596383381 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.599695255 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.598408638 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.596526834 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.597719934 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.59693387 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.597537019 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.597957743 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.598756239 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.597885039 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.596472079 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.598603286 seconds)
  done (took 36.595831146 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.588046217 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.589227373 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.588657608 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.61055711 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.598743946 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.588028618 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.589749298 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.590491291 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.615223975 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.62171265 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.620223284 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.599732271 seconds)
  done (took 20.644667105 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.598521851 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.599801763 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.598043648 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.598806315 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.5982318 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.600336607 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.597891673 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599408347 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.600620442 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.600413502 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.599807629 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.598779915 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.600367686 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.599877889 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.599478258 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.599850582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.599142741 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.600697617 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.600403864 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.59924869 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.59982502 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.5995782 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.599889972 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.601359992 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.601610023 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600064994 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.600822772 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.60255756 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.601908176 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.600962175 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.601159477 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.60198982 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.602489395 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.608428488 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.602077541 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.606174919 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599334245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.601030201 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.603060836 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600918735 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.601409928 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.601931782 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.604013192 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.603477579 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.603421496 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.60273789 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.603001541 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.602128385 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.603243262 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.603064817 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.602598278 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.601534175 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.603497134 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.60371483 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.602310042 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.603501046 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.603327071 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.604260011 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.602795998 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.602766245 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.603159592 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.603917719 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.604204767 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.603838729 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.605253084 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.6032309 seconds)
  done (took 107.155863328 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.607753403 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.603478696 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.604308481 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.605116475 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.604369801 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.603170207 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.605059973 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.604723059 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.602961802 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.605002983 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.604013331 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.604237243 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.604785008 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.605593282 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.605404639 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.605987465 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.604205814 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.604264201 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.604587636 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.603648551 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.604725084 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.603521719 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.605242748 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.604556278 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.605380405 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.606870609 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.606441853 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.603828322 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.606135599 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.605674856 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.607886449 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.606210678 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.606925434 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.60727045 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.606857339 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.606783377 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.607990723 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.605107815 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.608243269 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.609111047 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.607189225 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.612519231 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.607281764 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.606916983 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.608372126 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.607175256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.649557112 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.608782095 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.606415313 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.60855993 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.608282939 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.607626291 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.607544926 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.60699772 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.608349149 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.608227415 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.609059783 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.608003155 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.60807984 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.607825479 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.606595014 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.608000431 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.607689148 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.609952774 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.609462419 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.607844755 seconds)
  done (took 107.521508709 seconds)
done (took 2050.748473654 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.570151204 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.573390653 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.600101452 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.977687456 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.600281363 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.262598617 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.231349741 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.599717673 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.600833248 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.602551135 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.600967064 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.572498431 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.952371457 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.601323325 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.601980182 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.574650939 seconds)
  done (took 58.975878568 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.643057683 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.619846909 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.763083211 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.606434798 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.642582621 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.88491225 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.681455163 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.609067746 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.823949679 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.611845962 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.574845028 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.641174901 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.605942138 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.587611874 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.633903655 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.881964808 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.966573683 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.575717136 seconds)
  done (took 34.808451621 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.217327147 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.583065416 seconds)
  done (took 6.255897834 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.635409224 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.608617758 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.615113067 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.608597365 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.590494713 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.574810386 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.606735256 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.576852196 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.576165726 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.768243713 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.615278172 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.630264156 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.608969339 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.608945593 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.613053587 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.669975072 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.801998425 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.615896547 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.612354965 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.623524612 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.607078526 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.867948432 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.666109985 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.61564861 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.770455098 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.582134711 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.62195011 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.629918302 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.824830658 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.617993112 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.608176571 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.608795295 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.616413232 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.597189629 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.246978194 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.578145447 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.651242522 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.624418231 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.615121029 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.822838226 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.610630514 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.624289373 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.578756419 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.246153019 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.808423403 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.908702916 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.582370426 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.613904743 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.611661999 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.820972835 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.611954356 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.612742096 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.717379354 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.593711533 seconds)
  done (took 101.744590429 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.619661551 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.579878489 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.851065348 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.600937521 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.580818483 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.579613301 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.581348439 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.993758145 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.652752281 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.582133874 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.006203443 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.38037812 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.588418122 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.632852335 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.641238247 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.621636033 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.584471601 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.587548807 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.581861143 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.588098249 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.294465798 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.591216802 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.583075962 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.781345938 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.65744359 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.288015536 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.582075486 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.582828584 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.585459227 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.582409607 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.353937536 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.601305445 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.654053843 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.584440871 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.98563281 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.129831175 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.088754652 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.586081443 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.60133394 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.584421944 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.5873807 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290003777 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.109546123 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.582650001 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.600733376 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.292631137 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.582621855 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.585522153 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.594585806 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.947316135 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.584492763 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.585059734 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.600483623 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.592667266 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.589339538 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.660439222 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.635967325 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.292013112 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.584939538 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.591695983 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.589953653 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.585965576 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.589708439 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.590130979 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.586385462 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.128623828 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.790570924 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.587583868 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.137215284 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.363058529 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.591779583 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.427509951 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.595925432 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.608848234 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.699444392 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.585206471 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.585119099 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.315352462 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.597969057 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.585970675 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.118687509 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.592385596 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.018992918 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.606626863 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.586436097 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.304912518 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.59097613 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.659725025 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.587366313 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.587607894 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.588447735 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.5902979 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.994294176 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.61589515 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.587808059 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.588461005 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.623829329 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.587824402 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.589908326 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.593610752 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.437411839 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.595287153 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.587251353 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.593327685 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.589531811 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.588876491 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.589207818 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.588126744 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.966867854 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.589395063 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.592999222 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.590005405 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.590802434 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.595873749 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.789889692 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.588319576 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.067147016 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.592971425 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.588440681 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.594449964 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.588759646 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.600877737 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.596695851 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.596000791 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.589715703 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.008525945 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.610900102 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.609799262 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.588795963 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.59950801 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.590056459 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.610177104 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.633904144 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.593132269 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.587502643 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.624016504 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.624473615 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.589933888 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.59756328 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.591889932 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.599930061 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.590902936 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.013715361 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00007906 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.822694562 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.590967818 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.591330853 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.558738929 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.626087437 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.862751052 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.613759473 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.590472644 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.981647178 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.794200716 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.594723394 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.592432879 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.593103634 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.974602077 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.590121062 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.015178047 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.370906803 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.59158738 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.601535852 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.568455458 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.453630312 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.592436301 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.5970702 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.016287127 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.611198952 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.591756047 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.591128453 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.591716028 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.594438161 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.599012975 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.600814042 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.591978351 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.592676066 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.670135497 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.878494465 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.613049187 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.59461046 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.29466254 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.609300806 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.594291495 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.593845768 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.596464886 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.595399247 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.627790378 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.595619946 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.618603176 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.594757546 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.601042284 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.329472135 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.602111205 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.593367006 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.879432015 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.52869726 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.598741921 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.59618573 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.594303508 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.635443236 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.340007693 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.66585276 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.07350418 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.611628126 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.67134445 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.593874333 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.636178455 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.329061468 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.605565205 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.596072936 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.490894338 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.593756022 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.372682448 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.594088815 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.59823641 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.429140326 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.596821914 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.597125444 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.59534065 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.615614039 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00724771 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.59773474 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.640340507 seconds)
  done (took 563.640079106 seconds)
done (took 766.878171469 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.596798797 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.603096037 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.601243916 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.602422347 seconds)
  done (took 11.8774275 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.63623356 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.626360238 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.634643135 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.625261983 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.634971388 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.625318066 seconds)
  done (took 11.257751842 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.597236004 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.60171702 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.602314163 seconds)
  done (took 9.276532093 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.930183929 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.601980042 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.115303768 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.602984221 seconds)
  done (took 10.727777115 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.634459871 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.634340233 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.635125947 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.635343713 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.636714138 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.638047687 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.635893992 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.637069491 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.637356049 seconds)
  done (took 16.196831804 seconds)
done (took 60.811807285 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.758935686 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.758231755 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.599321813 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.672172907 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.823673806 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.762033636 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.763242868 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.774657169 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.764514538 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.669585217 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.760797934 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.66258726 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.758706676 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.89647231 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.66788968 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.762460785 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.660464784 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.857147407 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.755868397 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.668910202 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.789357711 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.67242671 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.668731478 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.600941433 seconds)
  done (took 45.006581006 seconds)
done (took 46.485800325 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.6680001 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.785225482 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.630757725 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.631071032 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.640053739 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.616640845 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.660848701 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.6386273 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.653051341 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.654393621 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.618334636 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.641445954 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.655158313 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.641367313 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.673726526 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.639092723 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.632020734 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.643078844 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.657095641 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.657881006 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.635961109 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.641724133 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.6681761 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.631397749 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.649790172 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.649026458 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.645508413 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.614027873 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.641263041 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.657155145 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.601852303 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.646879257 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.658469698 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.64337113 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.637393414 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.644857632 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.644068774 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.78853505 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.665366664 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.645915867 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.64357793 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.659044073 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.64789475 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.648884611 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.644280883 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.670542532 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.652154649 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.658623698 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.603212112 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.619357671 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.665255617 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.65703439 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.643800374 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.618768699 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.622971329 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.657874581 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.647686483 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.664727477 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.642893276 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.646760736 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.67632134 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.664031648 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.655503748 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.65272588 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.64409259 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.65926519 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.64561939 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.659852695 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.645734349 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.645731836 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.645061708 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.644265936 seconds)
done (took 128.297076398 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.817311545 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.605296805 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.847762833 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.643388241 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.865576691 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.817389837 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.643294165 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.644773124 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.643209867 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.502977439 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.645517143 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.644441448 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.611352044 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.644674578 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.814179513 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.64564621 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.643294794 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.41055556 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.646982972 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.82766342 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.613609105 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.643488323 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.645028603 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.523553449 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.609405428 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.610131637 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.825996867 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.645869004 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.409337249 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.608997066 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.611860279 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.417470895 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.826005738 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.664248785 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.656077145 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.654774186 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.87202374 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.648135493 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.816393481 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.818978936 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.85021091 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.685054434 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.611414831 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.616601664 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.648139823 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.647472908 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.646878839 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.674861936 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.609738292 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.647860038 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.406183915 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.672337104 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.657562111 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.649311759 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.647034445 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.668565814 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.64822468 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.649393474 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.831904183 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.649074369 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.819512104 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.51427266 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.526410865 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.649613404 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.614771962 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.649823207 seconds)
  done (took 130.063352333 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.764729579 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.769735453 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.821092683 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.64143045 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.733378455 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.82046467 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.642857028 seconds)
  done (took 13.681088846 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.65381743 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.65017402 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.732760779 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.734565128 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.650537125 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.872761334 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.649420363 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.661101039 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.651774922 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.731091433 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.650456807 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.651708503 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.658864092 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.616037417 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.731025224 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.660377483 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.816344313 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.645457847 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.649783258 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.854276511 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.64974722 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.658352225 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.734299522 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.661645312 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.651718281 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.657654161 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.466076168 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.649339905 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.648974426 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.65126962 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.650938224 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.760469121 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.651662408 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.617256566 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.652100941 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.815014745 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.651746637 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.651978719 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.65218489 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.6212899 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.651981722 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.651915722 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.652538427 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.652075519 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.653628719 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.677250647 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.652967392 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.652105691 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.651832751 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.653599037 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.735588304 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.653638567 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.65207077 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.653626415 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.739500742 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.661780733 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.65300378 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.651521887 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.653299557 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.656111158 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.853852854 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.736644234 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.654516402 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.733931529 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.652445677 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.654333069 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.653790611 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.653629837 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.795524766 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.653120065 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.739548724 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.653843132 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.888838238 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.681774197 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.655090776 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.652590878 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.653309195 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.652887424 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.618242445 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.660914073 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.65405524 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.64898127 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.660705108 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.654246256 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.654404306 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.865015237 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.816024509 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.653940421 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.6702837 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.662744892 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.653981068 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.741454831 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.657463076 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.654934123 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.73995967 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.824266549 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.74180299 seconds)
  done (took 169.682667891 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.667210334 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.668038024 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.655082186 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.686060148 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.648763366 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.648751773 seconds)
  done (took 11.46749248 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.651314528 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.661178912 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.656319076 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.656319564 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.655292478 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.657021469 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.657530752 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.65061856 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.660702034 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.657790282 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.658446022 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.65902354 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.657295736 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.657450155 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.663275058 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.658443717 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.658600091 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.656287507 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.658730834 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.659772308 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.624266675 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.657380034 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.660005438 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.653001963 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.662527755 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.656921177 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.683781227 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.660104613 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.662057375 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.670304233 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.660344587 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.658686764 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.653535341 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.656208726 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.662203902 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.653578852 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.66364794 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.66021133 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.660269997 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.659053082 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.663100804 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.660955978 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.658582701 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.660494048 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.654623608 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.65673498 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.665214061 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.684292185 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.659864358 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.662103959 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.662810963 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.65997394 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.662048854 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.663520131 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.658656733 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.658969343 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.664907178 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.662355178 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.662205368 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.654981824 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.664055394 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.662415451 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.655406459 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.665763433 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.661166899 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.662160809 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.656989063 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.665047071 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.664543864 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.663425845 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.665196042 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.66199361 seconds)
  done (took 122.011567327 seconds)
done (took 448.39077659 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.026070005 seconds)
  done (took 4.525410389 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.634032023 seconds)
  done (took 4.135588611 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.250325548 seconds)
  done (took 26.759338182 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.699310506 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.633482862 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.654788084 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.63233914 seconds)
  done (took 12.120713046 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.252329154 seconds)
  done (took 4.75230691 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.633642099 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.634316278 seconds)
  done (took 6.770492882 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.066919823 seconds)
  done (took 4.566268029 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.393388991 seconds)
  done (took 4.901782692 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.663984087 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.645521892 seconds)
  done (took 6.817680866 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.620039602 seconds)
  done (took 4.119393395 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.027704641 seconds)
  done (took 17.530529965 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.658825679 seconds)
  done (took 4.162038623 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.720881755 seconds)
  done (took 4.221944075 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.022548259 seconds)
  done (took 7.52153769 seconds)
done (took 114.406185873 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.626528416 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.632553274 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.628023438 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.627571495 seconds)
  done (took 12.015847267 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.784000675 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.781967526 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.788894524 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.772403041 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.773746578 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.784851341 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.698823572 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.69825269 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.761312944 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.75768427 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.789894232 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.771807015 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.785840573 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.697967947 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.756748955 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.791021051 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.761126467 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.785825558 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.698633465 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.774508686 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.665724811 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.773311467 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.76057961 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.666175426 seconds)
  done (took 43.58581905 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.245675026 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.787718746 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.868494521 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.753474307 seconds)
  done (took 9.158383479 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.831998817 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.836683142 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.845875722 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.884616263 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.936644109 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.843877144 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.701545427 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.696003242 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.683484541 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.831360399 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.911659507 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.828282703 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.053852798 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.667306576 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.048772334 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.66971603 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.666520093 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.834802735 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.884823691 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.912852116 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.668319414 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.832181942 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.841138737 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.824950086 seconds)
  done (took 45.240626969 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.683920001 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.693460111 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.669505808 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.669019154 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.672594539 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.670784462 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.691886377 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.670915903 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.685472923 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.668562112 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.669903066 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.671479592 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.690982491 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.669689561 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.67009932 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.685094452 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.672660679 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.683403874 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.685977176 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.670967726 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.669991344 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.685477672 seconds)
  done (took 38.407226228 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.634387236 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.63201815 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.071219671 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.976048491 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.635561897 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.638576316 seconds)
  done (took 16.094723079 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.766797789 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.960240126 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.664272461 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.144186213 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.276169966 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.667824658 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.66573836 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.016237609 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.426278509 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.396200452 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.736153529 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.763920817 seconds)
  done (took 24.991883326 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800965822 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644203917 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.64575607 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700852253 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651361391 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.646211855 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.71760536 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.292435372 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.675210374 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006645608 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644857143 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804876025 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.984907927 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647424648 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.650910497 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.642418495 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970779175 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338576714 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647504477 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644399892 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708091022 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.658437292 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.650500947 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.934628279 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.648595118 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646193766 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.9946049 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.646458184 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071659741 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030870825 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033649042 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648952915 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.99984188 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245672372 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829346176 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930969504 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646654648 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.66924097 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.661786041 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.652177906 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.655101602 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.655944167 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027742145 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652951049 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.647562794 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646958387 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278649052 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.680561474 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.64915301 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.650894154 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040195405 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815634795 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.675952857 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.649404858 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672847713 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654282922 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.67647932 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848111901 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370410791 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669731954 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657722186 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.655433278 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.658358371 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668320391 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.484104439 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.680997143 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.67646619 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677296184 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651651024 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.64943447 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705425319 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649680732 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.70239784 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650260205 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639790157 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.659216092 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656167171 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394349379 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652390363 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.655464847 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965343917 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650687843 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651769684 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.649336693 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.696246359 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.653818339 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686075234 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.633951496 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724209482 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.313390061 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.942795938 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702927306 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710055099 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.958597528 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.63341749 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651491925 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.657959019 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659455508 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705014444 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309222353 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656514282 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.679241264 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990533992 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.949976949 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667518265 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.642597777 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28725664 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65183296 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.709281048 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.668144951 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.946951145 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.464107412 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048935552 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670446221 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726989864 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.654572484 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.651789798 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654055171 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.689828504 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.654594135 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053312087 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.637154837 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656398276 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804925472 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661309585 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.657862847 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671691142 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662462663 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.655953386 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.950178651 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66575582 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036491582 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.662254607 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655385786 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.660738353 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661455972 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.662323051 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959751865 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653566212 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.015002047 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656848751 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656963919 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656291139 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.961419675 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.656874593 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.691593672 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086092861 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673953231 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.674691383 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04762554 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728704677 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852650047 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720126491 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.669890913 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.001188559 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.68475188 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.68595378 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.677330267 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.665853179 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664904594 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.686436872 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667730722 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474983097 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658616434 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.666331382 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.658904879 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.70158845 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806687079 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687184453 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.944581291 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.657450714 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668556316 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.691763318 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.664211838 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96698407 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041824313 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.665200302 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912750706 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.314302748 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475697014 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704305694 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.657833374 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.658867794 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.657697882 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657340714 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656712142 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.659787324 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944439094 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053835338 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.660091203 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.483668838 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662445482 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.658927926 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.693099381 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043244256 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.695827451 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660838993 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.659442168 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667893452 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.681663709 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.049157229 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969660458 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.704710843 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.660520378 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.265765291 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689017507 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.660171591 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.659355216 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716321747 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.661234575 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367858232 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09260605 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.675759815 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049783426 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.665611318 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.714332179 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.660406187 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663480321 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677529314 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.695178905 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.701323611 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.950702391 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.664386302 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6692673 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384837975 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661788905 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.426899538 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.683952199 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.673322285 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.668315084 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.297014237 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661805806 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664438823 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035991099 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.323138927 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666129261 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320014857 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.678320895 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.682367989 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051496144 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984556695 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.680218483 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.665443978 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05866158 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969080146 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723714797 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.668502677 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671156227 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.646945676 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369166917 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663977591 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943182998 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321727784 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672220399 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.672557244 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.698152328 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.6691617 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.244056664 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.66891963 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.6650294 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.672394653 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.669388404 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382024069 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.672909662 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664751153 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.500425159 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.678449473 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.30970293 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664645204 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.95552982 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.051318886 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.051361699 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.671699243 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.679862991 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.00261409 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059323186 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671805472 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.672398914 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.424111823 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.615242134 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.696639706 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665995725 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.66540403 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667213687 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106726002 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.674919625 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.691166454 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675791524 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.667848544 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668960906 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.667050188 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.678489911 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66792963 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.354917968 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.675371708 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678681905 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.677159575 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.696404061 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.006005233 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.713104998 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489214655 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98985716 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659230898 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733163833 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.695223254 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676044419 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.657219399 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.668966843 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.66839163 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699265528 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.981132726 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.68656531 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.651325773 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.76536723 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.970897626 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.670187948 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.675323657 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008882624 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.671025066 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.675509225 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67754852 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733611097 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.675178597 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677694908 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.663867381 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733492856 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822691838 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960835872 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.061037929 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.067920579 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.260589003 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683600408 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.678288839 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.715630738 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831957262 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676291238 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.678119753 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.671204907 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489186858 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672993193 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496157228 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067736058 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.676972889 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674175117 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673231492 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001787378 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.672545231 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032832248 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672890387 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.671270348 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722967984 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.684414199 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677977346 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975330312 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027401739 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674077897 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67460066 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679248946 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.674031035 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074030014 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.97877705 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.361945747 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.420439079 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675007625 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.673697543 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319908349 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029929434 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675293486 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.675729295 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674828621 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.687516199 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.680854877 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.703118811 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684852312 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99289791 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05962979 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296816166 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061765396 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.688051253 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.632807077 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674953707 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.03710821 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.592655952 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.965983104 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501864727 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.649558858 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016631654 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829993675 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96770148 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.675138647 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999760724 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.675796553 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.677088546 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.677380553 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673965174 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.677013467 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.057876494 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503652594 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019002626 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.703151357 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.673806425 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736072514 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.969316838 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.98400928 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.680445677 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.986778138 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07763145 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.694366581 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.675552318 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.530515019 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081070365 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682498452 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.703540513 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007827602 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.678119753 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.742705759 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.64230165 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.679418591 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432559476 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.977853119 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728563109 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678535797 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.657141666 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535703877 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.689085044 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.368415634 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.680436528 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682739824 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036952465 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.708102964 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.684211309 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055071248 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.706323758 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.686980447 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986152709 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.498573527 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.680356699 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.69909337 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686357253 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.681498743 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679526216 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.745362312 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68397322 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.684565544 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.265273817 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.684192661 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679188604 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724836657 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.681682077 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.685823386 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.685437862 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680179791 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.710353601 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.707554222 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.684876477 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.692226505 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886633279 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401423603 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689613603 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.386119771 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.103258661 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.019912658 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.682587639 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.669204862 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.71116816 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683820478 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682365683 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682509277 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.686928973 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.451089765 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.685445335 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.083339229 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7153307 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.981422498 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982019082 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.695341287 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986334086 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686317373 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738315745 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.665681649 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.684116326 seconds)
  done (took 1143.200324387 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.71755738 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.74020565 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.70295252 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.75842745 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.752225475 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.799921275 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.709846412 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.729315858 seconds)
  done (took 23.453783893 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.679919143 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.711126952 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.680741245 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.710259943 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.685015392 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.329189836 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.679677563 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.708775117 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.733133033 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.680623074 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.678654667 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.501916689 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.713409855 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.692720701 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.68632352 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.716551665 seconds)
  done (took 38.140475896 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.01438479 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.914111564 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.574435339 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.706153974 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.687710358 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.681392865 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.120571338 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.700261186 seconds)
  done (took 30.94416811 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.723685952 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.724099343 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.726458441 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.724041444 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.725245089 seconds)
  done (took 10.169410859 seconds)
done (took 1436.905664787 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.716533506 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.716290528 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.717716687 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.716582465 seconds)
  done (took 8.412508113 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.669633478 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.674138589 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.676059923 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.711327746 seconds)
  done (took 11.276581401 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.221905034 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.442513116 seconds)
  done (took 6.209853083 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.688866161 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.536779293 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.522203696 seconds)
  done (took 9.293825493 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.092349732 seconds)
  done (took 3.638642805 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.197475461 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.280912677 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.683333684 seconds)
  done (took 8.711008292 seconds)
done (took 49.088518241 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.684673589 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.453541753 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.840726813 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.680168337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.847290776 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.839569333 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.970307607 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.681639823 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.685797335 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.68454962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.682290884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.848117557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.957669617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.456570699 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.957317268 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.455233518 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.846370128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.694727521 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.691398955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.699992716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.970088724 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.68132421 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.696438214 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.682639462 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.84894378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.832110075 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.681587093 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.456629575 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.692037584 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.681878471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.83121045 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.696438004 seconds)
  done (took 92.956685137 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.696531172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.683201544 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.683615982 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.68287769 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.682661251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.682915753 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.686372757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.688442574 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.683520649 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.683379081 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.683727798 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.683512826 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.68622665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.684123449 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.685411043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.682830548 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.701267808 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.692484289 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.682364916 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.684598649 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.684926624 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.701919706 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.683621011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.699222087 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.695082105 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.683780388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.68460717 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.689294637 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.684626585 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.684236732 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.683979646 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.685284909 seconds)
  done (took 87.530359694 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.684318795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.68778851 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.684794833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.68625682 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.695743711 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.686522148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.686977233 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.685665894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.686539538 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.685919069 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.685021538 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.698088284 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.685532427 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.702262487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.688366377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.69806321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.687251082 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.685167227 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.68524063 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.685708357 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.686588567 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.700900233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.686363747 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.701056049 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.690862295 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.686747456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.686309551 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.689109279 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.697787686 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.685819684 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.688947247 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.700518411 seconds)
  done (took 87.622790372 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.014006321 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.72341811 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.726924213 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.696403223 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.726489381 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.724094803 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.697228118 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.016921286 seconds)
  done (took 17.876161487 seconds)
done (took 287.535647802 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.713756198 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.700029871 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.780709125 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.701290436 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.750944307 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.754467869 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.015247539 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.752774568 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 2.005609652 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.699175642 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.747067836 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.719222116 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.706101872 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.925022449 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.692847254 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.698955991 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.691444492 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.691815978 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.701213611 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.041123386 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.757106822 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.692530454 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.729397363 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.70308431 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.688632193 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.803858996 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.806939486 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.943302497 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.909932681 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.808086839 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.692020473 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.705881733 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.707660031 seconds)
  done (took 77.991834438 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.720898237 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.72873855 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.728156702 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.727508156 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.727895286 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.72709707 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.719688447 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.729348613 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.729035655 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.730243071 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.729228556 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.728737642 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.728956525 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.730835744 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.727420715 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.717943323 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.721346269 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.729548081 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.720334199 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.718501844 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.728895553 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.730034804 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.729791128 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.728999477 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.728934874 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.72981243 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.728345762 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.732036176 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.730262556 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.731230207 seconds)
  done (took 53.380027169 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.728686868 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.695912657 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.6976105 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.741976267 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.72444806 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.728347997 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.132694737 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.73376803 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.734377047 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.728199654 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.696174981 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.741844197 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.797575167 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.69596015 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.73559431 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.733482728 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.733479726 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.723636086 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.698565858 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.750018211 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.145914295 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.734154113 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.131988083 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.748852421 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.729257959 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.727540004 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.738563123 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.695290372 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.730317871 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.718728129 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.700750214 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.124242056 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.703771758 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.707382622 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.71021762 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.740078399 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.73512302 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.703479192 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.72751535 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.726998384 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.130364692 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.72930629 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.698122367 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.704797168 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.733281586 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.735810399 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.69825702 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.715253664 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.045021437 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.743465353 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.70917021 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.74139414 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.737161967 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.728543692 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.044567819 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.732585967 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.727935026 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.706393599 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.74597461 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.125087974 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.737702818 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.730299782 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.700395211 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.737875466 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.698707916 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.737044145 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.753299425 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.730583547 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.698753103 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.738115022 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.702115122 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.736646399 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.73600351 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.715660979 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.70347577 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.704602449 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.734607662 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.702752285 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.703640316 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.126181269 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.737701561 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.700507725 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.154189021 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.735473624 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.739254831 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.740754603 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.73755657 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.911628078 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.125431802 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.71004986 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.706535168 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.710660483 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.136871875 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.748331264 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.733037281 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.706539428 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.742538489 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.738899199 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.701583002 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.706703835 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.74003412 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.754559221 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.70394678 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.742421575 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.130406388 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.748641291 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.726211273 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.738074933 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.857663673 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.740864603 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.752359779 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.738949206 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.151996564 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.737129212 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.741472991 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.703215192 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.723493679 seconds)
  done (took 247.313657351 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.705841853 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.704582266 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.707444362 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.704384964 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.70606807 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.734857624 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.706419301 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.70908193 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.734645725 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.705617104 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.703839085 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.737953758 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.735492551 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.704978475 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.724559806 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.707771149 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.70557464 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.707781555 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.728744068 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.705877053 seconds)
  done (took 51.849129489 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.749043087 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.495812561 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.465092244 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.742801651 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.743048889 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.73569523 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.816978752 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.751288833 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.743392578 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.160067981 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.974426846 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.747533119 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.744259728 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.74295139 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.467879051 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.74527047 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.15884073 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.498868676 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.743920718 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.499938854 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.744701683 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.744714394 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.734338494 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.500146282 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.169452764 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.135605862 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.820734536 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.506897141 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.745689588 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.743067397 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.500527336 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.745553607 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.73795739 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.498797159 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.747442604 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.766793249 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.744557461 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.820008816 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.822962822 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.162921696 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.50669502 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.144246555 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.766333485 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.996315314 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.751458967 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.728556823 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.514716851 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.747407474 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.731234887 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.748486312 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.757041101 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.480652602 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.74168426 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.481185771 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.746095157 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.746922078 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.504645458 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.482441028 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.474708341 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.971884344 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.742385676 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.138187894 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.752768002 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.516357632 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.748876307 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.747060293 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.747224141 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.976472846 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.508931269 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.152324538 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.188224564 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.192027422 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.753448606 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.829666119 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.748560414 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.167444896 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.829357211 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.273772453 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.173084929 seconds)
  done (took 159.902368734 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.115403223 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.863080634 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.290067194 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.500749781 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.432464771 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.948888822 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.871321765 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.0760302 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.73174396 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.908882058 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.648750166 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.869298323 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.620439513 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.835135878 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.876080401 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.935018133 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.314251694 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.724887921 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.616399683 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.625173774 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.724102625 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.905308489 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.600521058 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.249774081 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.724584111 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.582046711 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.718070294 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.455891004 seconds)
  done (took 66.338515605 seconds)
done (took 658.329862634 seconds)
SAVING RESULT...
DONE!
