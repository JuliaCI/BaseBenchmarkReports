cset: moving following pidspec: 1252
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.164803848 seconds)
loading group "string"... done (took 0.525954593 seconds)
loading group "linalg"... done (took 9.789222079 seconds)
loading group "parallel"... done (took 0.17434305 seconds)
loading group "find"... done (took 2.515142044 seconds)
loading group "tuple"... done (took 2.256902571 seconds)
loading group "dates"... done (took 1.437385508 seconds)
loading group "micro"... done (took 0.588986002 seconds)
loading group "io"... done (took 0.564656791 seconds)
loading group "scalar"... done (took 55.807959868 seconds)
loading group "sparse"... done (took 13.757872073 seconds)
loading group "broadcast"... done (took 1.350485841 seconds)
loading group "union"... done (took 2.588171163 seconds)
loading group "simd"... done (took 3.821319946 seconds)
loading group "random"... done (took 14.518456851 seconds)
loading group "problem"... done (took 2.283227427 seconds)
loading group "array"... done (took 23.363057691 seconds)
loading group "misc"... done (took 1.090187796 seconds)
loading group "sort"... done (took 3.75177423 seconds)
loading group "collection"... done (took 20.645428236 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.773980406 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.166046743 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.247033858 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.895176544 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.305838892 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.210697394 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.205776307 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.182853839 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.676866171 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.219745821 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.199580268 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406847617 seconds)
done (took 7.303333266 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.360267182 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.094587098 seconds)
    (2/2) benchmarking "String"...
    done (took 0.214471478 seconds)
  done (took 0.964945822 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.096278444 seconds)
    (2/2) benchmarking "String"...
    done (took 0.145937482 seconds)
  done (took 0.894837115 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.139263729 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172608262 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.150512924 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.13472621 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.152031414 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.135376224 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.152312037 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.150530874 seconds)
  done (took 1.700557732 seconds)
done (took 4.714810382 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.52814677 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.923330753 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.537106848 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.20552418 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.361256623 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.320253784 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320318876 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.276759007 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.138215341 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.115945959 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.212002658 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.466010168 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.472452049 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.958638944 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.101697639 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.157134856 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.17628799 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.822114181 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.129370152 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.157100424 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.538906029 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.244924511 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.16379101 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.138322408 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.249199077 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.239597507 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.175026377 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.151287883 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.727465763 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.184826157 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.246658671 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.130263144 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.173178657 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.205628383 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.288254393 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159820463 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.75014218 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.251581713 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.129329086 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.146815248 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.742351803 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.175675831 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.250754373 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.152127725 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.116864721 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181552487 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.145044702 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.124110475 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.162679207 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.147909522 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.219381459 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.557361728 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.153623795 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.233997843 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.157653777 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.760394601 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.149722322 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.343802798 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.189341955 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.154380875 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.125057872 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.151281109 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.21887497 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.145532683 seconds)
  done (took 23.111586187 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.210572169 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.230028554 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.143299786 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.207087647 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.176949318 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.144815552 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.13538244 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.143787629 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.161300679 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.242643984 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.188676228 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.239975698 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.121638233 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.156474926 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.201574655 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.281919161 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.175359102 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.172819323 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.137086357 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.157641415 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.172455799 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.16292819 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.156965002 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.142706206 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.222145777 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.254439199 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.170064573 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.171769887 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.151549649 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.14398507 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.189249345 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.21357674 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.125310558 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.152364068 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.22166024 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.172531088 seconds)
  done (took 7.132606528 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.269867767 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.15025549 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.278690397 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.236557805 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.195344953 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.227308445 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.229019696 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.320604387 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.323650374 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.252434266 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.210481026 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.176947711 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.143841964 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.147568836 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.128610838 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.141390326 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.877228871 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.221834704 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.206307939 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.221118132 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.159237079 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.130819499 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.775686768 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.150437007 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.133134039 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.158208317 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.097556191 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.255421447 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.161206394 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.528542212 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.130675556 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.15316843 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.162670546 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178066917 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.242600613 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.185494748 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.169756643 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.159687066 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.131453029 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.260846369 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164436134 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.125179745 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.14490453 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.179924906 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.165847696 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.156471084 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169957087 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182556665 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.134453481 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.173105672 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.215197617 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.939725575 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.246681928 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.184192976 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.150746125 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.329030668 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.154245802 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.164835626 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.155428285 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273407044 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185452424 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.146788079 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.127336723 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.160271568 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.128288451 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.168885861 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.331551728 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.131276191 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.20669067 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.160014552 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.164194763 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.745780871 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.152610189 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.150683198 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.156166088 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.151093445 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128569842 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.150816246 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.128129003 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.15413664 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.124819294 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150065242 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.127884209 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.212587578 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.146866232 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.147778709 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.169337176 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.158514501 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.152642665 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.149575445 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.163723474 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.146327198 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.134919532 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.227485353 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.16385275 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.141392771 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.162716711 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.178301025 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.151190246 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.290052248 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.134199817 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.172814923 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.149107369 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.133157086 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.177002397 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.145387342 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.147137146 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.150574804 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.129803378 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.146635965 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.197051106 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.134770351 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.147385363 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.136562967 seconds)
  done (took 28.717418815 seconds)
done (took 59.612566515 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.411810398 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.113430416 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111579831 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.133255074 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.113886968 seconds)
  done (took 1.616122902 seconds)
done (took 2.32715075 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.253858957 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.342833261 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.254253631 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.15282991 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.21896297 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.220903789 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.20473232 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.21655184 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.226080775 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.241355901 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.131781632 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.242844638 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.231083925 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.220020298 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.132053873 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.257825803 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.21538109 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.20219757 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.257776146 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150908995 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.166261506 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.153908678 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168101963 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.135196521 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.149948607 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.169732967 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.166517264 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.151552513 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.143011831 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.152787446 seconds)
  done (took 2.43593721 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.19518348 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150731877 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.166381143 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.143343158 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166062528 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.135084915 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.165695373 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.148928296 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.170347221 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.148625534 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.162725442 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.135539513 seconds)
  done (took 2.417239441 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.14406448 seconds)
done (took 10.159001644 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.08635323 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.555302319 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.198996674 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.276001718 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.379370449 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.297701544 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.594333399 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.23492771 seconds)
  done (took 14.478398545 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.213803096 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.161723568 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.145763997 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.161935816 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.141177659 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.158676952 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.140559005 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.155828196 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.139992174 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.158547327 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.144276866 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.161028718 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.142268092 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.160136286 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.141694066 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.157788571 seconds)
  done (took 3.263150992 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.16669543 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.182755712 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.146090924 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.167129214 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.14484747 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.162906261 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.147387947 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.16346583 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.14302559 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.161450489 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.164664655 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.147298898 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.163261962 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.143287705 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.163422737 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.150773502 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.160822197 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.147209782 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.163643296 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.147918321 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.163854286 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.145160498 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.163817968 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.147512404 seconds)
  done (took 4.555056687 seconds)
done (took 23.022420589 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.200481849 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.15147883 seconds)
  done (took 1.087923681 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.204139926 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.223422406 seconds)
  done (took 1.171943234 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.166283226 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.157629752 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.169718789 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.169469805 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.141513317 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.158258044 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.180979998 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.142281082 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.157779841 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.1414286 seconds)
  done (took 2.33308279 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.142689304 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.159827168 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.156105256 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.20956387 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.14748775 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.161391194 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.162137797 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.14337724 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.162558102 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.140454663 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.160914667 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.156982253 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.161745289 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.158507517 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.161705759 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.147154676 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.165856985 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.159910139 seconds)
  done (took 3.6066409 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.141331659 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.142517355 seconds)
  done (took 1.032407543 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.143570981 seconds)
    (2/7) benchmarking "second"...
    done (took 0.15528043 seconds)
    (3/7) benchmarking "month"...
    done (took 0.14373839 seconds)
    (4/7) benchmarking "year"...
    done (took 0.157978539 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.139161691 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.157030723 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.141004523 seconds)
  done (took 1.789882499 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.617751321 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.272729095 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.423836718 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.125102361 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.138439323 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.368372123 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.158889548 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10794599 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106573539 seconds)
  done (took 3.099655969 seconds)
done (took 14.865125307 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.141846669 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.229095264 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.658768199 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.162513544 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.157891936 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.201815538 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.364781094 seconds)
done (took 2.674915993 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.370901286 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.186532589 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.123084646 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.143039349 seconds)
  done (took 1.575193396 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.132244331 seconds)
    (2/2) benchmarking "read"...
    done (took 0.164193226 seconds)
  done (took 1.058441091 seconds)
done (took 3.394350357 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.15737518 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.159873402 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.143261374 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.160616234 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.144795089 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.161700381 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.143100949 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.158725213 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.143678955 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.158723256 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.143563368 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.160285327 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.141202244 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.1607328 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140660415 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.161045968 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.144643114 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.158847365 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.142117653 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.162630388 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.145104765 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.160390019 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.161318699 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.14592561 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.160321784 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.146821394 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.158861123 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.142753279 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.163497257 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.144836574 seconds)
  done (took 5.33220705 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.169622338 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.154516786 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.141483634 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.166436947 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.138843774 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.140412619 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.15499939 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.13828204 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.158321669 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.140055031 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.159375644 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.141170606 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.275581693 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.141408066 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.159648514 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.165274648 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.168073328 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.137677493 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.155604494 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.141512898 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.161037448 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.136931868 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.15838739 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.140911704 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.1576125 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.138108065 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.157902552 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.140435596 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.15913546 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.140166916 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.159995904 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.143752708 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.157570107 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.14993436 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.160939949 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.140936009 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.163424203 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.137937094 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.159942057 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.138200326 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.154960627 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.141049291 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.154685802 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.147086931 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.156691713 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.142896105 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.137403925 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.160078108 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.140566619 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.161006158 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.13771011 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.155334139 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.142090415 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.161148565 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.144273304 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.156973174 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.141418193 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.155972907 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.141668015 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.15994038 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.138266256 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.156401383 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.145876791 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.159600463 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.156824831 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.16487327 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.138981361 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.160438907 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.142465673 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.166018877 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.144747388 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.17038717 seconds)
  done (took 11.758021534 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.140866446 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.140042389 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.158611301 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.139950828 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.159606818 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.141103418 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.160227708 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141739183 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.160040253 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.141408136 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159653822 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.142171781 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159584609 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.142573367 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160538991 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.14259481 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.159696914 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.142311393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.160104717 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.143502257 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.160115822 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.143159895 seconds)
  done (took 4.07782107 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.288233371 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.148219128 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.210475508 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.176627349 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.159300355 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.173674599 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.147218931 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.167237538 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.145993985 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.171741532 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.150951598 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.16551176 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.17992714 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15268429 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.17157091 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.152393611 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.166779937 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.152800297 seconds)
  done (took 3.862347788 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.143290847 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.141479863 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.162758756 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.142478524 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.16145447 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.143212625 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.162552235 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.142376904 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.161224343 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.143041025 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.163339067 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143198448 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.162561105 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143351679 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.163573455 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.145789698 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.162570464 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.142996886 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.162742203 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.144606448 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.161074045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.143383387 seconds)
  done (took 4.127677409 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157535466 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.163370286 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.161565098 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.16763242 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.144103032 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.164221721 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.148762004 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.163948293 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.151167966 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.164669613 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.144226232 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.164008496 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.161136204 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.165250344 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.150687668 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.164736382 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.144572226 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.164703626 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.144408797 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.164065416 seconds)
  done (took 3.942085513 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.259143918 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.161948387 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.182083978 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.169191069 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.181306087 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.161256051 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.188291333 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.161228254 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.180563185 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191827117 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.161021942 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.181417483 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168726204 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.186515059 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.160491778 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.188083903 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.188905656 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.168007468 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.180604182 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161201085 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.191281797 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.181899038 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.168172154 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.183226163 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.161402508 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.181641604 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.162640934 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.186633579 seconds)
  done (took 5.788545387 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.157587219 seconds)
    (2/2) benchmarking "in"...
    done (took 0.173171533 seconds)
  done (took 1.123581847 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.146209445 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.145706029 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.166308788 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.146756581 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.164924674 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.147612905 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.166235385 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.145817356 seconds)
  done (took 2.022180334 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.210775895 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.234341811 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.173045049 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.158142596 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.234650929 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.2233988 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.228694096 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.151195204 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.166663442 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.138177278 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.228477867 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.158790723 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.146821882 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.167186344 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.146306245 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.172627259 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.146019756 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.17560152 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.151879649 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.167675931 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149779592 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.172365215 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.149228404 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.175195323 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.141062281 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.170225697 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.151032963 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.175435368 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.143265844 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.168488744 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.144268486 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.166225538 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.149604499 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.170119329 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.145727121 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.233723227 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.174077514 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.143168695 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.168627239 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.152145953 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.197544604 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.145747165 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.172755907 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.146077235 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.171411252 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.169776408 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.151178582 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.166382611 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.138512516 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.161878406 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.146811756 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.16129621 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.148082797 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.166569785 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.148507572 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.173509145 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.148652493 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.162725371 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.142847984 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.161443715 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.145745908 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.162341315 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.14867589 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.168132205 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.148287432 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.167457957 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.146179553 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.167102884 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.146521635 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.176630003 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.146283476 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.204879615 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.169237931 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.151344525 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.171968587 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.148781839 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162712102 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.154077205 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.165890718 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.148479146 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.171173304 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.174116345 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.170068904 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142680295 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.164855461 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.153663675 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.168088205 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.150683827 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.160752006 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.157019967 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.169413723 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.148290226 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.161079352 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.146614314 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.164292401 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.149702626 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.161364026 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.148206696 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.167180896 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.151199395 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.171316967 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.147707121 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.170571132 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.152132125 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.172978561 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.147540969 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.216946792 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.166484788 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.143594796 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.168940058 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.152803789 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.163237658 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.147656696 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.166949303 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.146392289 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.165003594 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.151524715 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.169160967 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.149685725 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.171408878 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.150839713 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.172275749 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.150235516 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.167302071 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.144797463 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.17177771 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.155640672 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.17051051 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.151073401 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.168873221 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.14889575 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.169377545 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.153296659 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.166528788 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.153792811 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.167279862 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.148932486 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.170435431 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.154174774 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.169946471 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.14376898 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.168647493 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.150044429 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.169022471 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.170531462 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.151392925 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.164658788 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.141706637 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.170627494 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.146499984 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.169112706 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.156762672 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.164110674 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.15079222 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.165068128 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.155741104 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.166129855 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.153214176 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.17141258 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.155298729 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.173728168 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.141634631 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.165171144 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.151631992 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.171083278 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.145298505 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.169073875 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.153061363 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.181630988 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.143714923 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.173268263 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.15178229 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.166162052 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.153367129 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.171065608 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.153334792 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.165930598 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.186715363 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.179763921 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.153215503 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.171269615 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.149422633 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.174113482 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.149001699 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.172846561 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.154082024 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.174587984 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.147907217 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.168654617 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.155039828 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.166057429 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.151040855 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.168476592 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.169535665 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.142069393 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.149819121 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.162210292 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.153800215 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.172763939 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.173193044 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.156141294 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.171709825 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.150365839 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.177292936 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.147891991 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.173004891 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.143343438 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.174477565 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.158722558 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.175993679 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.155165612 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.17289077 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.149223166 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.17072604 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157523662 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.171978433 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.152236748 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.170650611 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.143780924 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.163092038 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.156223078 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.172154294 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.1477602 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.16954223 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.151385383 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171521183 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.14849102 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.163238914 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.153858393 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.176088873 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.145501673 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.172278542 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.14586415 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.169397728 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.15633678 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.163714604 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.147010105 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.172923316 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.152870487 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.170879272 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.149696481 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.173715247 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.156412837 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.173756034 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.153134907 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.169695532 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.157053491 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.169847507 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.148133642 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.168689049 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.151968976 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.170838275 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.150400969 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.173488542 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.16701223 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.147564016 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.173260999 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.15634544 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.174491184 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.149930938 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.175423774 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.155621186 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.176076231 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.149057433 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.175797425 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.145917368 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.164664725 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.147300924 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.163619759 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.153253776 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.166113373 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.155138932 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.169538529 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.150192773 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.174662365 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.153853364 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.16905823 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.154894488 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.182594378 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.144936378 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.165083563 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.14771208 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.171274434 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.147300435 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.170362796 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.150784538 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.174402485 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.153694055 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.176049063 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.166627335 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.152519535 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.178546448 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.149685096 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.1764246 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.156981625 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.175258809 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.149682162 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.177517546 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.14899695 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.176066523 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.145529819 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.172093044 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.150106518 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.170262992 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.147792188 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.170322288 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.147325509 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.165371309 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.148527756 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.177287768 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.150769801 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.174362047 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.150455724 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.172555113 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.148339604 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.167936649 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.156735574 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.17055018 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.157557885 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.17239364 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.145786416 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.166308648 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.155596183 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.173750377 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.156091148 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.167258979 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.15312883 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.177912918 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.154853211 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.172545336 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.158744628 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.180937953 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.156589395 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.17757747 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.144263946 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.169553894 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.17616486 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.152118576 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.153653269 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.174228161 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.144859273 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.176405883 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.155426609 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.174739958 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.170779748 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.146370289 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.173135425 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.158404221 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.173859539 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.154803275 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.15188377 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.175054523 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.14742161 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.180601457 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.157350037 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.175683095 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.177470823 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.154691808 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.175289818 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.149307534 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.176714232 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.152601459 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.166419486 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.145622289 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.168691773 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.158659911 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.165306077 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.15687386 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.176694606 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.149668963 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.170744688 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.157402907 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.168264833 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.155605891 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.176440594 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.150796341 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1801514 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.153458551 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.170958821 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.15794271 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.177668613 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.145216442 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.172326663 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.152194773 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.179260715 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.151939014 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.178155686 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.152833821 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.177620423 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.154488221 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.17773182 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.158856794 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.177827362 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.14595641 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.181244557 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.155847332 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.175882282 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.149640678 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.17224844 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.147491451 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.172958377 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.15844878 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.172205558 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.159768083 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.178154568 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.150750665 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.173164967 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.157437339 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.173742485 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.157934958 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.170300218 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.154452253 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.167772103 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.15588805 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.174722428 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.177982131 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.150869325 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.168827334 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.158463238 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.177975705 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.157177949 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.176679521 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.160564133 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.166442255 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.147957641 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.17530267 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.151124246 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.181835902 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.155052957 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.17232778 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.152150773 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.176817108 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.15463789 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.179854715 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.147018975 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.172256891 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.153746926 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.174800231 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.152565281 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.167911786 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.156114126 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.173017253 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.154154728 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.173208129 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.147297922 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.174691349 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.159387796 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.17325583 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.149300131 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.172894053 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.159257961 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.175203146 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.149996239 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.168261132 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.15865153 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.178394682 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.159785124 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.172545615 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.153534748 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.173235089 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.15363462 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.182038931 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.171884218 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.153809782 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.173179285 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.159963428 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.178394893 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.145567254 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.172104427 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.162754705 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.180040842 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.157206862 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.177081527 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.15367932 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.180660265 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.160966628 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.177257457 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.148437382 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.169043494 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.152810145 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.169913227 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.155651986 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.17944733 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.153611992 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.173453552 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.158569885 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.180810143 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.156522907 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.1775466 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.150556505 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.180702029 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.151433712 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.178587095 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.147958061 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.169124928 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.157395574 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.179710074 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.152773128 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.175389342 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.155660926 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.177205914 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.148674213 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.174348637 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.157767129 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.178487152 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.160055409 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.17582131 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.15237224 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.17749841 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.16251508 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.176473978 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.1533357 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.183205909 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.159401415 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.176329266 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.15407944 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.179491749 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.159785892 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.178758836 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.160177072 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.174623952 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.153509046 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.183697452 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.182241192 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.164539149 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.175075406 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.150665598 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.180632398 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.152303935 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.169325652 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.159935352 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.182032925 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.160567067 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.177033546 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.151864074 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.184817846 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.161930647 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.176741609 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.152195332 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.174413939 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.159780375 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.174379577 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.158262234 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.174793457 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.162244375 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.183293839 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.160053593 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.185214335 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.149354538 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.182333243 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.15799558 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.187365028 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.156365205 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.171091938 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.149398886 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.17899867 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.161862413 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.182657236 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.158557384 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.18001961 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.159278495 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.179603147 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.156068031 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.175527629 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.161888394 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.181573229 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.155940361 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.178781674 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.153406031 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.177335749 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.155538633 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.183145706 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.16016031 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.17857187 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.184177052 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.159800838 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.176663038 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.153902742 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.176351127 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.158395771 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.178628372 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.164357702 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.174016752 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.151495732 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.182328005 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.163370775 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.175507514 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.164129042 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.184549236 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.154402735 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.179095819 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.162669639 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.181190848 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.157568641 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.179445096 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.159302102 seconds)
  done (took 98.442611385 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.204283659 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.186923141 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.157362958 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.180015769 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.174679196 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182689363 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.156318691 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.18253264 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.158956876 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.189416126 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.158632253 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.179722925 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.170991647 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.202046364 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.197581131 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.167065728 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.179720619 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.160746629 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.179510048 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.158885708 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.194572718 seconds)
  done (took 4.612992895 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.159593759 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.156971916 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.18005907 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156569142 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.179919387 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.158227524 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.180206576 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.158199098 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.180309521 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.156430018 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.178685432 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157416038 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.178811425 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.15720337 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179189966 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.157555999 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.180274321 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157640368 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.179215108 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.158196862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.179710563 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.157416038 seconds)
  done (took 4.578393803 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.187183719 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.18130448 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.155236082 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.157284665 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.182622805 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.157158043 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.184478487 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.157475751 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.187427396 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.151002372 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.172437431 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.151304855 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.177982201 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.158220748 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.176071133 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.16203932 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.188184754 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.162183822 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.185444392 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.156979949 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.173668174 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.158833396 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.180731153 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.149901884 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.186995287 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.161401181 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.184429179 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.161983028 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.172942453 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.161914584 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.18235643 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.152547331 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.173220631 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.150963401 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.172304383 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.161385886 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.184173001 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.159397295 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.181624912 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.150544773 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.182008271 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.165080769 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.148951902 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.183747109 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.158654882 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.177084949 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.160148158 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.181863001 seconds)
  done (took 9.007651951 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.187942475 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.217836919 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.16237393 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.211754093 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.197815099 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.16838077 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.184939649 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.188060717 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.186010036 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.161117625 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.197580852 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.196117048 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.163751549 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.188876393 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.16455668 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.184848716 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.162569696 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.184881891 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.16603501 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.185538329 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.165549544 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.188149625 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.170474402 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.193439822 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.188326323 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.163505219 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.184951033 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.165884293 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.193564628 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.16686263 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.189337066 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.166555328 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.195285378 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.187459103 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.163379994 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.186378869 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.174682409 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.185848075 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.164342057 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.183393153 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.164263905 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.188205357 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.163922382 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.196099797 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.163587981 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.187866907 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.163322724 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.184082976 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.194023137 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.165817525 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.191590774 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.173620751 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.189796063 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.164523435 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.191644622 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.173006847 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.18706436 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.163816432 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.188898463 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.193594521 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.165118833 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.187956793 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.172709532 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.186741694 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.168759938 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.198326826 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.164607035 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.188180494 seconds)
  done (took 13.244777147 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.193805581 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.189408024 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.174992574 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.197806858 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.166670846 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.190366317 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.166661137 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.190282158 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.189130824 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.173228383 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.190798285 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.300289304 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.170111157 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.195743607 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.167585557 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.456021817 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.166640534 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.190594279 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.166827849 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.191515765 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.188685796 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.175640771 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.19014911 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.174795831 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.199840077 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.16276141 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.190696806 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.189737955 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174367355 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.189284895 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.177854391 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.191064869 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.165684896 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.19711508 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.200214218 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.167356268 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.18310876 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.16733301 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.191356037 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.165721004 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.187477471 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.174106777 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.190944603 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.163064241 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.188842171 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.188142291 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.176003457 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.200332249 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.170096979 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.194767715 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.166173785 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196786547 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.18990732 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.167637938 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.197186108 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.179987622 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.197445569 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.195553779 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.166947207 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.198320122 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.174254142 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.202298701 seconds)
  done (took 12.651826745 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.163099931 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.162596235 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.185321471 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.162889779 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.185040011 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.161915423 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.187448278 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.160967047 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.184103509 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161370521 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.185538398 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.161971016 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.186364551 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.16313087 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.185375878 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.162627454 seconds)
  done (took 3.681584788 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.179938873 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.20392684 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.267718682 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.165024407 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.191788914 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.170990668 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.190246259 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.166164426 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.187215916 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.17036538 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.190293542 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.165872978 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.204241545 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.164487328 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.187197339 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.165321512 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.187001084 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.166535842 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.187389751 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.269551246 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.168428192 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.190961435 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.164716826 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.192595022 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.164450382 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.191145047 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.169061303 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.187906647 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.165574826 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.18735057 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.165838686 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.19394226 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.164396813 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.1916368 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.164862515 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.189844602 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.16464014 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.188320106 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.166592065 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.189827911 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.166137957 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.189595479 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.163173822 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.190957105 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.162463397 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.190363244 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.162443632 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.193839454 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.166511328 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.190529676 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.163747359 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.197049708 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.19285965 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.174170891 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.194888121 seconds)
  done (took 10.969176947 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.179352416 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.188185383 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.176259286 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.186127789 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.167021798 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.187836037 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.169134008 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.190609853 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.165838058 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.186375517 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.167750592 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.189873935 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.167474369 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.188835187 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.165792661 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.189115808 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.163398921 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.189307663 seconds)
  done (took 4.146910372 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.163851982 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.16131793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.188535287 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.161870165 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.188004285 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.162017042 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.188167085 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.163515556 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.188535497 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.162847804 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.187164583 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.162401029 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.187118907 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.16331141 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.186181916 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163731156 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.186226056 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.163913931 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.185886837 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.164091467 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.186919371 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.165593264 seconds)
  done (took 4.76446537 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.175187431 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.265653754 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.19327367 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.248699363 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.187995345 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.184967236 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.171046611 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.184681795 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.178586886 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.183730347 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.160287981 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.183882671 seconds)
  done (took 3.258489854 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193996108 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.224276635 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.167532129 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190842984 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172898523 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195022636 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168142052 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193203619 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176302796 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.205167221 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194393156 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176406441 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200879036 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178376664 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19711508 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198033144 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170337443 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193132241 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167269106 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207367431 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168829989 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200783703 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169721094 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193498279 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192950026 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.180167604 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200366122 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17981274 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195350051 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176479495 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198502477 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194205073 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.179845426 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.206657216 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167572916 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200545545 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.17040023 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.206508663 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198158927 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1786862 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.190810857 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176505546 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202188002 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.174559 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.2016035 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193916279 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175723183 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196352832 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171394421 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.213546709 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197474064 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177792721 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19776216 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176673584 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202288364 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.21320749 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.181927883 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.202760281 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173248567 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.205074332 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203220046 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175471196 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.203810485 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.182414747 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198286877 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.202985519 seconds)
  done (took 13.464828594 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.203988859 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.191480634 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171406783 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.207583869 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.177117844 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196294375 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193947429 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173167272 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194738591 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16889124 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.236834447 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17079651 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.20287971 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.201757849 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172137672 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195899003 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172529062 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203224027 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168382167 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.216424519 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194194876 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179072423 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.204479844 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.180901496 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.206545678 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198438573 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.174319305 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194300407 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172890352 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195050851 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175838771 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195893905 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177722321 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.193967752 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202051811 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173082974 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195577245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.177685025 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195844528 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175426498 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.202466599 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.206990428 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.17239783 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196376997 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181817255 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196454801 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1709415 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193250482 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171680281 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192923695 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.205564339 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.183118538 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.208257209 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178760232 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19615986 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170530485 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195358991 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195459214 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173139336 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198947157 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180573801 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196672636 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190628012 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198064852 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197457232 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181162074 seconds)
  done (took 13.47011502 seconds)
done (took 239.087416779 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.316797129 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.348305046 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.157772996 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.296385734 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.157389219 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.891132944 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.687314009 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.252757282 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.184638423 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.158126462 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.182799642 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.176619317 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.574719313 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.159143352 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.183320728 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.174750085 seconds)
  done (took 31.853601985 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.354691194 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.400574682 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.173862542 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.189177199 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.165059956 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.188569511 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.162016343 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.191396755 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.163916724 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.193610933 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.16291073 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.18419549 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.190983504 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.161522006 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.187299306 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.164502413 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.192171155 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.164124293 seconds)
  done (took 4.560369374 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.184667059 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.243824651 seconds)
  done (took 1.40210253 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.193786584 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.285647427 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.389223867 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.237153761 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.184725027 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.205346434 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.236842408 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.176883038 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.277770449 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.199942186 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.175934733 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.186340106 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.191187092 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.194015385 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.179342848 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.186679256 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.190646451 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.202939075 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.177588644 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.190986787 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.214710544 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.166085576 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.192330882 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.178913953 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.270233247 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.198481874 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.168445652 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.188164501 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.16698108 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.201254503 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.171094453 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.205525996 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.174501311 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.248916221 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.193281422 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.243386746 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.170009538 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.191941168 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.177454898 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.18974438 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.166775328 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.193570914 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.198388007 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.163384604 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.184909897 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.169778224 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.186500811 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.165098509 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.196412896 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.168808827 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.197307842 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.169453951 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.238769679 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.192000114 seconds)
  done (took 11.729891769 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.005027874 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.211669375 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.190534425 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.155192919 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.210171279 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.186428805 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.024082252 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.19042184 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.318031015 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.089283002 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.179722645 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.199818636 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.305423756 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.344243916 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.364656148 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.422289175 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.859020341 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.199077411 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19682894 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.230904153 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.194731956 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.183458525 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.206060561 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.510746234 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.166223232 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.187119535 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.171173024 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.197657049 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.241875311 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.165263474 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.19271906 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.265278846 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.360507017 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.277563089 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.165321721 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.189667416 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.162950051 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.25373946 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.357364229 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.284670557 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.23295169 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.187970831 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.163035817 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.194059245 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.205787831 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.16305153 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.249670087 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.260208578 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.259593137 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.192539917 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.173361641 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.197994452 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.168598256 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.244989325 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.186859306 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.42984698 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.43080206 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.189926038 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193554152 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.179695966 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.330180814 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.193745797 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.30214799 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.21240236 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281600405 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.164032801 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.887894193 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.25168843 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.165454909 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.194220158 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.16983731 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.195584997 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.167995805 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.248957147 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.490847754 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.172260453 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.194531442 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.16419183 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.322463143 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.168613411 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164625055 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.246063903 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.192970279 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.170653824 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.199190484 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.196922108 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.257835441 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.341664956 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.171933246 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.195881892 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.169446687 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.199811652 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.167129703 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.297079608 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.320850787 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.219985586 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.297489576 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.197318248 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.251617542 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.254323542 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.170243157 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.25879953 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.19691233 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.201997265 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.170652776 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.292974337 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.225610743 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.194398952 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.170125405 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.19621301 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.227629575 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.171205221 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.195002242 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.256915212 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.548130736 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.251866386 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.164985366 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.170023158 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.200028719 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.250764221 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.197494039 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.328957544 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.172931069 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.256593733 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.195596731 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.162960807 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.195647296 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.251949357 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.174436637 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.197987886 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.169376916 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200283151 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.347943897 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.28684779 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1999271 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.313025421 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.265652706 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.171390301 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.261597232 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.198314883 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.254524546 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.176592988 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.196257359 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167444966 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.896635809 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.178436937 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.196695683 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.172789151 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.274797584 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.166550789 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.195358083 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16615842 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.190229428 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.859480594 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.194867797 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.164838001 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.195640521 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.173258834 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.197517855 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.173680536 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.197737017 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.250193548 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.312884131 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.20142743 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.170826402 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.192568133 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.246665864 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.168505995 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.192103829 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16897903 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.210803413 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1736174 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.197852395 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.169886338 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.258196731 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.248588735 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.320929288 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.648776496 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.166742852 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192201257 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309889826 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.191397733 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.392361766 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.172401812 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.329677538 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.253459955 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.165178058 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.451028514 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.252298494 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.250969484 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.197553753 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.262422826 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.164545646 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.19879602 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.250098075 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.166681531 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.199606179 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.245920029 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.176181691 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.199911385 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.324004959 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.192702787 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.314590633 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.166243207 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.261485068 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.192860279 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.172804168 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.396939513 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.19411407 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.202961634 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.223479117 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.199121969 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.167545538 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.981887711 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.169295969 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.201509843 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.175213273 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.32875682 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.226581048 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.200417805 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.20028315 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.177554701 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.249917465 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.301515158 seconds)
  done (took 62.899715391 seconds)
done (took 113.408122153 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.329646947 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.238183291 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.433506454 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242150137 seconds)
  done (took 2.30925462 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.353599295 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.210069381 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.31139756 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.190710774 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.317635294 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.165589423 seconds)
  done (took 2.567046968 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.236866783 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.234803741 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234085913 seconds)
  done (took 1.729190493 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.276059756 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.281553332 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.418091225 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.330666491 seconds)
  done (took 2.389690476 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.346980716 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.183168474 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.225385784 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.298374744 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.313269306 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.277464893 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.190805199 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.242757895 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.223701701 seconds)
  done (took 3.356943157 seconds)
done (took 13.372103674 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.20770246 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.223294666 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.190233688 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.206317437 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.198961404 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.226551435 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.195789493 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.222818348 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.195466826 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.207238015 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.193288406 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.204449532 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.289437854 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.194762128 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.207964644 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.196448235 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.207467514 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.232444572 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.198901061 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.204460986 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.201060344 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.203004097 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.179369877 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.213842207 seconds)
  done (took 6.017132695 seconds)
done (took 7.045346269 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.276774302 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.184097642 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.177360892 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.204422992 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.284955579 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.183579909 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.220164729 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.176878569 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.216247052 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.176610727 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.194521664 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.189834405 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.202210211 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.278470886 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.18043349 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.194874571 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.166333513 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.215204741 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.191132825 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.220908888 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.286484476 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.172560561 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.214711661 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.167882591 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.286221173 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.197777385 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.176621761 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.204245526 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.190544482 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.203444446 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.177992467 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.192951213 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.194299917 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.219254069 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.169561088 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.203231919 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.168716776 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.137982281 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.205397698 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.179017946 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.217322189 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.178791172 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.204536765 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.194627194 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.18019114 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.204296021 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.170181138 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.207003628 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.168687093 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.203150625 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.173167621 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.219812869 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.178183482 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.192802311 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.16831477 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.194530114 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.189409491 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.195094362 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.192626241 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.195451182 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.169538319 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.194605683 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.180997249 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.196079892 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.179014244 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.195223987 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.17934215 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.208163064 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.178189629 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.199273175 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169576243 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.204588028 seconds)
done (took 15.200628167 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.174332993 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.24558556 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.281236881 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.260500794 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.22826122 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.213105451 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.183105477 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.222301174 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.20382543 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.216457764 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.20401896 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.228566566 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.293068064 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.185138278 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.213795903 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.181023788 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.208924543 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.202013817 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.262420452 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.225702165 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.220429428 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.186860564 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.222905301 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.189142627 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.20052543 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.207538543 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.206133615 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.182297623 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.200664204 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.183018735 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.223995244 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.199052407 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.178134105 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.220269281 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.194093816 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.210900701 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.186010875 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.210013787 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.17381931 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.200998605 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.179297382 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.22058685 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.173826434 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.213190029 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.209439971 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.191277257 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.206239006 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.187314812 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.200402719 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.182733014 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.200733487 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.201144642 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.214662772 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.192643072 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.215057166 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.193332406 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.215089922 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.187646907 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.206227761 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.18735539 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.203717316 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.173821056 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.203459392 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.219594196 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.179559356 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.213663763 seconds)
  done (took 14.638522888 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.192566946 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.231878649 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.18449909 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.213323496 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.178751293 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.195226921 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.166942389 seconds)
  done (took 2.418972832 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.170556744 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.298106834 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.294130978 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.2941219 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.289927721 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.30038352 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.192114234 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.195369467 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.20662446 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.208304003 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.29847322 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.331076948 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.180595242 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.212673693 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.298144757 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.168638065 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.296455157 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.278009026 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.18327121 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.294532566 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.218871408 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.229801499 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.182978645 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.197087842 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.261081384 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.198912166 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.344974175 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.215369846 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.179446702 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.210170372 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.18451683 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.279122296 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.292951359 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.183211775 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.206927291 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.29402475 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.289785174 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.184272176 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.303648669 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.203285278 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.290723073 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.185442297 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.214085394 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.18629911 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.214080785 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.279295712 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.191733949 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.21604116 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.185606424 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.303165368 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.209305388 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.264729195 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.21368234 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.184672157 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.209121495 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213493629 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.194969207 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.21301801 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.302985596 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.189178946 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.294953011 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.298773189 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.293842534 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.295607843 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.197111657 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.295231328 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.283548628 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.184373097 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.293080217 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.218075147 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.29858811 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.185487415 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.211589895 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.286935651 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189275745 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.298753354 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.300205005 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.211320587 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.185854919 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.202994948 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.185857224 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.200014402 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.29948564 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.187931021 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.211908652 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.19165433 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.212545185 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.186499764 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.289555257 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.225482444 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.186512824 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.211953489 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.191184926 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.215377667 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.188485561 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.299359227 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.213213846 seconds)
  done (took 23.900890889 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.175618142 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.172592618 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.204853285 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.199111494 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.175432993 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.199161919 seconds)
  done (took 2.220181771 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.212045959 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.214219979 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.196137093 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.214946957 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.239888746 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.302964853 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.308865115 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.213016125 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.204995341 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.228560839 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.307704562 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.308875661 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.308714886 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.190951098 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.309661096 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.219273833 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.310107312 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.187627282 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.224973581 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.186018837 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.214544322 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.191632818 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.21309274 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.297861411 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.188504348 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.220086647 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.179934264 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.226454705 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.194706464 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.210278905 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.19078285 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.217149052 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.208575056 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.183440017 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.309649572 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.208319647 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.185988316 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.218746951 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.190173625 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.215906785 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.309903096 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.185971694 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.22333678 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.191387886 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.212998315 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.180706778 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.219468132 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.178845648 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.309579103 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.221008272 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.19023299 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.220150481 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.187401903 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.221226317 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.208219984 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.183387218 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.219071434 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.312517813 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.193127143 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.209529997 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.188868012 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.218471566 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.183160093 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.221511898 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.188520481 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.21898497 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.206674187 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.190958222 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.212792702 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.19090619 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.218219301 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.189668951 seconds)
  done (took 17.052235553 seconds)
done (took 61.272737408 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.801677504 seconds)
  done (took 2.892674061 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.19451894 seconds)
  done (took 2.286304913 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.136335494 seconds)
  done (took 19.26992825 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.490659462 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.421140356 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.111270155 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.245546937 seconds)
  done (took 3.368436168 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.168834738 seconds)
  done (took 2.276235616 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.48757527 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.351614685 seconds)
  done (took 1.943621671 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.83158836 seconds)
  done (took 1.94975199 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.833504875 seconds)
  done (took 2.938411023 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.367003583 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.288362787 seconds)
  done (took 1.770251092 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.689690008 seconds)
  done (took 1.810800381 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.427863767 seconds)
  done (took 14.551990725 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.324128299 seconds)
  done (took 1.445033617 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.361421589 seconds)
  done (took 1.486355073 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.728419934 seconds)
  done (took 4.85327834 seconds)
done (took 63.950323992 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.188286233 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.217344748 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.19189179 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.216099896 seconds)
  done (took 1.923451579 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.192612342 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.214485655 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.192190781 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.21434702 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.195606997 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.215621553 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.187381021 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.218211128 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.187193986 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.217222385 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.188988278 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.214673598 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.191372241 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.214603616 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.186105859 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.218715103 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.190716013 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.216137262 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.190020533 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.218138354 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.189608539 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.218920996 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.191432653 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.221618895 seconds)
  done (took 6.007519322 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.185486227 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.204910275 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.181213686 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.203077361 seconds)
  done (took 1.901759365 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.199754313 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.229682769 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.201337894 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.226392686 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.203872015 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.230561512 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.189161834 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.215333249 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.189321212 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.227920115 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.207427774 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.233130414 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.230439569 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.19513899 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.228069435 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.183786081 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.220421954 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.203357354 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.225253156 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.200643183 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.219822158 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.198375436 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.21752417 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.200171405 seconds)
  done (took 6.200149824 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.264011715 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.230866579 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.214400239 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.246470379 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.184981135 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.246041344 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.262761347 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.194940711 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.222104362 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.193837499 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.218193599 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.187862926 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.269798066 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.221608907 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.191083308 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.218143382 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.198679804 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.222837136 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.229881816 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.220858462 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.192691961 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.229714756 seconds)
  done (took 5.998689777 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.279896207 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.210102346 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.175293031 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.207654549 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.219897865 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.183400278 seconds)
  done (took 2.413576266 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.179700016 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.172994834 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.203100478 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.174344726 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.206343767 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.173682142 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.202723754 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.174204415 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.20292371 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.175056898 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.203396955 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.172548339 seconds)
  done (took 3.381435376 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310993248 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222752279 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.357210368 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.471173046 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264812586 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263302827 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.380629059 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232164579 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.281726049 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241045945 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285795073 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23389378 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256679778 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309805946 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213569268 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.248016805 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271768987 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.332221996 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214095382 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.33838088 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260174426 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.278752766 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.264309239 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251675161 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.24020331 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234818129 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.220272075 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199771493 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267599183 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26786472 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274499921 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249724075 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214039369 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291810991 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315032869 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276366359 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.371954911 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23399491 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.258730527 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.265343449 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.333387856 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244852994 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.294019093 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254371104 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201588274 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.315447865 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250556583 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.286418335 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.205691101 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245422829 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282094881 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249725053 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.272271145 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238558688 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40520928 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204441291 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.243735464 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280555229 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290141924 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305550029 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252884393 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.224904019 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273672581 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294522439 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319429727 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.213080029 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.266089005 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225000539 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238032784 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.312768544 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287542641 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2636447 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.289543943 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201768605 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276197693 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.267770503 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253819567 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277440239 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273155546 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.221057231 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221144253 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234623202 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195437283 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.291289486 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221291897 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320610743 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202663691 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.274379305 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278833013 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224047276 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262002103 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262777411 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233910541 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.250199415 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.158691479 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24574333 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.259507791 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228333086 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230894166 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251953478 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210156962 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.227047727 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2223157 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.224887536 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271476282 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.194423816 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262745144 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273054136 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.206240892 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282159065 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249122741 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.235588548 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269324821 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298623589 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20074564 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236541114 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325748337 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273468086 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.207799679 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27429808 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.301959697 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.239657641 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206701076 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266868363 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29963531 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214578823 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303444313 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241455216 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.234836706 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.198119747 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277092499 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.260874515 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.233565875 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229484001 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.266580338 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259862235 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.233475081 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209158581 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285700437 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234294249 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195117899 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236865456 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23560531 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.215559814 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.254316627 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.209549063 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256473746 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270340593 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.268069494 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227714013 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238420961 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273139971 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202459824 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.273790682 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250622513 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.191938933 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.277661845 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302568295 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200506782 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285952215 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.265799304 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282092856 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275265032 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20290157 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.286995643 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198433823 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.224641905 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262269176 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241192613 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264807557 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.292627296 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281000398 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.267757094 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.267395945 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219780602 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270145876 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.29013452 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260651371 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.21234055 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277218144 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273100371 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.192837511 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.225906241 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.198555278 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240644289 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20137044 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241241851 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279628855 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264969659 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277129306 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243597039 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241784098 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.297335226 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.196410311 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264644896 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.284314786 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210338899 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.293970623 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295237893 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28606445 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212510963 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265667303 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.224952698 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197742464 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.236940396 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.261913753 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210696555 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.237366009 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213065991 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.297278515 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272065324 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251777199 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290159174 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266334776 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276454639 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.2255812 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.264983487 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238185666 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273594987 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.264650274 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234907805 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.26337183 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.296266446 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213197014 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297656008 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273816244 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284556995 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297951926 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.241733254 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234285799 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216903421 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265478871 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241764124 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23182082 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.247909249 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232456515 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220974329 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.242253432 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211920734 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287254615 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248498429 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280081147 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.226339397 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272261298 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230285639 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212148346 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278992042 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249611281 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.163918331 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270603336 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294403709 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220548926 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2557724 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273023686 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201543507 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.456751169 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284931206 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276237222 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206852002 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243063241 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27715822 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229970235 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264653208 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.291392292 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24660168 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312092061 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245731807 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.243309991 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201852624 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252743523 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253201542 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.198933677 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.256510832 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.268616421 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.216757801 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291572134 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241610473 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245340976 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284064964 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.252055447 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.220448145 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243416289 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.331710338 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274792555 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275753781 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.240545044 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.267755138 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286973294 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19614708 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230482731 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.203003119 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.290632699 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233419278 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250549738 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.26908792 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285320989 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278864931 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269522961 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21417095 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.233120985 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.272681882 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220924323 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288225409 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239255844 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.208765515 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289421511 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.219467503 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203399888 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26701496 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.397256662 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.251492246 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242886403 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.196631499 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.384745015 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204313202 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236659285 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.232435913 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27336067 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.235788573 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.260477607 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280570037 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211795928 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.265477684 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238790002 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.280164538 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286423783 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242478111 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278435128 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.251229643 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264747005 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231933893 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276083433 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249306773 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.221665269 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263149315 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300824218 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.248999611 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.238301533 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275909458 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244174975 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278876035 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277140061 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242772073 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258702242 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234585208 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269299958 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213367217 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230941099 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231692731 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.271730434 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23512529 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276940943 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245966614 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237267812 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200576344 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250920456 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273652396 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212394398 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.236209367 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291634362 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.202480846 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288363416 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318273713 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235733049 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245071388 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.249970963 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203352256 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246532118 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249793776 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20527331 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.282826049 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252323497 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.23763811 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279867643 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271319559 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236899748 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260262845 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249084887 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.343182049 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.234973316 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299972992 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224156018 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.325735487 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257793746 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286153218 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246765877 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255632438 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268842777 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22051617 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.331341786 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271494929 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.272403425 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207535819 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248605217 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212688499 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.241456613 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225715295 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27509895 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248953376 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.20952399 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.274679901 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251527516 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.220618068 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248968392 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307632276 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224583517 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292259232 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.296710148 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245037515 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250154507 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280657058 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235595183 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.270376841 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245658055 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250551624 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257838235 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.209518264 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.24405394 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320947378 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.201487424 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266673506 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249212976 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.278638785 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281570722 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.238831349 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25472939 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247863922 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28297565 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203627431 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.257451663 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.277136499 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21059787 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.232453582 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.247872443 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265791061 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.276145871 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216055407 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.286395568 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305466568 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.200348033 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24090787 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392412401 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234882871 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.30375399 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.228163442 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211363819 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253469174 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263073119 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.240635558 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279728658 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.235786478 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207079475 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.25420593 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.22385633 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.232454001 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246108322 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.292100203 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263941874 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297514161 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.209835902 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.362919545 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248223395 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248546411 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.210082371 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.202395012 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24963398 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208922099 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24896483 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.283757453 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325171099 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.272104225 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.223325675 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243496537 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.201641214 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23835098 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238331494 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258551803 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279187179 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254199783 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.166214991 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214864474 seconds)
  done (took 123.883575492 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251838449 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.238703958 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.250929745 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.304408473 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.277658423 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.374591001 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.311214855 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.330453754 seconds)
  done (took 3.606011141 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.196867283 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.265544592 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.249514341 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.223001333 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.188297059 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.558413748 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.243231279 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.19363873 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.270792885 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.232594033 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.217242221 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.648881887 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.191513809 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.227548978 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.229676902 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.214856373 seconds)
  done (took 5.603756246 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.171985069 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.639274939 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.143310053 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.374275249 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.345049465 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.293678058 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.902361048 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.275166206 seconds)
  done (took 13.406802011 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.251097224 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.283171065 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.462123919 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.389034458 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.302264904 seconds)
  done (took 2.961024164 seconds)
done (took 178.397958852 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.199519855 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.232534528 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.201085976 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.232792802 seconds)
  done (took 2.119605223 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.241505921 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.154296855 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.189142419 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.151921484 seconds)
  done (took 2.000995518 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.479493377 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154795732 seconds)
  done (took 1.926930373 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.222171898 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.240822873 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.213992366 seconds)
  done (took 1.959942672 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.213124099 seconds)
  done (took 1.49084077 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.19728682 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.224043225 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.291255613 seconds)
  done (took 1.989793883 seconds)
done (took 12.76222137 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.219955554 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.049736213 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.660774042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.210103464 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.830184271 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.475640233 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.550804051 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.25711028 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.314225294 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.187825561 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.253972589 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.767886335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.53396406 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.951788213 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.515807213 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.954151642 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.804940558 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.188176722 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.227006521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188668405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.52761884 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185898081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.22173951 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.188610019 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.802008761 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.496260174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.221164018 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.998488006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.188497364 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.22877588 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.476743516 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.218706094 seconds)
  done (took 24.162646173 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.19086652 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.280213985 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.242898276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.223716577 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.196593016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.221864387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198800839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.234176986 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.324337892 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.188846151 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.242963019 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.186310564 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.226790013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.188409643 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.245716791 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.18715704 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.22381226 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18758852 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.228108407 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188969981 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.242687286 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.218447332 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.191464292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.219478888 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.188509726 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.23793298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.188937364 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.232048014 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.188826736 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.229505721 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.193679588 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.221411117 seconds)
  done (took 8.238397914 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.232163741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.289700527 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.242656695 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.261287207 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.277627134 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.190785993 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.310078887 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.259954077 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.297942916 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.223201288 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.209992416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.221269619 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.262404249 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.190574234 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.245220219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.188988977 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.223854793 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.190421841 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.228411867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.191929434 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.244056734 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.188363269 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.224253517 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.189902152 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.221617497 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.210458397 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.220827244 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.232229811 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.18904017 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.230751899 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.194273099 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.223092266 seconds)
  done (took 8.598182563 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.206136898 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.236512409 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.215193007 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.243744334 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.199359151 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.234053506 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.204733158 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.229731588 seconds)
  done (took 3.06189579 seconds)
done (took 45.347301149 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.722447247 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.236888154 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.210525095 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.237432986 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.282221992 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.230629538 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.206661964 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.230206998 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.203868174 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.246268538 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.188255783 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.231344643 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.208904569 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.233331557 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.319921688 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.206213793 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.324680813 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.321463435 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.19710635 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.240421495 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.196876572 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.324870223 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.238735177 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.197520439 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.296660979 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.19325558 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.309889547 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.237329622 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.200561259 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.223355917 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.320791841 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.2006619 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.232572452 seconds)
  done (took 9.73632457 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.299811869 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.232732598 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.197058229 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.231277105 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.19909103 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.232841341 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.33784806 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.197945563 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.231585525 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.198705297 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.23270536 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.287054101 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.238580339 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.192393391 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.233825265 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.175553819 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.341864632 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.233684675 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.192216902 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157746875 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.229637722 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.19857176 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.351538209 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.228051975 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.200667906 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.231199233 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.216185103 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.2370791 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.20120282 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.232151938 seconds)
  done (took 8.277515039 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.204667717 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.245324982 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.219100837 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.300448192 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.2296776 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.244679928 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.216275478 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.243724778 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.220060246 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.227110095 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.207864422 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.26198115 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242803641 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.205016783 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.224340469 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.210524676 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.241678289 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.193622387 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.23354569 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.211717914 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.244890429 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.209200136 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.248388221 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.201936923 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.224398298 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.201972192 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.236609488 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.207056358 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.234667201 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.208683381 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.22967383 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.194410197 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.228913676 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.226750273 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.228575995 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.206689063 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.247448157 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.207203444 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.239892098 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.261729582 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.196154413 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.229047772 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.221676234 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.286640501 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.196597486 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.237421951 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.196582819 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.242344435 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.192058781 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.245661198 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.236948568 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.228623067 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.213786892 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.226992204 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.191662571 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.236849742 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.194221696 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.230480776 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.208128981 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.229030591 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.213624512 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.234910668 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.206360879 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.230782978 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.206229996 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.226675543 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.193484171 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.232199779 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.220837999 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.235450053 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.232085379 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.227664984 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.206930644 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.242280181 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.207108949 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.24118053 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.192510025 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.241117813 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.205432479 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.231793652 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.206439031 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.230604534 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.195703658 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.245543445 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.247193864 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.210352308 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.240291381 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.205939806 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.22906195 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.19862023 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.244279737 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.196773556 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.230322096 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.208619895 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.228321143 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.198676801 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.238093545 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.204096345 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.22543167 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.223141853 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.23185623 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.195655886 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.25417059 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.197830674 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.231140705 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.205034453 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.269200504 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.19477819 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.237053958 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.206042821 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.227955664 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.20210077 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.229480369 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.195385391 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.241922804 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.211217013 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.2363663 seconds)
  done (took 27.436036874 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.419226984 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.413110564 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.298800636 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.461132593 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.244383033 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.333402174 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.410671427 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.415419796 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.195058533 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.264905963 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.286670044 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.375657267 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.196427911 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.259416857 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.415719206 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.494229538 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.225860286 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.27058804 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.265135183 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.209179883 seconds)
  done (took 7.78775206 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.20439792 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.261609106 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.217212678 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.246606849 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.208291432 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.241905064 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.196082826 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.250558888 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.207674733 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.23741804 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.198610032 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.235853386 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.209514772 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.244055128 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.207908282 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.252511301 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.201930217 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.232140903 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.219019751 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.231702928 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.213817553 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.254822209 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.238788536 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.216858862 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.24612222 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.207869451 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.227580127 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.198330248 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.236291221 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.206208136 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.228394546 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.205133628 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.236584345 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.169956878 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.207673476 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.246538473 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.202429024 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.232540884 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.202229836 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.232063589 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.207664396 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.241064942 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.204529082 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.201463888 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.248283039 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177659324 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.242292264 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.20841072 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.207550067 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.217175382 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.24201639 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.208888784 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.2363311 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.215762982 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.234998947 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.213922105 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.236391863 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.207629196 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.232081887 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.195643454 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.226233727 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.199335753 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.237675825 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.20762794 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.242362035 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.205626149 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.237791551 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.197066401 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.230653353 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.200827424 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.233354605 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.210992543 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.251241935 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.206521304 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.236529241 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.208743375 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.23791105 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.162922604 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.203414624 seconds)
  done (took 18.784216834 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.223745143 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.24091178 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.21636243 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.262685359 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.210486124 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.236435583 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.208852746 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.249531103 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.209603819 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.24998591 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.209558632 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.244723997 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.219842831 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.243278422 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.207921901 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.245825115 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.208680867 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.269955837 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.210255299 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.255577054 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.208867762 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.236753291 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.209548715 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.244720087 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.222378558 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.242835699 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.25396819 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.211011052 seconds)
  done (took 7.814241462 seconds)
done (took 81.130504796 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.509591408 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.780802084 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.448205041 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.448065637 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.485227277 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.478243427 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.449079035 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.456167436 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.017733191 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.422039911 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.448768241 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.447450335 seconds)
done (took 31.78791493 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.510742183 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.201819868 seconds)
    (2/2) benchmarking "String"...
    done (took 2.249814379 seconds)
  done (took 5.801287929 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.196345499 seconds)
    (2/2) benchmarking "String"...
    done (took 2.206287685 seconds)
  done (took 5.738753511 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.439789794 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.437619826 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.931663936 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.444234145 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.436528905 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.438775839 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.440490303 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.453822026 seconds)
  done (took 17.918766486 seconds)
done (took 35.746262916 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.487323772 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.766319167 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.704735358 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.423031239 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.437215026 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.444655776 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.441772868 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.520420788 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.439069452 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.424141157 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.975972084 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.758952517 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.441917928 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.894429592 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.425344592 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.450763536 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.456432413 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.858993312 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.440492328 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.482511499 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.423407544 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.42638823 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.452261841 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.453289416 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.454430902 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.455185607 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.453683321 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.440538214 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.811036516 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.470443134 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.485629214 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.442709719 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.45492468 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.440389941 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.445805853 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.448593638 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.76512062 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.454587976 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.442953186 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.443471268 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.772347448 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.445180983 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.452459004 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.445009173 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.426130795 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.523960414 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.426297297 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.6289202 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.479137885 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.444705154 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.522835411 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.886890226 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.443724513 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.444483478 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.456315918 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.814455596 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.476194773 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.562638238 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.472636081 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.449818723 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.451603448 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.441777129 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.505857414 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.449966159 seconds)
  done (took 160.701577977 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.442046367 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.444916215 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.44535817 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.449462952 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.444885066 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.445171625 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.442918544 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.442565636 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.44574991 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.448209441 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.44554346 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.446448673 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.446214425 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.473933382 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.45520167 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.466820956 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.446428977 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.443342481 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.457178948 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.443730729 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.455937518 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.44682365 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.44492243 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.443935014 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.464053774 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.540138798 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.457183348 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.470062708 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.456155912 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.445116659 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.46213265 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.454024146 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.221934437 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.40531467 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.459266782 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.446714139 seconds)
  done (took 89.391589533 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.443732056 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.444862158 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.446012094 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.480885174 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.445828062 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.092037332 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.068052369 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.516753632 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.914054155 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.853014129 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.076568885 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.742417385 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.445724977 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.542451243 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.459102446 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.44804678 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.544022533 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.472377738 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.449401701 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.447657415 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.089905776 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.461812847 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.694714181 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.633911896 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.447166221 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.483261943 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.849169996 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.447632203 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.483121981 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.788824542 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.483694889 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.445926818 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.446836082 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.878726128 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.757986613 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.562319342 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.449171854 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.484464819 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.448477422 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.737743256 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.447943974 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.449187847 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.450851537 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.130613118 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.448876635 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.09635038 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.451060012 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.518116514 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.451179372 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.450021053 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.448661384 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.895674584 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.23031637 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.449335282 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.447889707 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.451641581 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.450013092 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.449089929 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.485729156 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.12757607 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.385760857 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.450493879 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.453489162 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.486373581 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.450017702 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.449689448 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.192230102 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.513516279 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.601551077 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.094768615 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.452668318 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.584198242 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.549615004 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.571208392 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.450803555 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.450745518 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.449920622 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.449518476 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.566023165 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.450343162 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.909601493 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.636979466 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.451923041 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.055525427 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.554052509 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.450669669 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.45246033 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.889019617 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.453531556 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.451217714 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.2181885 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.549630439 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.451830012 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.450401619 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.452319531 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.91395952 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.075072535 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.820658619 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.455211518 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.377839878 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.458173557 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.928745898 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.072391958 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.452500908 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.133511042 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.453153924 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.567328499 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.641802494 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.454782274 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.452951943 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.096257213 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.456665125 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.514768533 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.452754921 seconds)
  done (took 401.34597997 seconds)
done (took 652.77582151 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.43814608 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.438887096 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.481858342 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.439192302 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.439189509 seconds)
  done (took 13.586518859 seconds)
done (took 14.936972781 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.455402953 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.455078401 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.456044515 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.26338482 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.473471871 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.472289389 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.456739506 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.467127209 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.459373011 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.455907486 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.2549584 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.455883252 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.456427245 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.442181509 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.270857558 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.456864731 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.374788931 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.457741309 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.45801795 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.877810998 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.898789434 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.587559005 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.841261728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.529185939 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.867556622 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.881708211 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.752953431 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.709974991 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.515334107 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.506712551 seconds)
  done (took 20.321307898 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.356738242 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.842202489 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.902892539 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.588470014 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.834939485 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.530966403 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.865586259 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.888464937 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.761331172 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.71187621 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.513475631 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.508389509 seconds)
  done (took 20.3014706 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.257905981 seconds)
done (took 92.633086933 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.518326248 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.591117907 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.516593625 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.497026403 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.496677057 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.497571374 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.500736511 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.497931756 seconds)
  done (took 13.46930521 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.494393945 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.497180124 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.495856282 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.495423755 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.494657526 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.495321856 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.495847342 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.49681611 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.495706961 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.496814016 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.496483457 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.49665345 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.496977654 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.495584878 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.497165666 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.49707599 seconds)
  done (took 25.292883405 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.498150987 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.49707152 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.49796074 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.496779583 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.496835876 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.496924364 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.498133946 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.499814117 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.496537025 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.496167355 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.499401355 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.497744022 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.498213495 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.498903247 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.498134225 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.499485584 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.498026739 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.498769013 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.502028505 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.497849692 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.49928926 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.504867763 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.498363514 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.500423692 seconds)
  done (took 37.320987468 seconds)
done (took 77.4363953 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.460498224 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.459933767 seconds)
  done (took 6.277240423 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.596947908 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.596372695 seconds)
  done (took 4.55055835 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.499305394 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.498232632 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.499337102 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.498735978 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.498776416 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.498838015 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.499431178 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.499479299 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.498761749 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.50089554 seconds)
  done (took 16.348527142 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.499344365 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.499190993 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.499308886 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.500368866 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.499268727 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.499986276 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.500259774 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.500987521 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.501816816 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.500196708 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.500672327 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.50009921 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.50048215 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.499856791 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.500293997 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.498595946 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.499760968 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.500910556 seconds)
  done (took 28.358889004 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.522532928 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.527272847 seconds)
  done (took 4.407734671 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.680988973 seconds)
    (2/7) benchmarking "second"...
    done (took 1.580884762 seconds)
    (3/7) benchmarking "month"...
    done (took 1.666697141 seconds)
    (4/7) benchmarking "year"...
    done (took 1.653662173 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.583222768 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.531754772 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.583689798 seconds)
  done (took 12.638442151 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.504066404 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.864089211 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.063559409 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.725109247 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.494289393 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.516716895 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.449344152 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.51705814 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.520994324 seconds)
  done (took 17.016001616 seconds)
done (took 90.955466895 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.46640079 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.477741688 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.491928198 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.48591221 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.905188781 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.526960796 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.471951426 seconds)
done (took 18.186670037 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.456919767 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.472555553 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.467412512 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.478303212 seconds)
  done (took 11.235563405 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.466742175 seconds)
    (2/2) benchmarking "read"...
    done (took 1.876022782 seconds)
  done (took 5.703065313 seconds)
done (took 18.299178827 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.504215725 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.50555556 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.503580867 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.50395801 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.503717966 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.504636658 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.503274822 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.503964227 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.502263241 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.503748626 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.50265121 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.50361928 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.503427915 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.504283261 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.503924557 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.503875248 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.506227712 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.503345014 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.50300342 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.503717198 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.504320138 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.504721166 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.5044205 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.504724029 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.504890601 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.505604868 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.504614658 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.505432639 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.504871535 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.505032449 seconds)
  done (took 46.487797018 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.512086628 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.510995079 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.505711585 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.506604227 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.505982569 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.506634189 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.506313408 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.506471738 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.50629043 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.505634201 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.50654144 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.506437726 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.506581179 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.507244672 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.505070862 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.506108214 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.506890226 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.507734119 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.507573973 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.507021738 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.507170151 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.506632582 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.506434373 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.505638601 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.507418995 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.507358932 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.506246151 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.506894557 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.506373331 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.506807255 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.505912519 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.508264773 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.506633141 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.507024532 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.508021167 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.50699017 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.513791663 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.511646488 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.50783518 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.50701657 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.507774208 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.508427643 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.508127954 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.508438608 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.508298437 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.509384538 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.508736691 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.507908024 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.508551263 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.507572017 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.508514386 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.509260779 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.508832583 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.508353891 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.508811141 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.510313567 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.509081846 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.509897033 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.510278367 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.510299669 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.510997314 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.508928963 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.510850647 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.511645092 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.509563193 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.511564913 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.509978469 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.51510447 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.509958703 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.511814945 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.510248894 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.516964203 seconds)
  done (took 109.970598009 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.51143012 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.510097408 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.51287765 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.511703967 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.511485643 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.510264678 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.512239231 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.510618913 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.513183695 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.511589148 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.510350234 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.511158856 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.512227707 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.513247809 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.511655498 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.511532368 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.510823688 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.510877046 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.513066501 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.511049625 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.511457777 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.512643332 seconds)
  done (took 34.622420771 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.513001548 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.512882749 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.512391974 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.516204191 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.513745568 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.512550933 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.512971377 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.513847815 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.51282038 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.512278831 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.51223497 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.511526361 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.51565426 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.513402647 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.512052405 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.515239892 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.51188765 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.514903187 seconds)
  done (took 28.607865638 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.514069352 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.512562177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.513768616 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.513087593 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.51331339 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.513666298 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.513554063 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.514466469 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.514279015 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.513041637 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.514564247 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.51501612 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.513474164 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.513485269 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.514966184 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.513601695 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.514614813 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.513135085 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.515437263 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.514996845 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.514700577 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.518837277 seconds)
  done (took 34.681794523 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.515286755 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.514480857 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.520049512 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.514694222 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.51671047 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.513672584 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.522372573 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.516092444 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.518221067 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.516234152 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.520027652 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.515257771 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.518151296 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.515978254 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.517039492 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.515695257 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.517988287 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.515700425 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.517645365 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.515829842 seconds)
  done (took 31.708150807 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.516948908 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.516563524 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.517302794 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.518350204 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.517334013 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.517319276 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.518243626 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.518018737 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.517269339 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.518621886 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.517313689 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.519085772 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.519463753 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.518709677 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.517888553 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.518475568 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.518538286 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.518125036 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.518130762 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.519109518 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.518879601 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.518758356 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.521582109 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.519926731 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.518825962 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.51936409 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.519998109 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.520797721 seconds)
  done (took 43.891187701 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.544814183 seconds)
    (2/2) benchmarking "in"...
    done (took 1.549212508 seconds)
  done (took 4.46885613 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.517750268 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.518087181 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.52164322 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.518693893 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.520166287 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.519284191 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.519906407 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.519807931 seconds)
  done (took 13.529199418 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.51456753 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.521588115 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.521184084 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.523720858 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.520828801 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.513422202 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.528071762 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.524799487 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.515719492 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.514327136 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.519867226 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.518452032 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.517982908 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.515434539 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.514846686 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.526927622 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.524225951 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.52429223 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.523286166 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.523117291 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.52222444 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.518536121 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.521687709 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.52587204 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.515868952 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.535562029 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.530657634 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.526244085 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.516787086 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.527959107 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.517082864 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.524797182 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.524262547 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.524139836 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.522261106 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.522989551 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.532152727 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.521180871 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.53155272 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.527421818 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.523704377 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.524281824 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.521322998 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.521225779 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.522856293 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.528347983 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.524884624 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.523642986 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.516237226 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.520456268 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.529178816 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.517119461 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.526373989 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.530075089 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.525604617 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.53539909 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.532629115 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.519910877 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.521662636 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.536106092 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.544360285 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.532175984 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.536553985 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.530911019 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.533083991 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.534651788 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.536723979 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.532942073 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.527679533 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.526191145 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.534848531 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.547036673 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.539417826 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.529506162 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.527442142 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.526767126 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.520709931 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.52926933 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.536333356 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.5355658 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.532433489 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.527563386 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.532308612 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.530791939 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.522896033 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.530832937 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.527783875 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.527175069 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.5195667 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.539380322 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.535854944 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.52809425 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.520014521 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.523489824 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.524682643 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.530986238 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.521551867 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.529122313 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.531230263 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.528664854 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.529789298 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.524998116 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.535332251 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.533038035 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.530991266 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.53850109 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.535584099 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.523248592 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.541945104 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.537180811 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.529972283 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.525711824 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.535841464 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.533111229 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.526668999 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.534704029 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.534063654 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.532426645 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.535153248 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.529443583 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.536460467 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.542784386 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.53601055 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.530590168 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.530396428 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.537394944 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.53220867 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.534639705 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.535873032 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.531228587 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.531098682 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.533010448 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.536869458 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.528632517 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.536233902 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.531330206 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.535902087 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.531809108 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.532141832 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.534457559 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.530519698 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.53479594 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.535495261 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.540325065 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.537629611 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.535322544 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.548009143 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.532617521 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.538304138 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.535496798 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.538441306 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.533278359 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.535069508 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.537262175 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.526858968 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.536354588 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.526816923 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.535808848 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.532530568 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.532893813 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.533789457 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.526322936 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.53222166 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.5392141 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.539793922 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.533389966 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.537599369 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.535276798 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.534513642 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.525691989 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.536372049 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.525979945 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.532553127 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.539456869 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.534851185 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.534263959 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.53961869 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.539253839 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.534783509 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.534512385 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.530103723 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.539710881 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.540341478 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.545179174 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.542650989 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.536133889 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.535089064 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.529089837 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.530534924 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.537115788 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.529654504 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.542079898 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.554931601 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.549034622 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.532157895 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.538415814 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.527382358 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.538588113 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.542903745 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.543407231 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.536962626 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.537174455 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.530475348 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.541520538 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.536924004 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.540986043 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.528368167 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.53810921 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.539321376 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.537956189 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.541971923 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.535663998 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.541465225 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.539955604 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.538005636 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.536853604 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.531707698 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.539752018 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.529992047 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.532815172 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.54041565 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.53754168 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.547055879 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.54653214 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.540335891 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.544840444 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.539679732 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.533742036 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.539871236 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.540168061 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.53654763 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.551359639 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.539937097 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.537181998 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.551623569 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.539562119 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.532997038 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.547233137 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.54549346 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.539773109 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.535044715 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.54585014 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.539419014 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.539141046 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.539069388 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.533664651 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.542559637 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.55003461 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.546750394 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.533994023 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.544329136 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.535827706 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.543685618 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.543632259 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.546739428 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.541959701 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.547145695 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.547607765 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.540446938 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.542006354 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.544178628 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.541117205 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.541694792 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.535709954 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.546066926 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.550286527 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.540627687 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.546361937 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.538288702 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.545021681 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.534716042 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.543347726 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.540103528 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.56423048 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.559429589 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.555208801 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.550675264 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.545913695 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.552090667 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.542767415 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.539804049 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.537425045 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.541857942 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.538833535 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.538860563 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.545080349 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.542639465 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.548012076 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.546744876 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.54195977 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.545611421 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.541155687 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.535556233 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.546410755 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.543193587 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.541986729 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.535119235 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.545776038 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.547630952 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.54973981 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.542216018 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.539567637 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.557528929 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.547004336 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.550614991 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.548481619 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.539543961 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.535933795 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.546033473 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.550367264 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.540893643 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.549495365 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.539463852 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.553270636 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.539930043 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.559706301 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.552823582 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.538944931 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.550181765 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.545268012 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.536239001 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.539532995 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.547114197 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.556329265 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.554824674 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.538883331 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.549133727 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.545492063 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.546946578 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.544847428 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.545494367 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.546011193 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.547269873 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.557281132 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.548328388 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.544583009 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.554116134 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.554530224 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.547369746 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.546252425 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.537620042 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.55738757 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.554114319 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.549980972 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.556999672 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.542979523 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.54923793 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.547143809 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.546993441 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.547252273 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.546997771 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.558493576 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.551074197 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.551636978 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.547220775 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.560056485 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.556619525 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.559947114 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.558909411 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.548703365 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.555535309 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.54781254 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.544771161 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.543798971 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.552279239 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.552341956 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.539693839 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.552807867 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.549573658 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.552399017 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.55752823 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.557641583 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.540521249 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.555488236 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.560616333 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.542346621 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.552275817 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.548693169 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.541550012 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.553474363 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.549401708 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.541002037 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.545270876 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.549329423 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.555030496 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.544932286 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.554257563 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.545600037 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.554178224 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.548791225 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.550764801 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.55171129 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.550865931 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.543270481 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.551969702 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.561619184 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.559503412 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.550878712 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.556260541 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.547418006 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.567224017 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.559507114 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.552732159 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.55693863 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.555841704 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.548546572 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.554376782 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.556887856 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.551082439 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.555577842 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.543877333 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.549794705 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.54919414 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.558656098 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.559022414 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.556493812 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.545716253 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.546783079 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.554241919 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.552720776 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.552827772 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.556089989 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.559832015 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.545371657 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.54495226 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.553228452 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.552115112 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.558297463 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.548756794 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.552017055 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.551224356 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.55832526 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.55292129 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.552488553 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.546086482 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.549186038 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.566333051 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.557163379 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.553766788 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.55250301 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.556497932 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.548083733 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.551414115 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.55500675 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.55067701 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.553989233 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.557656878 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.55713251 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.548754839 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.548830476 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.557857113 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.566269565 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.555968396 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.549638401 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.569195845 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.567930881 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.562527609 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.548047206 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.553239906 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.551571677 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.556887995 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.555463513 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.549137499 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.571312106 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.564376308 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.560740161 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.561497031 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.555082459 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.549922794 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.559091907 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.556601157 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.560140155 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.56327945 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.56072347 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.565182696 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.558211907 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.556637685 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.549071638 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.552748223 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.55427663 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.55384089 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.560823272 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.561758028 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.557739291 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.559575697 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.563690327 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.55764277 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.556737068 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.557542059 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.549522604 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.561590689 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.551043676 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.564936924 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.558715462 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.555138192 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.560056625 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.559141494 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.553725233 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.558374497 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.564009781 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.557916827 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.552285804 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.562245799 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.572161935 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.567910626 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.558842294 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.553577449 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.565825235 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.563015031 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.560389907 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.559370294 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.554841646 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.578175688 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.569971852 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.556688319 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.559117469 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.573180779 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.566639933 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.559261063 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.558571869 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.563861228 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.560779412 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.565253375 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.559936847 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.571843319 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.564479114 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.558736136 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.564173489 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.559925463 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.557888821 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.570202468 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.568289305 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.561442276 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.561790993 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.578799511 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.570834601 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.566041114 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.58315195 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.567388214 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.567136505 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.566898137 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.553578217 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.564970937 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.564509216 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.567423204 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.563010492 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.56056479 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.562799781 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.554237029 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.572562265 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.575519135 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.57264363 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.562995615 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.554715512 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.558643945 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.564262536 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.563869958 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.565936073 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.562974523 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.562886453 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.562044517 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.560523723 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.586269316 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.581758267 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.568045839 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.56284399 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.564214904 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.569922055 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.571839688 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.563197596 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.569103026 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.56483719 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.564289425 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.570078569 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.573416284 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.565362327 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.560869647 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.560018212 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.559839208 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.568081039 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.581991467 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.58329268 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.572721224 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.565825724 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.568733566 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.565714886 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.56933448 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.568900137 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.565980981 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.570205122 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.564083813 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.570254639 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.568009661 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.567310131 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.561493609 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.571333407 seconds)
  done (took 922.494628286 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.56599062 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.565723476 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.566053407 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.566055222 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.566630017 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.565104543 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.566067933 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.566338569 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.566605641 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.568005471 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.565584981 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.56683081 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.567728829 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.566930753 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.56739862 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.566771655 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.566660258 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.570858627 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.567956931 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.567551153 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.567535509 seconds)
  done (took 34.317926184 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.569019147 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.567513718 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.568356493 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.567091946 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.567945826 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.567944779 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.567994645 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.569525147 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.566788416 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.567233864 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.56895629 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.568494779 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.5676314 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.56777283 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.568545832 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.567960423 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.569015446 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.568856417 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.568583058 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.568048004 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.568962156 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.568495826 seconds)
  done (took 35.915297051 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.569439662 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.569652189 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.562572797 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.572863491 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.568915503 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.57078662 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.572046557 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.570379795 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.570983643 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.562970613 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.563035774 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.564819241 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.569065452 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.575927078 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.575563415 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.578510508 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.572060386 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.57287711 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.570906538 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.570718385 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.580308711 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.580621949 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.570691706 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.562575729 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.573682589 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.572663256 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.571914208 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.571125141 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.56434048 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.574999237 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.572184843 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.565182626 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.579933034 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.571357992 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.566042162 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.576471352 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.573272062 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.571436773 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.572610944 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.57850925 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.582956603 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.572905744 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.587407169 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.583157188 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.573296018 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.570414017 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.579038648 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.573892183 seconds)
  done (took 76.894083042 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.572485928 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.572271236 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.572294284 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.575043586 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.573665618 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.5736293 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.574387357 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.573069452 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.572787014 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.574347967 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.573235814 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.574190754 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.573156684 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.574824773 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.573865085 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.574299079 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.574322125 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.578604514 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.575371281 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.574557631 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.574469072 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.575659446 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.575189694 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.575286006 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.577364063 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.574320659 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.575126069 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.574401396 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.574320868 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.57520876 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.575295714 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.575497485 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.576008025 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.577649085 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.574919688 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.576629542 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.576603631 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.576691352 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.577552914 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.57630939 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.575029269 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.576521777 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.576887117 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.577013739 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.577078412 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.577263352 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.577222495 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.577231016 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.577438234 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.577781505 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.577547606 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.578127218 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.577694482 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.57871179 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.578204952 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.576983567 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.577131841 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.57744005 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.577572888 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.577467428 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.577778571 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.577693225 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.578820743 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.578675264 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.579738736 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.578316139 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.578731485 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.578299238 seconds)
  done (took 108.592221542 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.580170425 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.577995289 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.580974299 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.580475841 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.578529155 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.58048967 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.579593187 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.578957073 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.57930146 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.578767035 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.580481429 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.578762076 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.579855511 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.579882959 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.585241042 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.580581092 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.5799748 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.5799924 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.579567626 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.579724907 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.579477181 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.583691613 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.582238076 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.580776369 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.581627593 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.581526744 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.579370324 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.580984775 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.581067047 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.581287886 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.581270915 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.581673759 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.58459976 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.581797169 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.58172649 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.581159727 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.581825873 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.582344655 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.582185276 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.581577029 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.582401575 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.58221468 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.58235059 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.583042928 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.582877752 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.580917587 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.581846407 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.582389632 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.58257988 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.582389283 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.582811962 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.583087346 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.584012673 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.583480133 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.583784433 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.582887182 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.582498026 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.583246585 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.582613613 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.582903105 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.585811855 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.583860978 seconds)
  done (took 99.482504796 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.581242209 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.583803569 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.58383814 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.582502984 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.582589797 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.583182191 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.58343355 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.582511855 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.584200407 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.582988311 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.584490458 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.586277906 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.583880464 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.584482706 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.583874807 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.584020007 seconds)
  done (took 26.765394888 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.58363134 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.584987239 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.584635728 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.589291138 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.584595988 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.584108356 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.585941131 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.585187544 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.585126852 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.586494973 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.586057627 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.584003176 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.585909214 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.585432267 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.584512109 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.585012382 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.58625395 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.592892365 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.58624117 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.58695795 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.586969265 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.585493449 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.58379861 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.586872116 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.58535642 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.586096039 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.586118249 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.585915569 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.585618744 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.586357665 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.585104433 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.586647506 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.587064389 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.58741555 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.586869391 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.586157011 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.588072966 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.588713969 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.587631639 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.588497811 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.586368281 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.586232579 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.587894452 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.586889925 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.586702541 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.586128585 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.586810097 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.587527226 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.58774583 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.586432464 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.588299253 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.591389101 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.588281304 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.589159767 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.587810922 seconds)
  done (took 88.693311701 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.587976516 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.589659621 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.590359082 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.589287576 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.588077087 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.589976281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.588012415 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.590178332 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.589349735 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.589601723 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.588553824 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.59044345 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.589473913 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.590482211 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.589838974 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.58939597 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.589811106 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.590526002 seconds)
  done (took 30.044670835 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.589529925 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.590606179 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.591148986 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.589977609 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.59033338 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.590480605 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.590599824 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.590474878 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.590272339 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.589953583 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.590775056 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.590698929 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.592121107 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.591241945 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.591393361 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.589307132 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.590902516 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.591771132 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.591352364 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.591018104 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.59047851 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.592266168 seconds)
  done (took 36.431513603 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.581308 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.582097137 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.58249621 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.603765605 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.592732707 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.582097486 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.582064242 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.582406255 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.608729084 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.614300743 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.612785257 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.591183487 seconds)
  done (took 20.550781982 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592387482 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.593623882 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.595442828 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.59136291 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.593576739 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.591822466 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592720555 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592517946 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.593692257 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596665959 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.592052872 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593168517 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.593460593 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.594106275 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.594184777 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.59230039 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.592935736 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592650713 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59487467 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.594753216 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592724815 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.595449114 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600021693 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.593621647 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.594106765 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.594526441 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595303634 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594406802 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.595038308 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.594898555 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.59581592 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.594459882 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.594662073 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.595872422 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.594726815 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.594462186 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596076009 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.596543248 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.596256759 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.595500238 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.596797261 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.59527081 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.596607222 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.595944498 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.595498003 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.596467819 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.595334085 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.596964949 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.595598085 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597689553 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.596477806 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.597090593 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.598179419 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.596592625 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.596567552 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.596513775 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.596561896 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.595758372 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.598890264 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.597112175 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596073146 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.59745761 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.596440022 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.59638799 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.597797946 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.597067197 seconds)
  done (took 106.724605834 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.596117844 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.596135724 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.597534994 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599466944 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.597341324 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.597783 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.597988892 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.598466048 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.598633039 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.596600797 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.599024499 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.598589807 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597646321 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.59957848 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.598383425 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.598979242 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.598693102 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599640429 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.599746239 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.599140225 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.599183877 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.604917077 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.603687801 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600176392 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.600209566 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.599592029 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599663966 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.600072817 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.60011989 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.599063819 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.599708874 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.600708372 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.600442975 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.60019909 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.599128702 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.601660379 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.600289464 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.600610874 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.601314664 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.601233718 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600135394 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.600503389 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.602023204 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.601071896 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.600187356 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.601279813 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.601337573 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600669261 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.601133357 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.599987541 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.601123858 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.601958252 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.602187122 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.602046532 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.601340227 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.601936043 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.601943725 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.601922493 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.601212836 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.601226735 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.601322766 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.601846716 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.603154773 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.601750125 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.602014894 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.602963687 seconds)
  done (took 107.05819637 seconds)
done (took 2043.293653945 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.567496257 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.567147889 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.592301926 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.795635884 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.592913177 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.249152423 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.081840715 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.593509133 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.592598262 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.593555159 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.59372159 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.569955928 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.934788216 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.593387819 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.593772924 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.568180423 seconds)
  done (took 58.526047204 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.633552004 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.611628546 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.750024287 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.597713439 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.634339954 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.863180157 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.673097327 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.601661636 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.808071125 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.606906088 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.579895111 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.630985616 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.599287172 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.56826081 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.623432561 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.899170488 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.94597658 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.58164708 seconds)
  done (took 34.654769996 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.185232075 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.585648845 seconds)
  done (took 6.217940215 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.626653152 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.599990264 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.607390646 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.599843388 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.572570227 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.56937422 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.599141833 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.570195344 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.572744551 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.754451037 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.604916519 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.622279341 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.600473287 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.602249979 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.608065803 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.659267704 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.79429989 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.609556564 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.606344005 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.614608883 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.600091953 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.850637221 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.656194059 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.6102584 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.754671876 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.587056986 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.616573588 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.621587774 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.812097405 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.612641943 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.601630976 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.601415725 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.604767897 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.571207065 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.224143378 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.589458757 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.640210951 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.617855595 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.608434075 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.810849899 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.603332938 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.614712108 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.573139783 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.223540647 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.779374109 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.890942976 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.579145784 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.605359662 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.604140303 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.815623551 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.603763719 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.606189726 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.709195981 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.573064494 seconds)
  done (took 101.223686758 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.608649187 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.572648869 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.841508128 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.600178207 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.572481319 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.578574342 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.572266347 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.969213055 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.631077737 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.574160653 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.989926303 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.357140248 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.576588545 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.617370897 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.622949259 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.606760678 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.574278056 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.574228748 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.574603587 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.577781993 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.263368757 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.575580596 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.593294022 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.731341884 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.649567658 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.267760656 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.574708557 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.576129618 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.579672876 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.575973453 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.317648494 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.584937372 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.637913941 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.576980285 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.971694376 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.106411716 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.068638058 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.583637068 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.617372293 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.578048717 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.576856456 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.267184116 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.087730081 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.575963117 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.582059982 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.268138707 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.577033085 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.58386007 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.579084114 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.935409664 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.576755117 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.578736235 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.576159231 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.579344762 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.577393535 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.645363702 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.662440803 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.269178085 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.578185326 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.577322158 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.632143305 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.579482698 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.584010159 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.580596038 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.583034965 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.091636304 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.74631341 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.583506185 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.091524209 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.315923624 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.578717168 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.394730503 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.578552063 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.581819169 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.657581875 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.577524139 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.578563098 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.265095722 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.579567974 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.577265237 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.071791392 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.578343796 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.994421358 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.598382588 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.57993939 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.288929828 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.591859412 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.643089251 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.580454749 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.580968082 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.601911109 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.582902547 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.980917196 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.660390682 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.578918381 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.581548254 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.583486 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.580431841 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.581293822 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.580838527 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.400806415 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.583215575 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.580663435 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.581802267 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.579619587 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.582046153 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.580342374 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.585725601 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.954876874 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.58220588 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.58424287 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.597905013 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.579761086 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.592262536 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.73871384 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.585833506 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.028458647 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.584629721 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.579779524 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.606964056 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.581103156 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.627918396 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.594973914 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.583797703 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.583717246 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.006531836 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.601342251 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.600369013 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.582245689 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.590867246 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.5922786 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.582620458 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.614586603 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.586759043 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.548957937 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.592717342 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.59856166 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.582856172 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.590545208 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.583940319 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.587523595 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.583333956 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.002709143 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982749902 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.783309386 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.585037175 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.582388655 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.536841452 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.591148078 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.854232302 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.603895161 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.584447645 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.975378014 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.769209339 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.587571576 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.584337855 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.584625182 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.96326586 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.585882464 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.001861759 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.349107942 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.585093956 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.587730954 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.549222007 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.424725868 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.586849487 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.591012795 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.998264654 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.60484584 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.586552661 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.585630617 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.586223639 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.587067112 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.591720568 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.589051024 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.585563918 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.585478782 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.700491033 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.870366057 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.605496202 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.591220923 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.272607851 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.590418097 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.586235583 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.592577101 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.591561399 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.586214979 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.625824694 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.591753952 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.625885177 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.588991798 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.599906036 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.308049648 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.592073825 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.587577024 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.869387441 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.495782808 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.588286681 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.588505074 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.588826624 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.6206783 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.304227793 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.639081688 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.035599011 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.597125375 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.661771934 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.588704192 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.616262376 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.303669762 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.597301235 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.59082164 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.475615998 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.589345335 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.284231256 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.588247919 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.588868389 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.406850619 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.590018814 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.589205792 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.597300048 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.590675322 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.994570958 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.589492701 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.607582291 seconds)
  done (took 560.824410856 seconds)
done (took 762.892355744 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.590004287 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.593223692 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.592778943 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.592365831 seconds)
  done (took 11.834044539 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.628276683 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.618307188 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.628014708 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.618352166 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.629654721 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.617819277 seconds)
  done (took 11.206638079 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.590308516 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.593438733 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.593371895 seconds)
  done (took 9.242977477 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.918383197 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.594121222 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.104279532 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.607758361 seconds)
  done (took 10.692031019 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.630001901 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.627665153 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.629820174 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.629176308 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.63057907 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.63082121 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.628377044 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.628989552 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.630105127 seconds)
  done (took 16.129822515 seconds)
done (took 60.571156571 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.74907291 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.755363514 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.605463447 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.66704523 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.819555126 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.750883126 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.761412049 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.765413325 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.757349451 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.661231991 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.751008351 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.654990485 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.752642148 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.889624721 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.662023223 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.757198733 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.65424444 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.849444263 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.756132257 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.663470264 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.781583189 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.661092517 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.662707877 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.596501972 seconds)
  done (took 44.853655204 seconds)
done (took 46.321174852 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.659231178 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.778225708 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.625327844 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.625429463 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.633142804 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.606603745 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.654528135 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.625176428 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.646757035 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.647543588 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.609865403 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.635593186 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.650013036 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.63793699 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.66825956 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.62529851 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.624312282 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.636903827 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.650980896 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.651764586 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.630311159 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.6358993 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.661941159 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.626853876 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.644846946 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.643237594 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.641193689 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.601245521 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.634163395 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.650336192 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.613399511 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.641622932 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.651653818 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.637897808 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.630842651 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.638056068 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.637976659 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.781461316 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.657056669 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.638929364 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.637512145 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.652944624 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.641314304 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.641304666 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.64211287 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.662567984 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.645278426 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.650666262 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.613580609 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.603086817 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.656912377 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.648841239 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.638705383 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.60470078 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.60951452 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.651408604 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.639455199 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.657360688 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.639131136 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.639364894 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.670158964 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.657924866 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.64969421 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.648509423 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.638258189 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.653013348 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.64078379 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.655046917 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.636941821 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.639361611 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.63519041 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.64032563 seconds)
done (took 127.810720557 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.808529004 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.602732792 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.838771327 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.639486139 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.857393388 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.806602153 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.637019065 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.63662537 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.636516906 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.497952149 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.63817857 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.636908436 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.604443973 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.638171656 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.805275099 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.639215713 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.638597479 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.395203957 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.639949116 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.81942997 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.605169066 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.639528462 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.638454722 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.516105924 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.605004519 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.609340266 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.818687837 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.639546761 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.398272574 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.607709891 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.600583496 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.399090066 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.821983996 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.657573565 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.649538604 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.647248439 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.860644919 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.640407555 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.809995601 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.809226648 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.840228705 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.677699797 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.60919758 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.605759992 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.640547656 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.640989472 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.638463802 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.667934449 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.606396456 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.639123662 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.397652033 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.649836617 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.640371167 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.641096539 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.639918666 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.668441287 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.641240342 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.645583772 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.822912397 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.642210787 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.81337103 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.518961246 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.497527583 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.642942654 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.605750005 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.641618044 seconds)
  done (took 129.543733393 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.754994473 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.762237014 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.811846115 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.634608353 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.726460537 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.813307405 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.634661573 seconds)
  done (took 13.615513328 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.646976616 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.643298845 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.725281127 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.724840219 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.642597917 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.866553281 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.642045193 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.65426609 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.641961174 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.726470175 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.642603644 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.642145415 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.65181976 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.606442411 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.726390905 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.654413037 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.808608344 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.636871561 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.644262165 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.846010656 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.642625364 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.652949303 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.726974987 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.65390543 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.644688336 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.649844718 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.45978277 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.644939276 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.643963594 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.645121701 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.644315384 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.755568498 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.644124578 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.607746907 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.644021842 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.808115683 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.644820825 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.6440796 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.645375854 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.612598781 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.644401987 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.644678489 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.644558222 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.646477111 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.645135251 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.670306608 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.647107848 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.644817264 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.645571829 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.645888 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.728934664 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.64713795 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.645335974 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.64549661 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.730529489 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.654925533 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.64625348 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.645063454 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.646417886 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.64582689 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.849453831 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.728583014 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.646788604 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.726041908 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.647062591 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.648614115 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.647933652 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.647937283 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.78777427 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.64840962 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.730530049 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.646579499 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.882501678 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.671312742 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.64723035 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.644619473 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.644864127 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.647826096 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.611406311 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.652965576 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.647080959 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.641978984 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.654160142 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.647383511 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.647822115 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.859285877 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.809727619 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.647688788 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.663189013 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.655114453 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.647815689 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.731117065 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.648538757 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.649043499 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.732126202 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.815316739 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.7328617 seconds)
  done (took 168.9769352 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.661435997 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.660909533 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.646748305 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.67659393 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.642414095 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.640854958 seconds)
  done (took 11.413651136 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.644137777 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.658844815 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.648747511 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.65001562 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.651287779 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.649138833 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.651011766 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.644324952 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.654900739 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.651011556 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.650334097 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.652038154 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.650472871 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.656784568 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.651946383 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.651690903 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.651199639 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.652431011 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.65232129 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.654291024 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.616641474 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.652366547 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.651717792 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.646513289 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.655873208 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.652272961 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.675174755 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.652910891 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.652049887 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.660991736 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.654135558 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.651982281 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.646268984 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.649972109 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.654740453 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.645230864 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.656513444 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.65468451 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.652722039 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.652259271 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.654276427 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.653741234 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.652189011 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.654290605 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.646337359 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.649767963 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.657696275 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.679767728 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.653327005 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.654034707 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.656055634 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.653640662 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.654065856 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.655842549 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.651830585 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.649429163 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.658431914 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.654537005 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.654787456 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.648329232 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.65809905 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.655552986 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.647982331 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.65998274 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.655505843 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.655825088 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.649799112 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.66116606 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.656447583 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.655693996 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.657952942 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.654841094 seconds)
  done (took 121.512899094 seconds)
done (took 446.536322333 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.00110461 seconds)
  done (took 4.492394808 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.744163556 seconds)
  done (took 4.236167323 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.448681918 seconds)
  done (took 25.945285711 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.651520211 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.625881406 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.647354388 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.62430418 seconds)
  done (took 12.039515919 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.277513712 seconds)
  done (took 4.770003015 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.638577714 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.632175992 seconds)
  done (took 6.764544291 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.013464562 seconds)
  done (took 4.507387706 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.369001603 seconds)
  done (took 4.867710832 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.64686082 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.634490391 seconds)
  done (took 6.780873811 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.618837423 seconds)
  done (took 4.112530651 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.00319454 seconds)
  done (took 16.498093857 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.631044702 seconds)
  done (took 4.125941225 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.622837932 seconds)
  done (took 4.117065096 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.725126708 seconds)
  done (took 7.219179688 seconds)
done (took 111.967704066 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.623185183 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.628127362 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.629218353 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.627660403 seconds)
  done (took 12.001998089 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.777393899 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.779302032 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.782702256 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.7682713 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.768528945 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.782689195 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.693296612 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.694737369 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.757553457 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.753305781 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.786874434 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.768507993 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.779528109 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.720270503 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.754820148 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.784392973 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.756597609 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.782118173 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.706448285 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.768670722 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.662154105 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.768370126 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.755216219 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.661741482 seconds)
  done (took 43.51072661 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.211963057 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.782138288 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.864339034 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.745382985 seconds)
  done (took 9.100684591 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.827594696 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.826917864 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.838058108 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.880084192 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.91112138 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.845794497 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.696974315 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.692688784 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.677525822 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.831150805 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.902636362 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.821721254 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.046384949 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.662925572 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.046187019 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.661369577 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.664060982 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.826552664 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.878249392 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.908098439 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.663705769 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.823643844 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.835114577 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.825099057 seconds)
  done (took 45.091195257 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.68007028 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.689255456 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.666171306 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.664965007 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.667885351 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.666176893 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.687077037 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.666342975 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.67949807 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.665242696 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.667421813 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.666311966 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.687553424 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.665617744 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.666983979 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.679035721 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.668353357 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.680393854 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.681329589 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.665815814 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.665744296 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.680383169 seconds)
  done (took 38.306594645 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.628069533 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.628150549 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.068466179 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.972036039 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.628140212 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.629332194 seconds)
  done (took 16.054042837 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.756820753 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.945248903 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.658064898 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.103126871 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.226401137 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.661792886 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.660629261 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.99629911 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.386091974 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.352684304 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.747125874 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.756725977 seconds)
  done (took 24.751687558 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798523681 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.639654177 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.639897504 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705130939 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637818259 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.64096377 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.681548051 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.281323624 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.670410882 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.001934394 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643750507 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803783149 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.978759101 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651257049 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.643856108 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.622467983 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961088767 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.327917329 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646968515 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641653662 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706946673 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.656423279 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.64921922 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.933926933 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.647703315 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641385961 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.127169803 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.642526818 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057017586 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008951767 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0144334 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.6425396 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000598959 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22855148 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82252373 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925862988 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648617677 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.645057168 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.634538302 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.643266718 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661847711 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.64752962 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009528936 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645553181 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.643314768 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645039359 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294798173 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.676606431 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.644215302 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.644548724 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018813985 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805426933 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.670621523 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.642621244 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721760777 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643311206 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.670501535 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845222008 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363056853 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643875175 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649747918 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.647556858 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.638998507 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64508734 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.455865791 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.675835175 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.671509694 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674489054 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64320407 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.648030312 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698799058 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645566661 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.694593356 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64436567 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636328754 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.658122587 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651774084 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.399212149 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657485285 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.648097779 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962134571 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644143924 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644660609 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.646547093 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.646447289 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.658347894 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.681833144 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.620696878 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714243481 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.288006457 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.935349949 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700497738 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70582977 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.953908524 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.622083228 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646542413 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.654731234 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652190897 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.696728403 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.292910013 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650439347 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.675738094 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984782912 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.945570313 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664005038 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.625898168 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319086945 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65912858 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.704761757 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.662138042 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.937790762 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.456054712 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036033842 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648693524 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716473443 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.64827748 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.648458019 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658274212 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.677158388 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.660569546 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042952739 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.624323596 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654581704 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796423624 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652643189 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.649341581 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648859817 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655255392 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.6504559 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.939271048 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652979754 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022409973 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.651143277 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650042788 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.650590134 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663889451 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.654914008 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.957709007 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663102759 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005991264 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652026421 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649244433 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650682255 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.957846386 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.660156645 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.679985633 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084543223 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659939088 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.656395481 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028522063 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.71692308 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847539831 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713549886 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.651891278 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995687231 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.680043111 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.67862289 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653105468 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.656050047 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660615223 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.681556433 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651367119 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459327265 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657586904 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.660422949 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.652433386 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.69782554 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8060312 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681558178 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.939680039 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.660433984 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650630223 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.682107969 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.653334268 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958645789 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022918138 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.65888232 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910340903 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.303541603 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.465879984 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702685865 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.652507488 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.652335747 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.652513773 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652308021 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652868846 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.653584021 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941086154 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041814255 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.653318694 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.455944083 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657058555 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.66561509 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.687919881 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029437822 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.686986732 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654078777 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.653943005 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654613342 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658846981 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035054668 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958839319 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.699905833 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.655942561 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.259668774 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686669164 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.655408205 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.655470923 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711405061 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.669200462 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39900046 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086345477 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654850523 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031676514 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.668632932 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.70537685 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.656618345 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671122494 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663331419 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.678965949 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688480707 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.947299373 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.672839542 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662163883 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376956176 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656364402 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.394879824 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658550086 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.683503468 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.661157539 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.314331033 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661744695 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658676289 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.02488459 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308274048 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661321946 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308115717 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.675231885 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.647882038 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03496541 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972884191 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.67760607 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.676937619 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039776288 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959228405 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715672573 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.668331497 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661898346 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.635551979 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391919252 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661001165 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917264339 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309239115 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661450943 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.664060213 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.672994101 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.661485724 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250620488 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.662107311 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659812746 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.677004527 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.680142846 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400436885 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.671874056 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660642809 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.483797346 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.679527753 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.318170627 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664351522 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.953196772 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.043174345 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.024955898 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.668296436 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.677285848 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.994009433 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038249836 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663124271 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.678154464 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.400875767 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.610465549 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.690924453 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663603312 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.664488271 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666375243 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085925033 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.66580883 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.665063693 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670391046 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.663988207 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662730435 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.661257971 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.672354285 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66462963 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.353410374 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.688341863 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655801622 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.67317911 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666588119 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.001618921 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.707328145 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.46314898 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982289298 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658262759 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726728029 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.691648219 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662865648 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.645865791 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.662482638 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.662900987 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.754092402 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.969166959 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.671387053 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.644140711 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.731150309 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962112082 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662211794 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.683512547 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998531936 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.667709979 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.688808053 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667786385 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727555997 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.663534518 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669853128 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.684541659 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727556696 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819222123 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954989947 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.044496092 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.04348032 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.231044394 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668412024 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.672157053 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.710947601 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827034709 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679472718 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.667964341 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.666760347 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466051863 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668099344 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.476267059 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049447908 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.668194119 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668028805 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66707575 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994505516 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666259864 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028522273 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667503668 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.674956501 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718687202 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666480982 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680482693 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970082089 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022900957 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667269071 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667985991 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673004228 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.667854411 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052642867 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.969107594 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.364160974 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.431802955 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674616932 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.673133504 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327226039 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026904818 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667513306 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66917951 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668446525 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.671340468 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.669750951 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.701955185 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666839897 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984608099 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039448592 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267207443 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.042541374 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.694413724 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.629611349 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669378068 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011958365 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.589817811 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959748303 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482076457 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.590429272 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006936706 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823464492 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965394622 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.675302844 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995209517 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.6744468 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.670108399 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670207853 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671035402 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.669213941 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.04033397 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476948849 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012214542 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.697836715 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.672997662 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730667706 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.961804221 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.984361629 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.67018229 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.984641763 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056159655 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.681765398 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.671742056 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484342806 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054888056 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672544462 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.700680861 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003524889 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.6761144 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.7404568 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.628259012 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.670730335 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424155335 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.975029507 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723351133 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.684666186 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.601291407 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484419702 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.675789778 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.371690842 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.680167848 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67517252 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038174059 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.705073459 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.692247667 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04811827 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.703041497 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.688140789 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971571455 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.482834234 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.671510253 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.681137944 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679246781 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.680920597 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673956793 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716746383 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673646 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.678266629 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.234779926 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.677858406 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.676251079 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717624497 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.682484973 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.688790593 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.676422959 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674849783 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.705415053 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.678411271 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.651949735 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.693732492 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879312306 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388711581 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681149608 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.378825548 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.100085772 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.01231232 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.685832116 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.655897234 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.704938945 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678111162 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.676080038 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.676252337 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.674598216 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417203822 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.686494211 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.053236239 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705997041 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.972131652 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976285113 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.676757429 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975784491 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.693356956 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729100467 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.65232604 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676972888 seconds)
  done (took 1139.664341004 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.673871377 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.681725588 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.696741744 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.700691129 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.686350757 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.7234802 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.717203354 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.716739678 seconds)
  done (took 23.131883322 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.676541968 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.702593466 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.674261231 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.703156736 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.687159729 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.332642999 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.677591543 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.703504056 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.726983368 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.678329276 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.675644507 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.484252711 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.705984399 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.675123213 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.675996508 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.706328438 seconds)
  done (took 38.027566146 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.835322216 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.872448934 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.165683639 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.763974525 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.710779492 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.676904165 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.063841638 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.702880303 seconds)
  done (took 30.327574688 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.7165055 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.716167677 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.716919309 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.717757196 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.716756579 seconds)
  done (took 10.119940601 seconds)
done (took 1431.583450209 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.709786 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.709474927 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.709716857 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.709305701 seconds)
  done (took 8.374975198 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.657475297 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.660597203 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.659776568 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.696099343 seconds)
  done (took 11.211260384 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.201176909 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.425166915 seconds)
  done (took 6.163712229 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.682748553 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.529633203 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.516989695 seconds)
  done (took 9.26744225 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.086090487 seconds)
  done (took 3.623309151 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.225098667 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.269562282 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.672735828 seconds)
  done (took 8.706330114 seconds)
done (took 48.883409477 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.674962508 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.4422737 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.832516831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.671552437 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.84083807 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.83213431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.965767435 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.673523777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.690768149 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.687273989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.674080971 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.840765295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.954965852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.44314504 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.95505874 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.447482043 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.840618629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.680495055 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.688420503 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.674748374 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.964168418 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.673920755 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.685095988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.690084402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.839120045 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.82278361 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.67466659 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.447384755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.691881907 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.673170729 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.824864461 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.674224634 seconds)
  done (took 92.713215908 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.674388552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.676225517 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.695969858 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.676396488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.67574501 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.674249148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.675543238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.675358298 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.686070973 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.681834541 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.676091772 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.678117238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.674748235 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.674880165 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.676847035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.675604628 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.675163161 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.675448533 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.675310597 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.676140311 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.67977988 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.69032298 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.676294451 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.695867331 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.696603667 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.67557732 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.677226552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.694954016 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.676988952 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.675908019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.696849788 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.678282623 seconds)
  done (took 87.305856774 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.686793551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.677827816 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.67913315 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.677804629 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.677644692 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.678972305 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.68170701 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.677832146 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.680172318 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.680329741 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.69065745 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.677446134 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.679435143 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.679785607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.679024756 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.67935315 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.679390306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.715623334 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.679159898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.678428242 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.682862604 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.678585245 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.678092374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.678582102 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.696183712 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.679874934 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.69082905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.694035324 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.679047315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.690371869 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.679285613 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.687251221 seconds)
  done (took 87.395182798 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.006732281 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.716760002 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.720218053 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.690035304 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.722214327 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.719001278 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.689171297 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.043020205 seconds)
  done (took 17.850379088 seconds)
done (took 286.804209746 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.688640085 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.689559825 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.767645732 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.691131603 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.737543301 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.749734795 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.00119261 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.749515424 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.993066367 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.694421267 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.736676501 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.694650696 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.6933594 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.920398606 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.70644626 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.692459076 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.684560656 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.692817222 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.702018392 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.030519104 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.751225557 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.682591899 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.692110498 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.694257629 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.669434081 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.796509458 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.797761433 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.935400165 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.897992126 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.795958271 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.68624858 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.709645759 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.694293807 seconds)
  done (took 77.665815606 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.711784997 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.722360854 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.722114104 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.72310634 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.723321171 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.72149964 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.713233436 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.721901647 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.724163946 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.721276497 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.72325105 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.721950047 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.72309705 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.723145241 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.721989647 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.703779929 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.714204998 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.721488326 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.713166598 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.70389384 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.722336619 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.722933831 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.724529844 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.7256978 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.72215531 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.723030143 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.731072296 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.724681679 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.723297006 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.724381152 seconds)
  done (took 53.167176428 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.724020072 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.686241106 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.700275363 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.730583407 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.716777252 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.721142892 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.112430708 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.725267857 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.722331939 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.719438484 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.707641942 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.72690347 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.787283564 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.708776584 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.71937444 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.726057971 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.72585599 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.71861792 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.695144404 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.740174291 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.127731466 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.726808207 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.115164435 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.743544343 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.723290511 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.718395126 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.729944779 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.688148822 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.726813235 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.707777504 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.704830761 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.105453354 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.690316555 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.692727616 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.703513415 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.732464792 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.725232866 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.690293857 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.721900599 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.719399933 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.110179654 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.719968579 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.69072338 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.713458395 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.723507438 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.734079243 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.690249437 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.713250827 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.049181952 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.734994163 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.699936353 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.725098772 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.730902582 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.722599012 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.028769789 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.724539483 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.720174053 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.703195008 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.732224678 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.105841532 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.729774924 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.722134289 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.69847283 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.722112149 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.693935032 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.723960777 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.745681067 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.723069323 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.690545913 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.728531819 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.692125933 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.723289532 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.73178356 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.709913809 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.694330333 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.694070664 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.745998566 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.706891987 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.705407371 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.109347005 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.733874817 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.692789845 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.155348176 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.730686912 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.733044334 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.734414272 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.730817096 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.858257324 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.103931932 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.694168441 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.695439902 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.70341452 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.117467173 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.740683225 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.72483966 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.708150667 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.731106099 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.733145674 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.695497591 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.716304915 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.727151896 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.746085379 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.696408461 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.730861655 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.12490045 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.74305287 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.717011011 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.726901375 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.859665605 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.733273414 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.746976204 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.729813128 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.144175806 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.733180665 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.734736798 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.696844201 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.699488252 seconds)
  done (took 246.351546456 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.69933076 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.696463356 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.698690875 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.695947159 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.694582111 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.726808067 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.698342855 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.697673706 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.725492047 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.698305211 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.700644056 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.729976417 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.727414219 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.698496785 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.723131412 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.699826354 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.699128011 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.703060075 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.719558681 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.69949796 seconds)
  done (took 51.691158842 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.735939396 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.469481559 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.438236664 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.736621326 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.734440602 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.728111724 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.803022018 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.738942362 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.741711848 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.139459145 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.957855954 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.738657549 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.739588184 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.735209275 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.457543029 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.737694018 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.14393653 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.469558734 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.737226151 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.46814787 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.737927777 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.735908246 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.725165959 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.468265971 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.15463838 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.118170544 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.806432647 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.474171261 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.738344101 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.737308703 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.469457743 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.739243866 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.732949979 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.463299139 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.73953678 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.759276721 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.736518939 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.807226044 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.80993896 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.14820935 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.477642304 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.125009123 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.759296835 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.973607538 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.740231771 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.718292179 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.482461422 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.740127568 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.717252802 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.741199282 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.752790002 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.453856737 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.732444887 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.454567791 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.741633835 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.739964489 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.473526278 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.455314394 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.446825256 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.960588494 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.732682906 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.121033827 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.742240127 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.485797461 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.744506197 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.743714965 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.742139276 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.963147479 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.477340519 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.120967268 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.148434728 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.150571732 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.742558883 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.819903984 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.743625359 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.152969941 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.819837146 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.238024332 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.151879091 seconds)
  done (took 158.643303318 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.104854745 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.860026055 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.270484466 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.483284781 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.415884101 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.940553265 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.8790159 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.059801459 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.726988676 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.900572762 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.61865395 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.855717965 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.598426658 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.829148386 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.871035905 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.921696188 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.312701357 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.715913176 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.584038026 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.596846778 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.724556454 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.890667242 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.600919433 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.222974095 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.72982116 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.607319758 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.726656861 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.431762656 seconds)
  done (took 66.045989998 seconds)
done (took 655.109446546 seconds)
SAVING RESULT...
DONE!
