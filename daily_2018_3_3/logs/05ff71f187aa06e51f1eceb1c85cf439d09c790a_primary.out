cset: moving following pidspec: 4871
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.962225634 seconds)
loading group "string"... done (took 0.515727167 seconds)
loading group "linalg"... done (took 9.438843257 seconds)
loading group "parallel"... done (took 0.169657888 seconds)
loading group "find"... done (took 3.555165401 seconds)
loading group "tuple"... done (took 2.044190365 seconds)
loading group "dates"... done (took 1.394796763 seconds)
loading group "micro"... done (took 0.188751785 seconds)
loading group "io"... done (took 0.512999732 seconds)
loading group "scalar"... done (took 57.528489371 seconds)
loading group "sparse"... done (took 13.886833059 seconds)
loading group "broadcast"... done (took 1.352004518 seconds)
loading group "union"... done (took 10.471769833 seconds)
loading group "simd"... done (took 3.620263909 seconds)
loading group "random"... done (took 13.467201586 seconds)
loading group "problem"... done (took 2.315438125 seconds)
loading group "array"... done (took 24.320411254 seconds)
loading group "misc"... done (took 1.158973191 seconds)
loading group "sort"... done (took 3.812125072 seconds)
loading group "collection"... done (took 22.216740966 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.691396198 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148107831 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.187764388 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.228510158 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.27858246 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166378089 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158463111 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.153336901 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.745386753 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210193219 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140010789 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421116106 seconds)
done (took 6.279076529 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.26137991 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.065736113 seconds)
    (2/2) benchmarking "String"...
    done (took 0.15975896 seconds)
  done (took 0.920871709 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.095171463 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161188453 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112067195 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09702939 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098014488 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110873104 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095878753 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.172349765 seconds)
  done (took 1.545993946 seconds)
done (took 3.522951558 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.492797034 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.88395488 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.518853449 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181033648 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314250085 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.311000419 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270765523 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.222197945 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092893649 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08562517 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175095609 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.430646075 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.400963563 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.969756434 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068973856 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.112809164 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.138483298 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.788576957 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081356344 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109780239 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.536490365 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213293333 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119231644 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106155866 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186830391 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137295087 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141946529 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106534276 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.665940866 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133530997 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.216056015 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085702891 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.140602642 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.16704889 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.221520184 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.115985285 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684817266 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.203150353 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098786376 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10346394 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676910595 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120302553 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.204594072 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108361636 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068500829 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.161405572 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116593428 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080053565 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095338656 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10193921 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159268659 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.453132332 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10755007 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.1938192 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095702243 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.686965051 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099341125 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275210553 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125816484 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095181264 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092178509 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090670567 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160857619 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09616821 seconds)
  done (took 20.233202507 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.175284265 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.190841284 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080908798 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.16383795 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12670067 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100270354 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.090813347 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079928831 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.133353352 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.184694366 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144321802 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.197026616 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078398616 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091182048 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.172220003 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233642462 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128823814 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106804392 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090466194 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.113690685 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.128685498 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115090014 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097121078 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097307538 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.179783804 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206904532 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111975939 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124056541 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091910816 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099874702 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143762891 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.149157331 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096109159 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091264232 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.194226065 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108342576 seconds)
  done (took 5.43468668 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.235120155 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104849011 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.249604013 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.200317051 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.155524186 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183995086 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178186529 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.30087092 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.238887556 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162948384 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128358913 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098432998 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080985625 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081283143 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096188684 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.819327681 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.172440604 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.167785253 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167347177 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115276692 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097803959 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36486529 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101453716 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087454879 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096925843 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080239899 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.223625544 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097032116 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.487624465 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084144313 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119484291 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130798474 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19609017 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123738201 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137700609 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096899426 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.10430465 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.200872172 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12069523 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080320957 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.096746705 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11805394 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131777351 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095157202 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.124801273 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.135458685 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088821637 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113083135 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.045819969 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194324899 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.16678432 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.107098838 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287864832 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111622895 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102343293 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.11392401 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.799678404 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.120362232 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098982895 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081318386 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097232266 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096903444 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.45677319 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109740976 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.448562346 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087133232 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160572816 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099220444 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119397979 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089709616 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102710094 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112851641 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.089154975 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098184397 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088579227 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081311181 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.107631252 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.087208132 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.129377687 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087220217 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081666774 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159542956 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097916409 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109897828 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127302358 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091626623 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.104495988 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114802387 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.176592844 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083658057 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100522309 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.091088963 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.18733276 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099320413 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131189896 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116568373 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130047536 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.105788984 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.251917228 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084555356 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123369038 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101916732 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127335051 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099979698 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085276663 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099139623 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086356657 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081647392 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098951067 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147023887 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089703287 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097907055 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.0913077 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095287827 seconds)
  done (took 27.559909977 seconds)
done (took 53.9249364 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.417806881 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083841522 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082684834 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102942066 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081135646 seconds)
  done (took 1.541155768 seconds)
done (took 2.288807235 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.305551136 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200717851 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089471346 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191448821 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089635003 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197733991 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184306549 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102840034 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212173103 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08754015 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19303343 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087303568 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108034809 seconds)
  done (took 2.823886545 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105647688 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108482761 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103839217 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122632172 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087197013 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105199134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122278298 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109732335 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102933141 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114566188 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088771484 seconds)
  done (took 1.918859661 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101653217 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106458505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095264317 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118739809 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088593565 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10043979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11764436 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108657502 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101803322 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115609444 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089068389 seconds)
  done (took 1.891904739 seconds)
done (took 7.382089976 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.210117954 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.911577608 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.192488826 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.247344688 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.344950737 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.299594425 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.614282083 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.203105003 seconds)
  done (took 15.898707353 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.192643385 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.114579895 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097859926 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099299927 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.118082164 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093373167 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096234441 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.118800349 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097256067 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095267654 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.108665313 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094462661 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097246732 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097395248 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.110117526 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092403358 seconds)
  done (took 2.540961399 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138236447 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118227067 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117809585 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100465971 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096674087 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.119225369 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103740858 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.118183582 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096423807 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097245742 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.121048164 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100475131 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099700098 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.111832312 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101797088 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119176942 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.113355529 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100844519 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.119277391 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117849245 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100736866 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097912745 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117739291 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101276115 seconds)
  done (took 3.467320575 seconds)
done (took 22.656845688 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146118833 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103485326 seconds)
  done (took 1.008174108 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.164548898 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.182473692 seconds)
  done (took 1.110528714 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113942355 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093266747 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141626806 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10462963 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09272482 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109336106 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119000363 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110450532 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094111787 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094325871 seconds)
  done (took 1.842350578 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096322474 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098143981 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123907208 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.168617453 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119184426 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095797638 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095924184 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114353682 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.09944976 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092347748 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11621395 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110577111 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096650965 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128885924 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098287575 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.113857904 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102885278 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096285577 seconds)
  done (took 2.735409993 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093220413 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096566315 seconds)
  done (took 0.958237458 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095747569 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092482696 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095563222 seconds)
    (4/7) benchmarking "year"...
    done (took 0.113042784 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091827477 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090855789 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.11015436 seconds)
  done (took 1.458037894 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.523239225 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.238034939 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.376055441 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073100859 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12337546 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.321105265 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.103952111 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072663111 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092515963 seconds)
  done (took 2.725699331 seconds)
done (took 12.605139 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093980869 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.438577593 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.622314733 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.132428766 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09242797 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.148222237 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.330216264 seconds)
done (took 2.633919433 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349240541 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.163619161 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083329891 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093162929 seconds)
  done (took 1.458956311 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084232259 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100674935 seconds)
  done (took 0.961854664 seconds)
done (took 3.19901793 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092251706 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.091241405 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.090304836 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.108796306 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.092265352 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090193384 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.107619313 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090883052 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.090368816 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.090646944 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108024403 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.113523219 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090940169 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109519507 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092111602 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090072029 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.227839119 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091950783 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090678194 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090628346 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110309479 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091951543 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089929244 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.107624572 seconds)
  done (took 3.259805288 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112861609 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092259122 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112614302 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096551727 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096706339 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113196407 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096527618 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092991043 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113135382 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094498095 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096548547 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.113542988 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094596311 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097626045 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110852792 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097817403 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095788644 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111583016 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094658077 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096267407 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.114159769 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093899625 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096789427 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095716692 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.114713839 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097039292 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09351351 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.111594211 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096308588 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095957543 seconds)
  done (took 3.817056027 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099860475 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088130489 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091482087 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117320343 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089682417 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.092857451 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.107101361 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093819546 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092706358 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090189412 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111065283 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091247539 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091314983 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110225593 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092885364 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094599681 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117695231 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092410042 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090918001 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093259319 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.114314378 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091278032 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090960338 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.10968964 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092429453 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088830243 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.109538457 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.092150546 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091352803 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092653593 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112591705 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095419089 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091899561 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119227339 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095567046 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091882228 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.114617589 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089116534 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091904628 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087927639 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106227975 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091837029 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091657121 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.115401425 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092468234 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091433489 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091123157 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.10991156 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093221013 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093921376 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.105934535 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092428791 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094256207 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.110283848 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096357046 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089053184 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091898827 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106620707 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093473063 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09225518 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.106427601 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09102777 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096904747 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09203279 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124771635 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09759977 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091982408 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.110798406 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094371335 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097003787 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111406571 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.103080392 seconds)
  done (took 7.862627154 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116619451 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100371341 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11093773 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093344184 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092722023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11055113 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098076342 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092215829 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092899517 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116103214 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094193302 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092986631 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111041693 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094765193 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092680074 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111016672 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098630267 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092752237 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.108671247 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094850507 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092722955 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09593606 seconds)
  done (took 2.993339875 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.23964508 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099498874 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141824679 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123993447 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111017347 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122844905 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098187462 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098590134 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114802174 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102565219 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101686792 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114853036 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112223699 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11899695 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103843788 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105311563 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114401438 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103585404 seconds)
  done (took 2.918617519 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106725196 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094028569 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155601818 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095501712 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094487585 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11352982 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100949448 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113814882 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.11456401 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095318901 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.101665408 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112329059 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095705739 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094546541 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112499343 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095743361 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094782483 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112570436 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102249339 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099527683 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.118351581 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102187028 seconds)
  done (took 3.116102297 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107490565 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093746678 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128759539 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099602392 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093212474 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111792734 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.100829651 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09479099 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.118405395 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095153551 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096105927 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093690733 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127276629 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094676069 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099822602 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112940613 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094567665 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093771506 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11344365 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09468045 seconds)
  done (took 2.856193987 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196506588 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128284141 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110384382 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116829952 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129356783 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110291487 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137763978 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111432756 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110429883 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13859076 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110941866 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111264687 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136888677 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115375709 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128745213 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121620388 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137499679 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119966675 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110342632 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128933734 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121443025 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110598226 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137023891 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110019168 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127995412 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110471352 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109741387 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133469652 seconds)
  done (took 4.265420014 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094223954 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092466815 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092498994 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110271912 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093936016 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092539372 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.110164333 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094758001 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092927121 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093632967 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.113176753 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094728881 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09283968 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.110174886 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093517487 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093669282 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092472572 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.111152824 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092942552 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092402555 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.110242784 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09385854 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092739222 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092717311 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110608373 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094682976 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093147581 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110010575 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094362407 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093443977 seconds)
  done (took 3.732849578 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105944156 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10339738 seconds)
  done (took 1.00685867 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101354941 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107648259 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091875924 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112549615 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100083866 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093519969 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119349182 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099348688 seconds)
  done (took 1.623508791 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.166484903 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.189575297 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098272258 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.12402225 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.171423684 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.180780851 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131042819 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.117518401 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093175483 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086026717 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.182196735 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085394289 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113460332 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091173495 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092827178 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120325943 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094831718 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103176876 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119739522 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096992096 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097809227 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116791894 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096009279 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10507251 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107553131 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097841541 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096802563 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124151333 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090985399 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095233582 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111443241 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094878176 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096714383 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.115940945 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095160289 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.189843251 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101158012 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090451733 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113721401 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099367522 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126295359 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.114195256 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.096549078 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092828356 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115751505 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099541689 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098556444 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.114770742 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087513271 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089072458 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.113889556 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091270779 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093077862 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094386351 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.113006133 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100076993 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.114310762 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092324787 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090029386 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089953754 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111133838 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08967921 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096245534 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116211545 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095763279 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094063214 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11272142 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095132369 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096583193 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.113016765 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094501055 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109285967 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114448578 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099881779 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099591629 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.115165745 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09299141 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101827945 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110890024 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095362275 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097731105 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.14083765 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096420402 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089825856 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108819743 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101476459 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096836798 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.116280613 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088705053 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1032876 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.11427462 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096868561 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087424433 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110976786 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.092620838 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098360043 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088314552 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113973687 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094887715 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099900525 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119641832 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094363582 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096275267 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118779587 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101003598 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093346326 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.177697174 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091314315 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.110185195 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097468621 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099601367 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.108216869 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095071858 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092870424 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090935766 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.109837351 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100439956 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094704866 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.116203264 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099356001 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095890661 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115971022 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096684351 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093676426 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109958881 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099790599 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102493086 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115297674 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097570429 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.097120409 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.114989803 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095594382 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099508097 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110740189 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101689759 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091984068 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094622893 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.115624469 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100159101 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094570683 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.109189338 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093428287 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094922716 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.113611625 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098093384 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095533314 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.109651792 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087819348 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094483337 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110764851 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097536624 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102713579 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.110423743 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09995605 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091649597 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122202258 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092618589 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099167231 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11595133 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101383694 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100044455 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087428875 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111853886 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098390768 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096001583 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111921517 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097074807 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094629798 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.122396068 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.090358851 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099194489 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106362434 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092824161 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099902161 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.116796653 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09911325 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091120962 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152625609 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107667487 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100007178 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113657592 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095707615 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098226618 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093499036 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119229423 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100601661 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099618789 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112437214 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09429776 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101711623 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.111852193 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098750526 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093676313 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115515115 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088174779 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096678813 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.106840709 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102963401 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096877763 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.118943202 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102507399 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09684337 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093018435 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124378924 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090569217 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100093389 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10739489 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099988239 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105934703 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.121204612 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101767127 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095233047 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112424741 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097803404 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103493743 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116828033 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.096517556 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095954677 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.107849278 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.090221332 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100201565 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097812849 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.111491142 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095423404 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096682744 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11765397 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093871593 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088201015 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.120037619 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102866689 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090272756 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11638473 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093530121 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094030742 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122371838 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088835594 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090925654 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117255774 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100530873 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095344861 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.114012907 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10057089 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101535628 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.117909056 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099342795 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092785738 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103056402 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113908994 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094664088 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091164473 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.117519105 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08974034 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096684341 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.114951246 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093596075 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.09036744 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119186351 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103444761 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100297115 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113537733 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.110860388 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100837888 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.120677464 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093706496 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099748454 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090825492 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.109058974 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091161905 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088025546 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.11928091 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092477282 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098832243 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.113773116 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095540993 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099274133 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117058012 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.094261162 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099997569 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126029985 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089392622 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088728422 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113976016 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096327699 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092190854 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.111516395 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098663709 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097418446 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.119371957 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099279211 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091564298 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.115176303 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104114959 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092235068 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102749948 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.12270519 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102622143 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091782655 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.120702562 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093321531 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099444498 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.1194217 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096176836 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095721966 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116102138 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093019215 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09351334 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.113174595 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.092124265 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.093167679 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.121474376 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095669091 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099934139 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.115621363 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.095427214 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09242715 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092266111 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.122429585 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094831587 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102324054 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.118241115 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.091594173 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089911489 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121329353 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096699514 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102477426 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.113499108 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101164858 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102060848 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.120223708 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097489269 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10443999 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105325781 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.124162215 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101499202 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088653452 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114446856 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099650088 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09604837 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118905355 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097731547 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089448809 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118506626 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10238549 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096993025 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.114357025 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089801381 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096986118 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.121849964 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.1008543 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099810059 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098771989 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117919929 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092339542 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099277888 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.123845343 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097211527 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10251664 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116824129 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101586906 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093625549 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.122209227 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098442558 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089941252 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.109952538 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094168073 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102544524 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090365121 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.121471388 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101498188 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.09314862 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.11576134 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10193589 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092610806 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119372665 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101635722 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094438565 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127736383 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097630614 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094437539 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.121132505 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103336006 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090095077 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.095953367 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116528113 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103212923 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09533075 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.123283562 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09673497 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101908489 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.120608181 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101824803 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101512465 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.123391201 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.091592159 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103595644 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.121143438 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099891782 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093874831 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115827062 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.093541583 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095652147 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.124805996 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094308948 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103770768 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102582028 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.116387654 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093878841 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101504732 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116614951 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105433846 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093330459 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119382018 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090973259 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098862278 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.116104174 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103717174 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.0933758 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.111014575 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102695879 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101730434 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121989123 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100037688 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103678113 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090591122 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.111768105 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100135192 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.094590399 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127183524 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099703564 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094988979 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115821806 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099045363 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097989396 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125470554 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091452309 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.094130061 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.117754049 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098751989 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.096003201 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.11292799 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102657356 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095616778 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119405151 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.097227194 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091659708 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.096259771 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.125868487 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094639266 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092715074 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.114682911 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103992961 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.096020365 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.1150951 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091779902 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102228613 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.120913826 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105050962 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094045494 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.119147143 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.095705038 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099391081 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.125726894 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095070827 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097189837 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.115921654 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102893747 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101625637 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.110926609 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.096130826 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106469962 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123814693 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099770963 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099403678 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096415408 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126110584 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104145703 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100042963 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.112842427 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.092711279 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096000639 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.111408659 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101637951 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101230303 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.11750072 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09559517 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100965411 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122214781 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101449489 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099625769 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.091408486 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12670632 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094320586 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100609535 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.113461938 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091243893 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100393529 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123025808 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097420126 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096454723 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.12023713 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101471837 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092166492 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095933783 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.122410951 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101183745 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103442554 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118243052 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095073508 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101022943 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.128988471 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099421786 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096315581 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12557736 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107184074 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098593443 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.117361865 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10091588 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103936555 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.121698863 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104967254 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094934882 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.117362561 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106242157 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105355993 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126448067 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097781311 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091595999 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.122378675 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.096535177 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092024795 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122436337 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106523133 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104371428 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097839302 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.116487458 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106375572 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102467657 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119611909 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095439016 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.096079745 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.124336336 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096041013 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101479436 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.115073814 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105179457 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105273485 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124614498 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107066841 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09142997 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124073122 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100752758 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105500629 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.120757984 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.094614817 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092366756 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101338686 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.127423072 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103992776 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10172886 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.123051793 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102776282 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097838327 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119375835 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.096188041 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10342116 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.123344838 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100937445 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098808256 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096883673 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12013285 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099010641 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.1044294 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.126578282 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.099620289 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109396298 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.125662051 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095796194 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095427605 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118889008 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101102557 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098261078 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122849615 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095266736 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.09160158 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.125519028 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107516974 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097665475 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106102264 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.127523279 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095415732 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101252336 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.128018765 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103765927 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100470106 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.120039969 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.1029108 seconds)
  done (took 63.28512763 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149235641 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107291757 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122432715 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100605422 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119116646 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123225045 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099452293 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101576991 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123359902 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109340495 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100423779 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121321575 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116111174 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141674147 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117602556 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110630697 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121830367 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101794098 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101409591 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122552011 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115266982 seconds)
  done (took 3.280000391 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11815069 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113645647 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.133817498 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113882791 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107809603 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132805396 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112537686 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132746162 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115177161 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108286894 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136563925 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111573278 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.130081787 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110547185 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109355542 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.132840514 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11538534 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107720731 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133761051 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111843281 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.130473995 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112703486 seconds)
  done (took 3.485705493 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130663828 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103080031 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098574833 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121553227 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104205815 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.10128626 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.125430907 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101505039 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109441523 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115798602 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093278392 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096634481 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099156667 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121657409 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09607166 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099994237 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.130786947 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103889499 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106195703 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.121034069 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092918233 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100715367 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101334991 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.113814944 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105632495 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105507566 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.122454264 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104932491 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091379543 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.124451185 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102240364 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094267705 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092522737 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.113561088 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09223975 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104288987 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123884158 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.102049338 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101819552 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092094932 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.123382078 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104316689 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.092675212 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.12229651 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101400871 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094765839 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.124713617 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102311156 seconds)
  done (took 5.985031123 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12990243 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159786049 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10592593 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129998109 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13810679 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110669018 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10367982 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.131645896 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10241885 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.127348492 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116091794 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.115144101 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128896524 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108892389 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103313387 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127154652 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107194992 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104737907 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130180336 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103952069 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.12929803 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107521173 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113950991 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.135141101 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107297684 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104830284 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125397671 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109779538 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113196413 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130298574 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108519641 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108982935 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135936082 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107670368 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126540863 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106365093 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11705141 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.127149182 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.343492296 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103267829 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.1265548 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11001554 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.107107587 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.139266702 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107089472 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106658306 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127255239 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103053562 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112877148 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.12784347 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111750766 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.139014008 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107932298 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106004516 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128845745 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.115083372 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104736607 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.125126752 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106257018 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113413132 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.124120337 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107332148 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.135378672 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105795246 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110168003 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.136539206 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107142614 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10727877 seconds)
  done (took 9.198610122 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133447511 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108563939 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137448127 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117023406 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107003284 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129214099 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107405003 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.128550423 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108837916 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112834079 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128485845 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.227374167 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.106911062 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112756387 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130074808 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108490367 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108182358 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130361457 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10825525 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108454466 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128685535 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116334607 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107066809 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137209781 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119142348 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.126204214 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109440335 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108518399 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137856366 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107696116 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139137191 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10817692 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107695874 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.138484295 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119810636 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.109142256 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123960171 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108346044 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108074861 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.134213702 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105675358 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138014668 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109447881 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106017984 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.129947553 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109996236 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118127502 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.142289553 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112998919 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134186121 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109623947 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116773948 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130876235 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109804282 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116454687 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147388286 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117458885 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.139466525 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109929729 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.137718113 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118269925 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123035666 seconds)
  done (took 8.426448705 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102550749 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102799803 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100518068 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122102645 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101507602 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100854781 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121654657 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102036548 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10048527 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.102331268 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12307254 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102556775 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101436835 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12164577 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102140841 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100599821 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10155473 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122007457 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101687396 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10123579 seconds)
  done (took 3.005083211 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111483117 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117776737 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.125188233 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11057298 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104078567 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.132042066 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104316215 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104186547 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103695768 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126191562 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112963774 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.133750508 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10404509 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110632349 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.133439919 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109402734 seconds)
  done (took 2.716467187 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122263071 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120053219 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.21127981 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106553302 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127890546 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.112676969 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104319259 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.130741964 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104240168 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.110483933 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129757638 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107424 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10465048 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.12558141 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106396215 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106450807 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102299155 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128947505 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105086828 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.216734017 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107700872 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106659333 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.128258543 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108085784 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106679116 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132233943 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110419282 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104140129 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.130689077 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104546626 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106717285 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133944998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104070114 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108968242 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.126956107 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.1058736 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104590561 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125807781 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108272132 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104926136 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.128091671 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10753725 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104982327 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.12868817 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.102800748 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105664343 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103478934 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131382904 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104489976 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10598492 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.12742983 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109637353 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109120013 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.13422291 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111318025 seconds)
  done (took 7.342593586 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116873311 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105989792 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138340557 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103853793 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105690179 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105949791 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.129321676 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106982351 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106038991 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.126084336 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107732865 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.107021402 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127997308 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106080733 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107194702 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128692498 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10332064 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10588475 seconds)
  done (took 2.917968479 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111093606 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106000401 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109228512 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127480885 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104670023 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10521479 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125698014 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104464445 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10433126 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.126467414 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105641195 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105095698 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102831957 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.127283258 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104999911 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104540676 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.128081355 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104230684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104892428 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125638436 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105673821 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103525161 seconds)
  done (took 3.327513058 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116062125 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.215220849 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111999871 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223636503 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101429194 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.123761672 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111429067 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101825929 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.143490361 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.101125325 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099979271 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.123812327 seconds)
  done (took 2.454441839 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132212784 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142141477 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129058745 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107527212 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114348373 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132206716 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110621755 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109615281 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141518597 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12091968 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134050252 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117346992 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11704893 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139428083 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113767574 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137275051 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109654712 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109063283 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128092668 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125371393 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110518764 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140324473 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109851309 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131307961 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110517296 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118067812 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138939206 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121318212 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130925391 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118268863 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114039193 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133003882 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117346529 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143264152 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106819792 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118182897 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133069449 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124315607 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11563507 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141029123 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10770882 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136423709 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119114467 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115579276 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140926795 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11017471 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136960783 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111016127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110515873 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152791851 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115348708 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13981702 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114221269 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118909449 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140424026 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130565702 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144362956 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11767467 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135187484 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121079891 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11897421 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137488458 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117506561 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143578788 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114619916 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118244494 seconds)
  done (took 9.100515545 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145759386 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107122408 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132804867 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122776557 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141561823 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111157118 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111432189 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132611247 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111418898 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106768834 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175879887 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111141468 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141225158 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119257861 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110082193 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134303028 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110413139 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118572615 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130407055 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132827368 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13340148 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119897071 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118833979 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141759168 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121582615 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137131885 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110913774 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110059568 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133160312 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110252515 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114904556 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133289343 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118623972 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.128631463 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119294933 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11130624 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134335847 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116688117 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111181859 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13829871 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119196923 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147584103 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110944781 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110743183 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143406182 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11054213 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133831323 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108793329 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110399587 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129108957 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122348542 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121253149 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146164291 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11848586 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13449679 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111034879 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110783244 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133516237 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112250231 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114874406 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141641067 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111317387 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155099011 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111558964 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110504791 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140944446 seconds)
  done (took 9.083888766 seconds)
done (took 171.839309274 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.176779324 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215454541 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.197687929 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158403904 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096427476 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.154737861 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1307784 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200042395 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096122259 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096855747 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.119985336 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.098537001 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163429683 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.119527274 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.098134823 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099662291 seconds)
  done (took 3.106570253 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197649299 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.344459289 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111875051 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.124566934 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10319338 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101084451 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124474419 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103433926 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102211017 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.133199092 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101715209 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098075003 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131384886 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098885277 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102908803 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123645937 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109224722 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101594542 seconds)
  done (took 3.210902435 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120538779 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14505265 seconds)
  done (took 1.162760384 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130953401 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.217750847 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296491987 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173668072 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122454274 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14320477 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15216542 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136376886 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191179864 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.138457356 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114213158 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099670876 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149080688 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.108108458 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.13996536 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101082965 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.130810529 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.139606966 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11729603 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103526476 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.148782569 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104290079 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.108738455 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139997582 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181761621 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.138416404 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105208162 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105522482 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.127022442 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115461244 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.13088307 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120740257 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113928642 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182236485 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104882824 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179630243 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132247041 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.104111293 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115815262 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.123994252 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106972067 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105643136 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138117864 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099772012 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105350618 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130441597 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105560058 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105794829 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131554517 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109179219 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.134073043 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109703936 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177048043 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109963954 seconds)
  done (took 8.054388333 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.889751217 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149242969 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10147016 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.027348808 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146387384 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114745659 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.875544321 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149466202 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.261447576 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.899940035 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118358641 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109666485 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.265536926 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260504776 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.29391969 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365369748 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.736520138 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114046392 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133280594 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165629978 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106989846 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141453731 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117408367 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517591074 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102499589 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101442527 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130168915 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110571544 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181112731 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102127996 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127736684 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175130268 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294205335 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213798878 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102111885 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123026301 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101297062 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188883538 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.28087711 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222712518 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.197003061 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100021175 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100407411 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127498772 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117281502 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099774519 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181191086 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195964064 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191196968 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106982645 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110392359 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131922477 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105471579 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180305637 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099517985 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36205673 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.387144305 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102129404 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107545688 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135949206 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279580049 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103061682 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240834182 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145883369 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219924132 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102468269 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.887910191 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188310687 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10110127 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107089112 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129184613 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108645344 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10491409 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191029753 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.499937107 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109022263 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106381123 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123736626 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239789502 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101975857 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101966938 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184425692 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102999146 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130403236 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11032825 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108470134 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.18989271 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.274532527 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109238298 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13028994 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107608229 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112247517 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.125659386 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21967514 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.253804301 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.155458732 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23575333 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129683099 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160194507 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188112555 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106734719 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18999309 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130232884 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114793344 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10588812 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226644833 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.160254066 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103649636 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129932911 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108964844 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160708664 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106182841 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108786937 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190458355 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.557104174 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18733688 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0992721 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107814925 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130288083 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160893097 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133548108 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273465452 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109795907 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18951909 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107691652 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.122080129 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109744357 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184068075 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109441112 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109629657 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128926026 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112009644 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.284116628 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225789311 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110408927 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255491845 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.203006349 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10807186 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19395714 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108757386 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192495629 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135557725 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108222237 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102550824 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.877211917 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136944623 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10852124 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107453688 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.207861213 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102401205 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128015836 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102295511 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100216432 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.861660525 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129086975 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100286079 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104762094 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129375836 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108834694 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112000039 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129146983 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15794429 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269865183 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112208254 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107545194 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124666968 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161656038 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.128042535 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103315729 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103860933 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125396342 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10947128 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107446195 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127967684 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170815539 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178801964 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.233742912 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.657664539 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.128075134 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102250906 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245292405 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102986159 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.35164167 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109747734 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237194652 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188479548 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101164388 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362317522 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188328767 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.209469621 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107240429 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19414854 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100156619 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110251771 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181228008 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12678444 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110820659 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179135413 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111595613 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109693024 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.305607554 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103194327 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259872692 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100432938 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191601856 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104420617 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108915338 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351918676 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103690593 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116124147 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180323435 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108490933 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127014709 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.629948705 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104139832 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110800874 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130730264 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23887021 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.1876 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110086331 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109919311 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133903338 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158784406 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.238056916 seconds)
  done (took 48.296580152 seconds)
done (took 64.723268909 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.25945883 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171472494 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.375821373 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.154535886 seconds)
  done (took 1.948862943 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.272017876 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.170772173 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.256968715 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100741992 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.262210776 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100544272 seconds)
  done (took 2.087485184 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.180336436 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172567863 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148766972 seconds)
  done (took 1.427361064 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212856896 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211869675 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.350891255 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.26289035 seconds)
  done (took 2.048275982 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.28633736 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118956351 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127542203 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.237865465 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.257496062 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210069391 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125706916 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177236174 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132827816 seconds)
  done (took 2.636212363 seconds)
done (took 11.072530974 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.22110555 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.254183788 seconds)
    (3/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.360171268 seconds)
    (4/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.140668701 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.109296117 seconds)
    (6/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.172760134 seconds)
    (7/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.143409409 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115996847 seconds)
    (9/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.234587001 seconds)
    (10/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.403785151 seconds)
    (11/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.265939143 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.241222728 seconds)
    (13/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.278380986 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.319572947 seconds)
    (15/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.22450505 seconds)
    (16/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.315371571 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.239861445 seconds)
    (18/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108897151 seconds)
    (19/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.188367369 seconds)
    (20/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.224521525 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131861726 seconds)
    (22/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.143980028 seconds)
    (23/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.222274248 seconds)
    (24/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.164009695 seconds)
    (25/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.108363536 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112861031 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102451201 seconds)
    (28/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.159285296 seconds)
    (29/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.230147421 seconds)
    (30/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.159421689 seconds)
    (31/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.112062486 seconds)
    (32/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084525315 seconds)
    (33/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.135888609 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119713099 seconds)
    (35/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.313033736 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104157785 seconds)
    (37/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.297613623 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.167166527 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112010835 seconds)
    (40/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.13880656 seconds)
    (41/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.174631045 seconds)
    (42/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080463612 seconds)
    (43/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.16273622 seconds)
    (44/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.110656167 seconds)
    (45/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.191365402 seconds)
    (46/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.210088007 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123534772 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.124706001 seconds)
    (49/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.23628339 seconds)
    (50/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.136288744 seconds)
    (51/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.141599076 seconds)
    (52/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.307204691 seconds)
    (53/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.111408062 seconds)
    (54/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118760992 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.150474658 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.190514505 seconds)
    (57/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084728718 seconds)
    (58/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.081020572 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.270823915 seconds)
    (60/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.173248165 seconds)
    (61/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.234843194 seconds)
    (62/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.217961036 seconds)
    (63/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082090536 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084698543 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124653225 seconds)
    (66/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.106577155 seconds)
    (67/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08642259 seconds)
    (68/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.257610511 seconds)
    (69/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.107560943 seconds)
    (70/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.169141809 seconds)
    (71/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.265789055 seconds)
    (72/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093915593 seconds)
    (73/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085271561 seconds)
    (74/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.221907663 seconds)
    (75/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.174400269 seconds)
    (76/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108472688 seconds)
    (77/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.156723828 seconds)
    (78/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106218899 seconds)
    (79/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079593598 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.129326673 seconds)
    (81/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087568548 seconds)
    (82/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.177834464 seconds)
    (83/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080485633 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.13050082 seconds)
    (85/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.149307258 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124119039 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.1301436 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.110922939 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.132093502 seconds)
    (90/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.083491433 seconds)
    (91/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.104900783 seconds)
    (92/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082028665 seconds)
    (93/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115042848 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102537234 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.13683627 seconds)
    (96/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085350291 seconds)
    (97/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086506765 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.154878951 seconds)
    (99/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156018131 seconds)
    (100/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079210423 seconds)
    (101/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.131002178 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.132222755 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.115338944 seconds)
    (104/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.106350877 seconds)
    (105/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.209665749 seconds)
    (106/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112787586 seconds)
    (107/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081070389 seconds)
    (108/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085623799 seconds)
    (109/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.206888866 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105569396 seconds)
    (111/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.159149751 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106418768 seconds)
    (113/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.143109673 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111450825 seconds)
    (115/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.13975392 seconds)
    (116/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081849488 seconds)
    (117/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.194434213 seconds)
    (118/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.160408556 seconds)
    (119/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081816461 seconds)
    (120/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086956537 seconds)
    (121/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.128343279 seconds)
    (122/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081071171 seconds)
    (123/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194378057 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.134841536 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106904435 seconds)
    (126/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113548156 seconds)
    (127/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08521735 seconds)
    (128/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.112537458 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.107463667 seconds)
    (130/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.08268915 seconds)
    (131/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.141819301 seconds)
    (132/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.111077013 seconds)
    (133/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.08005199 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126900388 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126158986 seconds)
    (136/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.129646434 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105421743 seconds)
    (138/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.141989792 seconds)
    (139/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.103671492 seconds)
    (140/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079904017 seconds)
    (141/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.085447707 seconds)
    (142/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083022979 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115153101 seconds)
    (144/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111228729 seconds)
    (145/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083894852 seconds)
    (146/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110157853 seconds)
    (147/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.133429916 seconds)
    (148/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.167171532 seconds)
    (149/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081485288 seconds)
    (150/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.102068406 seconds)
    (151/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.135305134 seconds)
    (152/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.13376697 seconds)
    (153/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086906629 seconds)
    (154/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079462461 seconds)
    (155/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082793096 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.111616652 seconds)
    (157/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080084919 seconds)
    (158/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.08681929 seconds)
    (159/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.130522021 seconds)
    (160/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.134952924 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103619646 seconds)
    (162/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.083093419 seconds)
    (163/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.135168344 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079948176 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.105503964 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111291316 seconds)
    (167/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.107300785 seconds)
    (168/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.086011983 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127077815 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105715036 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.109939328 seconds)
    (172/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109851064 seconds)
    (173/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.087122909 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106141773 seconds)
    (175/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.110151455 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.107924842 seconds)
    (177/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112712869 seconds)
    (178/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.125853384 seconds)
    (179/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081410603 seconds)
    (180/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081168659 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124357738 seconds)
    (182/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.125906132 seconds)
    (183/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103338372 seconds)
    (184/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11446157 seconds)
    (185/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.154267087 seconds)
    (186/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080260802 seconds)
    (187/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114424018 seconds)
    (188/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.08476224 seconds)
    (189/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.08306847 seconds)
    (190/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.104951413 seconds)
    (191/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.085968413 seconds)
    (192/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081976336 seconds)
  done (took 27.534088546 seconds)
done (took 28.467413285 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.224336842 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131495056 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112983464 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11259808 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.232628393 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120522787 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155198085 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115416135 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123335116 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137935348 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102707628 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126174772 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.139655728 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.207974025 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.142048309 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105273396 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104434153 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.15014776 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129890809 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129820609 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.232224627 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105309444 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.14988327 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105548963 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235348266 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106239894 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112251846 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140465209 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127183617 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114651149 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.139798697 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10495359 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129599114 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.154524778 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104247359 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.115072744 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128467562 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088116462 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113903135 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113964866 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150857448 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114456273 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113099795 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.130016881 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113685554 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112379116 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128196979 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117840559 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103238475 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.138611087 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107071461 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129461412 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.136978388 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.10383273 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103286186 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129864909 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124628152 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104678594 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.149306218 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104661725 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106424887 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103284003 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.142712437 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106089401 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11262617 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.128684178 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114613059 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114740775 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.138570758 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106594928 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103379094 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.136306313 seconds)
done (took 10.225633563 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109866496 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148255315 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.233513076 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.23961899 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132423399 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.148081516 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118736459 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128422046 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144135491 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123540485 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142025165 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.16130644 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.240724267 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121987215 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120491724 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.143080707 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116523386 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113837692 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.23965758 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.155765329 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.129260921 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121069891 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156163635 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.125580698 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108923779 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.167995204 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112119149 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116655601 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.132684119 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117998788 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.152701151 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110885305 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111899116 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.150816307 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127620094 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119200028 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.146395302 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119178528 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109230631 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.132294123 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116490053 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123689145 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.133859931 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.12295529 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118107851 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.148901303 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116672097 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120940868 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.135367716 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117305625 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110764352 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157556903 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.12189992 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125879568 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.145136931 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122093055 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121508039 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.147026612 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112460589 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120905883 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.133430076 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110264844 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110944804 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153971645 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112581297 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120902707 seconds)
  done (took 9.895955387 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129757314 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139191239 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144625199 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120091027 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113853687 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127212672 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102935152 seconds)
  done (took 1.856837812 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105104238 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246195804 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219057028 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.245014767 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.244214822 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.257071703 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12812537 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104597514 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.168838066 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116051031 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247279948 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.273708864 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.115432053 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.147439419 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.221759916 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.13141066 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.248494499 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.105998584 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119239906 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.248968165 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121452589 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.164702801 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.119369464 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104766467 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.239959776 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.106681812 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.293629046 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151789677 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115711741 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119080376 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146445554 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.185264502 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.242718841 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.146918731 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116792417 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.247267241 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.21676947 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.147933963 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.257548167 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.110107223 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.243638602 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119805829 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120980093 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.147385948 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121497425 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.233888527 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125272141 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.12058083 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.146208916 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.251790301 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.118171728 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.246111743 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117612569 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119131778 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.143732874 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121352665 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126730271 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.148209261 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.22633001 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.150242988 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245711861 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.219695362 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.24553261 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.248311127 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129140459 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.247240406 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.233972025 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119852228 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113166129 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.148078194 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.248991179 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119868484 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117580151 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.237353489 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12260543 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.25236482 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.249367826 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117517145 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.145610416 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11026038 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118833469 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.131435467 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.212322006 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.147347668 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11880505 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123658316 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147348641 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121026131 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110382986 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.157044055 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.1196241 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.142184733 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12718664 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120827245 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148431671 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.225181894 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.145568056 seconds)
  done (took 17.270168179 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108888279 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106998642 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111654171 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.134267436 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108651534 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.107030102 seconds)
  done (took 1.678037739 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144866592 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121123837 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.155516868 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12210781 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.193439674 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.227158307 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.259453336 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113903898 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.166472925 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132571562 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254429679 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257768118 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.255761003 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125093995 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260083503 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123900359 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261565615 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.120589622 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.156696452 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118381771 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.119312183 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.151518905 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119123762 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246516047 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122161551 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122299955 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.141594099 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129483122 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153946547 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.116647117 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124206945 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145936444 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.113396625 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.115006903 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.257280662 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112344043 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143498513 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122935599 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122851862 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.148224617 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.260282505 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118977572 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127197301 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.151585154 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.115557522 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.113111816 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.150482717 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115171343 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.261072117 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123556286 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.151790142 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122394461 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121156908 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.152329331 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113765525 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114701237 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.151090041 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.261702566 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126584491 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113213817 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.149479704 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.124060603 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114844865 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.153729639 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121791425 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123585882 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.139733117 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123190999 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138761102 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.147148295 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124431193 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.12210724 seconds)
  done (took 11.95553714 seconds)
done (took 43.625396397 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.713602746 seconds)
  done (took 2.714802647 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.096823526 seconds)
  done (took 2.101159236 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.973892161 seconds)
  done (took 19.007001348 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.439497386 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.479139961 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.171185756 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150227704 seconds)
  done (took 3.244593076 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.84537684 seconds)
  done (took 1.871027465 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.345488345 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25745886 seconds)
  done (took 1.612506897 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.714783027 seconds)
  done (took 1.737774575 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.745557429 seconds)
  done (took 2.756150325 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.294204293 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.250034263 seconds)
  done (took 1.564694554 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.662376367 seconds)
  done (took 1.681508214 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.995958652 seconds)
  done (took 21.020047205 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263365828 seconds)
  done (took 1.291227835 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292734563 seconds)
  done (took 1.318908255 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.599619599 seconds)
  done (took 4.625886779 seconds)
done (took 67.562867841 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.12299164 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124774914 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.148270533 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122171792 seconds)
  done (took 1.533449956 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.126500296 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122352037 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.150555251 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121132917 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128304877 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.146307916 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120915338 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122445738 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120018746 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147364162 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121448065 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119863413 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149408682 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119850608 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117901399 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150675372 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125152702 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120867811 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.148377647 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.123254545 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121173679 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147289538 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12437594 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12242128 seconds)
  done (took 4.147982788 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117920268 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.111283767 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112818488 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135899274 seconds)
  done (took 1.508705 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128792383 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132466817 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15438382 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128398764 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132721592 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156963752 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120382502 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117954504 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145897792 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128504084 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136483268 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158966467 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132149025 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121563557 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157061237 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115788431 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121561484 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156607305 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127218928 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.154080817 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.122930383 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127422615 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.15094887 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130066556 seconds)
  done (took 4.286746373 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.197375207 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.133889216 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.179830659 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166127507 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.18109338 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119235856 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148692906 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.152590476 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.1270969 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.149037824 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.124273187 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167586871 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.154635725 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121568269 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.121729219 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150945586 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133813263 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.152436613 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.167227811 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125748456 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153977648 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.13185409 seconds)
  done (took 4.294655494 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.124952907 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11093391 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.135395204 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109338396 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122795215 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137873572 seconds)
  done (took 1.777358359 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110806153 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105280383 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106160265 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130334299 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109961915 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.106175599 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.128867385 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106039727 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105896676 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105468575 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.13104389 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105284628 seconds)
  done (took 2.381642421 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208216641 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148800371 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257676048 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39644675 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191515082 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190933807 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285170311 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190968089 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.209631041 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140140991 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216557395 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16421173 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182688186 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188263671 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169672988 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158986489 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19710249 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210997956 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172104788 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242790707 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159878964 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205609145 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1925882 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177771253 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14294591 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193507533 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122679336 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15672859 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170981579 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194858038 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205757839 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153768647 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142456749 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223885987 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262915406 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208670975 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273208056 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136497633 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199775052 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191802191 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26259581 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169978903 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222634004 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155287306 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131799968 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214390256 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185655055 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187613703 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.164932259 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147426015 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217886341 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208818617 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.174003975 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164790477 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30263918 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16285175 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144488164 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208632432 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216926433 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203336371 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209702282 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.125000449 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204197916 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219947902 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245231132 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145986779 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.195157289 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127370651 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192615581 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207798925 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212683408 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161090225 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.241428259 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161130847 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174193849 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197806232 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185460254 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20901707 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20313891 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121502096 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182409508 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136427344 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129047871 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.2187276 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123809469 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247113165 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132916503 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343850978 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211400316 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15687936 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191730628 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191151426 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164612008 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177326684 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103042996 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144241148 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.190253899 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160027798 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157966444 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157838599 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17073009 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128249955 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18282161 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125844134 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172139623 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.163270982 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16522657 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202438783 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132698403 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210520575 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15067316 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.191840971 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197970314 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193992021 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159844409 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134928403 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249411947 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171778802 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.166168225 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175035259 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224138181 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178603601 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137035317 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195698857 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195167364 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172171941 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200525965 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169050235 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136803748 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169025755 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175036914 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191692241 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161525609 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158639704 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.166278848 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221366646 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12807265 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169245102 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184587863 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16273073 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126271804 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167805347 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139132531 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.144962564 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.177786465 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.141530016 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185690944 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167557168 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19456612 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160602671 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163753516 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205385953 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134708365 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169999926 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177600502 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120885156 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.205950773 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227170244 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131660436 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210786277 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163887103 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212162055 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202189739 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132082045 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184918157 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159404858 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122080366 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194546246 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170913091 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194588364 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.218165587 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182050028 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.193967196 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.194640081 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151035228 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200226637 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185285563 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186736495 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144042224 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205745456 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200066513 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12319627 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124777848 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.156699036 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139646774 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132990751 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167266422 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183584613 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196444944 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207267614 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169994497 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168603155 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194216509 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.155657737 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162604838 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20665712 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140534854 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.219956016 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222169505 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181770247 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170132419 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164698454 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.150632876 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128503231 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135070971 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190990202 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139177455 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165335787 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143428456 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221738781 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203547713 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151884576 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219962012 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19619824 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202927696 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.149897885 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.165963807 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19767192 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170501186 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189206561 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16006618 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162453711 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22228603 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143648998 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224399014 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198840172 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181185015 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227145142 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.194082506 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134277293 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149130641 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191008507 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140619892 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193346568 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147382603 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161061747 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155708571 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.168547866 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142577513 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220338601 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146482974 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210360711 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158266327 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20306133 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125949723 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172878355 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202191156 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148663461 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106307796 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202860283 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225417484 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151602406 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186726145 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175036579 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158833849 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318234486 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218591684 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179906879 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167890814 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140334277 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201744651 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163254872 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192837835 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187296223 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171238688 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239109819 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176666052 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.172734275 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133056955 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150263238 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181770606 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.139982987 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.183253237 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.191730301 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.148059809 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220342156 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139429303 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199710238 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178181155 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.17546427 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.154091286 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141273876 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256651033 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201750204 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204382635 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.165218975 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195862665 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186419287 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125654633 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156910244 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133372478 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21698695 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131587962 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209374649 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193516349 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186419165 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204145793 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163598611 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172658738 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129803525 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198253651 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152503718 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216608869 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13724876 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.167471427 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221459575 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129806932 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131893961 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192377117 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315129743 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152430902 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204035246 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108233502 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309424162 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132294904 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135130143 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192032172 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173222647 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.163588334 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186411301 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205730657 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14190404 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191138557 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137659119 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208970453 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185945873 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198230988 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207802429 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147896497 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193724026 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163588663 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206927768 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147497198 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.179319281 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160977481 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224801802 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206257877 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134010195 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170416111 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200082884 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2011369 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177924501 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170697944 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185979906 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157432729 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168977559 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169043715 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127222754 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163226291 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197923583 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158971601 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18005214 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202019903 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134341156 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128464467 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176899971 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167584647 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172870594 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.131204289 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218209093 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.131086473 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213633145 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245575409 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132311031 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195554213 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148661601 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132530105 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168381148 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146620219 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162700067 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.177409475 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211931875 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135144802 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20776992 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16847238 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196211815 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159549969 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174879344 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.266574179 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.158240226 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192188035 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183634693 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199598685 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183717156 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179382109 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200816319 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15295034 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196161963 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150787139 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.252046268 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196148577 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169642231 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132816128 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173553003 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140079281 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.165022072 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154973448 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200944532 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144460723 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138427742 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.199261137 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147222567 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.179504054 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142686729 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23122192 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181281288 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191896543 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219782857 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139934428 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207233309 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208282708 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130972979 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.196750833 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177047838 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173107676 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155969908 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135912718 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.169636427 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246282388 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.128320538 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162365603 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20650101 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170224869 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203227382 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136339941 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210391404 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142631062 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209000671 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130336179 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.183969679 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172073371 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166489559 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129324097 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203130847 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164591924 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.196977001 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14457683 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179998183 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222603921 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125954308 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166301862 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313587389 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16691389 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226826616 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138378427 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13842522 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179868342 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161499167 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.200178396 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202062788 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134573621 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131341359 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.176771842 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159853234 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.16914208 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171548077 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213589977 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165146535 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21723343 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13838548 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286405845 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144275793 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202930345 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.119352382 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130788005 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171564963 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137153533 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172961579 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211367006 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218754694 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.194786072 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150285903 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165274441 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.130122968 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133628137 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195106661 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153371249 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199565769 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149783543 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.132798215 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144717519 seconds)
  done (took 86.808510805 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164157598 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15467821 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171248704 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225097957 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19869015 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294131982 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231173056 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24846795 seconds)
  done (took 2.814263432 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122015153 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162875064 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144321525 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146329398 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.112235764 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.492240478 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.163260944 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.123554251 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165206994 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154888289 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139214712 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.581973414 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118629188 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148096543 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123824554 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138437213 seconds)
  done (took 4.155347314 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.319602402 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551534689 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.15110705 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.290311552 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.271952565 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.215212042 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.79331624 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.211769533 seconds)
  done (took 12.924793834 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.177405603 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.173402417 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.456527212 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.316522671 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.18688104 seconds)
  done (took 2.441420214 seconds)
done (took 130.093185537 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.12808907 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127515071 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.126311087 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.158826883 seconds)
  done (took 1.661054513 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195625695 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092855447 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094844236 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120443969 seconds)
  done (took 1.634216623 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.467255653 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093012212 seconds)
  done (took 1.718494244 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150743405 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145220145 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.17171503 seconds)
  done (took 1.611439402 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138691841 seconds)
  done (took 1.273219835 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120807632 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.133961548 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.278805198 seconds)
  done (took 1.669586603 seconds)
done (took 10.706441921 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123307699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.929984064 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.436075259 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137774038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.714861096 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430831797 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.431807216 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178549172 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176284695 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141541719 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135058922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693226859 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.447998532 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.878972396 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.401215378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.90558545 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69903305 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114533667 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149654908 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114655527 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.414907646 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.14164633 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114916141 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116054631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.725831833 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422192408 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112396809 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.916885547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111765498 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116845089 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431146045 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113509678 seconds)
  done (took 21.107058783 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115660917 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171942658 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149830326 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114713639 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11620828 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144194927 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125089907 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125952794 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209543901 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113289417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.166292977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112893507 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118716522 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142233119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138184521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11290027 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145302721 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116413485 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122830561 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.14403585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137271219 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113032352 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.144394032 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117795602 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113884404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.164293919 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113633657 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125294066 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.14188543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118572357 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117919188 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143546924 seconds)
  done (took 5.401347147 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16222102 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180857263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151238495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15112059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193136685 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115549574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.229537772 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151634668 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210258456 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114217713 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134952456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141696449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153869836 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113832755 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.169182237 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113354192 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116575142 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145271909 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120770397 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11526664 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164563772 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113082691 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11509853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143984388 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113900497 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.164696769 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114129058 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12663983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141707733 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119348232 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118752214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142906224 seconds)
  done (took 5.707261447 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129390842 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128044432 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1357953 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16689006 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122864507 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127096744 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157697399 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122778945 seconds)
  done (took 2.232100966 seconds)
done (took 35.588564167 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138570031 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130133338 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134376292 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158957108 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.256485465 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122275245 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131054077 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119627448 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.162132609 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135849766 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112130591 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.151680544 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134213695 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123932518 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.256748141 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.129193865 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.262839433 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.260633709 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.122008543 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128341644 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.15426955 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233113434 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.15814342 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121533304 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.256983821 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117630152 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.253067174 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125476894 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.124520418 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.144666908 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.229029986 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.15860863 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.12291261 seconds)
  done (took 6.503798294 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.240660385 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155212586 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.124581962 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122148068 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122531442 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152705267 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.246688914 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.15285004 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121254323 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.121086386 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.152307014 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.227716134 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160925322 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118531143 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12354075 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110977834 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.278955177 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.157122546 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.114854035 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094856815 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.119200809 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.152404306 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.260475955 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149753221 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122606494 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.123354857 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.154348447 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.127300346 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124499305 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.12364281 seconds)
  done (took 5.712527503 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127428428 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135518791 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.170322183 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.190806745 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150931764 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164853874 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141816503 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133337995 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175258776 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116206247 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.132339291 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182074877 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133199182 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126377278 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146645895 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13364287 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130944322 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146705475 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124447113 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133882082 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166519285 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13343434 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14034918 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155648073 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11461067 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124143614 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.156740184 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.12726327 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124268771 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.160892963 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.117449189 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119916102 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.14804646 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.153471666 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116952007 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.160493532 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138552595 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128875221 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.160381091 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149014656 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118964831 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.149007506 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142642257 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170993362 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.148926438 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129230543 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128408883 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.163379886 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.114658145 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136143093 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.190173718 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116079844 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136902669 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.145486806 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114679523 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124474317 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146697534 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120477866 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130731669 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.147280868 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.13771783 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124439878 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.156092984 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118783242 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127638821 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114385081 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.144727823 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120869819 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142682955 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154273267 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.154155286 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.116411841 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.157951475 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129444086 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127675554 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.159106284 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.115864881 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127933568 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.157241353 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123881577 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129409992 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148605819 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119475541 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.133579613 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.167308759 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.132447079 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.128350884 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.159292688 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121365565 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.118019147 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163501055 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118158423 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121374362 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.128747974 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.148482098 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121018979 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128431232 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.158824103 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114480222 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14217624 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.150973216 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117328835 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.142254413 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.14958945 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12273804 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12602374 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.18773884 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116326774 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127539001 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.159956753 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117548048 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124420939 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.147887884 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117271375 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131879055 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131466595 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.155505678 seconds)
  done (took 17.376216002 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.35954065 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.348790569 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188327164 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.432672442 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129508943 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.277150184 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.34758013 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.354225883 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116509985 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.1834636 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.18079342 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.31296661 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.149141887 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.146442687 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.353072316 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.402362094 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.179377555 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.156896139 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.18649247 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130764638 seconds)
  done (took 6.100604566 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137860285 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152227534 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169146938 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144975808 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.127580318 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164291892 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117265497 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138085095 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.158363981 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126682526 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.119358593 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163648039 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.132139707 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133434134 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162710072 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149511171 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124263943 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.153039042 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.14058563 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122231266 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134310602 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142916137 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125169476 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169586379 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.136698731 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12695492 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.146640263 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123152463 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123993711 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.156061428 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122071735 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136510725 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.15560143 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106557912 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128029115 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.161765912 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.125262231 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120529456 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121176015 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150850647 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131885469 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129652433 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.156582981 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101645759 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135883975 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111467141 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.161149528 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130574559 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107025151 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.166925022 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130735991 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130999695 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.152987783 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.140612302 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123980482 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162974049 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129282547 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130953156 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.151852979 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116593519 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114807202 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120257427 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.155998708 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131915833 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128835894 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.16780404 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.133954073 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116497454 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.151643042 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12149514 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120047904 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.161982031 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138229473 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126031091 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.154746372 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.128894206 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12435327 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125129168 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127392109 seconds)
  done (took 11.989318636 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141658093 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12781806 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.163019898 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.153214594 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130913746 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.153487268 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128241993 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.140605764 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130735918 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.166939556 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131663254 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130698729 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169719858 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.128124343 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127425133 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163950021 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130830658 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.184692637 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136203931 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144429445 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.16201436 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123141664 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129764543 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.158903878 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147525901 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.129042699 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.17428957 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.131459825 seconds)
  done (took 5.226843101 seconds)
done (took 54.057245037 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.335812162 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.504469035 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.277571487 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.275990747 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.308360727 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.284869105 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.27834934 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.28583946 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.828525448 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.246366253 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.277575772 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.276099544 seconds)
done (took 29.35648904 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.355775125 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.421735465 seconds)
    (2/2) benchmarking "String"...
    done (took 1.605871311 seconds)
  done (took 4.200412313 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.268157115 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.268392517 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.514908352 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.268274512 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.269017392 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.268560048 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.274695129 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.273099352 seconds)
  done (took 16.30583347 seconds)
done (took 26.302018075 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.317042239 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.458651336 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.511585981 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.247990979 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.268038048 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.285968764 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.291261236 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.292928899 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.274438774 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.252109561 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.690975008 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.525521598 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.286833186 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.634024547 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.250583125 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.276061051 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.295055758 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.507039507 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.269037791 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.302759438 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.249383386 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.249818962 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.305094598 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.271325915 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.277185788 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.27341703 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.262933418 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.27264274 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.460592291 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.311079165 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.304417367 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.271532256 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.25283975 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.279650611 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.27047529 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.28244557 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.459249281 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.278230949 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.257062918 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.29651342 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.47307937 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.274891985 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.271297888 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.277594652 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.249781283 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.314957972 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.258740578 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.405520987 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.293767543 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.279871935 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.27489358 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.639128718 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.282367993 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.282448895 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.275354799 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.494436609 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.294705247 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.321977467 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.296086392 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.282356034 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.272460621 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.272307628 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.296900747 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.293081477 seconds)
  done (took 147.973886813 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.272756325 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.27690588 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.271387787 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.294076484 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.275402909 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.278140953 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.273600829 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.273103557 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.278117059 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.304203239 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.276713557 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.274746972 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.276978164 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.226722934 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.283566739 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.294540113 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.286984925 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.279956564 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.287183448 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.274888129 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.297345744 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.275908304 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.292546379 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.275467545 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.316402494 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.355046572 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.283019656 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.303616715 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.284804792 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.273656808 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.276402849 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.282913821 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.92487569 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.143906505 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.281345361 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.306788122 seconds)
  done (took 82.908842938 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.275361382 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.27536485 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.27546639 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.307454782 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.273468087 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.880463893 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.864889277 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.242906675 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.57726089 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.667865568 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.513073117 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.275182884 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367978359 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.285527393 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.277173916 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.370900984 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.302087931 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.276259596 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276504997 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882077653 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.292532368 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.503970891 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.457614209 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.293259446 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312428093 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.670047789 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.275691927 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308352943 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.611452181 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.326516767 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.278539706 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.659990942 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.709332958 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.388079431 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.278591068 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311267582 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.277486319 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.560997764 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276479501 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.2779447 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.278600678 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.944745256 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.279375041 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.883509755 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.282331711 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.243558717 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.278282009 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.27667464 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.279158115 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.032478827 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.282869419 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.277504996 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.281062682 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.278551686 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.278338935 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.308578678 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.276176519 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.15156329 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.279345973 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.281844 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311482132 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.277648923 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.648828424 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.282443449 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.044962876 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.339528803 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.391026076 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.868934301 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.278632462 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.375152078 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.398802265 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.279605297 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.279275575 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.281112403 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.277556832 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.392404669 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.2790309 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.278969344 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.981957444 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.458754207 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.297312588 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.747349226 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.383079008 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.280061766 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.656008884 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.282793683 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.280444697 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.012121927 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.281227134 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.280381222 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3746681 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.280683818 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.279356063 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.280780128 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.984673316 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.890138501 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.559687861 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.284677252 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.793523626 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.283840444 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.158675484 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.861950532 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.926467424 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.282320544 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.280678314 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.393331974 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.461186883 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.298225365 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.280649526 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.752711362 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.285413306 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.335226102 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.281487996 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.683262269 seconds)
  done (took 386.71407908 seconds)
done (took 618.770380205 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.153199165 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.104239263 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.259295502 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.118651491 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.099049207 seconds)
  done (took 11.91604516 seconds)
done (took 13.10027252 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.477848603 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.474766982 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.344499594 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.479870114 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317346379 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.496072625 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.462220713 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.300643823 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.391381168 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.367010593 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.397960046 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.337002274 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.316792331 seconds)
  done (took 19.341862962 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.568625498 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.294455489 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.349638862 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.547029376 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.328976989 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572789728 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.612613529 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.29645586 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447544909 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.328696838 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.305623655 seconds)
  done (took 18.834786298 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.604921668 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.294367225 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.369830877 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553228198 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.333834576 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572155628 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.609488112 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.296902287 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.467016918 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.308697763 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.305395175 seconds)
  done (took 18.898940752 seconds)
done (took 58.259590014 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.324853516 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.383666589 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.31851497 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.302905078 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.303052747 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.302540323 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.306825043 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.303653528 seconds)
  done (took 11.731015867 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.301518425 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.300832987 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.302271174 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.301864026 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.30131907 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.301179759 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.300537164 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.303437717 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.302459717 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.302871395 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.301676436 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.301501803 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.301709552 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.302358372 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.302743405 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.302890558 seconds)
  done (took 22.015757657 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.305520783 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.302747165 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.30247449 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.302042 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.301975357 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.303406953 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.304341795 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.302631848 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.303868558 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.304526234 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.303604189 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.303665369 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.303374076 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.302763237 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.302908133 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.305323421 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.303341308 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.30297096 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.307275995 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.30305106 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.303887325 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.303093892 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.303327487 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.303263061 seconds)
  done (took 32.469701084 seconds)
done (took 67.4026058 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.288305843 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.316185298 seconds)
  done (took 5.791360925 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.364107516 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.36201125 seconds)
  done (took 3.912249037 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.304145321 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.304525464 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.306445865 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.304597235 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.304950187 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.305662277 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.304605326 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.305922145 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.305684732 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.30517266 seconds)
  done (took 14.238413936 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.30513334 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.306220409 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.306309212 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.304363743 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.305146762 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.305598895 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.305246833 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.305283176 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.30560584 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.30602532 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.305711902 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.303901876 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.305813948 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.305297239 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.305274351 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.303282749 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.303386875 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.304013841 seconds)
  done (took 24.67873249 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.317027883 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.323924171 seconds)
  done (took 3.82907034 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.431425561 seconds)
    (2/7) benchmarking "second"...
    done (took 1.345476969 seconds)
    (3/7) benchmarking "month"...
    done (took 1.411360447 seconds)
    (4/7) benchmarking "year"...
    done (took 1.40314645 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.346765606 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.326779485 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.348137789 seconds)
  done (took 10.800588332 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.293768645 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.587964485 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.761554972 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.453947935 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.285083216 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.312840938 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.271018577 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.315070599 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.315351531 seconds)
  done (took 14.784806159 seconds)
done (took 79.221548182 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.291677195 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.332141167 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.317631385 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.305617517 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.601699092 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.326967934 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.295428631 seconds)
done (took 16.663607625 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.271914907 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.275202664 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.287407024 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.31468444 seconds)
  done (took 10.336798345 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.291299235 seconds)
    (2/2) benchmarking "read"...
    done (took 1.620249569 seconds)
  done (took 5.100275347 seconds)
done (took 16.629128921 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308928414 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.30782018 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.307108137 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.3086415 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.30837465 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.308138232 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.308684749 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.307172379 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.309066643 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.308877413 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307799221 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.307903534 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307868955 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309137026 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309285006 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.309975804 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.310421288 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310180706 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.307678875 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.308073276 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309512084 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30782615 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.307627876 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.309415989 seconds)
  done (took 32.595805331 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.30786067 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.30836554 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.308227728 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.307684496 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.309840151 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.31000912 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.30880135 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.310371104 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.311102947 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.311568564 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310343216 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.310917664 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.309427035 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.309808598 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311199658 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.311936194 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.311311868 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308295225 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308040328 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.311416349 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.310211103 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310528837 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.31096683 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310062906 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.311111376 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311181615 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.309758759 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.309012346 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311160051 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.308646876 seconds)
  done (took 40.488795989 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.317839315 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.316112507 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.310935537 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.309914553 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.30983893 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.309591749 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.311051705 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.311008466 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.310077328 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.310961301 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.310485619 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.313327994 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.307620734 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.308753643 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.308757797 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.31071177 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.310572538 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.310766485 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.311871418 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.312539472 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.314423515 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.309319723 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.311999886 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.313893045 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.310605627 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.312764154 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.312541657 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.311397192 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.311425994 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.312208916 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.311127647 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.311436223 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.313227376 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.312088849 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.31438638 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.314613636 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.31854017 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.318537482 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.313740621 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.312424144 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.313046246 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.314829555 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.314789014 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.312332259 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.31206153 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.312904826 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.314178279 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.310085159 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.315041034 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.314610949 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.313645559 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.317082191 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.314019849 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.314967504 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.314370031 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.313948855 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.315255585 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.314036277 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.315479214 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.313529294 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.311545866 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.313923262 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.313007573 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.315001371 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.313024425 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.314521297 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.313779318 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.31271105 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.314001242 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.312146811 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.317150645 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.316334209 seconds)
  done (took 95.721713023 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.31277696 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.31393214 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.3124056 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.315590665 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31476004 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.313481907 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.31625741 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315937757 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314274076 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.316354145 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314267949 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.315080361 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317166358 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315657103 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.317356725 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.315834279 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.316069695 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316796216 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.314976977 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.318029683 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316027753 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.316506041 seconds)
  done (took 30.133615552 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.318564491 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.316566173 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.317577057 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.319927361 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.318817609 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.318836028 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.31851164 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.321564246 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318557139 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31762811 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318999908 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320637508 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.321634741 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317479792 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.317684788 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.320587157 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31817954 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.320628546 seconds)
  done (took 24.936558459 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.318757613 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.317739413 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.31667738 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.317989273 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.317585473 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.318510866 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.317744725 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.320448772 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.315624545 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.317610008 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.318872128 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317334859 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.32058703 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319503586 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319104903 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.318714618 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.316684062 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317481303 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318991103 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318595343 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.322492389 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317705172 seconds)
  done (took 30.201383886 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.318803753 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.320030995 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.319730364 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.319921019 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.319969408 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.319268371 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.319468594 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.319644917 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.319518839 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.317734522 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319017891 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.319208848 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.321965414 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.32034859 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.322019751 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321159504 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.320747106 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.320741699 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.319952007 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.320876213 seconds)
  done (took 27.596799345 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322386546 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.323094237 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.322102396 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.323940488 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.323899659 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.322632971 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.324293229 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.324824697 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.324776263 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.323790463 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.325125853 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.325995156 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32308404 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.32451556 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.323680585 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32370451 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.324684254 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.322946281 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.325371686 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.324675779 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.323749125 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.325722878 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.326481911 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.325613873 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.326350885 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.326967856 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.325339222 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.325799677 seconds)
  done (took 38.283602332 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.325243998 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.324333704 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.323500049 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.323445455 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.323918413 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.324593541 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.323608095 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.326121809 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.326237072 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.324618657 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.323452537 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.325831422 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.325183794 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.323413494 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.325558503 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.325769567 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325073473 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.323737127 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.323841716 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324286202 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.325961327 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326870726 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.323052831 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.324965038 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323856926 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.32568132 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325363415 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.325058669 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325681596 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.327400105 seconds)
  done (took 40.947203388 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.346043689 seconds)
    (2/2) benchmarking "in"...
    done (took 1.341682771 seconds)
  done (took 3.89093228 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.326615976 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.325969784 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.325035981 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.327189754 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.325377405 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.326265247 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.325645284 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32721004 seconds)
  done (took 11.814099747 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.318498384 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.325818165 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.328554746 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.326812196 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.327041569 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.319948693 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.327070518 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.333951901 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.321659741 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.319848156 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.327005396 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.325317884 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.323905257 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.322473647 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.322968639 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.32438417 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.331701761 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.329933504 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.330015637 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.329719587 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.328294228 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.321242027 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.32600454 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.331477339 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.322719399 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.332549109 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.329649667 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.335875976 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.323794147 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.331303779 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.323418451 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.333513457 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.332246392 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.333380876 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.331311117 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.33153988 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.333946475 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.331463898 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.33277967 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.33655043 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.331661636 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.334869209 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.324896151 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.329185422 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.330282251 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.336374792 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.332352013 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.332973971 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.324336398 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.327403308 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.337977569 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.323939307 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.334018839 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330203684 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.33085059 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.337159954 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.337796508 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.327941874 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.333682833 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.337330075 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.343903631 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.342327152 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.331830359 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.338754916 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.33396156 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.347932276 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.340085484 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.340241815 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.335711866 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.334102066 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.333926085 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.344738121 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.34556649 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.336949234 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.332843154 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.335494241 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.328340345 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.337710562 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.335289662 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.341060393 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.340493718 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.335963291 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.335085136 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.344688077 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.329742251 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.340405753 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.333917509 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.335963698 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.327689128 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.339397769 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.343865506 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.33600065 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.32816698 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.330669274 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.332520793 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.338223523 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.327778234 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.333513635 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.336918468 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.335113919 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.335036192 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.330874139 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.3378436 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.34130108 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.335471699 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.337599318 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.343181638 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.328015032 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.341741747 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.344069959 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.33586129 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.329290677 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.334157417 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.33999339 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.330630077 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.338079537 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.342072731 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.333402483 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.344255695 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.337512596 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.338070549 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.354125474 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.342686269 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.337307191 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.33351409 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.345372987 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.336955028 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.335633409 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.342185097 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.337420395 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.335854072 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.333958271 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.342425662 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.33238298 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.341680856 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330068346 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.34150068 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.337744312 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.336421223 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.333682603 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.337019019 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.334687773 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.337274626 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.340952446 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.344511898 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.335115825 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.346990033 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.33839257 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.339007812 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.339813278 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.344225632 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.339098739 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.333580884 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.34304826 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.329772433 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.342647579 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.332286165 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.343772536 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.339064467 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.34201742 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.340702976 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.331736037 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.334529644 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.342486144 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.339150083 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.339595165 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.343963126 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.340598931 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.339730279 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.332949847 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.341508868 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.33156117 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.335494534 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.344992767 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.340408809 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.340753213 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.339745477 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34841758 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.341265165 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.3407191 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.336129696 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.341688001 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.346955607 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.343679658 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.352148009 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.340106607 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.342463235 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.337778403 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.335532086 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.345756816 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.337621534 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.350223174 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348571856 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.357009011 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.337618076 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.348192137 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.335542937 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.3454255 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.341124766 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.348758321 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.343103644 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.343818274 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.334511866 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.347138082 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.33594332 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.345487004 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.332487804 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.345840263 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.344757483 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.342793049 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.34534646 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.337108394 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.340764628 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.346326479 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.344422804 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.343293731 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.336412124 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.345653665 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.334012832 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.338424363 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.346700812 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.343516282 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.343504389 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.351590732 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340084944 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.34661202 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.346158477 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.33747156 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.34839788 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.341866586 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.344353041 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.349921561 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.346797896 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.340703876 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350921128 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.347391409 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.338720194 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.344980712 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.353211581 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.345678029 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.338720948 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.352075496 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.346937243 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.344928217 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.344689215 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.33927859 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.350170688 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.34775011 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.355691748 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.340758754 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.347839578 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.338968699 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.349874556 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.343275526 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.34677908 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.344362168 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.349807068 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.353845079 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.349046951 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.340364298 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.350161204 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.34830313 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.347927939 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.33992018 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.353950061 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.348360642 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.347314927 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.345360204 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.343643237 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.349781605 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.33928582 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.348073748 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.339824413 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.356321026 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.367452439 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.35020017 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.351957404 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.351792543 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.350687933 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.350206844 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.342828047 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.343014217 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.345844617 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.343213402 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.34166668 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.352338547 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.342484481 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.353684711 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.346969171 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.350505863 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.350370694 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.35147733 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.340949344 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.350903837 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.351505199 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.35060334 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.339557503 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.349484979 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.34231351 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.349758317 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.349615175 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.343352808 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.353667039 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.35275278 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.346047483 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.34704576 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.34390795 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.34402603 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.345780344 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.354471985 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.343983508 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.356066846 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.342250526 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.34863288 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.345808812 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.356489468 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.360551748 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.34306296 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.357168478 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.350636805 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.339742516 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.341948079 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.352141041 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.354082097 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.36456181 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.344245727 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.352311549 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.350729986 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.351480657 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.350449162 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.349595423 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.353237946 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.350762366 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.358192148 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.356199284 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.346192678 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.353118636 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.360457366 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.35276344 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.352326342 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.3433994 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.353205719 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.361454137 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.345655198 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.3482272 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.348728516 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.354540551 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.352253176 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.351063729 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.353990543 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.351314347 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.354377566 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.357288379 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357074215 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.351687443 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.356547174 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365371978 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.356277551 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.365357794 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.347235767 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.358321749 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.353541708 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.345782663 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.348249106 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.348961991 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.357438772 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.344286639 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.356938711 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.356476067 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.349633835 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.354997685 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.361880423 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.344850927 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.354551985 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.373577346 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.345477168 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357632278 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.354629229 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.346899382 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.356894881 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.355912128 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.343875685 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.348243988 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.354388898 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.361805119 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.347777244 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.358401425 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.346398362 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.357894228 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.355012544 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.354510818 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.354259746 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.352051727 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.347748907 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.356722306 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.354566471 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.366589554 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.350570928 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.353349533 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.352363247 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.362037999 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.366653625 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.351897212 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360646751 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.357183177 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.350222615 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.352916747 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.361495129 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.34946718 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360412608 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.350675305 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.351505093 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.352403173 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.358336324 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.357553044 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.359372874 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.349838382 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.350191388 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359369178 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.355644716 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357537809 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.353889538 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.361539144 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.349243589 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.348901141 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.359330928 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.353241564 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.364256219 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.350695669 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.355667547 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.355731356 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.359832568 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.358009062 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.357088032 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.346453358 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.351223574 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.364311992 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.364521666 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.358443246 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.356895808 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.361616566 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.350593213 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.3563151 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.357580865 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.35399564 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.353428265 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.363023021 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.35257726 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.353941698 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.352347274 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360513002 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.361590438 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.362525225 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.352110599 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.367619458 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.37106301 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.364543297 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.35194891 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.353805348 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.354223946 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.361079147 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.361952475 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.350768892 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.367124827 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.368284703 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363614252 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.358105252 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.357436258 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.35136973 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.36296202 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.360329076 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.358778845 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.366927555 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.357438814 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.366679271 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.360252306 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.358826958 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.352329123 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.352603308 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.357828277 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.356740056 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.362472537 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.358234075 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.363709284 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.357681844 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36777297 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359344566 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.360357085 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.359864784 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.352480257 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362867131 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.35138187 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.361437971 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.360253959 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.354509038 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.363258993 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360936367 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.355335375 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.361110184 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.368438513 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.362245964 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.356218276 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.357969339 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.366230264 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.373979757 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.360532855 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.353260507 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.35885878 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.365060589 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362870336 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.362068288 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.354076683 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.372605439 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.377770282 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.357099369 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.358456199 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.366592517 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.3734044 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.365995587 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.364600846 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.358235082 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.362297465 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.368779191 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.362725628 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.366811985 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.370073369 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.357382274 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.365794574 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.360310454 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.364552355 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.363796146 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.374185169 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.364975756 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.359677574 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.375987706 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.376301715 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.365000257 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.386702038 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.371046092 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.363001486 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.370542373 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.355249817 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.366339727 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.359093442 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.371352575 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.364671292 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.366866161 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.367171268 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.357560123 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.36606613 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.373799319 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.37740139 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.36627469 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.357769776 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.360378903 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.36709873 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.368439814 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.366240556 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.364958612 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.367258995 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.367666513 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.358941175 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.374686434 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.385221277 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.373003767 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.368016915 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.36674379 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.367531427 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.373182363 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.365982726 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.371104375 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.367164905 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.367528782 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.365414267 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.375108165 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.370983522 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.359994185 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.361224698 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.36312247 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.370965428 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.375408042 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.390285573 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.371117175 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.370641736 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.372318364 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.367351682 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.362822816 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.371436889 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.367473567 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.361797591 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.362167345 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.372633377 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.371678851 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.367869112 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.363143665 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.373291718 seconds)
  done (took 805.232428234 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.369537179 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368642539 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.368388272 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.368464604 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.370834751 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.369192919 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.367127115 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.3683536 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.369837804 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.369482836 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.370051914 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.372935086 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.36958652 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.369171045 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369726187 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.369446821 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368361806 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.36960845 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.371798247 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.370564204 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.370443818 seconds)
  done (took 30.000733335 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.371863122 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.370822368 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.370401819 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.371630217 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.371238514 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.372584873 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.370279674 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371286786 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.370421877 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372244867 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.372034796 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.370729467 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.371921623 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.371857551 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372556858 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.372773517 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.372575178 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.369235451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.371466898 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.37272247 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.371983458 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.370100679 seconds)
  done (took 31.413079024 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.373374599 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.368722975 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.364933875 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.375448986 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.373100142 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.373118159 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.369936154 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.372424831 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.374069894 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.366403014 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.364253902 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.366463594 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.37155182 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.377848529 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.367299064 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.376940266 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.372734724 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.373076822 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.372556744 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.371769406 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.376278768 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.385447492 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.374262518 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.365123937 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.37619399 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.37285772 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.374134974 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.373743493 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.364562565 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.374009662 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.373924393 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.366868654 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.377293166 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.377183896 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.368005427 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.377750454 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.373271891 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.37461738 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.373888095 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.376709896 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.393842801 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.373660347 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.378394339 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.387294234 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.374665613 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.368944163 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.382921447 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.373948429 seconds)
  done (took 67.176918841 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.375018822 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.374180473 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.374911833 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.374251855 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.376704493 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.376783152 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.375677659 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.376019549 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.37742036 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.375935877 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.37703865 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.375480347 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.37492658 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.375189489 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.377596669 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.37662623 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.374077325 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.376559126 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.376563024 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.377513741 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.377077969 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.376018052 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.377134547 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.376912098 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.37634797 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.377946648 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.378541818 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.378354894 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.378360248 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.377020395 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.377369309 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.37692876 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.379960903 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.376664494 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.376900335 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.378877894 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.379108901 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.377194004 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.378251382 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.377628989 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.3778748 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.377863487 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.378016859 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.376652691 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.377152478 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.3771714 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.376736768 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.377015081 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.378158082 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.377220481 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.378728588 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.3763279 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.377700421 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.37658426 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.378703062 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.377534874 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.378846188 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.377217042 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.377478018 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.378206392 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.377584517 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.378942299 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.378464139 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.379761302 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.379386561 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.377983555 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.378304591 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.380158511 seconds)
  done (took 94.898274807 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.378935232 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.379938223 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375415245 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.378969983 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.379582612 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.378726537 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.380209099 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.382654646 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.381104686 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.380407636 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.380861586 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.382529135 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.379480714 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.380084652 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.380100014 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.381753611 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.381446894 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.380484541 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.379799507 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.381084239 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.382652235 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.380971396 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.378845475 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.381129467 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.38059146 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.383314836 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.381985988 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.383313373 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379985436 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.380678007 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.382616105 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.38077284 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.378448493 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.381244403 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.385182908 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.383039512 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.382816681 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.382890365 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.381283076 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.380689742 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.381664622 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.384877433 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.381365237 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.381582101 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.382425459 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.379829377 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.381784786 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.381430889 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.383288798 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.383375971 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.381214793 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.382030026 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.384343041 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.38456509 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.383946828 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.38208988 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.382685728 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.381943779 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.383641408 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.380470798 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.381951868 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.380171962 seconds)
  done (took 86.89488705 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.382409643 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.384857163 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.384353687 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.38315537 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.385052395 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.383907903 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.383470356 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.381849477 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.383765475 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.381833678 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384773514 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.383723772 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.3831662 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383987104 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.383078743 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38496164 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.387415944 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.384299416 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.387119254 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.383518338 seconds)
  done (took 28.928636365 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.385188534 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.384501742 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.384934219 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.384120711 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.38493301 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.382589938 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.38426268 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.385115473 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.384005507 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.385670939 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.385716242 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.380963442 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.386945022 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.384753689 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.38597428 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.38389558 seconds)
  done (took 23.405906835 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.387185017 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.385061241 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.386443896 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.385839487 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.382370461 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.384900101 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.385672347 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.385522107 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.384666944 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.386491034 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.387237578 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.387225912 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.386516182 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.388844449 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.384048091 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.38551214 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.385097476 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.384331729 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.386934632 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.388171691 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.38707526 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.387487032 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.386817718 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.38747602 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.387534784 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.386184071 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.383621684 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.386640528 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.38476085 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.38678452 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.38708465 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.385371459 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.386885147 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.387320121 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.387283906 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.385747685 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.38966277 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.390284963 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.387901195 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.386786088 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.387109022 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.384662883 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.389316351 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.388934152 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.387948391 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.387291846 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.388122893 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.388446185 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.38902032 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.38812931 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.389827103 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.388056035 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.386711878 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.390177882 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.388588257 seconds)
  done (took 77.532537505 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.388851353 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.390093764 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.388127956 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.388444233 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.387200577 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.390692244 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.390104804 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.392264873 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.388287057 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.387302221 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.39120886 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.39140345 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.389218912 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.389690581 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.391063356 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.387361197 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.389214185 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.392166535 seconds)
  done (took 26.270828142 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.391449416 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.389082833 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.389522282 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.388052588 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.387952327 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.38790186 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.391170061 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.391921647 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.388312441 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.389909058 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.387954069 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.392161208 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.389432319 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.387770193 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.38983437 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391350899 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.390157514 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.389026875 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.389999093 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.391335946 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.391424257 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.392694386 seconds)
  done (took 31.835212473 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.380793659 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.381440903 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.380140555 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.396617353 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.39732789 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.382211689 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.380438947 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.382559032 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.402692342 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.420843848 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.417086978 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.396765678 seconds)
  done (took 17.977321558 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391177506 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389684999 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.390317842 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393523103 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38763433 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391295315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391870453 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394156506 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393516896 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395191685 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39298535 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393316896 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391808135 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394536931 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391372987 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393197194 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392440201 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391733664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391584413 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394986083 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393030905 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394277854 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392480438 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394648112 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39355004 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394204284 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39105043 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394855933 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393439809 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394210248 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392518662 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395098992 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395325311 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395464025 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395279059 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390908148 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392692571 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393329601 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396450201 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394195637 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.394026362 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393188068 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395316725 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393597093 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394258688 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396172235 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394010492 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392252326 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393447773 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397097313 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393456061 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393201322 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398275431 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393877207 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393746363 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396138513 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395278878 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397094649 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393747609 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396171919 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395422482 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396873096 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397672066 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396845702 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397201343 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395812614 seconds)
  done (took 93.257201041 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397391977 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.398537577 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397571893 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398351469 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3951597 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395400205 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397105382 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396224959 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399573542 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399075186 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398158983 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396375394 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398963827 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396351733 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399934036 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399110831 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399112082 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398191687 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399120207 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398202756 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398022463 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398185227 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399401985 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398087059 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39718012 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40026436 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398532829 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398234556 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400011756 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400853751 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401525279 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401381927 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399501881 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.398933974 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401797528 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400665342 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39971459 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39713442 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400765048 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400504775 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400963034 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399356451 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399997891 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400890974 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402595292 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401188283 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.4019699 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399891243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400658157 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401959483 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402235553 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399838892 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40018127 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402250005 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401163674 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402448845 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400998883 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400607915 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400428632 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400306209 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402058934 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402482316 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402373787 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402669357 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4016776 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400685283 seconds)
  done (took 93.644021199 seconds)
done (took 1886.27118154 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.557390326 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.516145081 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.390391952 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.404482798 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.39032663 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.394048788 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.406979054 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.390940361 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.39192028 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.389749646 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.388492091 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.584986149 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.431749732 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.390856884 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.391583937 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.490866433 seconds)
  done (took 28.176907135 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.423738965 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.401325864 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.526019039 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.397407269 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.425556454 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.602400374 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.458562888 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.397065674 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.592329512 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.415535154 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.395644896 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.420267849 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.398112471 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.405376529 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.416595397 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.604444256 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.693035272 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.395365155 seconds)
  done (took 30.636423981 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.908007119 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.428237549 seconds)
  done (took 5.605156776 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.421891577 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.397763559 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.398867341 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.396903243 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.391071239 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.389245461 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.397393569 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.395087685 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.401108747 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.534701145 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.401511755 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.411442728 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.39778461 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.39897675 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.407139995 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.450400611 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.568112825 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.408749643 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.407105621 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.408559225 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.396895193 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.502012082 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.447758503 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.409964302 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.542169673 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.403004271 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.399967121 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.407031611 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.517327262 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.410770465 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.399162643 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.400211339 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.400788971 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.394779204 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.971245802 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.392886555 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.424896005 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.410663739 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.408047849 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.548145777 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.402897267 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.408229366 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.393068521 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.974622101 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.511208485 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.532632749 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.391186146 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.39890173 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.402967767 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.471188862 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.404436358 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.403943525 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.465857486 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.245822339 seconds)
  done (took 89.254562027 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.453158595 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.395153667 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.582574927 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.410241652 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.393209641 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.408183049 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.414441527 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.730646487 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.401482639 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.395284066 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.73833745 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.06665551 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.395103279 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.461775291 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.432720466 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.465106892 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.395820205 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.422873773 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.396271497 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.396733943 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.997767576 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.39332546 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.411504891 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.468563346 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.440102857 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.987879191 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.395322857 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.394141902 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.412784622 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.393778576 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.033271744 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.407501255 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.45310005 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.394675289 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.708341073 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.839291017 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.799023501 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.400163968 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.400578941 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.398656686 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.419911142 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.990266718 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.819039149 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.397872465 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.394713757 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.991310186 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.396800598 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.399851929 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.404754154 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.674221033 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.394754361 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.399393205 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.405547392 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.395037248 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.398249216 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.454523241 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.454803445 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.995519255 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.396670301 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.396018166 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.430288817 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.397987662 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.404214999 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.40259053 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.396385183 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.818462859 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.737402395 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.400973655 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.821097541 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.020873787 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.396977291 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105226264 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.401806621 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.416379185 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.430251841 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.414971375 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.39619718 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988843751 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.41146223 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.396126923 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.803468897 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.397682526 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.732692854 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.423306358 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.396742058 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.018572518 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.409207502 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.443659411 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.398629469 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.402740364 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.397938185 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.407342489 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.721559101 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.45783861 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.399918249 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.399594405 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.417835078 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.398100748 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.402556384 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.412243321 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101918837 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.409607591 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.401182154 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.418022252 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.400976382 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.398812539 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.403927347 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.404285849 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.691917879 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.397519763 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.403405751 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.39992444 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.398654394 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.400995477 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.503006196 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.40134543 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.771788312 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.406404387 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.403639413 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.418772726 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.400408591 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.462955908 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.399941786 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.419377798 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.401169789 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.718104084 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.420916115 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.404560933 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.405456567 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.405859336 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.397797564 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.401494509 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.457385018 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.404236103 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.255385275 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.442814401 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.401475595 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.400939034 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.417637243 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.401943392 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.410224441 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.402731515 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.714988381 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.718998118 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.741802784 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.401488535 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.405557672 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.279483832 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.454666738 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.591343942 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.424701014 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.402502085 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.709097862 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.718278334 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.404236175 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.402361651 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.403048016 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.687576595 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.405691046 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.734501842 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.069360934 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.404862119 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.408656991 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.264274918 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.25085519 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.403529693 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.404220279 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.725714717 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.423025045 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.403883278 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.403511896 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.401303213 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.406889296 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.408582887 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.414340123 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.406593723 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.407587794 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.748507604 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.60695221 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.424770421 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.404961032 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003124148 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.426964258 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404929597 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.412035152 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.409441573 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.406530884 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.457772947 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.410306771 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.445332485 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.404466847 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.407589509 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045540311 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.407320069 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.428841338 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.607478145 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.208558817 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.407284283 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.407553207 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.409419197 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.468039828 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.031255309 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.423844848 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.764572539 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.407495251 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.451042151 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.425035076 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.4189681 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021759997 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.422821362 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.409693116 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.196579352 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.404872294 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.840525898 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.404146171 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.41068362 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.139741841 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.407391217 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.414829729 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.405133392 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.405060207 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.719140197 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.410290149 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.450346503 seconds)
  done (took 516.900340106 seconds)
done (took 671.843047119 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.410354798 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.406856322 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.411278437 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.410397482 seconds)
  done (took 10.919915097 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.427558552 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.413835915 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.426808195 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.412963912 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.42712131 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.416137681 seconds)
  done (took 9.809402532 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.410358334 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.405933951 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.411193561 seconds)
  done (took 8.511729473 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.649135651 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.434132544 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.814301758 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.417572074 seconds)
  done (took 9.601463627 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.425965509 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.426751781 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.426550419 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.426831172 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.434472999 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.428794454 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.429591573 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.429388854 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.42635699 seconds)
  done (took 14.136320156 seconds)
done (took 54.263302863 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.535707008 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.542194475 seconds)
    (3/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.390719788 seconds)
    (4/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.440458586 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.484502468 seconds)
    (6/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.528878365 seconds)
    (7/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.451608943 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.445796339 seconds)
    (9/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.519111912 seconds)
    (10/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.984452646 seconds)
    (11/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.577875648 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.423845702 seconds)
    (13/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.633846629 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.643334274 seconds)
    (15/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.724486717 seconds)
    (16/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.445461397 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.577768599 seconds)
    (18/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.495684498 seconds)
    (19/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.496995788 seconds)
    (20/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.531412298 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.497169339 seconds)
    (22/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.413969248 seconds)
    (23/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.415121399 seconds)
    (24/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.58473997 seconds)
    (25/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.645220559 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.448575997 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.508850059 seconds)
    (28/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.495996865 seconds)
    (29/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.723761072 seconds)
    (30/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.894486726 seconds)
    (31/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.450688886 seconds)
    (32/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.575557161 seconds)
    (33/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.452354861 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.518093024 seconds)
    (35/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.636117863 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.553634867 seconds)
    (37/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.407730425 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.395179428 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.499671959 seconds)
    (40/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.449313246 seconds)
    (41/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.403723767 seconds)
    (42/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.391467083 seconds)
    (43/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.50060487 seconds)
    (44/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.389157703 seconds)
    (45/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.698388371 seconds)
    (46/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.403498367 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.580846779 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.41551111 seconds)
    (49/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.501669824 seconds)
    (50/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.455950781 seconds)
    (51/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.44061544 seconds)
    (52/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.498707085 seconds)
    (53/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.393637325 seconds)
    (54/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.434662882 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.688365408 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.818425925 seconds)
    (57/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.829391919 seconds)
    (58/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.685492173 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.612293008 seconds)
    (60/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.483992809 seconds)
    (61/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.651870341 seconds)
    (62/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.643427953 seconds)
    (63/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.41497665 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.566560797 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.512560565 seconds)
    (66/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.394466527 seconds)
    (67/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.817386701 seconds)
    (68/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.396124385 seconds)
    (69/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.587369435 seconds)
    (70/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.39759779 seconds)
    (71/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.514126231 seconds)
    (72/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.770710521 seconds)
    (73/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.396173347 seconds)
    (74/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.399559921 seconds)
    (75/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.405230156 seconds)
    (76/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.64252737 seconds)
    (77/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.492964498 seconds)
    (78/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.439717335 seconds)
    (79/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.527520294 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.419274454 seconds)
    (81/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.401454955 seconds)
    (82/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.401928476 seconds)
    (83/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.39413852 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.587732247 seconds)
    (85/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.398319514 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.511589918 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.696484741 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.545011018 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.505224114 seconds)
    (90/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.598816131 seconds)
    (91/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.514680098 seconds)
    (92/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.761869793 seconds)
    (93/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.573844789 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.550357709 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.452568787 seconds)
    (96/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.646878437 seconds)
    (97/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.397806996 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.506614315 seconds)
    (99/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.693659326 seconds)
    (100/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.400824376 seconds)
    (101/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.577640498 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.457798906 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.523962825 seconds)
    (104/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.418072331 seconds)
    (105/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.421127556 seconds)
    (106/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.51696257 seconds)
    (107/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.396315747 seconds)
    (108/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.715717926 seconds)
    (109/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.39803185 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.53383206 seconds)
    (111/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.73024536 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.582821715 seconds)
    (113/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.49091831 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.456206334 seconds)
    (115/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.488281188 seconds)
    (116/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.612883555 seconds)
    (117/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.694126146 seconds)
    (118/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.779561414 seconds)
    (119/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.586027296 seconds)
    (120/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.441083197 seconds)
    (121/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.634116462 seconds)
    (122/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.436703321 seconds)
    (123/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.613215529 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.527473843 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.531463962 seconds)
    (126/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.465218882 seconds)
    (127/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.818539597 seconds)
    (128/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.403656149 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.528791871 seconds)
    (130/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.399412841 seconds)
    (131/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.492606373 seconds)
    (132/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.767469494 seconds)
    (133/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.399688561 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.59930622 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.51144374 seconds)
    (136/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.420580961 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.437879199 seconds)
    (138/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.423897179 seconds)
    (139/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.40821613 seconds)
    (140/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.409696972 seconds)
    (141/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.538113966 seconds)
    (142/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.58594038 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.489027416 seconds)
    (144/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.400665001 seconds)
    (145/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.621594683 seconds)
    (146/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.55775653 seconds)
    (147/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.548000546 seconds)
    (148/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.508653002 seconds)
    (149/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.737245093 seconds)
    (150/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.554771508 seconds)
    (151/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.454219027 seconds)
    (152/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.614472903 seconds)
    (153/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.702853382 seconds)
    (154/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.565508792 seconds)
    (155/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.584394673 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.837296926 seconds)
    (157/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.403746162 seconds)
    (158/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.779074761 seconds)
    (159/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.515308853 seconds)
    (160/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.572097115 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.490852298 seconds)
    (162/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.672168906 seconds)
    (163/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.46358484 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.401852407 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.584809992 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.464726329 seconds)
    (167/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.542241467 seconds)
    (168/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.661564194 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.542475473 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.591773366 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.58834016 seconds)
    (172/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.4916726 seconds)
    (173/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.759392372 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.575264475 seconds)
    (175/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.991021461 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.691408613 seconds)
    (177/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.466908525 seconds)
    (178/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.546806258 seconds)
    (179/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.515484632 seconds)
    (180/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.401481235 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.627801932 seconds)
    (182/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.551194846 seconds)
    (183/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.501735736 seconds)
    (184/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.511164855 seconds)
    (185/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.525675752 seconds)
    (186/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.403040198 seconds)
    (187/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.534782762 seconds)
    (188/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.609417097 seconds)
    (189/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.522238952 seconds)
    (190/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.456345284 seconds)
    (191/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.657486859 seconds)
    (192/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.507944206 seconds)
  done (took 344.768954099 seconds)
done (took 346.055900775 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.454307394 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.529607455 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.435317576 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.432536592 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.43477016 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.428492586 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.450962626 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.4362702 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.448850262 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.448823184 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.437568755 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.443643875 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.448660969 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.444982491 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.468589067 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.434494925 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.434021515 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.442395433 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.451646367 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.451650592 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.43514563 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.435249212 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.460544857 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.433160996 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.441413123 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.443959949 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.440069428 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.441107548 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.439919496 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.450933224 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.427531374 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.44040982 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.452044526 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.4455652 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.437636381 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.445308747 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.439016326 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.53205769 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.456509053 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.446783163 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.444061991 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.452179092 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.440959695 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.440717787 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.444964375 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.464455751 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.446703189 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.450181102 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.425807523 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.430961456 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.455160676 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.448200471 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.445155849 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.434369456 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.428988604 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.457009912 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.449471817 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.456601145 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.4409131 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.43845085 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.472554315 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.460026866 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.449208075 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.446090256 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.444379496 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.45417385 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.445859157 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.452318476 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.446071743 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.439070258 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.438618057 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.445708031 seconds)
done (took 113.49465984 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.563054372 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.437106107 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.594113253 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.448080382 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.609985252 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.557786908 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.446958883 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.446614305 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.447033393 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.23652682 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.446916637 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.447481337 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.432752826 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.44266963 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.553121666 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.44609136 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.44529628 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.133496885 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.44704398 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.578406338 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.437155338 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.446919893 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.448356634 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.239595031 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.434865361 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.431392635 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.578744817 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.446797457 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.138599253 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.43063646 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.434501678 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.143870627 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.579494588 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.466949072 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.456700659 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.456328089 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.611626152 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.451216179 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.564569244 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.562697078 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.59616361 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.487301064 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.433742827 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.438822045 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.451055375 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.448735475 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.44823836 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.477330783 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.4376688 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.448613566 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.137982564 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.458018657 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.450404467 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.449496119 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.449764791 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.476211794 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.448029601 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.44977384 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.579701418 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.451007677 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.563529089 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.242474034 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.237760435 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.450109449 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.436116972 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.45144024 seconds)
  done (took 115.622662623 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.510473568 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.515561912 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.564645699 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.443944654 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.492071658 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.564585466 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.443655637 seconds)
  done (took 11.839859973 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.446098815 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.450751322 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.488771226 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.492924452 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.452159053 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.614229654 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.450154959 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.452551815 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.452929936 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.492286445 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.45328167 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.451432056 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.460735713 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.441834222 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.48932235 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.453688892 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.558504127 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.444121632 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.454477074 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.598774865 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.452989907 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.462897377 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.495375385 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.456198666 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.454039148 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.447546422 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.224929757 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.451172165 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.450885843 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.451474357 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.450105902 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.510284436 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.451553897 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.444026624 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.453019491 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.558935287 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.455799219 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.452727132 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.455189945 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.446190901 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.452321165 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.453198028 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.455282205 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.453202956 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.452976963 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.467580876 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.452075303 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.451589874 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.453724947 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.453136945 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.494239283 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.453950887 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.453588435 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.45471053 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.49573039 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.46449627 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.455349378 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.449633101 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.454209744 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.454949085 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.601314499 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.493321761 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.455670329 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.49241361 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.452542113 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.457402691 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.455711737 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.456789591 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.536923039 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.454896958 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.494179122 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.456086619 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.625109302 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.471459699 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.455760403 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.450099331 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.449882945 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455243118 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.441763111 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.451268417 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.455764997 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.446360586 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.451293461 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.454917152 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.456456191 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.604098322 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.554874428 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.456582085 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.463092092 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.453445027 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.456562459 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.498058547 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.457635596 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.454135816 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.49601433 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.562173271 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.497934487 seconds)
  done (took 148.934947742 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.46057701 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.458818466 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.451715145 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.472384545 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.445148568 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.446624587 seconds)
  done (took 10.045128314 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.450543513 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.460951755 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.455808862 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.455951218 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.458636351 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.456689841 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.458458428 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.449532698 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.461530046 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.457908249 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.458690447 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.458361329 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.459382075 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.458097482 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.457310877 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.456456481 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.459604102 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.457534792 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.45656682 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.460407209 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.445126374 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.458635188 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.458184347 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.451446139 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.46255118 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.459290017 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.472816496 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.459012751 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.458053959 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.458892091 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.458218924 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.455655603 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.452108417 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.457278936 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.460749818 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.453499579 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.462891038 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.46029878 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.457469601 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.45701642 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.462688091 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.461721745 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.458219271 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.45930619 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.452969766 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.453915845 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.463722299 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.476862007 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.457079625 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.462571377 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.462771523 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.459676192 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.459088512 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.460128731 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.454928501 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.456763519 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.465670809 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.461197789 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.457679724 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.452022562 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.465212316 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.461146758 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.452947205 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.464293908 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.462559293 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.461422313 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.452829006 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.466511075 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.460332155 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.46108825 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.462511141 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.460893272 seconds)
  done (took 107.351726688 seconds)
done (took 395.099410097 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.858966804 seconds)
  done (took 4.173251537 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.552435726 seconds)
  done (took 3.86950395 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.291883033 seconds)
  done (took 25.616385127 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.450684009 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.533936243 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.476475818 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.450050952 seconds)
  done (took 11.230123605 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.802612191 seconds)
  done (took 4.121723938 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.468814431 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.456758304 seconds)
  done (took 6.244676776 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.748526538 seconds)
  done (took 4.064225058 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.265075313 seconds)
  done (took 4.589855382 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.45884402 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.459861927 seconds)
  done (took 6.246489724 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.427833921 seconds)
  done (took 3.747165487 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.747346204 seconds)
  done (took 23.066446342 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.472616961 seconds)
  done (took 3.793620308 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.487111042 seconds)
  done (took 3.806307773 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.526054048 seconds)
  done (took 6.844709975 seconds)
done (took 112.733323946 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.451679952 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.452777356 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.452703923 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.4530232 seconds)
  done (took 11.129767852 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.531422423 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.528522914 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.538583201 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.522144533 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.520816719 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.53188678 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.491173031 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.489332128 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.520647829 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.520257704 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.536253522 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.520798783 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.531989174 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.491101693 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.518938896 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.534740448 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.522004344 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.536919969 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.508574001 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.524973577 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.466245909 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.525226821 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.519644821 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.468228275 seconds)
  done (took 37.722321227 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.976178809 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.528701223 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.611876975 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.508352272 seconds)
  done (took 7.944446471 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.57184446 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.575891026 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.600682069 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.635138951 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.666483589 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.586440415 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.494025185 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.490313747 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.476331781 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.573604431 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.657769814 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.573138157 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.787441777 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.47227587 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.788295016 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.46877066 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.469610725 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.574224824 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.622570901 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.653574761 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.469609684 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.575443103 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.577968346 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.575618778 seconds)
  done (took 39.255978821 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.477580993 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.486028937 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.471924903 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.484460078 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.471943139 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.470592878 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.471942266 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.477756644 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.471279634 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.47149694 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.471594949 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.484657963 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.473506791 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.47061506 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.478808616 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.473662473 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.474421746 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.47849559 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.4812906 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.473599941 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.472592979 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.478406803 seconds)
  done (took 33.788298175 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.457146554 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.454876926 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.806704734 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.71167751 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.455028708 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.458567214 seconds)
  done (took 14.665728375 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.542463122 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.696985787 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.458130469 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.875899054 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.958851053 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.460294737 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.464068134 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.736851608 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.111620228 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.108143897 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.530333144 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.541594774 seconds)
  done (took 21.809744398 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550985086 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469390912 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.469612924 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503383646 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467258755 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466772892 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.505227262 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.217407491 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.4733319 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.748291492 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487829635 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55601033 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.719700317 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475268039 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.469967054 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.445760091 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699334243 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037472546 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472842904 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470146681 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504914949 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483146557 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466385266 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.6981048 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469270056 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470868154 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.783311228 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47138122 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795980892 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.76721119 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767898738 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470876285 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74686385 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186699034 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577607298 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702377473 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479493567 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470411925 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.44665537 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.473765321 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474571537 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.477244622 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776774318 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470902978 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.470955794 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480065122 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230591297 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.477056137 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.472559406 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473109624 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.777599587 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552262821 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.480156275 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.471306847 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528670003 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468358365 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.478445173 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.609133732 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115487018 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473672597 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498884386 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.475200815 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471781117 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470579436 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189315396 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.477845227 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.476536822 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.478568284 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473064886 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.468920579 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498679999 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473073313 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.490348926 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476058973 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335337379 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474331588 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476700829 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100282944 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482427376 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.469688138 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703537063 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47290341 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47363498 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.47336835 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47460489 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.330717941 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484112301 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.44326052 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534628056 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.230840072 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.704853637 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493387229 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504056291 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.698535931 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.440111876 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474357543 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.474853742 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477975107 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494063683 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235283073 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469821919 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.478305446 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726414074 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.688672907 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483896144 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.458919714 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018216368 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477295591 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.502145918 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482256294 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.708782102 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.193735061 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792867167 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475260196 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508902469 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475061083 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394497123 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478490334 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.485564983 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476694708 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.796049582 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.402371546 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480078267 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552264376 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487068273 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480506201 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476670316 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475538233 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.478379306 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.688647418 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48320607 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.78406963 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.475542143 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475680744 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.474982021 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479427554 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.481077297 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.704083871 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474425286 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757483219 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47746083 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478837297 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476574832 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.697863757 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.477075143 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.482807417 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.82044804 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483576357 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.484168398 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783426524 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509309018 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591723624 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509954155 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.48232641 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.730458421 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.481058102 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.485059712 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489070077 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.477908217 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481667523 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.487413742 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479891536 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179672241 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45848513 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481780992 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.480807231 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.496865381 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556082718 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.488129476 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.713088271 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.488121267 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472031377 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.483639486 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.482728237 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.702172086 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783108693 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.479655057 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656618837 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.019424064 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187322363 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492462482 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.481046019 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.479107962 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.480155011 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480925546 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481401683 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.480420357 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713779593 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789414723 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.474480382 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.20299815 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481631584 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48166851 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.489609462 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7851592 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.487804069 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483776718 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.483913233 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478949286 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479784937 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.788058239 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700790698 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.499359429 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.482218746 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.003066473 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.491032793 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48546399 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.483164326 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511646607 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.488913767 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375837386 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821615977 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477111531 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78377298 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493264864 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.498007845 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.482300764 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484497281 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48611352 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.50504044 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486031546 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.721175958 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483386111 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499663944 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119766878 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354215918 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128601013 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488276431 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.482655228 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.487430963 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274633282 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482784142 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487076199 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770362928 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287637162 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486971527 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024682373 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.485851574 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.382664674 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788215677 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711586613 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48827854 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.48600679 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.794662673 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.695726323 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510140077 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486993557 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48792893 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.44944632 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069334776 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485283583 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665477864 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245941681 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483304195 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.489198822 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.502999614 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.496780444 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941058776 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.487308636 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487072866 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496802356 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490124481 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386088401 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490169204 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486455586 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212085038 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.496670285 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.03068076 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487187317 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.72738445 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.788666016 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.766481587 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.486627685 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.486081687 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.730960359 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792351803 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48616538 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499397595 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130098639 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.3419791 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.495938277 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489082563 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.416475036 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488586759 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820291989 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.486879198 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.488794203 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517996886 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489731608 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489357262 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.488290337 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497266889 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464629048 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055401501 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.48429065 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482312389 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489608001 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493046668 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.738703079 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.50301814 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.196293479 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716413256 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478350654 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537392489 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.494028454 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497323849 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.46104307 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490543645 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49002902 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558551788 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.712026653 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48836543 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.456252571 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.566494492 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.701643328 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489837383 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490913473 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736665955 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.486635983 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.49030336 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360669743 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520415663 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.494362842 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493127934 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.479898706 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526705105 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56683216 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726125526 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.794157806 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.796941835 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947876582 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49958554 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494454665 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.507706498 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572252243 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491192713 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.490792368 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.487743748 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20614682 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368581433 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.220533458 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798413248 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491291073 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501398347 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492404364 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732272359 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493650352 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766957334 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492657913 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.481256477 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512718416 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502324205 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495987382 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.706733749 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767343497 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493587214 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496771945 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489315234 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.491698922 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804544631 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.704919655 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067990402 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115981728 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49197363 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500629453 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.258989427 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766585493 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493405727 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496013079 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492778835 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.502400391 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.505088251 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.499650727 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501882524 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720200073 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800346282 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218155888 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.802506243 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.519703257 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.493888396 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494085032 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.74238119 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335450633 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.73251572 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21441716 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317642017 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745749264 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56681504 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.734880679 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.490617731 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730787584 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.512106376 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493844081 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494654687 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494412611 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.494653559 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.802286613 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205558758 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.749370245 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.497388312 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.495547567 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54087481 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.733827808 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.718519474 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.365938246 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.719463742 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80748011 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502435523 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.4990693 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214850964 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805457388 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497268061 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.501820496 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74304684 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498193462 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534279459 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.374778745 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.49734857 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113926734 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.708178098 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519155978 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505577214 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326774904 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232796989 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.503194339 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073684771 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50201451 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515407666 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772354586 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.505358314 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511592631 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780826249 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.506344902 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.508963149 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741966888 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.204934809 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.379441966 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.508706862 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498016931 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.518184509 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501935152 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543349567 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497055329 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502360551 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.962255697 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.502160187 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499945541 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510678533 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.497600449 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510455418 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.502365587 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502085848 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.503894409 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.497516833 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.485476945 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.521183143 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636584256 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095383053 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498223177 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.118671479 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.837570406 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.751265722 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.50782849 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.47203524 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.507884154 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502465552 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501435291 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499861366 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505289465 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116015587 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.509267265 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.8116404 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506966106 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.713681912 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712957061 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.511623454 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743863084 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509434549 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524918766 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.47061762 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502848776 seconds)
  done (took 1041.508844628 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.502490213 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.53261001 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.502990113 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.572068165 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.510730499 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.625460473 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.592396158 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.601869865 seconds)
  done (took 21.797581292 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.508028802 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.497441663 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.50487117 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.501036952 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.505366444 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.045882419 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.497938731 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.502010987 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.518117103 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.494317657 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.499152811 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.204130629 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.50096209 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.497137002 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.512697356 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.500625066 seconds)
  done (took 34.654870616 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.71999725 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.683094682 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.841494367 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.556195074 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.533464071 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.526926766 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.844553302 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.506195968 seconds)
  done (took 28.569123307 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.510319517 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.50874189 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.510686955 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.509684782 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.51129776 seconds)
  done (took 8.908825094 seconds)
done (took 1303.078256563 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.512363517 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.51546457 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.514300412 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.512197914 seconds)
  done (took 7.410593593 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.473844055 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.470767584 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.471097287 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.48851671 seconds)
  done (took 10.26212209 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.317017966 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.126036213 seconds)
  done (took 5.801410109 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.08244763 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.072850839 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.073454154 seconds)
  done (took 7.58999737 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.809729858 seconds)
  done (took 3.170207762 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.498518551 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.495504827 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.526331375 seconds)
  done (took 8.879659232 seconds)
done (took 44.476088893 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.498047489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.262449453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.655169334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.511430094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.660021439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.652423991 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.774636261 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.507465763 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.493755565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.525960215 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.511776941 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.660014546 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.769393943 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.266914943 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.771436846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.267568154 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.664247855 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.504427416 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.502576993 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.494371639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.780290549 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.506976909 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.496700148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.529611613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.741149586 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.644761736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.498895364 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.284030374 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.500506942 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.495634108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.642519029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.51142004 seconds)
  done (took 86.946555028 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.510011245 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.505969765 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.498106712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.532725104 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.511352783 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.49565985 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.517160439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.497907836 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.503174325 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.498357966 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.497362898 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.530401513 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.502079204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.499652117 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.517011125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.516214735 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.49968542 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.513679093 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.509841699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.497633185 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.497766211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.499616573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.510419847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.501643093 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.515218729 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.500404377 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.517071061 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.498416445 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.497540219 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.515214912 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.49868288 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.500274668 seconds)
  done (took 81.569138681 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.505930291 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.500107947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.498944278 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.518856441 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.506286171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.501213047 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.51981704 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.499019189 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.499591981 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.505539125 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.499665992 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.498966449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.500968282 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.50016261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.500102009 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.500409158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.510546603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.511737008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.516845513 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.50129519 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.521627711 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.500953985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.498389484 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.50039612 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.506764063 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.498928652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.515622698 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.500613911 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.50171369 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.500741446 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.520515034 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.50123085 seconds)
  done (took 81.527328803 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.745422402 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.51914109 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.52097206 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.515940423 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.523248012 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.519012408 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.512453547 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.757656475 seconds)
  done (took 15.980239896 seconds)
done (took 267.385582797 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.523146589 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.516989375 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.539630729 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.51563672 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.528281018 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.544186732 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.754246659 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.544333905 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.740131481 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.517184159 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.54957794 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.515453837 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.470167754 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.665432238 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.508501809 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.513255046 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.504568103 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.520927617 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.520885641 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.758402722 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.541705382 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.505358062 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.514058148 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.519273609 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.486855754 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.586526104 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.58726969 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.678553279 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.648466911 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.587542758 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.521826231 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.520751129 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.521169181 seconds)
  done (took 70.835351825 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.514205237 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.523266657 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.523259451 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.525546969 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.524010059 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.524098153 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.512694165 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.522212875 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.523668031 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.522832698 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.524738496 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.523355696 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.522866374 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.521164234 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.522149364 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.497182157 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.514090952 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.523638335 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.514528587 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.497030456 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.5237355 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.525665321 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.524491609 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.523726931 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.523228606 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.523385467 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.524296064 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.52510512 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.523309276 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.524239697 seconds)
  done (took 46.985157116 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.526929112 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.510433292 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.514991119 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.519486378 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.515875907 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.519499532 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.858630674 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.524291817 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.516790157 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.519880803 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.510444331 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.525991125 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.572835357 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.527247821 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.51742193 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.528023333 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.52884975 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.518744373 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.518695413 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.530683325 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.881282053 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.525994835 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.863210111 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.531150056 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.52274902 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.520127866 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.523111306 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.51716403 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.520473198 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.512119546 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.451195901 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.867362683 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.528601052 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.509743932 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.454613573 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.530193735 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.528656336 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.514583852 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.518144592 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.522016563 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.872107203 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.521621875 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.531929618 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.509159269 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.534112034 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.528781116 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.512908731 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.510410753 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.812556987 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.527068647 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.515466292 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.520158706 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.529246095 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.521171291 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.81814929 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.52272243 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.522074931 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.512052953 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.539152869 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.871236314 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.53419324 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.519359113 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.5166616 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.51826247 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.515451964 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.520155178 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.536106157 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.523137596 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.531532806 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.521715393 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.515859027 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.521131889 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.532360323 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.51581 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.515902907 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.510098452 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.521279726 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.520938971 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.511820989 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.868169886 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.528378551 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.515760719 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.884509802 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.528881758 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.533796126 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.53431755 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.531018059 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.617773876 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.871954574 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.474590234 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.533933399 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.514956167 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.895259042 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.532082647 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.522922659 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.515073018 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.530391833 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.534425983 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.530683401 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.515479887 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.522002993 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.538096228 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.517867962 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.524248791 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.879509882 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.531368755 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.532097932 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.522995275 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.601195796 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.533599233 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.538782706 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.530170955 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.890289953 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.531488772 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.535949217 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.520433969 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.545985659 seconds)
  done (took 222.467132176 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.518053237 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.536988031 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.520815106 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.533242573 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.520849649 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.528172199 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.519329933 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.525766854 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.525167395 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.520477213 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.519684128 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.529275477 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.528110681 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.518713073 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.524074507 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.517426409 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.5187712 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.52086709 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.518581498 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.519583669 seconds)
  done (took 47.840409976 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.53793435 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.224461815 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.177723672 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.537680374 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.536862629 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.527152347 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.594656064 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.53963838 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.535740356 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.90197187 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.736846893 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.538375814 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.538640028 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.53600919 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.16353968 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.504735898 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.898205536 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.18700023 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.536181977 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.191981965 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.508431051 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.537532881 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.526423911 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.189573155 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.909546023 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.877987439 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.599661986 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.193787223 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.537006412 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.536051141 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.19263793 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.535886545 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.530022643 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.174697694 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.539205219 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.552034662 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.542394103 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.599137223 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.603540283 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.888889977 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.194467631 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.886818807 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.550218499 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.703512277 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.537622126 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.507444267 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.199790624 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.536889145 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.511262849 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.540875449 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.546336794 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.175645119 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.5309193 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.178762584 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.540317143 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.53971606 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.193144666 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.173993817 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.164475683 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.734764788 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.534500286 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.872201165 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.536124699 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.199374641 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.538277753 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.542850342 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.541250734 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.742474719 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.195727897 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.871402947 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.882903178 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.883844547 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.53712894 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.610082108 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.543093733 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.886011569 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.608898383 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.945548997 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.884291831 seconds)
  done (took 140.200171318 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.848460996 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.656395165 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.961514648 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.165012503 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.083368644 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.676849777 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.658166188 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.808358716 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.54180526 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.643285136 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.282163291 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.638745184 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.346991497 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.608150471 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.656211687 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.674368428 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.984434805 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.525219883 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.215195687 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.254240898 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.534556593 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.666634235 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.352369072 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.942105192 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.539918528 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.323501608 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.544023348 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.10603412 seconds)
  done (took 58.621719513 seconds)
done (took 588.318253407 seconds)
SAVING RESULT...
DONE!
