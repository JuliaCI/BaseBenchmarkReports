cset: moving following pidspec: 13535
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.241702306 seconds)
loading group "string"... done (took 0.586767453 seconds)
loading group "linalg"... done (took 6.808274018 seconds)
loading group "parallel"... done (took 0.15373668 seconds)
loading group "find"... done (took 1.167567032 seconds)
loading group "tuple"... done (took 1.75572402 seconds)
loading group "dates"... done (took 1.185100934 seconds)
loading group "micro"... done (took 0.222909344 seconds)
loading group "io"... done (took 0.973509869 seconds)
loading group "scalar"... done (took 36.262351962 seconds)
loading group "sparse"... done (took 11.057829247 seconds)
loading group "broadcast"... done (took 0.916679562 seconds)
loading group "union"... done (took 11.893680695 seconds)
loading group "simd"... done (took 4.162080355 seconds)
loading group "random"... done (took 8.520097654 seconds)
loading group "problem"... done (took 1.870423042 seconds)
loading group "array"... done (took 19.931278499 seconds)
loading group "misc"... done (took 1.682333024 seconds)
loading group "sort"... done (took 3.105653929 seconds)
loading group "collection"... done (took 16.649456469 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.483400159 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122594557 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114200283 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118215294 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.140070209 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114613654 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122408546 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083546394 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.785667429 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139960639 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117397747 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409365837 seconds)
done (took 4.917004485 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170901045 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082754059 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080794869 seconds)
  done (took 1.287073231 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064863723 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120226167 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065652063 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066653173 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066065122 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065520803 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065695934 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065632502 seconds)
  done (took 1.640634929 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072484638 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067836251 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.072423309 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066867365 seconds)
  done (took 1.405146691 seconds)
done (took 5.703146928 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.760405262 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199025299 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181716022 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.392241134 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125977457 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.161659804 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641156483 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338596873 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181725028 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079770215 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101855428 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319434856 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105399137 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644473302 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076336439 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088807281 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139136644 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432922323 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067182756 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081882337 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088853365 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127719436 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.0873899 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075747961 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145400813 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067421325 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128852218 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079707945 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066402021 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205803595 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171932717 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657604333 seconds)
  done (took 10.185090581 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09519507 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096140874 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067930054 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12264434 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097991096 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068924517 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070117661 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067152724 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085480865 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126476148 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087480017 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100616161 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064787169 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06820478 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083607049 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202774332 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079326843 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08058652 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070051203 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074329059 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104908991 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077519393 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077412741 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076519241 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127594308 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180248471 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095578707 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096498015 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067826619 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079418606 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114218929 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127144212 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066849576 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066212793 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123057854 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094021473 seconds)
  done (took 4.542519255 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.913848644 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.13875661 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08991125 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16114888 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066774862 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105650211 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064639747 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083000828 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197755645 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.053685408 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.427193071 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110124442 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083917471 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067358087 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06772236 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066177357 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.35113336 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108670441 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112308201 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083263789 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073177513 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068454099 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109325067 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066709976 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066251084 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067629794 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.100897343 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.301465655 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112548232 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067893355 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.977935405 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116519663 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067102893 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100189874 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168854813 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088574011 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132889004 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064589657 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064281113 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.144975756 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072545404 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062913911 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064006777 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080864868 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101246474 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.100706459 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.196248331 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067301208 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161026413 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066732142 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085558209 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.711774468 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152878095 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077327754 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065946875 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.24362894 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085945148 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066211114 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064022637 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064293122 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181906947 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131263876 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06765126 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065950904 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06526247 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068363049 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349391541 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066641514 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.710167169 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069599332 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076656994 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068401933 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06692639 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072217964 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072077564 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085127755 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065783015 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067609386 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065664836 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065847028 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068246853 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083301629 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.18960327 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065878505 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066702353 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.0642212 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085546479 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096847686 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069149921 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069354168 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099778747 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063251809 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066524973 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066419573 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100535755 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065921717 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082788458 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068201797 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112137024 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065517246 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.089401482 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065454259 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094459561 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.066890585 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097819763 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076877642 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.160194056 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.215393753 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064761534 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06409587 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066330668 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067480737 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067091455 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068015176 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079518577 seconds)
  done (took 19.760356526 seconds)
done (took 36.52698098 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272743007 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073744218 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074139062 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074957294 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074185145 seconds)
  done (took 1.778316204 seconds)
done (took 2.967592173 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118976362 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098007723 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063640694 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094378022 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063671459 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099202399 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098496873 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080708497 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098347823 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063600431 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095236348 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063284783 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063610182 seconds)
  done (took 2.310515184 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081801085 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082641981 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069008659 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080989245 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062767781 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081362078 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0799387 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087879308 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080140525 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07129546 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063038838 seconds)
  done (took 2.027607979 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0812075 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08341212 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069163838 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080858087 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063445989 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080985642 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08033398 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085062483 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080537539 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072384926 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062895062 seconds)
  done (took 2.021653585 seconds)
done (took 7.539421315 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076363059 seconds)
  done (took 1.248941457 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.583304472 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.056437658 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080760674 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110852838 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182773276 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118268947 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275763831 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086340184 seconds)
  done (took 8.847276164 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087786449 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068437737 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081141635 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071098079 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070981569 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071095967 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070332642 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067461579 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067964424 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071273386 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069060101 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068991527 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070377063 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068389198 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067828851 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069543396 seconds)
  done (took 2.385786155 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090847111 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09034604 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072897285 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074134323 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071563402 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071547373 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073665483 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072719262 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070302745 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071489953 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073779219 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072723053 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070997766 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06400773 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07291292 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074585224 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070235711 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072909457 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073938642 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073997549 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07353715 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063674665 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07070508 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072629736 seconds)
  done (took 3.039362483 seconds)
done (took 16.702936328 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110516381 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07071513 seconds)
  done (took 1.361432792 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080334343 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081554846 seconds)
  done (took 1.349633578 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080861652 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064355753 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088668829 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076697884 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065490795 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064717673 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085794686 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065503512 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065268646 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065163419 seconds)
  done (took 1.909494801 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067063397 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076453421 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068988435 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079841476 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072834003 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063763748 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071355082 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066844587 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076227391 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061824533 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06974272 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080864182 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070141976 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083012995 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071029367 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067019568 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069433744 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06618548 seconds)
  done (took 2.472989319 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065620767 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065512645 seconds)
  done (took 1.323862198 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065912786 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062902588 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065748797 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065877521 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062604296 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061827556 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062559834 seconds)
  done (took 1.636822827 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.364879537 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109615168 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.292113006 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069700612 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080427902 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250058495 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064720388 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069680886 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069551803 seconds)
  done (took 2.602516318 seconds)
done (took 13.852095427 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077751409 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08478565 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093485085 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.33908941 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090389519 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065080083 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112953529 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190279422 seconds)
done (took 2.257288922 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.205868234 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.560635742 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.365365098 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192780799 seconds)
  done (took 2.316677675 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.311283121 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089975052 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058764836 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06544616 seconds)
  done (took 1.730349302 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064997426 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067569982 seconds)
  done (took 1.33506036 seconds)
done (took 6.792133631 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065326396 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081745718 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064389498 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062797265 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065216744 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062798122 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062515671 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062838022 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064984195 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064936348 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067729674 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065613875 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065114648 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06261948 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062515172 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065209716 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06276798 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062988199 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066684085 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062518617 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065083959 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065407061 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062513678 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064892724 seconds)
  done (took 2.795325063 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082906643 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066419411 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070633167 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069947996 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069425599 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070368202 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070054415 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065741766 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070362905 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067291404 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069054195 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069206663 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067419219 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069211779 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067179818 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069138739 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070550806 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067336211 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067174858 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069391036 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070110507 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065773126 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068777079 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070134627 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068925842 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068635381 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067357639 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065326787 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070249432 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068879465 seconds)
  done (took 3.283447986 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06897845 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062539454 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06378578 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069046945 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063473209 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064073047 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062580211 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063219236 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063565111 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062495425 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063883699 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062634376 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063093862 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.0642998 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063645206 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066650197 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077897889 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06308006 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062959898 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063379001 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066138412 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062914177 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062663339 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062539474 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062481599 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062949434 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063187597 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062471358 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063567242 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063070112 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065968889 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06645347 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062463741 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069227484 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066186766 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062519947 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066326415 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062361691 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063616643 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062588391 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06233424 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062589904 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062430074 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069738844 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06299051 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.0641122 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062479318 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063785815 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063106867 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065092942 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062250024 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06229791 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064115165 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063741217 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066308508 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062130833 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063173002 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062080206 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063292704 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062480175 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062139396 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062486409 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06517199 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06326303 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077473642 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06931753 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062727746 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064150113 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063494897 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065442994 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064202229 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075487555 seconds)
  done (took 5.85414447 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089609124 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.198625863 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06491321 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06424659 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06123799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06306857 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066730518 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063198238 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064683667 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068594675 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063233909 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064300519 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064663301 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075535804 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06359143 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064397684 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068873772 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061049883 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063379035 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066738303 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063280803 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06632223 seconds)
  done (took 2.815459875 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152812125 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068736901 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104442043 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071692267 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066396354 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071902214 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068727838 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068996593 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069377123 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067389481 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067422339 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069112542 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066614019 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066747169 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066947276 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067319245 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069023012 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067158235 seconds)
  done (took 2.571743971 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076518667 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065389687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084290791 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065418571 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065292312 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067262198 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069430129 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073341447 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067478895 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064850006 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073178664 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067174715 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067545378 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065097481 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067360537 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064872108 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067092846 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064868506 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072847854 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069435278 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06955476 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073278748 seconds)
  done (took 2.743855603 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077627474 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066894227 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081607106 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068672548 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061131251 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063748814 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069271916 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065306756 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069560821 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066648511 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065534313 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063676606 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068429419 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06489993 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068627212 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065074192 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066974 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06513743 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066744081 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060945754 seconds)
  done (took 2.569816913 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085242756 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06702815 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067150522 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075109218 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066491293 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066913822 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074582259 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066710199 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066418348 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08601326 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066572733 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066285222 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073907192 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07143326 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066509275 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073818777 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073809801 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073729601 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066192733 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066514101 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086269636 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066615842 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074113961 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066533114 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066287279 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066845605 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066380341 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071037466 seconds)
  done (took 3.209377732 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065871977 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064942076 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062971437 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062916353 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063039963 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062794897 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062701799 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062729711 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065649455 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062783751 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065061294 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064900781 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064978588 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065464095 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065360955 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065000111 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06525638 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06327297 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062738505 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062568534 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064809033 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065317392 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064847764 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062623212 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062541045 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064479355 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06264354 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062364487 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064787794 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062517132 seconds)
  done (took 3.145831173 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073698676 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072061461 seconds)
  done (took 1.375124321 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062704079 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07893114 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062629109 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068387328 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068993641 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065669258 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07247557 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068851911 seconds)
  done (took 1.773863408 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080655004 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076413878 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066533752 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079067197 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075340519 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081785507 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130752304 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066106682 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071911166 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063605648 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078542354 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064478351 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07166541 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065795312 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071344611 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071956598 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063329214 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071077667 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068118041 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.0636465 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066200983 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073895458 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06791527 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060796899 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066446719 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086649029 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076068082 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06489971 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068305042 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072327566 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071205448 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059722566 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065123963 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065475071 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06307365 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074595857 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080061797 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06818791 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073927008 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0663861 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075628651 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060803515 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069969994 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072047007 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075515532 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065703295 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066133186 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060853043 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063152544 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067697286 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060747687 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065442483 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059975213 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074780612 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068654525 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076340324 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064054823 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066762578 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067853562 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068609702 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071465433 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067336 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067659326 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064779742 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074872767 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069631293 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074009489 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06057904 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05935773 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063198387 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075305271 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087400424 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07121627 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066470186 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06611158 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063112726 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068567683 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066888011 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071123104 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071896974 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065703068 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071039972 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072807794 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06556254 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068284447 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07375147 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063625132 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067984905 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06342748 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081605624 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064058607 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063780658 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063499562 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075519346 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068638485 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065582679 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063155611 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072221169 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05973074 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066056414 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065901303 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065748633 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074893736 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068735013 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069086235 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072799174 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071535507 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06486936 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067168666 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061085951 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064787703 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063735317 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071292706 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059035926 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067985764 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066227522 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064821729 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197861139 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064914186 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065897801 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073413978 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071505839 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065064405 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063194958 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068544277 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065851758 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068816015 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074118572 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064306131 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060964056 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06133096 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069484152 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065356421 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069431529 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070094117 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068523639 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060505381 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063886395 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070373225 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074611398 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066436091 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066650194 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072023577 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066871833 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065475418 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071949352 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068466255 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064667308 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071270048 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066851328 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06149856 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06910356 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06790753 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064098254 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069521337 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068524656 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067876325 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067237031 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064453002 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073182203 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066411075 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065071457 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06551718 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063795843 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075997965 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067696725 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060683081 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062669513 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075047922 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06407731 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065077292 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065213125 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068079431 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066486163 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063548343 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064589934 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06819324 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0761829 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069609867 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066260332 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070892346 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076528807 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06509848 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067827287 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064790791 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067207261 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065954771 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073861621 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071089582 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069916908 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067991782 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062017722 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070736286 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072901572 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064464277 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063542606 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064257799 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069408122 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070903877 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06933011 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065732816 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06368316 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065952121 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068181056 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06790603 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064875535 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064919955 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071866036 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063780041 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07239304 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066644194 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075682631 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069562666 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0610159 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069194139 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0637633 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071672991 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061136701 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063537539 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065119028 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066218306 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064373969 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067681572 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059760585 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072312806 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072310798 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064837726 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063613123 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06410466 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071181404 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065787655 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068133963 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067576592 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070250473 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074539305 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063861444 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067705173 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074127163 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06428951 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.186471302 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07174239 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065199835 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064732778 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06512914 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064244119 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068721535 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074577626 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073000063 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060057794 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06806423 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064365693 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064903165 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061343393 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070879502 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06911769 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067138474 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072685564 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066443577 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066721249 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0696218 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065858914 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066701859 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067780903 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069305546 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06647609 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068221948 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064801621 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069428925 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066111468 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064023918 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067930597 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066103536 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066558943 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071772758 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065373028 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066568318 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068233059 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066936349 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067267627 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066431546 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064991577 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068756687 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066795768 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06556841 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068617568 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061382752 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072746243 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065514818 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073896641 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066402476 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062805561 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072426555 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068345113 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070645789 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066820686 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066450783 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06748647 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065309247 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068671054 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073250275 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063543593 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075630353 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073539538 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066032548 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069401121 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065990398 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067678452 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06515021 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066764899 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065954489 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066192637 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065640112 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069839792 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068054551 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065743313 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067068672 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066212409 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06556176 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066730831 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060570361 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064755342 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064634235 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065658802 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074888724 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065555673 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064772363 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064742215 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066524873 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064870306 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06253709 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07318611 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07420351 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06600116 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072806294 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065105391 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067132443 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075911273 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059794798 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063544875 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063674022 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063598074 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073114317 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066023912 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074583149 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06567671 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065064795 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063446013 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065995208 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06362229 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060279114 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063173107 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068445822 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064328773 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063589277 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064786439 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066889002 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064804321 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07308768 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063543096 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065168071 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064881641 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061629739 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063849403 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.194185802 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069222831 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06696038 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064117378 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.0629196 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065514092 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066873697 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067143328 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066055705 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067067133 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075837245 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065323248 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069572637 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069500873 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061289203 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068564048 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066618305 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065604468 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065323907 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070055068 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069761208 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066508832 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074583486 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065472556 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066813295 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066199532 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064000792 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065634055 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064906521 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066013287 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06578163 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06671301 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073860804 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063849846 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069239105 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066084933 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066378055 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072451083 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066868658 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068998868 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072303692 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066189279 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068127777 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07351417 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069696897 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069373562 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06682349 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06763919 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071421843 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065410555 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072142014 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066462789 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066292291 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067141263 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063463114 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065325794 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065359067 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06440994 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071681424 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065932759 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065008042 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065175632 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063357032 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066442021 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069302199 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072850778 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068431083 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068320717 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06107894 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062657954 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066674834 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063829806 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067135886 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067891542 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07119174 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067989348 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066046819 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06439565 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074970127 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071460534 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069180936 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063846372 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06928712 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066190874 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067643551 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066371608 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065863615 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066727348 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069130947 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067192421 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064767057 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072278023 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069008837 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066104936 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067051528 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066199359 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065729612 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060819929 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065988 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067860307 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070472045 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06764751 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065397678 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075810308 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063389702 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065801113 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068439221 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064590923 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070180204 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060999367 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066899894 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066143131 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066480535 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060377743 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064650248 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063591319 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066888134 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064250474 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060180655 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074801388 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073605209 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067470111 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064231793 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063278539 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060349295 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.190354465 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066620435 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06755973 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068704868 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076300325 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064999592 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065677943 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06176534 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06595623 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06868313 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069167347 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063887809 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061553982 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065330366 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.0691604 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07188741 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064208014 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065917233 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068469616 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069056907 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064253152 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069024165 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063390682 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070027058 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078637849 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067141757 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066783503 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07214078 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073155722 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066085701 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061762687 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066002528 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068754734 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066528769 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067188257 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066270433 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080219959 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068974316 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065944523 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065013756 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067794814 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065219478 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07336665 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066325714 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066773998 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070396287 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067834895 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07489963 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068740856 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073469109 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069092567 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069714307 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06526073 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066314664 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064072635 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064749982 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067231276 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06668342 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071067935 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07390565 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065547757 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075836983 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074663516 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067510613 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063022864 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065486043 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065163709 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060921321 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066435887 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063766009 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063913481 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063656053 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064422872 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066881032 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071055858 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067005752 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067052875 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066052585 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060039855 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067963778 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068385218 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066725386 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062852982 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065890006 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066314499 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.06975548 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068778079 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063518627 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06725676 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067659521 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066416074 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06121938 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072749004 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064996879 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067808801 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065334963 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065920143 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066695238 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069724325 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070702736 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066917183 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068739815 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069521104 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067775999 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063698758 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063044772 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071352793 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064150673 seconds)
  done (took 42.058918202 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099774549 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063014502 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061380115 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061991406 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072941145 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062544457 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061489031 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063345591 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062632626 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06464342 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061532803 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061291925 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070162191 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076959888 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073769934 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066224354 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061193718 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062322933 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061546718 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062495787 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069739668 seconds)
  done (took 2.721453963 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072586477 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069472532 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072117023 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074896454 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066505397 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070186976 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071617532 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069877753 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07503486 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066468016 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074815704 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070141969 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066298908 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066415595 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066405968 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078159019 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075167307 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066554429 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06979 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071573242 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069917605 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07134972 seconds)
  done (took 2.853137474 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066537835 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065798385 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067157559 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060738236 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065330393 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060585065 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068824962 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063526745 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068586529 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064234124 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064611751 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064657029 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067093197 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060800179 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065956675 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06308459 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107030897 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068700976 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065147987 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066241024 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060995322 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067527525 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060998863 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061815176 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064835461 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069034934 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065964692 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063056211 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06486127 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06451813 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064996278 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063259711 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066794925 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066057161 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064743114 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064468493 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064789243 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064862159 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061066255 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063293524 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065930843 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061340032 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065494986 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066545013 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063456144 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063041322 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066837255 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065050499 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060589762 seconds)
  done (took 4.512212148 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077866165 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107404078 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066819813 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08727192 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079201346 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07458211 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069271406 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088440446 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062644831 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064781942 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080408483 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078976978 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065113086 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069554174 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071736198 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064774175 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066206796 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063770018 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068755214 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064435139 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069068077 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071221027 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078980226 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078193045 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068947275 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064141384 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064326237 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068936453 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077113202 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069382654 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068816673 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070285319 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079511917 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066781995 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064435322 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066700549 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080457044 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064954602 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066914256 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062493983 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066663084 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069207285 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07107733 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080535594 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064942827 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070114733 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0644356 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062222887 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077097312 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067269594 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072487407 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078992622 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068891957 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064866732 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068884794 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079114352 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064639145 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062913539 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067453388 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076513208 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062234014 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0685173 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077932195 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066329493 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071229808 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078330437 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069595397 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068604238 seconds)
  done (took 6.271139639 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073243022 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071292495 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079317936 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078598104 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071384725 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071559557 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071512244 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071587298 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07127119 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075778286 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071227546 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092732612 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067453195 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074374584 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07106843 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071695132 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071688596 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071721774 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071442286 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071343903 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071435847 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07887939 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071419618 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078751126 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096979769 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066785547 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071112596 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071384759 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079073147 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071032749 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078052086 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071329365 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071532272 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07913178 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.0782564 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071362475 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064523333 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070777997 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071403394 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071089801 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066436687 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079028747 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070857505 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066454322 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071557186 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070845219 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078966675 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078416815 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073572074 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075679118 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07118637 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078720263 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071218288 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071242192 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078576841 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103102109 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078716019 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078908816 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070897988 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078182743 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078573136 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084810951 seconds)
  done (took 5.95396636 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081317262 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074080175 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074625482 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060938886 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063553107 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068789355 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063312874 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063407913 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073375016 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073333791 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075635127 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069190134 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071882016 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075726112 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069320084 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071947757 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069184364 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069110231 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073526919 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068567118 seconds)
  done (took 2.735290809 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073638612 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082486541 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06571446 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071003733 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068165765 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070397691 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067639666 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068177907 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066346791 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068404512 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075232908 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07521581 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065966242 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070883225 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074886214 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070730711 seconds)
  done (took 2.451271942 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07350896 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071272716 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07905487 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065265643 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063399882 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062436304 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065286914 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060833776 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061846681 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077156474 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064949179 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067649143 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065225246 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063610745 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062208177 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067853469 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06179033 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062802119 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065090471 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077508863 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075510953 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06399162 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065776929 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064887846 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065219153 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069955324 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064448558 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06273483 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062168992 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064991819 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065471454 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068818381 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062318043 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063307664 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063567729 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062639846 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064986744 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065664457 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068174247 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064984016 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063606215 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064765075 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064869307 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066252499 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061290407 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065358825 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061359516 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067174911 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062843311 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065036308 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064939654 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067164692 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065626927 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07115644 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06773823 seconds)
  done (took 4.944965016 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078538001 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068297846 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06134789 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063686816 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068621788 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066809871 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068537268 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066996633 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066757579 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063128052 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067030775 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068198445 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06683866 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068285733 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066940962 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068646545 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061207023 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067450952 seconds)
  done (took 2.535889531 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070184964 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065431785 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071405864 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065924654 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065192484 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067815672 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061182704 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063761714 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063989348 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065253098 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064990646 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067594481 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063840141 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06700265 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065115546 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065253192 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067168499 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064180442 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064932253 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061409677 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067401768 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063790458 seconds)
  done (took 2.765667811 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.070893383 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090651328 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137773482 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082917182 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080409652 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077624839 seconds)
  done (took 1.86365748 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089531281 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078002212 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0656573 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087487758 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072410453 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066333786 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066258176 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066663289 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075740614 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075253168 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066436026 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075073171 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075138922 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074474237 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072087115 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072696139 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06702144 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066595926 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06547437 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08344224 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06709699 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07465399 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066916422 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066475706 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066522304 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073928227 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074728974 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075120195 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066301221 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074780593 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071824363 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066376565 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075040824 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075012262 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068101052 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074835476 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066564944 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083010851 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072370164 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074463499 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068027378 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072478118 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07504535 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071115053 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075064277 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06653623 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071479082 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066710147 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067238687 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085622944 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072467849 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07444872 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072867938 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075192397 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075256346 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085613733 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075682911 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07454321 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072727739 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078065548 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07459505 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071978929 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074617333 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075084395 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072436909 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074220633 seconds)
  done (took 6.144493825 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08126093 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085155237 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067227898 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075592939 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074394589 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066955718 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066633027 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066774556 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066882511 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066869534 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106858547 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067045617 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074561696 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074875169 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06678096 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066960109 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066801209 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074589321 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066561625 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08523035 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066963495 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074340286 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074359844 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074416653 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07525511 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072289745 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066914422 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066664817 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067132327 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066782639 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07167734 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066844805 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074427503 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066727449 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074341637 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066773597 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066649925 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0716397 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066925493 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072290001 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074268605 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082675793 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066713896 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066485211 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075644795 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066801003 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066394713 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066477652 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066774157 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066370955 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075145922 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075831609 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074954602 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074611309 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066816073 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066939749 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066852511 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066867223 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066901793 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072149756 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074178582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066276483 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084954968 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066504551 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067165623 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074434186 seconds)
  done (took 6.055365501 seconds)
done (took 127.206281671 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187550587 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169384906 seconds)
  done (took 1.680716835 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067114347 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095460949 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075435313 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.126889117 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065680031 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099332658 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097854272 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077133635 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065980976 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065656412 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065522949 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067363235 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129618444 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065676761 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065846922 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067415251 seconds)
  done (took 2.634056819 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096052091 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172480247 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098711209 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065050169 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09586847 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072261412 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064052824 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074172342 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069698387 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064137636 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072247964 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069969567 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064637833 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069862705 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070810767 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072287904 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064578431 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07250568 seconds)
  done (took 2.768079341 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098723388 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09013375 seconds)
  done (took 1.529874227 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.1541053 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104277939 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147798845 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.333018212 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15984098 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229085852 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127486239 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125667277 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115083976 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121655868 seconds)
  done (took 2.955831367 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096752957 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.146475068 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254274546 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11434126 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071700511 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09049573 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115878173 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077146218 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077261408 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076773181 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07636069 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075215927 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.0950184 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072744104 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072891981 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075308286 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098283891 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071560529 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074971556 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073212582 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095293519 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064912663 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072605886 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071828159 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074318547 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073517088 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064653432 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065010667 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07334794 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073214679 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075914812 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.089091715 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074132578 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104182735 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069048275 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104681441 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075502064 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070637605 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072805589 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07058318 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07463198 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0748145 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071220145 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074927672 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06461296 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075623675 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065129823 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065213426 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077055887 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065671178 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077050627 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075894286 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103535385 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066049728 seconds)
  done (took 5.838795807 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.661454956 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102021778 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069585379 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10695771 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094983399 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07141981 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.685086867 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089373144 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.175280447 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090756963 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087009971 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069166103 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080157126 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082470026 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108130947 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100769261 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092502695 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070425238 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100285552 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.097668873 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068912719 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092428266 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088723546 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.375486311 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06616036 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068892304 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066816651 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069115985 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.108763336 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077373264 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069225746 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.119275171 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083277877 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.119972185 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066268465 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067116871 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067209988 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07897137 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177258327 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.132325747 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128489417 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066202442 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066716653 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068138015 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088527317 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066405101 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.109314573 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078891927 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.117363319 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068774648 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068941846 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066702776 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067863652 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079017168 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076553658 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07987637 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.223685792 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06746261 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06709999 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070266317 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176269643 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077462842 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077978071 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090604674 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.12841254 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066603872 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.691989384 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083177115 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066499071 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068027424 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066554122 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068258017 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06684405 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.243769045 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.356645332 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069360522 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069512954 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067442664 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.151165601 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078165721 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067899073 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111937604 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066522614 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068053736 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06952111 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070141961 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.115916682 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079140985 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069358219 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068010484 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069668093 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06742424 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066610803 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.160553531 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079280308 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078987501 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.160018351 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069304166 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111627124 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078429566 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069508114 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07904235 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068040731 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06942841 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068485203 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077816016 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.094386643 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079532438 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069594358 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067109292 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097970395 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0800593 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067070831 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077976738 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.397065829 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079286395 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066896403 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080149468 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067669919 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.110513474 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069164986 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177409354 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068057457 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078047419 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068313586 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066789688 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067366263 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.109609758 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069250417 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06800368 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068154904 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06892082 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078348957 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.132777586 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069116733 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.160054247 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132356438 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069347108 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.118266874 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067774742 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116229418 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069179944 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068291269 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06631328 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.686151254 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067387332 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06744917 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068582455 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.136194366 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067188354 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077728314 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075482455 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065413087 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.707369348 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077246488 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074333304 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.20859173 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069317012 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067934052 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068042668 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070303936 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108639288 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.144668896 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069963402 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06788049 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076933553 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.110091857 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066814644 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077467295 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077369371 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077578365 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068281901 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069396396 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079551197 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.117915505 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078052548 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.134535023 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.507882435 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067558663 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076570382 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.141612111 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068314688 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083912082 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067993196 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082376422 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111718687 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077059983 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.22526879 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.113145302 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.137499926 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07927166 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082710685 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067257511 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067312692 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078889896 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06802595 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068872895 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077088801 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069002128 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069164753 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082976362 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067753232 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.174802612 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066353683 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078231454 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066680477 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069703057 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0826902 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067665004 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068984976 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07855722 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069561184 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077076765 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.786336136 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077219672 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067382191 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069008179 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.1348696 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.11207267 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06703188 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06706757 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069007245 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.108932452 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.158577529 seconds)
  done (took 28.015504129 seconds)
done (took 46.771075884 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208033541 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152536355 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.202246183 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117307558 seconds)
  done (took 2.117382885 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12225351 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100301488 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095088535 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065183064 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101600361 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064903009 seconds)
  done (took 1.923237119 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310900432 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216512937 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181456656 seconds)
  done (took 2.078779518 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197472861 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187498762 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.397545875 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253743664 seconds)
  done (took 2.515264918 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143322595 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088715512 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067381676 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082990811 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133622564 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160720183 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10055774 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125253014 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078185691 seconds)
  done (took 2.405602615 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144222058 seconds)
done (took 12.575058825 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.215524076 seconds)
    (2/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101842229 seconds)
    (3/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.184284307 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.107954554 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.154024514 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.162741474 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101139514 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.102015977 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077798345 seconds)
    (10/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076657476 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.153088802 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087851117 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073996688 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090093539 seconds)
    (15/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.199172671 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.198452067 seconds)
    (17/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.204527292 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.196225482 seconds)
    (19/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103739899 seconds)
    (20/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.212843571 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073095094 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.171617647 seconds)
    (23/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082203085 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088995683 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087873491 seconds)
    (26/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158654466 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079837746 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107473407 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.082782798 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07340612 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071547409 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068453131 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050765963 seconds)
    (34/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.200628689 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113312513 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080653037 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.105755025 seconds)
    (38/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.091687474 seconds)
    (39/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077993287 seconds)
    (40/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06146954 seconds)
    (41/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051830299 seconds)
    (42/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.192656954 seconds)
    (43/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078310463 seconds)
    (44/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.110179531 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105385187 seconds)
    (46/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071214263 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121805481 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.175665709 seconds)
    (49/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.151579301 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074558556 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093719725 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072312281 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090065568 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064500494 seconds)
    (55/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.100805798 seconds)
    (56/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078733397 seconds)
    (57/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.061081692 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089541062 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087514576 seconds)
    (60/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075659296 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.170019511 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066946768 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.147754377 seconds)
    (64/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.170413009 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.134858547 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071173121 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067605962 seconds)
    (68/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11751262 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093228458 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087584119 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052133274 seconds)
    (72/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069641173 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133138945 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175214012 seconds)
    (75/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.119614477 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074280941 seconds)
    (77/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074975366 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08461396 seconds)
    (79/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.155003634 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.173494828 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.14466644 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064474935 seconds)
    (83/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075626389 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064949671 seconds)
    (85/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.247793385 seconds)
    (86/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.101868225 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.06617266 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075947852 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066295508 seconds)
    (90/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067076795 seconds)
    (91/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072243414 seconds)
    (92/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.137291493 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.136302748 seconds)
    (94/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074442387 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071285043 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090859892 seconds)
    (97/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08935519 seconds)
    (98/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050603366 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.163591132 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172760507 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134675291 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167234808 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073035108 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075781509 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.173212601 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 0.125786728 seconds)
    (107/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070424165 seconds)
    (108/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.140320559 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072493113 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120622679 seconds)
    (111/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075226396 seconds)
    (112/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.063193678 seconds)
    (113/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068931494 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.138709267 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072431892 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136538145 seconds)
    (117/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072887785 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074199175 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.274005068 seconds)
    (120/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071130953 seconds)
    (121/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052266546 seconds)
    (122/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052361493 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087232701 seconds)
    (124/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074213732 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054788002 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050840386 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.132883713 seconds)
    (128/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066519803 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073520645 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.091427382 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091084216 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075284736 seconds)
    (133/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.09788102 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070054285 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086884294 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071294943 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064741543 seconds)
    (138/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076325083 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135685288 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.137508994 seconds)
    (141/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050190618 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071803018 seconds)
    (143/309) benchmarking ("sort", Int8, false)...
    done (took 0.137928796 seconds)
    (144/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086751928 seconds)
    (145/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050782284 seconds)
    (146/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052217109 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064980605 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.0648079 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072002678 seconds)
    (150/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052037276 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065332224 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.137470001 seconds)
    (153/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.168451568 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073140239 seconds)
    (155/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070882836 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.074953535 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07116644 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067286386 seconds)
    (159/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050949433 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075178097 seconds)
    (161/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.097603333 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091388925 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050938279 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064983434 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098149474 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051518776 seconds)
    (167/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066042475 seconds)
    (168/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081680933 seconds)
    (169/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061711426 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064694618 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071890766 seconds)
    (172/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.179073928 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065021542 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142408358 seconds)
    (175/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067183372 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092411128 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09145833 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06526803 seconds)
    (179/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068259422 seconds)
    (180/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061995286 seconds)
    (181/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185145028 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070993091 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137728644 seconds)
    (184/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.140981081 seconds)
    (185/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060462236 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072704932 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071234433 seconds)
    (188/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066483603 seconds)
    (189/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050375782 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053333921 seconds)
    (191/309) benchmarking ("sort", Float32, false)...
    done (took 0.126083818 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.105188922 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072380873 seconds)
    (194/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.154174467 seconds)
    (195/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051376775 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.049980119 seconds)
    (197/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.103081502 seconds)
    (198/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.050730527 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.177664259 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065135808 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.087231472 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06245741 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.149547724 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064704064 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065534697 seconds)
    (206/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087598253 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085890025 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066312649 seconds)
    (209/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070927561 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050050642 seconds)
    (211/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071324013 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072848036 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051652254 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063375199 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.070733588 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.124130082 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.073832368 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070941809 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052018645 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071378894 seconds)
    (221/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.0653494 seconds)
    (222/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06591473 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063407448 seconds)
    (224/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064265319 seconds)
    (225/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050851865 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068966114 seconds)
    (227/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.08530317 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08719174 seconds)
    (229/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065165068 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.049879615 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.062575773 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.167849962 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106367434 seconds)
    (234/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05001253 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064433571 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050110059 seconds)
    (237/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.10664185 seconds)
    (238/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.059864163 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.049771773 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.129122527 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051661815 seconds)
    (242/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051034991 seconds)
    (243/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.109989296 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160858094 seconds)
    (245/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.060337138 seconds)
    (246/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.063498922 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.048995945 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.050816507 seconds)
    (249/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.050824142 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063593396 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.108831639 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.085877016 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.050651529 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.134960745 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06329406 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062703138 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051066547 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.163567865 seconds)
    (259/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.049552966 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089217154 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.06949432 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063502308 seconds)
    (263/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052241155 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.049213873 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.070301431 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065234999 seconds)
    (267/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073850065 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061071792 seconds)
    (269/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069973699 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06334429 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053109917 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.049346785 seconds)
    (273/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.102921479 seconds)
    (274/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.062569316 seconds)
    (275/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070686789 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.062386848 seconds)
    (277/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071218078 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075882961 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065958231 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069721006 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061558118 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.061590253 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.049309288 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.050707188 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.092633963 seconds)
    (286/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.050878171 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.069853876 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.061611208 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.049657158 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.128330485 seconds)
    (291/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07545529 seconds)
    (292/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.0505354 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.049607186 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069329713 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.128497573 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06262917 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.050760592 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.062661466 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06355737 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068314812 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.103640839 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.068409411 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10715539 seconds)
    (304/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.0603594 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064558337 seconds)
    (306/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.049744025 seconds)
    (307/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049277929 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.121720534 seconds)
    (309/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.06933301 seconds)
  done (took 29.67895659 seconds)
done (took 31.065726753 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090909846 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093231327 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075860912 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094403524 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081915597 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078160549 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073906757 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079778211 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081206025 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083155689 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079893315 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056368019 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075131018 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075291218 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075476675 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092271129 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079050043 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073677096 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073882276 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065832958 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.0735072 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066637812 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067843809 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055866206 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078246177 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07263205 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072902271 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074331306 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066118256 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066819745 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069341391 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073638877 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066034123 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079008536 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072297855 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073372149 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074936817 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076927234 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067620865 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066245677 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074676288 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066101364 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072577611 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073694978 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072057127 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071912106 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073123546 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077988565 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091336216 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068385651 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074651918 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076519212 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075950216 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071930247 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069304513 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072861075 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070465602 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091137034 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073195545 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068018562 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073890337 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073702309 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071406331 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072727713 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072931827 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074474119 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075063651 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071320737 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074388716 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071173125 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06564061 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073272827 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069227648 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065854828 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07606438 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076878214 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064971234 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071236549 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072632193 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07130784 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065090219 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06771299 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067261516 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071397145 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067862243 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055201235 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069030302 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072158467 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064754434 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073272936 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071556206 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072131369 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067549821 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075736766 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065275497 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071213993 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065498977 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065709596 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066958605 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069466224 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065806785 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067792122 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074373808 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066934576 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071401834 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078766478 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065491954 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072185726 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064463387 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06458123 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079425713 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074707355 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06537427 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067905594 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064797663 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072485272 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064992669 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065726989 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065480375 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065549455 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071127833 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065032641 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066999265 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072547391 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.0775874 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064999992 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068330493 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067008381 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065098193 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070451261 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065510713 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065146873 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200716811 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062142009 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06745749 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065103049 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072395007 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067730771 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071815669 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06693574 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073247926 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069375888 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071081061 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071145545 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064312345 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058503448 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068336223 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067925945 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067580806 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065226597 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066889905 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064906072 seconds)
done (took 12.634518829 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06625957 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142004009 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097583604 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094735771 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085025239 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066690891 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075753381 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100983844 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067562404 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101146184 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08672771 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084613554 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111529691 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064666349 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065770283 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069278082 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066998061 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080551946 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100004114 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086052794 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108392024 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.0651229 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094135281 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089595751 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086273693 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091648622 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066513045 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069192614 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069068869 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100190416 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085905956 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069603964 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066730547 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099520342 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09160602 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082603368 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066223588 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081979086 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066117643 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065407277 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080261342 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097608497 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079544154 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07976729 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06979624 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068976794 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066840761 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083388986 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088421881 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077935801 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085854413 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10222268 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068724943 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065593187 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06467532 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084819259 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065653473 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068424409 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066335679 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067817827 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066033236 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068865199 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080896287 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08589004 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06998732 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079698958 seconds)
  done (took 6.805376333 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083208196 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089203163 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083025914 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082644671 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065385934 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066044185 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066341649 seconds)
  done (took 2.064425325 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066155854 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087229246 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088822395 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088090174 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084200407 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086294649 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075311684 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067039384 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080337728 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067401299 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086712092 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100645654 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066864087 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072583667 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090159979 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066206453 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09000545 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066467392 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069170896 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089557054 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068078985 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081490567 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07023906 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067039774 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080646611 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066776073 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112162017 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070216794 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06759184 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069346771 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064467459 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105750724 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.0801638 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074975996 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066648472 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080765118 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081264711 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064928355 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082088583 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071196097 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079982182 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066532163 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067631569 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064553633 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070706246 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076861313 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067256323 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066819723 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068626713 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085734708 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066915549 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079463578 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070618409 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068964735 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067651221 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070275002 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075714092 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067126024 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085622416 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067684329 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082979807 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082148952 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080429038 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081803305 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068222985 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079651873 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079811709 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068277945 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06784927 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069732269 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082060597 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064301945 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067585238 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076451861 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06751015 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088986296 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088768694 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067508447 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075172842 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066432152 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066432018 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06651808 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088764402 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068873131 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065792595 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070493187 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069007457 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064597332 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06543052 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069757906 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064253578 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068024749 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069284119 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069505931 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06877521 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083109447 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068910184 seconds)
  done (took 8.762270499 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068211507 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067735737 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068973648 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067192116 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06787909 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068090829 seconds)
  done (took 1.958038201 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092348316 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068631119 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080151219 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071605054 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103263049 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086632681 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087223796 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077964341 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082801887 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078803482 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086433038 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088147305 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092555292 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072870313 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086021687 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071262571 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086474853 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075535062 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077920204 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072776945 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086401358 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.0722394 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072600643 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081887787 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075416445 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071795885 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067558972 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078693332 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078062284 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078440685 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.0719388 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075166135 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070260548 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078060878 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086273408 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070215372 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071318392 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076627805 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071867602 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075046779 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087690301 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072304524 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073942334 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07693016 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078671105 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069934117 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076613323 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07558241 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085788641 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076593536 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077083517 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071010075 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074831143 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076186154 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069787019 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077508395 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076157973 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085999801 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071372388 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069687015 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068286091 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074846479 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076944962 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074917857 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078262616 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076281706 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069832344 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072117145 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072010691 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07116884 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076376957 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068695295 seconds)
  done (took 7.07992743 seconds)
done (took 28.181360881 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54171611 seconds)
  done (took 2.058405887 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.617739099 seconds)
  done (took 2.158389641 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.634684862 seconds)
  done (took 8.17289912 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.38974453 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.50982371 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.709306789 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129997811 seconds)
  done (took 3.314822058 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.674325734 seconds)
  done (took 2.224012916 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208281185 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194776222 seconds)
  done (took 1.959443654 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.36834793 seconds)
  done (took 1.911975797 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.100960534 seconds)
  done (took 2.647485485 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259588846 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16202586 seconds)
  done (took 1.969317419 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457421029 seconds)
  done (took 2.00308775 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.86109177 seconds)
  done (took 6.40858047 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.207284839 seconds)
  done (took 1.797210255 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239026798 seconds)
  done (took 1.788997617 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.698123771 seconds)
  done (took 3.248956992 seconds)
done (took 43.210761214 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080640729 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080469216 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080486423 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077918268 seconds)
  done (took 1.857680665 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076961191 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072680817 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076691413 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072229455 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076699967 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072574726 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07432319 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076575787 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072188221 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072772843 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072292553 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072257754 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074915294 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074397124 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071252412 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074808096 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076222422 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072472261 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.0755053 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072854386 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070775143 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074865684 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075118186 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072201557 seconds)
  done (took 3.326570698 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077675437 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07312491 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074406751 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071631648 seconds)
  done (took 1.856927438 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077094655 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091398348 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088482722 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078263104 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091373808 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085939903 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069291181 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069175595 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073098985 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076882398 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067889339 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096175897 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.0877983 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077147947 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079009673 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065924291 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068148373 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086782756 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077535337 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077806965 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070193809 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076603914 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068284932 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088279622 seconds)
  done (took 3.44490041 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077476804 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103092436 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077115537 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087713078 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090524585 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065312625 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074333205 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089044043 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122651882 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065237119 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069739854 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065554131 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072758309 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064952234 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076478677 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.1048481 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10865103 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068832768 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095708884 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065417101 seconds)
  done (took 3.211670708 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072973679 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069223345 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065236129 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068260925 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077800295 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073007676 seconds)
  done (took 1.992950007 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068627508 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067254498 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067109303 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066983188 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071980977 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067399061 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066288667 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066878343 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066750187 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066615052 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066460811 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065432341 seconds)
  done (took 2.370598719 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.325186944 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068559098 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068935617 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065739518 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070576471 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066467595 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079679881 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067749207 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090173524 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066409803 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066617856 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068375487 seconds)
  done (took 2.669238571 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203670801 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075735379 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235466359 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136995587 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111378992 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115607899 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103754458 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113072211 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142646152 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101722239 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16737327 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165742932 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107410587 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137065104 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089359125 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098374863 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155125508 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161733567 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103476891 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165483402 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144483362 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124745721 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147137566 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101560204 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106031799 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121967068 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071278609 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080186021 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169993317 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131054551 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146377854 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110704141 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093327657 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176119234 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170824019 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14222581 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135108389 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084514947 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102278553 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133340255 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199797924 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088793242 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16406323 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245740385 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08225108 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139538633 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120083216 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120212677 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106896761 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090850307 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144917942 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182357814 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137566443 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087678502 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112172073 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115058703 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115057186 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102981074 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181283465 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161643631 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127867363 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07107375 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098848584 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152660578 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131647345 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109246708 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125817893 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093731512 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133112074 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154078431 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117768529 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142598346 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128544981 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088241403 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118895157 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139425616 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128167601 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169538197 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124731977 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073198807 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124306311 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103430044 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081513566 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142914052 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075653545 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175266499 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099235012 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106205106 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112839903 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10901458 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109039625 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161046751 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143563127 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245398051 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067150438 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104267254 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120415655 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147229163 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088637239 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108337418 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115523309 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078356216 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138056483 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075440444 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123375333 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075597052 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124606036 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132392242 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075855767 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121290849 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101791663 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099820572 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132438114 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15896165 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089702695 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08276103 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167340139 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123214343 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105164186 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143190816 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154709453 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.09916566 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102453407 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149221776 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179855504 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089525573 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162245355 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107627258 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084053947 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087564198 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123478683 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112383061 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122449797 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082138991 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118691702 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16793149 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075450087 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095968503 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133918753 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079235547 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081050706 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1036637 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100704239 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094699821 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100087852 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103889969 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138392769 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122919745 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104811558 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269901182 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098797165 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169454404 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089601241 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100259665 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103463016 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070009714 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137114225 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1571543 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080547475 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164983713 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12282018 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104878432 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119575475 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083628807 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14019933 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078169675 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070266989 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145419882 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110535664 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110536776 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15045822 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105026579 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126552249 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120031089 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134491115 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132527122 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12872735 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105099334 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088000925 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110773591 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125467821 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073081115 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091011902 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08016201 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104158299 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095589581 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083081134 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142156413 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124282157 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100093547 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111522577 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096810051 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147649523 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076536925 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129217033 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119091815 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094481205 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151834719 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151531247 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130947898 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099140976 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144291995 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070456445 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073754683 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.232280059 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123644882 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083698961 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083832327 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117768871 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146982157 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129404608 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13763709 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111386685 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121317178 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155057292 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069992234 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11585091 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147788817 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120991453 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103894941 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090280224 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099726852 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141814059 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107953256 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181804908 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114595193 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126652494 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154156235 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099927153 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079536417 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103292634 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140940753 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104465246 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143969696 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09927166 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087676845 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109948297 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074527313 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099401046 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126811517 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119285781 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13546463 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114426995 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132777619 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07696178 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117096707 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120496561 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122013022 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064289111 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120010379 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160902794 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093541704 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117827138 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152444789 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07900132 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123640963 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321309799 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14585556 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085119189 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11069009 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119084043 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12728288 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119257395 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140241311 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110100025 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135393247 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109773653 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086060444 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087991095 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096743193 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104979878 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094700656 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106880646 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115042417 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095573715 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131521964 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102272963 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109764686 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117432745 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096260611 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.08994526 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096357513 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173158757 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118911322 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171800971 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099363413 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144529746 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1628497 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074979222 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079114274 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078124032 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139398821 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083632996 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131032196 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097886301 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105469926 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12386346 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14196532 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095077236 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068794014 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108312983 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134061918 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112004752 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0983773 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104255944 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16236702 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100103891 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079406956 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113608237 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104188916 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101893806 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171242565 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061662737 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097245534 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075336466 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080011832 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126213623 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150057631 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079508211 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104741256 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117033829 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107562714 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124717081 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099095244 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097365988 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112361344 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145203938 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125451789 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087634604 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109167493 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12496068 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151281819 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102199781 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110888537 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164802432 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147309745 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15561667 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086292561 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111409928 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110993003 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105288734 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134911452 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081892019 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158304955 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079896642 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131420284 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100795079 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086734269 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125166086 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.096679057 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08611385 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142958871 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113812035 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080580167 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074173687 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110943484 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113883414 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101482965 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072946752 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129624548 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070735258 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124445035 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157468286 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078374296 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099662941 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.353217945 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082886284 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111207631 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106144735 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092318969 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098636024 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175225751 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090199985 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152860208 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143357842 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114625012 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139954738 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101600137 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637290646 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079380425 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154433223 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119008639 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173595152 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099487791 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120201426 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110427713 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125078204 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145696451 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106337345 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181184303 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133163347 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11683118 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080276183 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103892366 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102567979 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088891512 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105313294 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114119342 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116232892 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093540151 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116559093 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123681014 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082295679 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095460431 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156185155 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116946531 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144558182 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141226722 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085684372 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118077502 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139269131 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079932288 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121102868 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150560318 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105997948 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098188171 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080341989 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.251734892 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170876067 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074175993 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162619118 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119799605 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109991751 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112489799 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114191797 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13221759 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107828994 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121058879 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094081102 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110294497 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113608976 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082646726 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077618052 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1055586 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112855383 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097246191 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098669881 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096521013 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15091186 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07198204 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096040697 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103271573 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145014504 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173728527 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088575623 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082784918 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118190236 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112717255 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11297583 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120628122 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07936573 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082261847 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.0819563 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077631864 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108573681 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112401908 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104381312 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111208826 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163273765 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082331547 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223720755 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09526424 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10451213 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069838507 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078581092 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095865866 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097509227 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108382523 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100672885 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170474753 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095010425 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089870072 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091667358 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073040959 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082332501 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27578852 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111897177 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119449736 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098170237 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062305489 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109325684 seconds)
  done (took 58.749349621 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108230553 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082321591 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097571758 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150267779 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122105305 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212426263 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157379688 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199071399 seconds)
  done (took 2.818625866 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068532205 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09431221 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100115813 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082647565 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066674256 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06886601 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225633271 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080273442 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066506174 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08801604 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08004404 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070170206 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.400365242 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066188696 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068796701 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062729865 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067299807 seconds)
  done (took 3.438777105 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.377223439 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.363456344 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372164302 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073450262 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.667153036 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089255377 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.079222988 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096160912 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070888644 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.268658775 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703179289 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092503388 seconds)
  done (took 13.940821349 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075111811 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069368109 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083854908 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08363336 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073042919 seconds)
  done (took 2.069409727 seconds)
done (took 103.360176 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079504519 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.295670585 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053255695 seconds)
  done (took 2.062653625 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082828318 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084222772 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085001103 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082745605 seconds)
  done (took 2.031631719 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074346302 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075989353 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.08428612 seconds)
  done (took 1.926920788 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223440868 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139967961 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086485274 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082045755 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07758684 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078734455 seconds)
  done (took 1.935274706 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072367409 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074759321 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072949025 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075945571 seconds)
  done (took 1.988821281 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077294996 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053268963 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055090875 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055858889 seconds)
  done (took 1.934742347 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085826469 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079182468 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078899368 seconds)
  done (took 1.937024849 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105937203 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085114629 seconds)
  done (took 1.884836806 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080964073 seconds)
  done (took 1.776644114 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098699293 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113947187 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128726832 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109372362 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135915642 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110958293 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085110859 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086206609 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076610276 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086801202 seconds)
  done (took 2.726471483 seconds)
done (took 22.418799491 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078577566 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366161279 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360629678 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090898017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668724539 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357007964 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.980783853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091965905 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121195395 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067642426 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084011164 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648168846 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.009790403 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323858958 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.995777688 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317842244 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650096537 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068157723 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067558337 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067904785 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96846686 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067654826 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067720456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068179979 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649266486 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370569307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067975382 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318380629 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067544858 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069567559 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354860573 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067838988 seconds)
  done (took 16.236033702 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070313413 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118410336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073309912 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084539138 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07010088 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06985573 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071502473 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069471564 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125194239 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067677254 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084417928 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067565188 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071877347 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069188122 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086969382 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068104632 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069024838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068754163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068194332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068333539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08651593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067912109 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068494611 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068784403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068396602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080381003 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068723392 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069351055 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069088532 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070438083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07104548 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069032224 seconds)
  done (took 4.109363881 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114722296 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124924684 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073915062 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10389386 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112218029 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070201625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143511039 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092627446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127695289 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068074345 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084836345 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067920865 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101361938 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069194959 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087843261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068383256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069470299 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068465087 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068605119 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068484781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087558466 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068351592 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068612416 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069038196 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068437295 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081579041 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068761493 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068657048 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068617408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070373464 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071554029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069165564 seconds)
  done (took 4.359033438 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072646771 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075351148 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082953066 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083474936 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069709871 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07264939 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073088956 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069852826 seconds)
  done (took 2.314361209 seconds)
done (took 28.72037346 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078261401 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068993919 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073195346 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081206722 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072647358 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078953348 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067332763 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07520871 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072527172 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072856041 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075198132 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06844906 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071244934 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067523414 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073550132 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068041962 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079501322 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071992875 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078894881 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079085692 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070396216 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073168158 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074157018 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079100889 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079402674 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079378211 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077287235 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073123799 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069126319 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07054661 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077204237 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084355686 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06848003 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079595723 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06820898 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068569655 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071838275 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068593578 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079796362 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076879111 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06941702 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076688644 seconds)
  done (took 4.804637036 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088235059 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091458547 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085407163 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061461206 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067090003 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064862319 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088936129 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059820953 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060220601 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088504738 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05597079 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.0593433 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06288264 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054055278 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059277768 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056845663 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061941282 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055956644 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059383443 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059360491 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058532502 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054407775 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060426464 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065409816 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056656626 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062239617 seconds)
  done (took 3.41540645 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074403422 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083971417 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088161262 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126392704 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104125621 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077079821 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078163725 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092190151 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085222645 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066983759 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070902739 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093434891 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087929747 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073682062 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067879091 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084885815 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081887278 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068955651 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073305799 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091522429 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08396828 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083366774 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09261571 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081022153 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066954881 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069885944 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070984092 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081001304 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072001308 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076346537 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071505876 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070868703 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069226931 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.089815457 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071046854 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06916148 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090519038 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076994846 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078026696 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068111645 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07057246 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068082828 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089518797 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123303665 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067315106 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074484595 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075384539 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07658373 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067862927 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086317848 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078805626 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067062911 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070991687 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066688163 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067546719 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080236284 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06957727 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069994157 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076588932 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070375116 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085577961 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071620775 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082890194 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067000498 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074899135 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066693322 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068720424 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066873054 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09231409 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06902822 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10840605 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068772681 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068203346 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076207516 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075384625 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073530109 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.0676414 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0827194 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077610603 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071050171 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076016058 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070564916 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070321063 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087667621 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069651434 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069006079 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068314511 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073592974 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069934101 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068913444 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080362454 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067560803 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070553915 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084285679 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067291251 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068590154 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073616975 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07200767 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067444051 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078718576 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072281939 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068039944 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076747121 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067471937 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070549459 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077939758 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073854006 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066827365 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072163867 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073913956 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068273171 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069257465 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070769142 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069607298 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077623855 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074152553 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072185691 seconds)
  done (took 10.63372956 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160058695 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154574219 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071354715 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145441803 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076715325 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078821717 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147474009 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094368862 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067916782 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068599695 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069058804 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115392027 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105715347 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121933636 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078960366 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067794241 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083269259 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117572147 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14982326 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143633271 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083555127 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076829566 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070099038 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069273141 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074840172 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082333336 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090642447 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077028042 seconds)
  done (took 4.497731385 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080915833 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100973109 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073768545 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089610183 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09057869 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067875984 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070432452 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069730396 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080724217 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078695106 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067683587 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073647111 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074393757 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07448841 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068938432 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074914738 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075114834 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069480414 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072106149 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073351167 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077804149 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081205733 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071955705 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067082192 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073865841 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067556215 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064253633 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083948602 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068164458 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090148274 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065712298 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075304476 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081652721 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068715599 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068054848 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067748478 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067669688 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067490946 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069356363 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066410507 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066544723 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058202255 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067149289 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079299888 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074322055 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056671965 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072660268 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073512473 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073065851 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065579973 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070443427 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070795504 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071083175 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074927103 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.0727453 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072953675 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068929595 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066492939 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075269038 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070308234 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064825102 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0662294 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071995073 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06575719 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075237275 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072126971 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066118617 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067044747 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069123885 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073449037 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066949597 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070633596 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065397405 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069266257 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072001986 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069221763 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068364344 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065834441 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067277117 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067705875 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055970274 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067000342 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053784639 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070787686 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065637708 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066329116 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067415943 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072030924 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079179972 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068510847 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073374494 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068651644 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067129957 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070273243 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06030339 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070270791 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082484507 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082254187 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067537327 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065484538 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082004338 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071995031 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066549673 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056355789 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074847601 seconds)
  done (took 9.223784397 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095186182 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088098821 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070640608 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.0828648 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091269967 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086825362 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074868567 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076882991 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069156006 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081952504 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073415938 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076323603 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068179599 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077081682 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094370153 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077276939 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069637114 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076744353 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071882771 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101428845 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082835552 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082007068 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074965854 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068113146 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07614499 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080200677 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090259974 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080204118 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078624439 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075446285 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080151784 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090059919 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074172202 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072100809 seconds)
  done (took 4.474940137 seconds)
done (took 38.759281012 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.804639193 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.965671287 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.794901964 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.139991677 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.862646259 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.022500337 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.929759344 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.788838574 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.948101167 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.826820971 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.051691871 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.830479072 seconds)
done (took 65.701007508 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.888536944 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.927800868 seconds)
    (2/2) benchmarking "String"...
    done (took 2.061745089 seconds)
  done (took 5.717541973 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.097240953 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.314847756 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.029763645 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.781290215 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.787966909 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.077350598 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.582988533 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.295573099 seconds)
  done (took 30.595088 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.986993987 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.98000279 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.441583805 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.480840373 seconds)
  done (took 15.656527816 seconds)
done (took 63.76240474 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.796505573 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.81064595 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.78886601 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.760378238 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.835518318 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.781648358 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.04383474 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.827485645 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.779521397 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.76694608 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.778544452 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.210067647 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.779360688 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.967904458 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.777754465 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.786534997 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.784164886 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.235488878 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.935376829 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.782010467 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.785479474 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.796534431 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.782836574 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.782537863 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.788732151 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.775447485 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.211844881 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.779635168 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.396665703 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.776879528 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.800711206 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.191631598 seconds)
  done (took 203.816647157 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.771787389 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.603312564 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.700830776 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.773298255 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.158322148 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.970320616 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.903647014 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.201234988 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.773462847 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.791922455 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.946155326 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.771975362 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.980532067 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.777643877 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.780679263 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.864664608 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.950066559 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.984726252 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.775585374 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.033438906 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.798142394 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.869025139 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.83261091 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.933072132 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.817388051 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.85683919 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.783481296 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.797329385 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.960607087 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.902496311 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.81344412 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.781737796 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.902847894 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.639422983 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.783854866 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.772841262 seconds)
  done (took 169.475659294 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.302180806 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.764414127 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.764519707 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.762768078 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.777140783 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.763125336 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.940021957 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.896088292 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.227795806 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.088170744 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.817001001 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.610276061 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.76099375 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.82908556 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.775176143 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.762936747 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.778519283 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.789976509 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.762345594 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.762714422 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.890000885 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.773826567 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.763312864 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.768591153 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.762819053 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.767376019 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.131686317 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.867796979 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.763335276 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.767037553 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.022646642 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.76205903 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760794698 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.657249001 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.107396905 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.855277392 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.763257191 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.766751941 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.761316892 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.980522372 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.762066328 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.759653619 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.761372977 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.763345155 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.936173259 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.762670732 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.891060874 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.760620537 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.266958829 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.759820354 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.760794355 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.898032405 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.450148095 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.75846832 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.75864156 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.76175766 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.759225621 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760593702 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.758702001 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.764322635 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.753732157 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.835147375 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.761187071 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.761879353 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.764798259 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.759236424 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.825603872 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76002252 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.978718702 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.81225911 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.865320219 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882247913 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760203146 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.82558031 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.851958297 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.758702949 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.757323092 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.758168605 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.758595379 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.838047823 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.758253741 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.890016142 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.766112809 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.759374002 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.806396371 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.826881149 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.759129594 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.648952984 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.760392304 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.758071071 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.097052747 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.761622884 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.825257141 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.758597935 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.757698699 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.758383826 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.892915682 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.890209663 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.536278787 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.759980959 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.739130335 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.758696348 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.900583905 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.756619573 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.944417729 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.759359851 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.839686111 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.761787985 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.758146131 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.756394197 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.786285983 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.758346883 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.81474898 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.75897736 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.12723005 seconds)
  done (took 399.96010766 seconds)
done (took 777.329377549 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.443873793 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.40830672 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.520104864 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.433513666 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.412065266 seconds)
  done (took 13.91852189 seconds)
done (took 15.618747045 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.84693689 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.847757013 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.781834976 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.844691119 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776317926 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.844854424 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.826302097 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.782714699 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.814398485 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.782055346 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.813276896 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.781703229 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.769232961 seconds)
  done (took 25.213136331 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.00170096 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.993753286 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.831360116 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.990282058 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.806459025 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.99709117 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.926750677 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.909403552 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.912963018 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.774563316 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.77218768 seconds)
  done (took 22.619490224 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.003316096 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.994716417 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.834403523 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.996773516 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.807761528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.00027524 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.923678445 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.915009434 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.927457803 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.776191408 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771659849 seconds)
  done (took 22.653635339 seconds)
done (took 72.187161394 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.766566512 seconds)
  done (took 3.46944777 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.79024777 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.923708875 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.772293263 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.771054324 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.768807647 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.770372184 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.772199155 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.767818319 seconds)
  done (took 16.040381939 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.764431172 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.765149474 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.766619664 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.768858476 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.767003358 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.767405623 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.766926501 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.764873899 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.765989357 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.767665189 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.765729887 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.765367376 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.768230121 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.766372603 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.764980191 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.76750595 seconds)
  done (took 29.966511786 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.767069853 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.765741423 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.765495575 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.766339173 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.765788497 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.766459062 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.767405352 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.766453729 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.765998144 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.765864727 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.767161878 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.766124439 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.766445012 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.766788756 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.766525928 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.766468415 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.765833594 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.766467319 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.771331279 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.766578502 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.767298862 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.766068541 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.767657386 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.766935815 seconds)
  done (took 44.107829306 seconds)
done (took 95.286072044 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.504716275 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.228083493 seconds)
  done (took 8.438675605 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.769239709 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.768998009 seconds)
  done (took 5.280892081 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.769031602 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.76903977 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.770445762 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.769640235 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.768995009 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.769445632 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.769160677 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.7716424 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.769936388 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.768870975 seconds)
  done (took 19.401588957 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.770416559 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.770570047 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.768131079 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.770588567 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.769626951 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.7677036 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.770018434 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.770507611 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.771413711 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.768263046 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.77017579 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.768951906 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.770247895 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.769535208 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.771283959 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.768900218 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.76698696 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.768174935 seconds)
  done (took 33.557353586 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.771613307 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.770178321 seconds)
  done (took 5.247797427 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.768020312 seconds)
    (2/7) benchmarking "second"...
    done (took 1.768148336 seconds)
    (3/7) benchmarking "month"...
    done (took 1.767832257 seconds)
    (4/7) benchmarking "year"...
    done (took 1.769683947 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.768004366 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.767893119 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.768627022 seconds)
  done (took 14.084910603 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.771844434 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.925705821 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.99280802 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.433827321 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.772125642 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.775463673 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.730013449 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.77435074 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.777175878 seconds)
  done (took 19.660243658 seconds)
done (took 107.376725524 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.609724757 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.766836352 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.111661123 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.873519339 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.786287438 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.107954044 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.804276117 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.992547722 seconds)
done (took 42.760502236 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.852080281 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.247896256 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.259033089 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.47911192 seconds)
  done (took 11.694005509 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.75166358 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.287241647 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.803873011 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.367018992 seconds)
  done (took 19.931829692 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.135605664 seconds)
    (2/2) benchmarking "read"...
    done (took 2.126596258 seconds)
  done (took 5.974664484 seconds)
done (took 46.162016688 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77413338 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.77005533 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.772162696 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.771528859 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.773055901 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.770184262 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.770959693 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.770342079 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.773911938 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.774068794 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.772864838 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.774176373 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772916721 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770174605 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771039576 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772359625 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.771488926 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772772625 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.774940996 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771762924 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772902524 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.772112702 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.771869124 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.775180195 seconds)
  done (took 44.245537139 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.775309891 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.772546377 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.774335479 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.775261293 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.772089949 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.774116482 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.77516659 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.772453145 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.775147922 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.775747174 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772413145 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.771467398 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.774980237 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.772837707 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774200761 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.773734859 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.774455857 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773469119 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774504313 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.77250011 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.775162579 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772608708 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.772405043 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775109696 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.772879752 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.77300561 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.776270035 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.773560899 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77482762 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.773603601 seconds)
  done (took 54.926790528 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.778632829 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.782345752 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.775615317 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.775898359 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.774971492 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.775703519 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.7768754 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.775947357 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.775660044 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.775733112 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.77583598 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.775652142 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.777663375 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.775333215 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.77687551 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.775836925 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.775901804 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.77672319 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.776140082 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.776551467 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.776705004 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.776633376 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.776285546 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.777216711 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.777481527 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.776717783 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.775702039 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.777064188 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.77743738 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.778499679 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.77729944 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.778610418 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.777209174 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.777308525 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.779530018 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.778010392 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.780725586 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.783126427 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.777047229 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.776902564 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.780465704 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.777569607 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.777830606 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.777071513 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.777670471 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.77795079 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.781169794 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.776931699 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.777837861 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.777927996 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.778530138 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.781217535 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.778420974 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.777573182 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.779429575 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.77823845 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.778150844 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.782330159 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.779119011 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.77768061 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.778355004 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.778626705 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.780551763 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.780083096 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.779348963 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.779329378 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.778750923 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.778040319 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.780192999 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.779581618 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.779567257 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.779150092 seconds)
  done (took 129.723387024 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.77893921 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779185989 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.776300714 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.777203258 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777021808 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.779453279 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.777558683 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77938997 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777187032 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.779122296 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779425823 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.777025717 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778284685 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.779788788 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.78034494 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.77819572 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.779449825 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777106615 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.781913343 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.781077179 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780041325 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.77803277 seconds)
  done (took 40.847925328 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782062082 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.780591853 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.777821038 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.780696551 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.778445262 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.781282736 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.782621873 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.780463163 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780484877 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778058762 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777448446 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781638875 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.778646265 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778264215 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778042538 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.777996175 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781370756 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781561204 seconds)
  done (took 33.75429519 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.778461441 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.778758415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.781225271 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.778670763 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.780985869 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.781023059 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778587202 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.78155105 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.781112705 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.780009379 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.782192674 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781877038 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.782583474 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778552688 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781912341 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.779710745 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.78203527 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779248799 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782124804 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779859834 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.780214155 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784853333 seconds)
  done (took 40.893120488 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781417791 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.781976162 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.780762923 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.782369149 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.780193133 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.7822128 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.782862726 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.780786874 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.783016083 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.783914216 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781005803 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.782823484 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.780418723 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.780897742 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.780682531 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780908124 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.783240843 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.781043167 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782605746 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.781024435 seconds)
  done (took 37.352698126 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.783979751 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784928569 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.784297075 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784852626 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.784565471 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.784935372 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784767272 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.784589881 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.784244858 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.785597425 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.787092352 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.784144167 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785236839 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.785493707 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784638432 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785285685 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786589801 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.785185891 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.785224385 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78567263 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.785219671 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78501825 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787053217 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.784347454 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.785361827 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.785426789 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78574433 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.787675879 seconds)
  done (took 51.709706664 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784528729 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784712964 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.782063205 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.782509179 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.784311642 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.781760555 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.782913234 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.782626942 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.785125221 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.785176461 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.785947244 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.785361662 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.785074652 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.785011407 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784824217 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.785943085 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785875938 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.783518937 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78283022 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782983626 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.786138207 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7871555 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.784749998 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782397928 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783232516 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.786203981 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784254433 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.784589155 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786717994 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.783262692 seconds)
  done (took 55.252867563 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.805198901 seconds)
    (2/2) benchmarking "in"...
    done (took 1.80638581 seconds)
  done (took 5.33290474 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.78307473 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786234411 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.786080347 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.786211637 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78417595 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.78681963 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.786413688 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78487853 seconds)
  done (took 16.005538569 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.787624768 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.787446509 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.786995377 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.786884826 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.788294484 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.788321706 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797295688 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.787931007 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.790956247 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.788625038 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.793899753 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.797960004 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.792520457 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.789048131 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.788539164 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.789432271 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.788503025 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.790147455 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.789727652 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.788910387 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.789031199 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791266286 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.791825959 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.785603983 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.790224459 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.799020365 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.794760338 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.789285392 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791206904 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.79483457 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.790134826 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.786610954 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.790711565 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.789997834 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.791724236 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.789734995 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798760261 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.791147473 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.796814304 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790445929 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7887495 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.787237436 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.791275618 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.792673696 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790244483 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.792006404 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.789678215 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.786842056 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.790094953 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.792553751 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.794198394 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789787263 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.787404733 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797056064 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.791045826 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.796624947 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.793429259 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.79226662 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.796515204 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.800959614 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.80287376 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.796235267 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793270053 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.79102996 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798897095 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.809053071 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797942152 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.788532933 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.787953446 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.790644507 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.799107757 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.804659932 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.799572678 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.79405754 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.79140494 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.791597147 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792722318 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792205714 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.80117613 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.7950875 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.792117192 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.791858493 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.800178947 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809010259 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.792450056 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.791979898 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.792038863 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.792853816 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.7917142 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.80213016 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.793207855 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.791712846 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.792031787 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.792622259 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.795632659 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.793378151 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.791893766 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794017154 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.791177826 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.794545674 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.792920997 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794482301 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.799673667 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.792752256 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.792401917 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.799197272 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.793411311 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791932882 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.803106876 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.792796554 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793613177 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.793180382 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.801892316 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.790656009 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796073215 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.800182833 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.793937156 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.794622467 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.793573188 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.7927583 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801661773 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.816429241 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.793112226 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.793514796 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.797681451 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.802199296 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794676814 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.7971961 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.794779558 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.791214027 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.791038231 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.79646153 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.794027271 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.795722827 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794571651 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796716239 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.791398703 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.793435145 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.794402307 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.795713705 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.797377089 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.797176043 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.796250447 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.798304347 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.795534257 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.798151987 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.802283 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.795543772 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.796386921 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.796833164 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.792321445 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795394109 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.797294636 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.796702703 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.796464627 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.795445877 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.794778345 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.796297282 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.795180395 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.796908546 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795281948 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.795893691 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798973909 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.796270299 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.801327438 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.795248671 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.793559186 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.795943085 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.795664419 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.796944962 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.796460285 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.795296213 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.799529996 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.802519553 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.795644781 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.796946781 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.80030332 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796541741 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797427979 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.797747885 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.799054121 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.803057053 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.797587864 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.804666662 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.797634849 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.79741718 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.797290738 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.798455901 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.796954762 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.798061701 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.800079319 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.802440677 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812124692 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.805482033 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.797955338 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.799934924 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.798047218 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.801351618 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.802750383 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.799396149 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.797604982 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798987623 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797485847 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.798095813 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.800648061 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.798175744 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.798087746 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.797145733 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.797833713 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.798581754 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.797580848 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.800363781 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.800022256 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.794565955 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798594738 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.799161113 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.797991227 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.795501861 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.797777968 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.799084812 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.798796408 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.800080984 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.807289955 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.795660043 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800138021 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799705869 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.799926725 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.797720261 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.799051991 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801800793 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.79926436 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807668284 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.801036766 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.801999264 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.80723439 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.800169083 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.799213206 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.802715868 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.799578687 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.797559582 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.801781435 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.806982734 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.800238181 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.801591446 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.800999967 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800228019 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.800355239 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.808389713 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.798080904 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.798921691 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.80032014 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.803842889 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.797226136 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.801872781 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.801861243 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.801666537 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803561222 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.800658773 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.799925334 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.803117557 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.801320587 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.801719569 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.801834182 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802109137 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.806754834 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.806857731 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.803344249 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.805056209 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.801327999 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.804244753 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.803020742 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.801810262 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.801612929 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816265159 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.80890353 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.809834843 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.805040694 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.802094158 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.808111853 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.801707002 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.806033524 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802591471 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803878034 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.802930506 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.801518931 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.799363564 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.803814555 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.801718041 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802844612 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.803618623 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.805451505 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.802429417 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.802213936 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.803305161 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.802321841 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.80235088 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.802636542 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.8022247 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.807924129 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804682808 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.803368668 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.804200043 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.811247318 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805111378 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.805856118 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.803860293 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.80415838 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.803520722 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.805240863 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.8036791 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.806540691 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.810456752 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.806104722 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.812192234 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.803903946 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.813185099 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.804263563 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.806355391 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.809736071 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.801483918 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.803575538 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.805463779 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.803862106 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811506909 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.804924927 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.80538163 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.807955476 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.80469194 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.805758908 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.804145961 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.805424201 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.804075455 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.805085278 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814226027 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.805311906 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.80851133 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.806761798 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.801583223 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.80453588 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.805120119 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.804094168 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.811081837 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.806046673 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.806189477 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.804949126 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.80604125 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.805300518 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.805695139 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.805623514 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.802145627 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.806324721 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813792377 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.806257304 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809368107 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.805474167 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.816700812 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806964566 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81406446 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.807624577 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.807225773 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.807229822 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.805578752 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.809865741 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.807924543 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.808782554 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.807284592 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.806409703 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.80868931 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.807115675 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.811157672 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.807388575 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.806871179 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.807983837 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.816196943 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825656283 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.807904159 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.809122531 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.803971408 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.807407299 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.809654155 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.807158547 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.806476873 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.809359562 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815229283 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.812674425 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.809108505 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.80754984 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808929076 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808446602 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.807081964 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.807662464 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.808460068 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.807639609 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.811044337 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.807553907 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.814669852 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.807560192 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.808631811 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809973425 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.808853289 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.819030962 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.808675235 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.810235801 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809205503 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.808115362 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.810047979 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.809965032 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.808816126 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810434066 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.808377177 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.809529471 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814433544 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.813737621 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.812471558 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.808722073 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.809103014 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.809980332 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.811016952 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810088551 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.809553641 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809712581 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.811373822 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.810103975 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.812149141 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.808254841 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.808695657 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.810756387 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.809023974 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.810919929 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.814078928 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.810903576 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.80711647 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.809241204 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.810120496 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.809011045 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.811342962 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.820546405 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812780463 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.818369361 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.816112005 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.813553749 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.811702011 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812507476 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.817414592 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.809900375 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.812909559 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.81061873 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.813805956 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.810921113 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.813474054 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811793185 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.819360035 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.811367618 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.811488363 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.820476385 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.812831573 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.811164057 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.811710034 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.814860602 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.812871824 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.808072894 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.811265718 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.811859524 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.819330488 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.815022952 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812538663 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814221197 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.810500555 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.813155491 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815864768 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.812041186 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.814662151 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.809363357 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.812578151 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.812923393 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812542316 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.809603403 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.813552342 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.813604569 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.814561761 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.81855774 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.8089056 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814746392 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.813927133 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.813609295 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812173693 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811710011 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.80971507 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.809483643 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.813182252 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.813165572 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.813355524 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.815984019 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.815032877 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.814598009 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.813361186 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.81387312 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.814807656 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.820841564 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.818233783 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.811199073 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.812802678 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.814632839 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.819824576 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814564625 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.813567163 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814753849 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.817440065 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.813415565 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814023468 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.812835202 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.816454898 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.830140449 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.813711457 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815088738 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.815141019 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.82052232 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.814986439 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.812608237 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.814324693 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.818502245 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.817326449 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.820784845 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.814961835 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.822346778 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816677023 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.815303294 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.816414396 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.8176837 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.822073221 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.818311232 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.815327347 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.815189898 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.818448301 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.829866879 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815202981 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824094206 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.8407771 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.815865948 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.816807241 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.814901923 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814419224 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.815135471 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.817700174 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.815994377 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.814893462 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.814929104 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.816573501 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.816474072 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.820724531 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.818062232 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.814918197 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.815398386 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.816800335 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.819127979 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.81436703 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.817042049 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.815984115 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.817046333 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.816654982 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.816815576 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.818331026 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829917388 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.825926869 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.817017482 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.817575414 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.815760337 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.824702383 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.820426513 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.826456253 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.821587125 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.817710793 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.817305828 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.818693915 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.815896706 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.81358817 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.818155942 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.818092982 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817139954 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.814999319 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.831297852 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.825319537 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.823388664 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.819749253 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.818865687 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.817480296 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.820949018 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.819182174 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.818496615 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.82158138 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.818941863 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821812939 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.817386778 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.817682083 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.820349465 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.823731171 seconds)
  done (took 1077.462143239 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815259267 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815683568 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.815486548 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.815285215 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81577488 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81629496 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.815721519 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.815506005 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.815909002 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816147744 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.815961678 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816112238 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.815684899 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.815977632 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816799017 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.815859902 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815573678 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.816286461 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.816283214 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817132634 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.816694736 seconds)
  done (took 39.88825365 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.819595081 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.815953294 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.816090842 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.818882042 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816218598 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.81911296 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.816362956 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819089504 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.819271165 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817582382 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.820178765 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819722028 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.817246969 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.818004218 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817918833 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819608703 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.819956956 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817318318 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.819810316 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.817018508 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819550765 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817308588 seconds)
  done (took 41.755615409 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.822079078 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.821407015 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.82050459 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.818528513 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.820510223 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.818914612 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.821840234 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.820310876 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.821655917 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.823141822 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.819604335 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.822179813 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.826125715 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.82332321 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.824258488 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.82153434 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.965682415 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.821489707 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.821823374 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.821982014 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.818559795 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.827467758 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.818584908 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.818847352 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.820571865 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.821599672 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.821538308 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.821381115 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.822536356 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.822409171 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.825360111 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.821531674 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.821548857 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.823863502 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.822357884 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.822682884 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.824832017 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.822208159 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.819397373 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.821436359 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.831283185 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.838312747 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.823754109 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.831058979 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.822408892 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.82247317 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.825082065 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.829653454 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.819856823 seconds)
  done (took 91.216480962 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.822693862 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.822979216 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.820582107 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.822310825 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.822450563 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.822325056 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.822075792 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822931311 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.819994133 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.821377374 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.822763946 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.820073549 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.820347435 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.822147578 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.822681224 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.820829574 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.820065514 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.820413978 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.820261094 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.821645156 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.820429467 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.823569155 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.823279208 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.821863146 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.823372306 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.821139175 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.82146217 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.823326702 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.821729232 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.821271295 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.823115726 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.823763095 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.824223414 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.822071841 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.8216442 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.823631567 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.82453506 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.822048828 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.824739406 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.821195543 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.824466621 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.824491985 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.825139724 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.824667324 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.821395148 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.822370759 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.822178869 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.82249555 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.82271986 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.825389932 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.826122273 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.822504501 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.82495802 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.822220408 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.825680626 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.825998067 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.822247689 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.822844615 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.826068991 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.823219452 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.82316319 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.825871144 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.823573558 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.825653757 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.825680582 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.824785444 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.823452229 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.825379579 seconds)
  done (took 125.717615752 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826060976 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.826353358 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827231199 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82686973 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.827015059 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.826690949 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.827314852 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.827910038 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.827842551 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.828110804 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.826500275 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.826455715 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.82717076 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.827092523 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.826875837 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.827785195 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.82821068 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.827472739 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.827158843 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.828153558 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.827769081 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.828256171 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.828117996 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.827739841 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.828098596 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.82851684 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.827577353 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.827828507 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828394382 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.828676569 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.828735425 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.829861068 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.828124587 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.829500247 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.829010385 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.828450746 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829371649 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82911288 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.828311116 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.830320565 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.829168482 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.829180678 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.828889417 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.830010839 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.829115309 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.828989203 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.829427129 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.829848716 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.82811211 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.82903356 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.829428887 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.82926539 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.829478274 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.828885551 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.828991102 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.82967996 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.829591226 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.829167259 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828764925 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.829600368 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.830254764 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.830170837 seconds)
  done (took 115.123865807 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828520229 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.828938309 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.826943963 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.827535526 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.829034142 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.825800208 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.829534457 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.829202695 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.829317922 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.830109792 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82951145 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.826757011 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82692295 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829579729 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.827570018 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82740491 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827699615 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.827663522 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830600165 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.827324471 seconds)
  done (took 38.329584239 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.827913904 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.82997533 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.826774009 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827276192 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.831515647 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.82767763 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.829562199 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83093521 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828049558 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83046216 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83059099 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831581884 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82825773 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829086523 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831749891 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.829076002 seconds)
  done (took 31.03443896 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.829072425 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.830750873 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.8319547 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.832357144 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.830363774 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.828840831 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.831844857 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.828673686 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.828861029 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.831676934 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.830837487 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.830935241 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.83178639 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.83184677 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.828858184 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.83150102 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.829634463 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.829295675 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.83215145 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.832382927 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.830267212 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.829385602 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.832325852 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.832150236 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.831025588 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.830766354 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.829467998 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.830170728 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.829580954 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.8327605 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.829763633 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.83026081 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.830136156 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.829751962 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.833535162 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.829875315 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.833588017 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.832627085 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.831999159 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.831959703 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.832991835 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.82962582 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.834500155 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.83311786 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.830451459 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.832899212 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.831103812 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.831305947 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.830135415 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.831863455 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.834340889 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.834868302 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.83429509 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.834187973 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.833726242 seconds)
  done (took 102.491524378 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833988626 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83583853 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.836418401 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.83858849 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.837747915 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.83477874 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.836066861 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.834034575 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830982257 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.834334996 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.831355791 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.833281889 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830889047 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.834480232 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.833016434 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83417586 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.83230647 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.832379666 seconds)
  done (took 34.783186054 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.832563115 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.833053783 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.835150501 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.831992948 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.833150118 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.835991148 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832722477 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.835986566 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834851468 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.833144208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832848738 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.835262544 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836001686 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.835978104 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.833608775 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832830701 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.836006565 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835770147 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.83278228 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833219422 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.835462203 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836390979 seconds)
  done (took 42.124446124 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.836328741 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.835868507 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.85260498 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.875335631 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.862849849 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.836384819 seconds)
  done (took 12.869634328 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835239893 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836225929 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834503407 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836991193 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835833346 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834348465 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833725392 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834178563 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836304852 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834091043 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834049626 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835758555 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83683972 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833827518 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836060045 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8373655 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834591033 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834143468 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835233834 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837210169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835159224 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836890136 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834619763 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834707669 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83558514 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83508836 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837517744 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835772637 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835545213 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837542806 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837722436 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835410694 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83848223 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836556897 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838676804 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837586999 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835957733 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837797219 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837306004 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835154476 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.838300981 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839109119 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838306226 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836629395 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83819173 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835523714 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835942156 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837794435 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836105723 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839520039 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839235661 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836220798 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83879008 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839015959 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839408643 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839894733 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836847614 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836751477 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839514694 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836543848 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83737234 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839654449 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837136769 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838416854 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839756413 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838057354 seconds)
  done (took 122.997156179 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836859107 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836516256 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836799176 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838916686 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836932134 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837438536 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83773195 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83720314 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837672083 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837629767 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839553705 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83762238 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837601883 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836764959 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83825197 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83718111 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838042836 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837839332 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838555336 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840950707 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837822002 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838499816 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838370795 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83825435 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838318436 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8405738 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838975856 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838246653 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838853944 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839846573 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838109509 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838683635 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838678745 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.839286477 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838918847 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838255219 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838987739 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839458655 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839609707 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842236916 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84046537 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842202096 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840187972 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839487617 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839720931 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840994301 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839580083 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840935024 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839778168 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840113863 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840354337 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840616145 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840252842 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839901555 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840989936 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839969429 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840278287 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840338894 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840712586 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8426412 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840074587 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840753598 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843143584 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840525109 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840394435 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840876336 seconds)
  done (took 123.1677054 seconds)
done (took 2510.714456092 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.868166928 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.889945372 seconds)
  done (took 15.535454056 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.012657219 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.964677571 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.851187882 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.900216401 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.849980067 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.875230328 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.868591737 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.849894375 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.849737995 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.850405731 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.850711367 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.036965626 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.84767498 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.851493088 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.849977864 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.942845637 seconds)
  done (took 52.218250872 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.853788222 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.855039105 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.865138405 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.856124897 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.853640944 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.872194863 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.888520411 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.857281785 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.912439384 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.878064758 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.976967377 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.864711086 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.854102606 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.914995923 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.866906031 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.869071799 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.954326427 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.93065006 seconds)
  done (took 35.709128187 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.933607541 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.860163016 seconds)
  done (took 10.587925411 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.851259384 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.879333342 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.851774886 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.855096282 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.877472494 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.908489958 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.887990546 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.883433266 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.857138409 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.861125863 seconds)
  done (took 70.501482066 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.859897049 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.855228902 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.855644221 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.854112965 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.847284358 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.852616334 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.853539561 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.848445402 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.549833101 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.889612846 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.860747879 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.86067176 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.854559186 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.855817208 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.851721518 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.877431025 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.967995841 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.852302623 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.85127367 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.859917671 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.854889945 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.925533722 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.868327048 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.85597215 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.886396162 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.549134862 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.86567424 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.861669447 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.964996666 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.852783284 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.854503956 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.857553185 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.857322299 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.243277203 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.189120392 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.855523653 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.86398916 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.863281732 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.852646277 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.9897129 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.856044528 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.861772172 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.849033208 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.16541482 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.940130341 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.898890995 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.187510163 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.85971945 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.857286518 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.887932138 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.858883294 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.858868666 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.870100943 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.377312265 seconds)
  done (took 131.990196612 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.850813212 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.339208598 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.005749197 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.853022484 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143681995 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091231135 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.85450983 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901025671 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.905022784 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.104007712 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.080967679 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.973042912 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.853483483 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.854833468 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.850598788 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.850382623 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.003715502 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.925688077 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.855118623 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.853738989 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887877231 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.119972803 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.9797829 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.014476604 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.878101806 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.080197045 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.979959167 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.971080685 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.85515605 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.850806922 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.920290533 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.861033374 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.852894629 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.85191957 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.019246671 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.959580864 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.954651404 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.85459046 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.87868448 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.85356433 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.874329914 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073490558 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.962400569 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.992173888 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.107204024 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.082431238 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.854545013 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.852054121 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.853449971 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.045010199 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.069188216 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.107538674 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.982955841 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.855062535 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.103804612 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.85370969 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.862001603 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.104069344 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088098916 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.964328678 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.878534872 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.856664397 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.85201095 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.169531914 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.856476929 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.964027198 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.971702666 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.855829435 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.962789754 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.968349934 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.087779013 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095811415 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.885130519 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.881946269 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.945824382 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.138114884 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.926808048 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10756755 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.872795883 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.854655934 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949612893 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.857745402 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.065922218 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.173757562 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.120819108 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897770459 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.859740453 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.854000524 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.103657981 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.104719236 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.092727236 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.103529337 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.02299581 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.869745967 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.854812557 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.8547031 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.85936357 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.988792637 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.858581417 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.216212421 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102614923 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.631188789 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.887413482 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.172472217 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996017592 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.860760576 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.858857165 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.856596235 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.061956965 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.899589033 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.861540857 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.854873024 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.104597839 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.732409917 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.996882012 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.566907351 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.923049076 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.859649309 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.122283364 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.861575988 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105190227 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.870842368 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.170445273 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.217059874 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901318862 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.049922579 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.104984898 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.859598969 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.152686652 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.17346744 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.983917754 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.106881024 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.615320708 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.859950788 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.150249008 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.871257544 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.860150681 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.026304067 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.860137642 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.035316664 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.864658579 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.127116968 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884635302 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.030266606 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.885878709 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.135042689 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.904789286 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911487418 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.887514475 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.985826639 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.8593759 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.968436833 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.041497149 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.154233832 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.860521077 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.429150571 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.859589906 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.006841846 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.158566248 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885722551 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.932080736 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.860937077 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.859493233 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953557115 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.890719786 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.459860456 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.863054264 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.08448147 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.815614989 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.31499277 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.858481377 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.169254989 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.072867755 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.862005066 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.860851887 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.66226458 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.860430856 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.923112568 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.019821318 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.406054079 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.864565041 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078753517 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861875997 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993869549 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.86256757 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.858930293 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.208028721 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.899265489 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.860584211 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.870801085 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.860291026 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.861987576 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.086785266 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.890523651 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.584252701 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.998818365 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.112482637 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.176067687 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.128529086 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.914281526 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.8666613 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.126285833 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.926319984 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.931740413 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.863992729 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.88670843 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112374348 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.864381683 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.131644341 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.149310013 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.013119371 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.913764306 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.866087095 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.215590509 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.862139203 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.003969746 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.960832796 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.864391763 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.867215739 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980822119 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.991859548 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055202924 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.862703269 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.862792403 seconds)
  done (took 952.015534935 seconds)
done (took 1270.334619291 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.862074066 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.863126327 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.850944232 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.862347086 seconds)
  done (took 29.239770227 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.870716328 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.867097428 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.868213121 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.867973703 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.870236097 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.867582454 seconds)
  done (took 13.011853795 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.935302328 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.861883745 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.863995788 seconds)
  done (took 21.4617897 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.937509828 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.276843869 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.97644802 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.312926708 seconds)
  done (took 10.304644698 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.870434716 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.869513905 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.870419387 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.872181594 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.872286714 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.872251927 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.870645318 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.871075617 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.872882992 seconds)
  done (took 18.643672579 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.073102231 seconds)
done (took 98.536877869 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.168902622 seconds)
    (2/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.697475479 seconds)
    (3/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.169294183 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.791648461 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.871009806 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.239832382 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.025659301 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.514159371 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.913514656 seconds)
    (10/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.948850145 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.887424882 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.912457561 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.890449533 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.881019109 seconds)
    (15/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.860674119 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.24680628 seconds)
    (17/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.391210082 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.864200011 seconds)
    (19/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.085498814 seconds)
    (20/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.850777233 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.895225089 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.948062889 seconds)
    (23/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.779868816 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.875912915 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.891645812 seconds)
    (26/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.921931831 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.429942787 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.53901046 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.111075112 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.004372623 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.091115336 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.928203233 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.164960217 seconds)
    (34/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.834681611 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.017123377 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.726715058 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.159249149 seconds)
    (38/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.375875489 seconds)
    (39/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.873037164 seconds)
    (40/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.155446944 seconds)
    (41/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.209274594 seconds)
    (42/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.457929027 seconds)
    (43/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.013190754 seconds)
    (44/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.194056771 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.241850406 seconds)
    (46/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.268417694 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.944276483 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.063172317 seconds)
    (49/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.005931784 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.87066737 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.199437742 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.982473468 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.120499966 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.212580822 seconds)
    (55/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.825836901 seconds)
    (56/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.381915305 seconds)
    (57/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.966553822 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.76188551 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.859701603 seconds)
    (60/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.885824888 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.221153817 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.926539762 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.969231289 seconds)
    (64/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.119274788 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.85328522 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.013703203 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.934534926 seconds)
    (68/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.868262605 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.911873921 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.134389222 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.749751234 seconds)
    (72/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.963872647 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.869408075 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.873959878 seconds)
    (75/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.15322769 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.005665589 seconds)
    (77/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.875978727 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.882789171 seconds)
    (79/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.44113757 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.156362227 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.071120036 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.200865734 seconds)
    (83/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.87104555 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 9.112881183 seconds)
    (85/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.04312001 seconds)
    (86/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.041460243 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.553474828 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.872091573 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.480783303 seconds)
    (90/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.979312418 seconds)
    (91/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.893052517 seconds)
    (92/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.969565707 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.949526569 seconds)
    (94/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.955600064 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.995478851 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.656280888 seconds)
    (97/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.905682508 seconds)
    (98/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.049984177 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.038129983 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.872486686 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.970012634 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.82977864 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.898476798 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.414437846 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.128561161 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 5.697855377 seconds)
    (107/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.998089018 seconds)
    (108/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.003537786 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.096292485 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.162953249 seconds)
    (111/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.05419687 seconds)
    (112/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.998018246 seconds)
    (113/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.936680087 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.144377647 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.21121352 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.87141518 seconds)
    (117/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.890062906 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.981484588 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.064420201 seconds)
    (120/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.963125807 seconds)
    (121/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.857350555 seconds)
    (122/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.360515093 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.759552784 seconds)
    (124/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.908765934 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.85588785 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.306943656 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 2.330478245 seconds)
    (128/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.932138441 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.892295364 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.123430309 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.883912628 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.961009492 seconds)
    (133/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.026039154 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.09145275 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.117781969 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.135379059 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.113695296 seconds)
    (138/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.961504087 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.175272493 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.944006568 seconds)
    (141/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.026971039 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.981408401 seconds)
    (143/309) benchmarking ("sort", Int8, false)...
    done (took 4.864206489 seconds)
    (144/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.873151958 seconds)
    (145/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 4.386089911 seconds)
    (146/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.86109699 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.537250291 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.092910061 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.899939937 seconds)
    (150/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.481648286 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.87679492 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.945181666 seconds)
    (153/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.876834426 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.895682163 seconds)
    (155/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.978523531 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.110041833 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.892827754 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.856704892 seconds)
    (159/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.894854803 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.875851728 seconds)
    (161/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.029886972 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.925443776 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.248415194 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.261204927 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.875488967 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.452554731 seconds)
    (167/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.962320153 seconds)
    (168/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.705777277 seconds)
    (169/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.189326389 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.167005505 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.959031369 seconds)
    (172/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.481959625 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.378470514 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.895553967 seconds)
    (175/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.995630661 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.922348476 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.662527461 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.212632185 seconds)
    (179/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.94214339 seconds)
    (180/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.15597109 seconds)
    (181/309) benchmarking ("sort", BigInt, false)...
    done (took 6.877155899 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.091720984 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.876711139 seconds)
    (184/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.495695786 seconds)
    (185/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.378910343 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.573304937 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.986809503 seconds)
    (188/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.988798244 seconds)
    (189/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.074302302 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.861056675 seconds)
    (191/309) benchmarking ("sort", Float32, false)...
    done (took 5.630661169 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.866156636 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.935323464 seconds)
    (194/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.391135539 seconds)
    (195/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.476739018 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.977013263 seconds)
    (197/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.047287389 seconds)
    (198/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.012906231 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.862197425 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.146313853 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.706342489 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.934409641 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.756974817 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.115415392 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.975015933 seconds)
    (206/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.880949252 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.783047048 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.996420376 seconds)
    (209/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.902423152 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.75784616 seconds)
    (211/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.902981468 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.626274421 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.111566203 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.037689987 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.090938506 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.982645965 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.20432673 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.891334237 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.862415209 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.050660455 seconds)
    (221/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.593591553 seconds)
    (222/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.306853553 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.20769114 seconds)
    (224/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.146296697 seconds)
    (225/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.123074774 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.903793983 seconds)
    (227/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.961273382 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.03177821 seconds)
    (229/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.881982111 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.206945244 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.923080024 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.227581239 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.38998597 seconds)
    (234/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.974392405 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.270648603 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.071478754 seconds)
    (237/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.112967043 seconds)
    (238/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.080392421 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.057347799 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.811029797 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.087264448 seconds)
    (242/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.102638279 seconds)
    (243/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.40175344 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.974623833 seconds)
    (245/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.169281202 seconds)
    (246/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.984223917 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.168873833 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.260959031 seconds)
    (249/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.254320038 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.187752289 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.985543824 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.52795785 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.873067576 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.88921161 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.980954893 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.181873141 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.294985485 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.884043422 seconds)
    (259/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.182796225 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.578770967 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.920758418 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.256154645 seconds)
    (263/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.868664381 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.79189252 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.270561315 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.878505585 seconds)
    (267/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.079559033 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.407494328 seconds)
    (269/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.907505798 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.826949148 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.868834352 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.670935415 seconds)
    (273/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.055109819 seconds)
    (274/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.045844679 seconds)
    (275/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.981244336 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.961590227 seconds)
    (277/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.903854047 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.567432817 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.930933371 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.097626985 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.962406396 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.995032927 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.165170037 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.005472179 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.867139745 seconds)
    (286/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.807161654 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 6.054631981 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.013761825 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.487886894 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.884716413 seconds)
    (291/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.56990384 seconds)
    (292/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.244899175 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.870789161 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.972803918 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.881633688 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.154997731 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.396307222 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.128292407 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.884903356 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.926907302 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.868396405 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.915227647 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.953523425 seconds)
    (304/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.085966903 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.888123239 seconds)
    (306/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.322132678 seconds)
    (307/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.10131257 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.997522964 seconds)
    (309/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.907479539 seconds)
  done (took 1025.332264119 seconds)
done (took 1027.150492876 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.913264761 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.908385242 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.89233792 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.913504142 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.0035669 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.925520712 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.902633108 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.895089055 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.939692409 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.941961244 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.890806254 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.923991591 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.893550586 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.89227437 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.892379675 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906293372 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.198835051 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.920475942 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.909181513 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.901510447 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.909350725 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.891480161 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.942361974 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.925501932 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.89672891 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.895633882 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.896226824 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.912419736 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.005994581 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.897243966 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.89554948 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.90455467 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.198923602 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.918596012 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.888532426 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.913485874 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.905277255 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.903287153 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.89805372 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.925442701 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.344170828 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.901016624 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.895355111 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.895673011 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.894713169 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.898926567 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.897057831 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.901227 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907756403 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.908859574 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.33977169 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.91545064 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.898385094 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.89523359 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.904955668 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.895315509 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.897664535 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.91090987 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.914868479 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.911241271 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.189911453 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.925795268 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.897029204 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.911437599 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.90213565 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.376577994 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.897226519 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.899435213 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.34505018 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.907741275 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.376628652 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.910007502 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.896861366 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.909960481 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.927826386 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.201320277 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.916258707 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.895644566 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.90360315 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.895290653 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.905255443 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.908474465 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.901564248 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.897132412 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.910272364 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.929780598 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.907056854 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.897346647 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.905159329 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.915768867 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.905089988 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.908186923 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.901431011 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.892575145 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.90635885 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.90117514 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.900604011 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.900176026 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.901583941 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.908600943 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.34131456 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.920312259 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.893564969 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.89417689 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.896582339 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.91140584 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.342697336 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.90347368 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.918596763 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.944355662 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.898175213 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.192758537 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.926779638 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91338318 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.906611778 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.900678042 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.893807215 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.193467835 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.368141538 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.919901066 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.899645566 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.897142554 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.914092623 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.90020184 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.895386904 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.203676434 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.92611603 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911976529 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.019380107 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.909068189 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.930571171 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.898382412 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.90291908 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.928086247 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.915005139 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.931307781 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.901504918 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.915224605 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.915728069 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.895727289 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.911452088 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.910680076 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.900845537 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.90609057 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.894740563 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.92886116 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.912257345 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912245474 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.921315728 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.021343967 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.897568416 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.197184535 seconds)
done (took 298.040570186 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.96768375 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.889585899 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.001498374 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.896496727 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.981844847 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.984688901 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.893546073 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.894168161 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.894028245 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.274282327 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.895575641 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.894977854 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.893174966 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.894367397 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.980438712 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.896167057 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.894005128 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.238319184 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.898318657 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.967912293 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.896771416 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.894236021 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.896249895 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.279634927 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.891254134 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.895562071 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.969373574 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.898134444 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.244826435 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.892371527 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.896586928 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.244561132 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.988294085 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.916538569 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.907886885 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.905302917 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.985293326 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.903527792 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.979539251 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.980198216 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.003522682 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.939170775 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.892388508 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.892380115 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.901834725 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.900395328 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.895060714 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.926448048 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.89048587 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.89612157 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.238693822 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.90964808 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.896414159 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.896613292 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.896013763 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.93114133 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.896561981 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.900643666 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.989182555 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.901238659 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.962306952 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.281828247 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.276715529 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.900185908 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.900890183 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.896545463 seconds)
  done (took 186.239217762 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.966392123 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.973969305 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.967314715 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.903472375 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.950224453 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.971656084 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.90398183 seconds)
  done (took 15.466433403 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.906850012 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.899918391 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.949504299 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.950393096 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.901200827 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.051735765 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.900053902 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.912315638 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.897492549 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.953228082 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.902277719 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.901090363 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.907643 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.898137578 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.948934291 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.912082572 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.01642813 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.901525269 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.901393923 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.058461961 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.898642193 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.907815112 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.9563043 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.9126832 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.903051803 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.907054965 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.486994941 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.901257966 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.898680747 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.901012131 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.8985131 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.941198365 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.901972532 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.897018169 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.89880061 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.019205989 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.902693203 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.898832252 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.901347842 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.901768875 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.902151226 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.901584231 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.901740667 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.900294835 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.902302604 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.926306748 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.902090321 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.901667868 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.901807725 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.902639209 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.954015958 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.902972234 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.899836069 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.900181436 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.959149736 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.91032526 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.903934037 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.899841872 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.903372377 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.89986036 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.059935074 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.951444386 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.903357446 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.951424312 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.902532295 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.904397499 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.902769509 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.902756584 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.958871599 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.902606149 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.952168851 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.900825966 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.063568292 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.926808962 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.904179403 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.906062187 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.907233835 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.904704766 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.90433845 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.911537399 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.902018706 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.906035745 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.9102621 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.902047745 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.901330262 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.012654533 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.014057754 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.902340789 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.917109821 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.912179074 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.902655788 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.958047484 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.904227167 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.902609311 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.957050183 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.020066974 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.961277298 seconds)
  done (took 209.023459767 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.909016198 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.91305201 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.906098409 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.920308044 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.904928426 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.904454924 seconds)
  done (took 13.293449254 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.907394114 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.90620675 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.904974684 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.905585612 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.906926322 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.907410132 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.906190966 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.90817347 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.910170869 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.90558832 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.907566007 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.908120083 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.908054274 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.906883843 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.906675021 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.906132209 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.907106797 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.90296596 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.34461309 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.90671772 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.051050987 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.907574957 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.907201937 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.907630842 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.911686598 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.906499951 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.914592637 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.905823023 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.905868714 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.915444168 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.910555326 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.90886048 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.90897094 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.912663778 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.913098308 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.908888906 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911197621 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.910332944 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.905628709 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.909375801 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.910504808 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.907920034 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.906950428 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.909751727 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.909581083 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.912644876 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.914525212 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.916071372 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.908719761 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.909758339 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.91103272 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.907311289 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.91009788 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.910379517 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.912043285 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913774279 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.914766663 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.910377414 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.909022672 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.910071118 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.908655137 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.909878521 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.910933278 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.913111684 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.915910767 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.91197795 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.910736721 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.912825327 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.910105034 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.908482536 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.911084185 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.9067952 seconds)
  done (took 140.891073029 seconds)
done (took 566.756887627 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.166261332 seconds)
  done (took 9.005356496 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.974638433 seconds)
  done (took 8.902690283 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.559103466 seconds)
  done (took 10.398669037 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.905373224 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.940644612 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.913725732 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.910605559 seconds)
  done (took 29.521412805 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.956375322 seconds)
  done (took 8.797640907 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.91753621 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.904190329 seconds)
  done (took 15.6956088 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.985130234 seconds)
  done (took 8.826651937 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.995469474 seconds)
  done (took 8.839720197 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.913131839 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.922523763 seconds)
  done (took 15.691494435 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.890929875 seconds)
  done (took 8.732561648 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.648546632 seconds)
  done (took 11.499434249 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.915668565 seconds)
  done (took 8.769904149 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.935477905 seconds)
  done (took 8.77636942 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.05823957 seconds)
  done (took 9.898446552 seconds)
done (took 165.195087404 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.907192284 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.90424829 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.905274901 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.905167274 seconds)
  done (took 29.462239606 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.944199779 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.94403981 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.945427094 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.955078279 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.946922835 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.944179106 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.937496896 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.937711525 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.955322758 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.947497522 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.946254939 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.946869127 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.94616244 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.936880051 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.946875433 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.947151191 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.95515321 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.946605177 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.937279585 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.948333096 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.912444778 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.956574813 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.948577541 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.912797431 seconds)
  done (took 48.486934335 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.107635041 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.98383535 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.066443372 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.964424573 seconds)
  done (took 9.964087285 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.964133505 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.965783629 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.976647135 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.016115882 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.048709615 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.9750529 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.939102505 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.934551358 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.919972735 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.9658745 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.041075219 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.981959765 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.0486171 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.912217343 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.099826814 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.911949901 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.912723346 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.964668558 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.016119317 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.029810877 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.913474778 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.964634058 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.96808273 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.982363124 seconds)
  done (took 49.297726139 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.911533883 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.920213981 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.919360404 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.912944754 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.912469954 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.913602649 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.919160273 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.91349055 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.934237051 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.914701956 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.911676261 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.912719549 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.912111338 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.913185257 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.912557668 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.926393162 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.927001016 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.913582179 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.915929954 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.920141534 seconds)
  done (took 40.180359039 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.906028836 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.835381722 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.259517005 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.163491294 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.907910354 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.907415261 seconds)
  done (took 32.825203696 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.926996744 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.97861827 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.921952298 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.971646193 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.05167244 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.921724698 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.915676378 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.983714906 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.025306853 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.988049182 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.936812137 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.942657052 seconds)
  done (took 25.410688045 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.909524164 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.9110117 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.917158645 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.926264626 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.926272836 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.922722773 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.92236492 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.90900346 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.929774855 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.935044235 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.923492169 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.927812277 seconds)
  done (took 44.909004649 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99731589 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.954863637 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.933453325 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.589967739 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.290188332 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121739424 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.559256697 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244991285 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.913347827 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183013909 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.963410359 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023207761 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.1677358 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41281182 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.945927538 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.371484638 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205778279 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110218255 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939319035 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.567976867 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977113508 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.104759483 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.659974822 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.970175082 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124458832 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.040777244 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.208278058 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913423051 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042922387 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948143504 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922129395 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911579848 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188420116 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289987738 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015827888 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922636553 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.530281061 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.623983898 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 7.01265724 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.574478715 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.626370601 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.032758865 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92375316 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9124556 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.848356338 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074645847 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296267678 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.917874403 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.623873604 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913119749 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923171311 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007658576 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.917036141 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.73030993 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832125664 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.91548949 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.909924189 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919497883 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.487446714 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.024193853 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.117226863 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.889877125 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.005962657 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.572712601 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303033835 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.060084256 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.917328119 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91764657 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84861251 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.652362101 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969425333 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242987296 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.934530384 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564534335 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219875605 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.991356243 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858384827 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173695502 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.457299543 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.890500358 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143441541 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914425478 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850652733 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.857768056 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849595696 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196533881 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953095497 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.663893857 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95521189 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.252526735 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.926165535 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93264662 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938673659 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139760586 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.800661744 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916047575 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.7284321 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069201338 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938141849 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.245430074 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850642077 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.919622258 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17255745 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.128051727 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.001781272 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.410922926 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071377945 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.485992684 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.970603178 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.071499833 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.967972718 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.176852571 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972104024 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006046805 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970563082 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91692714 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197361265 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.514821726 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.057000151 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.966889166 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043443828 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.218844787 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944518767 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999743143 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927336117 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.917215882 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.683912241 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.471763594 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.918202714 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.921242305 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.014537396 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966654652 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.91917468 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862273754 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.547159274 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.96926498 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.932306541 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.141786035 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.495547211 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231937765 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85367219 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247395891 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.011205858 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.141601315 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.561010202 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.988660679 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17924399 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.017630218 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.041204381 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968341273 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938388517 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016257393 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940868441 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.077983496 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.213635223 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.922819037 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.922844317 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.677556857 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.956796209 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918105966 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.924568937 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.671112427 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183803382 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.942277471 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.926275033 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.808243701 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.93324549 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984030104 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925458594 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.929734898 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.456143392 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.647695036 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.927367263 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.51060186 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145206826 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93017169 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.58480861 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038080324 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.002043998 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184887668 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976412687 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.853768491 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.63138651 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.613804422 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921923554 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.856320334 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.920427345 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93030516 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931823611 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.118519963 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185904561 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961939179 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.592787449 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.964508225 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931499546 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.92637828 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921002037 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.433381115 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.035156111 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.116660772 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.969571975 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065455018 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.935319202 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.856331716 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.92528702 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927001523 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.921853013 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.921451997 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955908674 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.586112176 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299799437 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183053611 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.572503085 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936652313 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.674987472 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.981597086 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.918878072 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.772854777 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.108443777 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.962691579 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940307928 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.933893914 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.666020781 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.630049209 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492682802 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232325855 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218461285 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347508801 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.141033804 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.952849103 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258633065 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857920558 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.480249787 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.981639579 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265309665 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86869634 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006991269 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.566036824 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262363948 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941580625 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152530883 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299430672 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.82336416 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948667932 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135742996 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959055408 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.085146909 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.888019427 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.220191788 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065488478 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.60414161 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128790667 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265495883 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.761831622 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.939915074 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.925219454 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.600286194 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006674427 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.634210739 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.096388674 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.126638156 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.89749122 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422826096 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930846153 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.150834409 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262862014 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.096868529 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.047951826 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861096443 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.936633044 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.935920499 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.927126531 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.924221856 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.811076572 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.180061676 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937640158 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860008181 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.058268415 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208136044 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.824171295 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.931581068 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926100505 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20909528 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.474305838 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092539969 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.043006074 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.447987976 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933540072 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.861037043 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861532009 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.619300715 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.93292639 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902017969 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126226636 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.026392241 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838347923 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.020095064 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009991995 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.184545059 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.940929588 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.188624969 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199505548 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.625685344 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951784652 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.028639982 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.631769698 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.032766417 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.928231482 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16383357 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.679880247 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.154678811 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.947125206 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.874381041 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.927938413 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14202436 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.927270793 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.805814176 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153475627 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.650639042 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.932038815 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231227803 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000343146 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.858976735 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971908624 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.021311342 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938607714 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007189103 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939811946 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.940301551 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.940317078 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974739994 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.85924988 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.049754131 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.94239912 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022643417 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.02909972 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.454809173 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.934721592 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192978115 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287413343 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.247459358 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986732368 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.929545234 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931909379 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86417754 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079238846 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.155969248 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203884083 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.062408271 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.049355366 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954904152 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.627972962 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.155313703 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176637098 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206078789 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.826122617 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.443863763 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.976337246 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.931425417 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942406129 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.142801116 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128755812 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222309514 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076984281 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.029053198 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.301838211 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205024806 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.932505516 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931739556 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522344931 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.941984495 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.625429115 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.968727711 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.860247727 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205913485 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942758622 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307196214 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.953363181 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.087204544 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.704871595 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.665776981 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224499818 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.907682083 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991080557 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19930586 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.300626132 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243326928 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999425608 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94376952 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.033285309 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079494627 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.817573476 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.934751898 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934265973 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047426628 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.648499633 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94424596 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198857361 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241187201 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.931299465 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.822432809 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956087559 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.943370528 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.157524951 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185760944 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186310543 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944425585 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.939205249 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.749481734 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197353091 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991252825 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868208273 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.938186019 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028718509 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182947258 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957854177 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.387005684 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.645600434 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193392211 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.932577658 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957149211 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.104366223 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.290434389 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244468244 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.468186847 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132781111 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.520025912 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.5171983 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240635417 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.939681234 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.09744021 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243684548 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.939231437 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.031899207 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979086477 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.194860955 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244191512 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.945923922 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.615724575 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.906669224 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.275282361 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.495909768 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874992384 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.94011124 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.994947956 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.936013072 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.067277417 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947510291 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.826743897 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.105572948 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.701151302 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217908823 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.94275111 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.921364905 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.702163622 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.23753467 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975040128 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079700676 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937616425 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.629111206 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.286449006 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.194252198 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.033097694 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.949331677 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.940763402 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936931066 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.926142127 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.137046753 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.133361515 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204811038 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.068633477 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.979462301 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942895748 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.153798629 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149578575 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.822605883 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073473942 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039585982 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984515755 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.843540124 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.439860962 seconds)
  done (took 1700.462711273 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.960508875 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.963299381 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.032193131 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.972021185 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.968416949 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.054634938 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.013620255 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.03524199 seconds)
  done (took 57.874160486 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.93719183 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.156706362 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.94751172 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.938844656 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.948050202 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.938849925 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.111180456 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.951396034 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.948243955 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.948863808 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.939975143 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.94005855 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.273957313 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.963548576 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.940265836 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.942487954 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.947469713 seconds)
  done (took 75.672495067 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.940165644 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.955653617 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.973437078 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.951772459 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.963969933 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.944879732 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.75711786 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.961606154 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.942223747 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.074564058 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.574561198 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.9524626 seconds)
  done (took 87.869327389 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.949457226 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.946198428 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.947462204 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.94701707 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.947426154 seconds)
  done (took 11.616028093 seconds)
done (took 2215.901279299 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.194926174 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.155610263 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.170839931 seconds)
  done (took 6.202490172 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.090690949 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.137931034 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.25778216 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.264477384 seconds)
  done (took 10.631537439 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.235227409 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.318640661 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.155647995 seconds)
  done (took 8.586479444 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.343101364 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.946126398 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.053400969 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.938488957 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.942937838 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.945703172 seconds)
  done (took 22.704997042 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.945889957 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.947053853 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.944979781 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.948320756 seconds)
  done (took 9.663351592 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.926500476 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.648955212 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.927759524 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.943213603 seconds)
  done (took 21.324338053 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.692997122 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.704374712 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.689401426 seconds)
  done (took 9.964824564 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.551663652 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.866661146 seconds)
  done (took 9.296097165 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.206147904 seconds)
  done (took 4.08413608 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.077271883 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.209564787 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.40384715 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.433671589 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.493922085 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.820102871 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.258047311 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.191022623 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.332102726 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.380684249 seconds)
  done (took 25.478411994 seconds)
done (took 143.351135544 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.324960191 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.186576059 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.145115442 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.282246654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.170794007 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.141630947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.150000494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.26606629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.789843488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.786354042 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.281368041 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.17003629 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.311830013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.180021949 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.313932739 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.180781399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.168127438 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.338528336 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.975192714 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.213422293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.147753792 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.919073382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.125621593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.932904688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.170483403 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.09675553 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.499746059 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.183063799 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.129641675 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.511655022 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.098663073 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.365089541 seconds)
  done (took 175.436722891 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.879318101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.94540836 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.945060848 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.945271882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.477972994 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.945873797 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.946046697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.945504097 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.158089 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.120267617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.950641636 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.484605665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.956248732 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.945093778 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.95627235 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.946021386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.328267122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.958037244 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.96176757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.963649518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.96861657 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.432722456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.965405333 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.461264359 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.340513876 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.965920004 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.947136115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.969324251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.9514507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.961378679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.965916037 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.946845554 seconds)
  done (took 211.517915492 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.946690085 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.948204793 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.949117404 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.94693919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.964150558 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.955869535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.948606511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.947706493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.640581346 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.643166614 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.959075286 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.958609151 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.957706682 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.947401568 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.952124239 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.947474598 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.955894584 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.957042686 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.956998464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.958311643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.964545614 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.778409203 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.964152787 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.773822801 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.956488721 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.956194209 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.948385537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.957463187 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.959313326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.96032598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.960473242 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.94963668 seconds)
  done (took 223.47310707 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.143245753 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.954920318 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.95641406 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.89319368 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.956453779 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.954831813 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.954196346 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.145930117 seconds)
  done (took 19.858729544 seconds)
done (took 632.176673833 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.413315246 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.249708891 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.131161642 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.979570487 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.208733859 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.008869856 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.976058232 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.035810421 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.174904933 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.04801006 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.609518293 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.994107786 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.699316349 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.998583549 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.099876249 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.03274431 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.511180437 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.597338202 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.152787946 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.033432064 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.146401184 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.928125875 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.048835752 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.187375899 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.726879465 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.968135082 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.153418333 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.518365801 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.987397392 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.135580794 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.708667143 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.355982604 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.98637135 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.974429193 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.027122656 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.009577194 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.315527979 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.985198797 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.102565324 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.738242061 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.034415914 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.072511759 seconds)
  done (took 107.952597791 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.947335372 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.945707818 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.944990716 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.946261361 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.94714007 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.945859847 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.94491093 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.945438212 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.94626243 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.94656685 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.948700286 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.947264119 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.946197799 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.947466151 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.945306157 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.945908823 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.946435011 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.948197596 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.94663834 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.946404627 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.946417667 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.946170845 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.947822843 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.945832529 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.948961411 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.947435651 seconds)
  done (took 52.512202479 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.959014866 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.101670433 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.185269385 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.977216421 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.959757231 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.962964325 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.979313667 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.964725357 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.96273953 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.962201896 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.053070246 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.965851009 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.977761343 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.186688311 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.974696525 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.960249668 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.95989977 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.961044778 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.10918537 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.975014739 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.981000733 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.964434036 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.97889179 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.972195469 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.9615322 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.961165441 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.963543541 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.395879328 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.967707293 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.053648189 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.002268653 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.981277834 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.35595914 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.202481174 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.011945799 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.968825547 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.96131339 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.057960667 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.964595931 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.961023193 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.977936543 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.964613321 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.185700383 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.452957813 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.972628182 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.960379899 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.409028476 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.064128125 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.002644336 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.971982619 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.190492379 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.975893814 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.963100865 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.962074326 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.997934475 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.972443986 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.962183303 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.268475779 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.972919008 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.980961645 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.966964598 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.962711942 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.118774079 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.97034828 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.106004493 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.970997289 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.970058182 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.963379097 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.188013238 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.977474496 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.458614641 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.975371784 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.963190812 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.056389512 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.111146719 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.433928163 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.974735667 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.120830728 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.372504455 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.98574154 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.969643209 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.38854253 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.989971361 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.970572977 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.964979724 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.964986435 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.963074541 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.007423449 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.978812981 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.394370604 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.458111682 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.283487054 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.989553539 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.97946382 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.965038454 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.272353738 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.97154255 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.963828407 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.180159149 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.470992542 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.975965933 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.971244784 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.444113648 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.977571343 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.983295114 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.972701628 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.194855137 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.977693878 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.008552097 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.965438522 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.970891451 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.967997122 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.983070227 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.971813737 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.96507676 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.43514292 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.075903078 seconds)
  done (took 242.522896175 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.961402057 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.960228085 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.961213022 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.96190551 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.958684339 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.966189371 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.959450706 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.960258305 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.964971016 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.958852036 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.958825475 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.963708129 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.961618485 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.959349559 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.429417669 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.968401148 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.572659503 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.962537805 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.962636668 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.96351261 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.643427613 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.97199892 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.961865053 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.98363533 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.962716451 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.96706403 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.962526118 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.995158202 seconds)
  done (took 170.663082956 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.968075185 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.147786279 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.986857139 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.003482016 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.976601618 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.966138385 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.993416757 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.988562154 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.973594862 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.965626291 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.965816855 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.029690794 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.981181493 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.107469193 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.001995331 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.00326837 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.075686743 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.977186219 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.966009164 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.966506531 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.99736297 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.963721957 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.03018623 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.098919445 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.990182695 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.08699218 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.97471113 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.969284195 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.968698595 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.088352252 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.986838508 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.030285654 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.997032845 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.987706433 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.092844277 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.086902195 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.076324274 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.00009077 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.976716204 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.968448324 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.966762062 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.957902114 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.086685291 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.991125575 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.970396244 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.079326236 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.988025696 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.971455982 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.978342004 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.968317443 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.98454385 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.988029018 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.03784397 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.102343127 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.004627294 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.996291524 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.996221286 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.276620422 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.980651089 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.071060619 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.967615333 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.09040073 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.991076503 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.9589971 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.970721276 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.974897266 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.998458812 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.005019434 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.076528768 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.980479216 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.071379617 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.007623544 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.979440808 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.969056455 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.972886829 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.090158506 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.090243843 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.008006653 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.011616259 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.005364116 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.96669765 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.971158283 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.96103011 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.989077348 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.975225201 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.090094833 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.090626605 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.980072418 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.973433979 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.972850393 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.972730228 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.997301944 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.09776743 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.008202919 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.069413968 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.041946151 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.050238949 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.989595525 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.98409489 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.975561289 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.036799531 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.989031338 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.983898068 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.327863593 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.045256016 seconds)
  done (took 213.473967385 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.067319653 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.430219311 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.026116983 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.028153186 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.243064011 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.409669556 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.771302573 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.020233147 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.021748233 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.049292495 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.182456361 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.077761518 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.034652945 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.012211549 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.413235089 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.012350757 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.022341121 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.043296878 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.025576499 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.58854552 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.334383157 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.155416597 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.023718466 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.134761705 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.004290782 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.280652397 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.516708233 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.399615827 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.056485578 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.366381489 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.369531746 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.714333032 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.240519283 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.26988497 seconds)
  done (took 78.255527081 seconds)
done (took 867.26532051 seconds)
SAVING RESULT...
DONE!
