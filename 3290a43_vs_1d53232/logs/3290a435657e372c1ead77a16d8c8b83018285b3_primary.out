cset: moving following pidspec: 2774
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.512611083 seconds)
loading group "string"... done (took 0.527582716 seconds)
loading group "linalg"... done (took 9.070098502 seconds)
loading group "parallel"... done (took 0.181150976 seconds)
loading group "find"... done (took 1.315112412 seconds)
loading group "tuple"... done (took 1.947437785 seconds)
loading group "dates"... done (took 1.386619906 seconds)
loading group "micro"... done (took 0.19896051 seconds)
loading group "io"... done (took 0.519692994 seconds)
loading group "scalar"... done (took 51.530523317 seconds)
loading group "sparse"... done (took 14.170997898 seconds)
loading group "broadcast"... done (took 1.337609177 seconds)
loading group "union"... done (took 10.378374932 seconds)
loading group "simd"... done (took 3.100394946 seconds)
loading group "random"... done (took 11.718809646 seconds)
loading group "problem"... done (took 2.259712327 seconds)
loading group "array"... done (took 24.641129006 seconds)
loading group "misc"... done (took 1.159347971 seconds)
loading group "sort"... done (took 3.845508439 seconds)
loading group "collection"... done (took 19.622594926 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.619410839 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.181483141 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203914947 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.288725408 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.240566606 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155289652 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138624166 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.259763966 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.679869669 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213735347 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.129261918 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.509254693 seconds)
done (took 6.447095334 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.254834541 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.179783177 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168642616 seconds)
  done (took 1.121679007 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073550728 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.151896794 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10531668 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.091002122 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090131361 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106688789 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09031712 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106192262 seconds)
  done (took 1.518814789 seconds)
done (took 3.744702474 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.497569336 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.866422998 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.51112702 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.161661683 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.300428421 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.297524147 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.333318581 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.203448313 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090481356 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088666452 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174353959 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.428747056 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.433523367 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.012557623 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088280546 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.112904384 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.116115062 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.802423717 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078326612 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.112046681 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.514350582 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.193988571 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.096409764 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124480548 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.182994316 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130697539 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161321754 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10262981 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.663861106 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132183556 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.18784016 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095356521 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160455539 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.193940433 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.207340879 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.091107217 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684716528 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200405689 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09380975 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098081823 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677287052 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118918117 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185822293 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102045837 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088823787 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181680758 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.095310593 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075557776 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.113551559 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082896351 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164119624 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.452116023 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104668962 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.17007818 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091388283 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.697123458 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098675156 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278466045 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124026892 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091420482 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089391116 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086996455 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16151658 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092988647 seconds)
  done (took 20.264394704 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147962362 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165588127 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075115378 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153832238 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122073535 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078215556 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099241854 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076862872 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106296255 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.241019644 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134428054 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152184063 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089187609 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086359163 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125001062 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245584653 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106271611 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119328641 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086004653 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087806909 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138040818 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095005763 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088558791 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109187803 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167303499 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202625828 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10866254 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121152007 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.084810377 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093712762 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140089511 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144451198 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090575421 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084646488 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171969623 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120427582 seconds)
  done (took 5.253466053 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200470112 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123163248 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.214015358 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160331048 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144834668 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167489874 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.14536347 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.282193881 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.268101643 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160475615 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127188689 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.093203165 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076405884 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.077438734 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095151737 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.483633757 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180477564 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.12880302 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154032075 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085590791 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097654589 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36610792 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098893813 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078126053 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099756052 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067701888 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.200787858 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085095327 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.094271145 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082200035 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086621721 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134817573 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192732322 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128797549 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.160599891 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137514273 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083601788 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098978851 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.197815421 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111361236 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079565642 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075229065 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125448595 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130607203 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121815181 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096303658 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.093419443 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218892706 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079887636 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12169167 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.054191017 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194943682 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.122687872 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078412355 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284763255 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116319884 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085494425 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080076128 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.250528178 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114007275 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.078963437 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095383154 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084635705 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076303747 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.429053009 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106282053 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.858889941 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081599771 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15783503 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082756967 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104081101 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083957345 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083003149 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117760827 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079145489 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078308103 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093553968 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079308137 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076251057 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081729941 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112699377 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08254633 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095339095 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145491675 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082322211 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112004161 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098278998 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12146844 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083656836 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07737224 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126436252 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0809613 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082142006 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.171205462 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084836343 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110248729 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083614298 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14239224 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.078970763 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.225102937 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081574862 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105941582 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099981717 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124325838 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099908657 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077646545 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098765304 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077238569 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077739686 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159426867 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080149907 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079587746 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081061632 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109304997 seconds)
  done (took 22.888220421 seconds)
done (took 49.180320948 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.447028505 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086503545 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085932982 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106702756 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086635422 seconds)
  done (took 1.664690751 seconds)
done (took 2.490095413 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.3232773 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199112744 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098558608 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195751592 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084508512 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203557855 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189769879 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09320512 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214775109 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083786677 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193348157 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083485512 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103097367 seconds)
  done (took 2.919059129 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098509043 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104328632 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096722093 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115359044 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078919601 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095061665 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113569092 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107262916 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094354561 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107049227 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079463773 seconds)
  done (took 1.918211337 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094281265 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101687418 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085084765 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113013957 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079145482 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092259228 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1107704 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10419501 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093587415 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108186886 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080125552 seconds)
  done (took 1.892245092 seconds)
done (took 7.554500218 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.200766027 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.090420879 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.16914646 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.290249744 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346379693 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.253489862 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.663811568 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.157892557 seconds)
  done (took 32.154567189 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.163561735 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.111075918 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.089531128 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085937619 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086652404 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.106968348 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093084962 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090937699 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.106834794 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088072603 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090806175 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104286326 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091505869 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086561425 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087770942 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.108432669 seconds)
  done (took 2.482305575 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139137264 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112042533 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111097371 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.094054624 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089441865 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.112453131 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095883572 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090522425 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.108364553 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089014703 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.096764382 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.11073225 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091551782 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087053114 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109152774 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118560603 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087352604 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11053262 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117140866 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092040848 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.112223597 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.091955851 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091651578 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111904768 seconds)
  done (took 3.38171825 seconds)
done (took 38.849656228 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.152657282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100036714 seconds)
  done (took 1.087538576 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139321948 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.158783045 seconds)
  done (took 1.135920152 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108939139 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084605016 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134744772 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.099668328 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084375249 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.103268081 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113326017 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.102763274 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085858702 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085222218 seconds)
  done (took 1.843973409 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089880798 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09005761 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118939989 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139160393 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.093120398 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.108550281 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09055837 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087202893 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109800723 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.085917208 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09312048 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124069812 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.091248662 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122454156 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.091040352 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091069283 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112968887 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.090593412 seconds)
  done (took 2.672722796 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085142396 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.086679993 seconds)
  done (took 1.016139626 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088579347 seconds)
    (2/7) benchmarking "second"...
    done (took 0.084557499 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085683569 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105310463 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.085209222 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084756969 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103381876 seconds)
  done (took 1.482144341 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.501676751 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.267582391 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.374464751 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102654242 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144153625 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.339070059 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.142867823 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0996405 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097741574 seconds)
  done (took 2.948735978 seconds)
done (took 13.025686413 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091867267 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.218138709 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.634891976 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.228303965 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084600384 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162857679 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.2978056 seconds)
done (took 2.568145573 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353986845 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.151404854 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086709218 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085038821 seconds)
  done (took 1.520033631 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079961614 seconds)
    (2/2) benchmarking "read"...
    done (took 0.093339902 seconds)
  done (took 1.023901316 seconds)
done (took 3.393621991 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085575102 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083083453 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.127058194 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085627433 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.082708404 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08423487 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.10275334 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083733379 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082917535 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083331781 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.104721844 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084489738 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.083382844 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.101525858 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08432733 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084051291 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081949346 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100848315 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082983285 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082176273 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081770825 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102327231 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.082780967 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082176376 seconds)
  done (took 3.023847727 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108922263 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084330367 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105750971 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089470874 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.087392206 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.107013234 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090094343 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083773793 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087874873 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.105545679 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087689766 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086731201 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10400947 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088355794 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087518173 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.107325185 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090260301 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084426066 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104941394 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08849808 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08799535 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102449372 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088643609 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088593581 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106415171 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088956651 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085830402 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.102568941 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089517761 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087510983 seconds)
  done (took 3.661342928 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096313748 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.082861581 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08621514 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114679494 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08476113 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086956519 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101245548 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085306662 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088110273 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08621443 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.106531266 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086878688 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.083752378 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106285873 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090085704 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090141125 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09372031 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.102666572 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084677376 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088675363 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107954806 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085593751 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086801043 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086860204 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.105645707 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.083900214 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086610332 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105115345 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088036347 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086239239 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090116446 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.108667112 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087287984 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098613392 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109245229 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088241885 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092980416 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083460569 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.108026567 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084383366 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083331239 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105759355 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086219885 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093229723 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.086476588 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.10729406 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085660578 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088987299 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.107128671 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091810343 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084261049 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083387326 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.10890162 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088793689 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09045299 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.102128543 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088727871 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.083691253 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.088496363 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.106498224 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084033426 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084083118 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.109776216 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089589947 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102374304 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.111810722 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.084963757 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089120064 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.087016928 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.111219469 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090326432 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096708149 seconds)
  done (took 7.578839667 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100824326 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093795537 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084154105 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104120793 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085534158 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08493473 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108059085 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086144886 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084269714 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109247598 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086741883 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08612077 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084061573 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105459421 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085677942 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086151224 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109112855 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08541673 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084996837 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104484841 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087278631 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089887069 seconds)
  done (took 2.895703952 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.23023908 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092237479 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135061166 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118147178 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101582738 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.116813886 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091159999 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09127828 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107831064 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094995228 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094400802 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107306255 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103806025 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092672964 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113623755 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095259679 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088076934 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117770394 seconds)
  done (took 2.852154614 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.099923626 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.085917345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12840392 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.088113542 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086100322 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087011722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111675994 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109708696 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087842306 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.106945642 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094532999 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088000604 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.107000177 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086432088 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087630915 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10878558 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.088485992 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086717987 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113758282 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09346106 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091381485 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114189838 seconds)
  done (took 3.012190522 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10167433 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08715102 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124807507 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090975138 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085842652 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085856092 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.111683733 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08691611 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092988605 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.106163118 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086138801 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085814565 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.120626776 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087493418 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09120537 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105926355 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088253825 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086397984 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10530432 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087711499 seconds)
  done (took 2.780352854 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.173301089 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12401975 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106123361 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114194598 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124068418 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105495235 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112565215 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125111927 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106094657 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136069472 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107306537 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105658021 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131723761 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110258378 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105488932 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132204688 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111723357 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131878857 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106797249 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105165274 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137358806 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106235286 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13200235 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107165981 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106401043 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125631348 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107703168 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110954828 seconds)
  done (took 4.17376731 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088151074 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086249187 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083650486 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.104235066 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.086703016 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084213111 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.084398796 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.104457035 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086842798 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084067299 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.10409144 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087140654 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086238774 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085420061 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104712185 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.08830644 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086069842 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.08505845 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10523669 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085261619 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.087032152 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105465371 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087928368 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084864453 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084462428 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.105515332 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085018499 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085681632 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103513981 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08622403 seconds)
  done (took 3.593121286 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098578441 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094930183 seconds)
  done (took 1.061460721 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.094988324 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101903382 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085631126 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104961252 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093668816 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087638951 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114058892 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093751024 seconds)
  done (took 1.645120706 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.143714848 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.162941377 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093073367 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.099051833 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.165210204 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157442988 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134995555 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.092823897 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108437764 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083569043 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.157699017 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082846592 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091113038 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086529601 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.111202631 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096981021 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.087820935 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.116694971 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.094368148 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.089282327 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112723221 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095903317 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091438745 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.117462786 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085193047 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091206371 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113268255 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102304254 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085782539 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111838353 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088996838 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08568171 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.110788319 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092142522 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.087573505 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.163763727 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098241029 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086561933 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111497078 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092292922 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119888423 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.106932369 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091970687 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087929264 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113986221 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.092638762 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.092339576 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.106924298 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084167016 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084620255 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.104897212 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087357099 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085597107 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109833059 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091322195 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097789434 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.108498171 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088534735 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086847506 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085229233 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110059303 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087680887 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092026487 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.110342573 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093172224 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090490024 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109650334 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.088538248 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087734947 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.108069403 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091710185 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105923898 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110973012 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.093344369 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092590092 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.106865669 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089468467 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094330794 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107950499 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09324455 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09162436 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11574159 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112466214 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086291182 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085183089 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.115164922 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.090409911 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091347866 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102281909 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100633147 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.089789338 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.107265708 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08451124 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08803307 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104789937 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093724761 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084591634 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090431016 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.104932919 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.093911658 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092111576 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108572572 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09291616 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093400098 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113715375 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090853053 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.154920597 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088745339 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086178543 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.08948288 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113513516 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08548458 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090150485 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.106897852 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089141774 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086562713 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.111767898 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092541569 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.090422533 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.091714141 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113754665 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093539822 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.089857927 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.106411727 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087960091 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.092035481 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115087522 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094298859 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08994096 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.107183086 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.089732999 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090500034 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.111103503 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089265281 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094360672 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087767964 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.105577447 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.090199152 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.093646971 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110309491 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087562994 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08925029 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111054253 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090747388 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.090561231 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110777737 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087404136 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083109305 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109965739 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087619303 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.088444573 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095475094 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106415352 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.090509165 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087342053 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115427137 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087882248 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.092883837 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110727259 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.094510794 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093327962 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101739664 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090081634 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.091134305 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111457779 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089161754 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.088006681 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.085991557 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.115838363 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08524825 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.091785776 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102129277 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088561124 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.093217729 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.108076941 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093397654 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086907071 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.128225174 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121568775 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094311615 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091406669 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111682104 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.093273407 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089656666 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.111839775 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095012537 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.093595278 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110479224 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090883431 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09396877 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106496376 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091691691 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089846203 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092428387 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104010623 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089314449 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08243461 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.112433661 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093970992 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.093139072 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.113320508 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091475709 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09000525 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115006502 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089040008 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.093041162 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083291068 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.113741156 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.098015855 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.094569592 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113554749 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094399079 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089024299 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.10885539 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099594805 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0903336 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112213916 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08991867 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084582299 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084104382 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.114155601 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.092500022 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087637021 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.106164896 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094108824 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093410538 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.108521598 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085911185 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.092658523 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114225078 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088346924 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091102938 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106978378 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091087654 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099237957 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102879984 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089660004 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094661789 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.092143412 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.107533439 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091911635 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.090892638 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.115622673 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09295545 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.090975385 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108089323 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098861756 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089357619 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.087107962 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107873693 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.092695042 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084420368 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.109257828 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093685383 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087491437 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105956056 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096948065 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095341385 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.112822923 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09147413 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.093713482 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.095154211 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.115309872 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089059776 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.093045213 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106535407 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084927271 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086327766 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102966653 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.091669535 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087118759 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.093098632 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110079591 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091162029 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.092893534 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113931428 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089392413 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.094173414 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123039882 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086293601 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084591628 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110071295 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100409259 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087747067 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10855724 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.089812192 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092927846 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.113307334 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095996413 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087462666 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.107291268 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.097070824 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097732965 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.095132522 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.115548711 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.095110367 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086644509 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.113942462 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089373727 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096118276 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106436965 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092370671 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090264298 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111020692 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090257897 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089568547 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.106116255 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086382193 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08816549 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.114125387 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092784322 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.093669633 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090937852 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110992615 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088368659 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087257264 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.115902917 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091599807 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.095060363 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.10883394 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087425543 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085625182 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09402071 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113220819 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.09568545 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086470972 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.114468305 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096050911 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.092827383 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.110438755 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100596377 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098644743 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.115529764 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099728052 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085084064 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08842299 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118253688 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.087835899 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.091776349 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.112505735 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086904464 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094729433 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.115122355 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095168784 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.090678197 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105258147 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.090864298 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.096056132 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.091567931 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.112700659 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.091646094 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092651998 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106647888 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093598545 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.094572838 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111148264 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098089663 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092640426 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09250826 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.109753433 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.095546646 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08872359 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.106870523 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086357743 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089290483 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.116772504 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087434243 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096138946 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.093917855 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109624916 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09057669 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.093982208 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.109568203 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096272794 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094638972 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110421642 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100006917 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.089227153 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.110236726 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096247038 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.094833337 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085625017 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112464192 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091817381 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096186219 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111970588 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.095622318 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09187212 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115771794 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.093851512 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.094623839 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.113943234 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096870103 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086009542 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.09598007 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117749202 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.092070357 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088856817 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111661688 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08876432 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090483873 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.117139409 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090567722 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098543223 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.114765997 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092153243 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09011089 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.094591094 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11294196 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096822407 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087518431 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115401026 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087021942 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095239219 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.112673476 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.097612407 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088545945 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.107616312 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096352827 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.094583214 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113976524 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097493219 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.096093184 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085030878 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107711237 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.092904818 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089088886 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120242728 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098045412 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090316814 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112007542 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.092974686 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.091011513 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116213909 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088885131 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089425864 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092768478 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115872972 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091487683 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086910392 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.115181445 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092572829 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09492286 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112035865 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088223326 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091430915 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.117405764 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092488248 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088821002 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109460208 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09989599 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09261371 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089329499 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107778196 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100669363 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094775113 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118890759 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091389118 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.093673935 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.11159474 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.093181793 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.097651849 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110348372 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094672412 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091025609 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115331187 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101099046 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087325119 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089249814 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122558843 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095936369 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096361107 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.113416899 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093172525 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096692 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117099173 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.091932786 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086539707 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.108092019 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092889436 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086607028 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.090987174 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12044087 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092824987 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090023156 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116459036 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095076258 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.091477393 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.112478106 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08845044 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096919568 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089015458 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118859073 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087543947 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085637343 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.113526443 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097908474 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09193016 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114210801 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.092615308 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.091805467 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08696003 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.113191288 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096868109 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094203849 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.118048199 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093559958 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09096171 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.114337287 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101801452 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.091678854 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111903319 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103483563 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.096373808 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114443136 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094701329 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096674441 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.117605603 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.0940267 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.097046634 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089914918 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113823875 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.099360107 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.097229268 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125796445 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09368562 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087303648 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.116422926 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092162869 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087657282 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118017933 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099022802 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.09659143 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.1138405 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092359543 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100370265 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.120202071 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09508485 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090628273 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090864276 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.116859335 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091982127 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.093329688 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.110965626 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.098769628 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.097296492 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117611819 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.100762588 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087075951 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118937485 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097489782 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101639596 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.090150328 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108390541 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089810012 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.091874732 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.119151161 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101447787 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.094305264 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09404186 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.118306505 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095060496 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093024417 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.111873892 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.098720511 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.095537529 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.112713938 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096793208 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091129011 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115687662 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.093818771 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.097448142 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.097125086 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117575997 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101273636 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.096337752 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.114389709 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091677847 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093797241 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.114052053 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096703818 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096203283 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111449287 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090508417 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097527146 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.097339847 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11565851 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099461606 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098519273 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113581326 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097072796 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09851947 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.115921666 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.093451154 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095067643 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.114236178 seconds)
  done (took 59.969889543 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144435885 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09925875 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113526525 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093251592 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111353212 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114745546 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093988822 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093053112 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.114120104 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104524603 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.092266419 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112010341 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112103846 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114253659 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133981477 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103856193 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112269502 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095307434 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094185558 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093003954 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129438194 seconds)
  done (took 3.195592887 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112841178 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.107235287 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125567062 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108074756 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099457856 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126023432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104598239 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125738299 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109489242 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100294547 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129497454 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104835643 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.120524285 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.102843552 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101541963 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124136063 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108950467 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099669301 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126970175 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105277845 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121639488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106375745 seconds)
  done (took 3.393234606 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.103682977 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.096391742 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09919635 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.114729405 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.097539982 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.091622907 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120833564 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.095472869 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.101811237 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.09391486 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111486936 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095798419 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098457872 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.113903671 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091439995 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.093145467 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.123475044 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.098264105 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.097498326 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.092393238 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.129481762 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.093207401 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.092676015 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111187498 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106912771 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.097474814 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.116180121 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.098703277 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088617533 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.117451179 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.095672693 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094440502 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.093881658 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112128429 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090858179 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.096581113 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.118727829 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094768415 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.093262536 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.116214101 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.094889374 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.098120696 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.118937988 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09532069 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094875676 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093770176 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.120830266 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093778906 seconds)
  done (took 5.826769176 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127136219 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155721938 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.097716018 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124230231 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132682302 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104535498 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.097141715 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128346733 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.094985235 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.118638076 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110807422 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107393196 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121099531 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.102203658 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099389644 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12063523 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100950949 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096257268 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.123188291 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097627436 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10146949 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.121653362 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107881035 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.127174905 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.102374961 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097220642 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.117440226 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.102713537 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10650101 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.123527954 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.102789652 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.344322109 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.129720692 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.100602518 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096817682 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.121168785 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111335538 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.097407576 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.121236819 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096342695 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.098314174 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123134159 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10133339 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12958809 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100330127 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.099278724 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096944046 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.116911245 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.107386299 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.119428734 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106329153 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.107779126 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120966849 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.099219356 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101877915 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129522492 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.099341352 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.095946881 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.120677663 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.107335685 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.094953202 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12175099 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109742915 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.098606102 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.124667451 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10789011 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11865307 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102515433 seconds)
  done (took 8.81575707 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135050061 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102207391 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132117552 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110412851 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102045017 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124036035 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10254679 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.101354115 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124807886 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107300272 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122076206 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201317778 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120599542 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108060714 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101469997 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123862538 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104300585 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102016844 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124428774 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102452013 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.103141236 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131996058 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10227896 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130885155 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115826532 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099007251 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122371554 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104795052 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110645955 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123949082 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113763585 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.122427152 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103702025 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110449128 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.134230864 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103617627 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096488053 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12435468 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104141258 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101541168 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.12129436 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111953127 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10184825 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.12151091 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103876008 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102270466 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133468297 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114322216 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129872006 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108397596 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.101780696 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132972472 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103861426 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101686532 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133055468 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.117719573 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133041608 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110754082 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12360943 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112890401 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109963815 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.139886872 seconds)
  done (took 8.120987023 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097811505 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095910458 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09371161 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116642349 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096467256 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094895988 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094809113 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.117750711 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096251891 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094173545 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117578729 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096206713 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093977529 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09491955 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115243642 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096089072 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094697992 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09460771 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117375987 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094630366 seconds)
  done (took 2.952344689 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106138006 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114334637 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.117360062 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104451808 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099143725 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123956233 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.098395846 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097893749 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096358282 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120513597 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107053021 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105269731 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119114592 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103633552 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.126475427 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104600409 seconds)
  done (took 2.687255998 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118724044 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114720781 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.191773222 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.100527472 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.120691765 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10536754 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.09803574 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.098337914 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.121336366 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105221665 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.101495543 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.123224997 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.098644639 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.099534782 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.120728861 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102452799 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095243678 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.122576659 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.099356529 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.188669444 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.102733053 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10015777 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.098317943 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.124193573 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.100617143 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.10117519 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.126229972 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.097895318 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.09849612 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.121949981 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.099776431 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.104537458 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.118462309 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103594665 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099292361 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.119379331 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100549284 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.098645851 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.121177998 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10062303 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101310601 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.098288299 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.121235598 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102609974 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.095113271 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.120613286 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.097385194 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.103036568 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.120262103 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101931693 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.098240731 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106539198 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.126654801 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107157303 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.104365151 seconds)
  done (took 7.014820153 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111722035 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099932319 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130438533 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09888087 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.099752274 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.098261465 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121886921 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.100005569 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09892568 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.11800738 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099934475 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099908339 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119438084 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101573335 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098657714 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099206328 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.118532861 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.099831614 seconds)
  done (took 2.863336637 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104890844 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097315737 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.102914856 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120482426 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097563435 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097125793 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118397271 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098902797 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096640922 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097032023 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120217313 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.099059631 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097149077 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.119470329 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098313206 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097622239 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.119336908 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099365879 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098377604 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095797207 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122075122 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099141172 seconds)
  done (took 3.246053937 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112302347 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185809515 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107588109 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.193850872 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098775732 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097011224 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127940288 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099012362 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113522632 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119812864 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097248988 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095831395 seconds)
  done (took 2.398154328 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129326097 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137085138 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120376799 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101083552 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106683913 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12510978 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103624796 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101119725 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134593894 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114293127 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123262931 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11379372 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111137108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133189669 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108231056 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107348601 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125228695 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103158053 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097781135 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140695123 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101797024 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132964647 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103220385 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102072468 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12532563 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111658402 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10973093 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137879762 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102925839 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133873821 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10905544 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101557541 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13350242 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114139668 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120832031 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11272661 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101975651 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140434454 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108567742 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132340401 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101276612 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107727673 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134046113 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109535207 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110658085 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124275488 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109287262 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10197709 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126108039 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125469459 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129890241 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111989405 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10746937 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134167003 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111854086 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147180731 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114163268 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133832171 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109045992 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113854706 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134675499 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10890631 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134018293 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116372717 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129571775 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113667645 seconds)
  done (took 8.73202373 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143834516 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098895629 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124038185 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115673587 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111191248 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126360399 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102552338 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123820999 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104880322 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100107122 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169991793 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104097295 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113864668 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134489528 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103799517 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124005473 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104978002 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111020955 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120110997 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127247104 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102460654 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134281521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11156709 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133792078 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115909238 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130175865 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105043691 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103038751 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12394922 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105542052 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109035786 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124695922 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113074308 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099089183 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134049195 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104437167 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103542721 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131935514 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103882737 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107686356 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135643682 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118777472 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125648759 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105185563 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115051635 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126791277 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103443026 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099067807 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126659135 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100492132 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136876193 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117054467 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11457928 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135004167 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103911916 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125298796 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105376668 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104388745 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125396395 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110372104 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110004576 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127270241 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126408177 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12433999 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105599059 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111742356 seconds)
  done (took 8.665373371 seconds)
done (took 165.009948864 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150873076 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.191729999 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146377178 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178869974 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093730288 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126878982 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14775823 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.150473436 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092883847 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116808958 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094257341 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09578381 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.180544835 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094740273 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093373147 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095357879 seconds)
  done (took 3.005667802 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193274041 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.309312881 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109995355 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119683262 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10310584 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09962305 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119651306 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100988158 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097780765 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128188509 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102488905 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096035238 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126998835 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097170321 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097499876 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122380007 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107588296 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10017204 seconds)
  done (took 3.198223231 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121308567 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143965535 seconds)
  done (took 1.232473545 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.1311798 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198814523 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275717377 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173276239 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122887242 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138238841 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15212557 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132723598 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.181035376 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133874778 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113525206 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098345483 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147087026 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105478604 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.110982848 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122232698 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127046226 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109878446 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.132254573 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101319445 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119363488 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.127325769 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105301507 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.130887342 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.171569407 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133195172 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105642958 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103527379 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122257206 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.110547853 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105938758 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138336782 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111980983 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176011369 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10479951 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172240507 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108222393 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121185008 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110684029 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098707939 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125000083 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103644625 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115338823 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120700844 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104472484 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108486974 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125883497 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103168319 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12843226 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111378378 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106356647 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.129258489 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.147586535 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.1320561 seconds)
  done (took 7.911573675 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.855116268 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141229421 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09893133 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.011689114 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149689418 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115168389 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.846688784 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145055173 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232533797 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.900427041 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116245642 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111700978 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.26243553 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.252050143 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.182382688 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.37056039 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.692112762 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.136479433 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129674472 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166094231 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10880701 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147128116 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121502586 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43292484 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100880604 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097773304 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129562558 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11265267 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179214502 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100218806 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102054095 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199446925 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.286243956 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209785985 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09881889 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121260023 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098919786 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185972777 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270654972 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219302062 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163509273 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119428758 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099872529 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106934471 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142024597 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095186539 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181546089 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191088303 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190982043 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104343763 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111058494 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133180323 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107757954 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.17896023 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09641802 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.349355576 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.373251593 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099682281 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106774485 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137830053 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267917781 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100047819 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233531103 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148346913 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213910682 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100118083 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812464 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185172351 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098640185 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105170752 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.134368219 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104245041 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129413243 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158939252 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39629033 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111194075 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125051179 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099591417 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242849486 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099376278 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097593458 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182801064 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099178065 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130685316 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112524151 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134842171 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187629634 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.241846814 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134860591 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109158349 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103705951 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134599783 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100681156 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232482765 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230236621 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176619793 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232696644 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109155124 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182513196 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160675499 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128756106 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187467519 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107523452 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114298488 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13094673 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226016069 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155160623 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101281238 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103579338 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130653861 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.138727 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10230304 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131372897 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185054569 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.432220281 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18471758 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.116885567 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106256347 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108649568 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181214951 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105925388 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266445371 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13126463 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16313374 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130415184 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097048608 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107156883 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181724131 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131192254 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109365214 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106303691 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135058097 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.271162728 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222585228 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112758769 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243863838 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.192314806 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108030079 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193924869 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107889633 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188093963 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108645635 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131124782 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101051282 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800787908 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134449984 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109019285 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10459386 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204759857 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098282617 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.099876044 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123175806 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097023948 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832444831 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10189882 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119383413 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101359949 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106058448 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130713443 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108227902 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104405172 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180266046 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242811134 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.13642427 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106053035 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121702502 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157625693 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.122897581 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101316569 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099647456 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100499233 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.133183406 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103641654 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100809845 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191775317 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177799827 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230792388 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.556524023 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121155413 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101589333 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24348339 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098969624 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.318086432 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132224784 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234592085 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186427724 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098567096 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349205178 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187681994 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203497109 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104806804 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189328071 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098666082 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108034601 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180957915 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099041078 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130645393 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154849705 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138096633 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.112405893 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.192036995 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124944539 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249241667 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098451829 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18678791 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102441907 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107672515 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319003851 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123990403 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118200919 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182198583 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104160404 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123621821 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.602349069 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102139522 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110442942 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129781686 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239205617 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184101381 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109557997 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108597316 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13674958 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181262783 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212243942 seconds)
  done (took 45.971586439 seconds)
done (took 62.28277893 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28991868 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.256539822 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.308000841 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.2156164 seconds)
  done (took 2.13089165 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.287605286 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165173168 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.235092704 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.09816657 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.249217547 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098093761 seconds)
  done (took 2.127371073 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.498770305 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.390503168 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.34795073 seconds)
  done (took 2.232251268 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248695332 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237852368 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.349276487 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.413184204 seconds)
  done (took 2.357179925 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.30188064 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133604549 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126034987 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.215426335 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.28167874 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.260498331 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.153034909 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202254414 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.15320513 seconds)
  done (took 2.870215449 seconds)
done (took 12.710695621 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.252732817 seconds)
    (2/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.334042692 seconds)
    (3/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.355980422 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.272439135 seconds)
    (5/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.248946374 seconds)
    (6/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.354375813 seconds)
    (7/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.22297939 seconds)
    (8/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.214517273 seconds)
    (9/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.13200738 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.198324422 seconds)
    (11/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.280598537 seconds)
    (12/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.287391548 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.227294973 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.210802526 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.132288553 seconds)
    (16/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105128865 seconds)
    (17/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.176074748 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.340332736 seconds)
    (19/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.116674137 seconds)
    (20/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.183352475 seconds)
    (21/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.223903103 seconds)
    (22/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.203704736 seconds)
    (23/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10456076 seconds)
    (24/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.213846364 seconds)
    (25/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.153073452 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.134154611 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.135841102 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125936707 seconds)
    (29/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.239088122 seconds)
    (30/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085310172 seconds)
    (31/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.189385793 seconds)
    (32/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.220950503 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.138878976 seconds)
    (34/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.107946747 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.18059948 seconds)
    (36/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.25156976 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.12847358 seconds)
    (38/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.179151472 seconds)
    (39/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.130335283 seconds)
    (40/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084673801 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108157557 seconds)
    (42/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.131430939 seconds)
    (43/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.108784755 seconds)
    (44/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.198806563 seconds)
    (45/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.104873234 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.162588739 seconds)
    (47/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.171955905 seconds)
    (48/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.1363309 seconds)
    (49/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.085054001 seconds)
    (50/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116225284 seconds)
    (51/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10509731 seconds)
    (52/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.13393038 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104754691 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.16297661 seconds)
    (55/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083052149 seconds)
    (56/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.343799657 seconds)
    (57/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.125807923 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.137427557 seconds)
    (59/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.10926086 seconds)
    (60/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.085564017 seconds)
    (61/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.106985432 seconds)
    (62/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.220892034 seconds)
    (63/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.145155986 seconds)
    (64/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124391325 seconds)
    (65/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.177791066 seconds)
    (66/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.151637481 seconds)
    (67/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08338848 seconds)
    (68/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.15055588 seconds)
    (69/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.255437639 seconds)
    (70/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186582146 seconds)
    (71/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.132089694 seconds)
    (72/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.177457127 seconds)
    (73/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.105607034 seconds)
    (74/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.11025614 seconds)
    (75/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.094346161 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106244288 seconds)
    (77/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.200242758 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107518936 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124720805 seconds)
    (80/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.127714538 seconds)
    (81/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.147252938 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105426309 seconds)
    (83/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08415768 seconds)
    (84/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.119782825 seconds)
    (85/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.163940075 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.10736499 seconds)
    (87/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084343654 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.125088566 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.107182127 seconds)
    (90/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115283819 seconds)
    (91/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.223388759 seconds)
    (92/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143430483 seconds)
    (93/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.192093259 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106622246 seconds)
    (95/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.125243739 seconds)
    (96/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.261146487 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.131352154 seconds)
    (98/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125996619 seconds)
    (99/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.109272495 seconds)
    (100/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.177696619 seconds)
    (101/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.100258414 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.116852284 seconds)
    (103/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.202057124 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.107639968 seconds)
    (105/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.083873997 seconds)
    (106/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.130521577 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.108116814 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.084038781 seconds)
    (109/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098524984 seconds)
    (110/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.109309337 seconds)
    (111/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108808565 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085300826 seconds)
    (113/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10459525 seconds)
    (114/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.109112476 seconds)
    (115/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125653322 seconds)
    (116/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083300658 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.130261727 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109962772 seconds)
    (119/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.166609269 seconds)
    (120/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.224953527 seconds)
    (121/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08413781 seconds)
    (122/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083149444 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.083833192 seconds)
    (124/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137663825 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085175395 seconds)
    (126/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.162374602 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.133186129 seconds)
    (128/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107516392 seconds)
    (129/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083809482 seconds)
    (130/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082878939 seconds)
    (131/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.10946604 seconds)
    (132/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.086119787 seconds)
    (133/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184869687 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084113901 seconds)
    (135/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.1143053 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.108224005 seconds)
    (137/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108151176 seconds)
    (138/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.083282124 seconds)
    (139/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.201752865 seconds)
    (140/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.084214782 seconds)
    (141/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.099296616 seconds)
    (142/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.134598714 seconds)
    (143/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.148473825 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10709887 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.15124157 seconds)
    (146/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12697064 seconds)
    (147/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.194821706 seconds)
    (148/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.086239871 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108279024 seconds)
    (150/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.202907188 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110096436 seconds)
    (152/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085134722 seconds)
    (153/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.150949471 seconds)
    (154/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.107929644 seconds)
    (155/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.085004457 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.086152635 seconds)
    (157/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102569123 seconds)
    (158/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089701734 seconds)
    (159/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.109190125 seconds)
    (160/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.090247801 seconds)
    (161/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.107047063 seconds)
    (162/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085083114 seconds)
    (163/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.083692324 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.129099537 seconds)
    (165/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.183237617 seconds)
    (166/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083632007 seconds)
    (167/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.108984683 seconds)
    (168/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.087013818 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106686571 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.106006338 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.134439037 seconds)
    (172/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.085321829 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127562475 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.133312436 seconds)
    (175/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.091992503 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107116519 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099391905 seconds)
    (178/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.110175716 seconds)
    (179/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.084433909 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100077945 seconds)
    (181/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08383912 seconds)
    (182/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.108781255 seconds)
    (183/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.090789167 seconds)
    (184/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.084868649 seconds)
    (185/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.08906257 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124250641 seconds)
    (187/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.109216003 seconds)
    (188/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.084864398 seconds)
    (189/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106860232 seconds)
    (190/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.084152765 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.108293787 seconds)
    (192/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.085931143 seconds)
  done (took 27.748429732 seconds)
done (took 28.755311609 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.216161244 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13181176 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109911805 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109620571 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.208222219 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118326873 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.143889742 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113293591 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.114457495 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.106381312 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.126752935 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118454088 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10825066 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203398364 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111642257 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.128033453 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101110818 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114442197 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.144386956 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.120815662 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.206282296 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104435411 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114542561 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126945145 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.181648176 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127505807 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109693868 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10923371 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.114916188 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.133867765 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108322459 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100637047 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.14406242 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119827812 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100433096 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.133626262 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101488588 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089694813 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.132025738 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110765966 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.11737014 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.106961226 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135788115 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103716985 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108034963 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133724261 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102301312 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.112819733 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.124203617 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110114808 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103509473 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.144647656 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108865157 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099806659 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122897208 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10379844 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.1154785 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101662215 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.144030134 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101960592 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.101207311 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127114506 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112152764 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100255007 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.132049602 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10371747 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108857031 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.108716931 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.132064324 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104075369 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101588062 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132798972 seconds)
done (took 9.829388251 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109358775 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.157010317 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.203966514 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.215071512 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131829781 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141993156 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123048646 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.130340748 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144888453 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128033411 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.158439451 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131709918 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.215096896 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114295827 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117051051 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.137061251 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116881446 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113104465 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.216785538 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124350961 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157989213 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113562374 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158833121 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.125340309 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107921688 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.16582743 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109711172 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.135146455 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.110961924 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116098523 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.150256634 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11083208 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.10816654 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.153802399 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122073615 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.115120127 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.14442244 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111959577 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107663607 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.1326043 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117443596 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125538024 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.133642287 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118812913 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.110947667 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.142573616 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116787196 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.138983722 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113251819 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113022512 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.135174426 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137200703 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.114865492 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.140449452 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11595737 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115240768 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.1409462 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117305976 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.10779101 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.140772437 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108766575 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109831084 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.137180516 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.132454876 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.107731555 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.142881029 seconds)
  done (took 9.762918437 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128431293 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137495638 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141652902 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117623616 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111586938 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12468224 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100188533 seconds)
  done (took 1.911567786 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102489826 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188473817 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.214158171 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212313991 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.209707863 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.219985612 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123738719 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100819275 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.158163582 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.11251261 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.213935078 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.216291298 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.13422692 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.116618472 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215609279 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.100269185 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.218279347 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.101551115 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113264116 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.214675861 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113548657 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.155989245 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114171454 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101477496 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210638686 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101928934 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.266088165 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14358841 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109165034 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114970047 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112448933 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207372347 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211287675 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115351963 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104822214 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.212705443 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.209341425 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112058579 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.226279705 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106134766 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.213462783 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.1126058 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.141363896 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.114853823 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11634593 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.199997353 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119828893 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113992243 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.140102749 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.192980949 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.139252183 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18403205 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.136237911 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.113644665 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111498905 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141033931 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123023186 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.112771492 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.222149578 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114779394 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.212086026 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.212414207 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184708937 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.214693512 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12219985 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.214535077 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.207679408 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.112660575 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109439169 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.141793409 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18708312 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.139541555 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112760439 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.202691181 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117308281 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.216765717 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.186109129 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138320475 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.11561486 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104846536 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.137624415 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102247974 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.204227901 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11362421 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111233446 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146956307 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115868732 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112333453 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.133062966 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.12531434 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.111794914 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.139608139 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119737195 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.112074714 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145667565 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.216594877 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114468025 seconds)
  done (took 15.775840798 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107517834 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103893899 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107422627 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130226995 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104665693 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103237178 seconds)
  done (took 1.731035969 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143070241 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115386706 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149168575 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116496227 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165667989 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.221926324 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.227256047 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111134604 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158006616 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128212142 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.223021829 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.200396165 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.230742104 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.116833899 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.227460477 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118653931 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.229725603 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111334774 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151438942 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11295902 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117529497 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145558392 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113203587 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.213766251 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117839538 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144384674 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113479407 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125976622 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.14907022 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112902665 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118659754 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.14466274 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111989263 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111235931 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.229707785 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108573081 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138770779 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124034148 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117089628 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146118842 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.202829395 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139160049 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125094324 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122375402 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.139917086 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.10968819 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122303249 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139812137 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.225588689 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.128750788 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123841934 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.142731738 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120837886 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122859086 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136504964 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113824741 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.124256433 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.230498524 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.1174997 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.137868347 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11523329 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119232303 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140233881 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123825505 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.115049044 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.151346688 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111273726 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115057433 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140622603 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116383688 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124191984 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143039816 seconds)
  done (took 11.379917761 seconds)
done (took 41.604695387 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.548235449 seconds)
  done (took 2.61664449 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.915017673 seconds)
  done (took 1.985974415 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.235278745 seconds)
  done (took 20.337641204 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.542930395 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.615189158 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.058418202 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154096315 seconds)
  done (took 3.443034733 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.017922892 seconds)
  done (took 2.107706106 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.294426349 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264107526 seconds)
  done (took 1.636436549 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.751415261 seconds)
  done (took 1.840671693 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.544144349 seconds)
  done (took 2.621066405 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.362306833 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177060432 seconds)
  done (took 1.631288563 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.625687819 seconds)
  done (took 1.717862849 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.851818582 seconds)
  done (took 20.945052857 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.24948792 seconds)
  done (took 1.345437473 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289093274 seconds)
  done (took 1.384957509 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.837686474 seconds)
  done (took 4.935577783 seconds)
done (took 69.624001033 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115320683 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117517396 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11660668 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142317942 seconds)
  done (took 1.577845182 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123930449 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117598585 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120488723 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143715892 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123460208 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116666024 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.145427573 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120245081 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116337978 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146940828 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118861338 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116080046 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147286738 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118764957 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115555068 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146685267 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122387147 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117824675 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143701545 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120849576 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11893428 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118643281 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.148400052 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121765018 seconds)
  done (took 4.150241032 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115167653 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108670231 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109719768 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133071996 seconds)
  done (took 1.568430911 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12758265 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130500156 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153613659 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127210294 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129247911 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155281068 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118505171 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113839038 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143482438 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127322523 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13369516 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157808699 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129307956 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118502639 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155844471 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112858425 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119143176 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157602853 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125226411 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126457187 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146024801 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125569284 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121917162 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.15319155 seconds)
  done (took 4.30720411 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189159321 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126749229 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.167160168 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159240407 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.16990017 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.113876289 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.136471896 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.146203844 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121043377 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.115135845 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.14423464 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.15971288 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.145713002 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117641471 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113567357 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.145757223 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.12766497 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.119578412 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.183703626 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.118764519 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146608337 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128107564 seconds)
  done (took 4.194626635 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120542209 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107373829 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103370661 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.138592624 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119990653 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110209542 seconds)
  done (took 1.808113062 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10868603 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102487942 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102010834 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129161186 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107551935 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10113649 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100647175 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129186301 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101773092 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102566112 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128313236 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102336055 seconds)
  done (took 2.422354112 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.34649843 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107687859 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13543796 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109180543 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113655195 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105699513 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149634999 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108096694 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.273325521 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.106632914 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146988487 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.200014558 seconds)
  done (took 3.010385607 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206141074 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143470715 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298645014 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371380521 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162635499 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18451298 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269151192 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189595585 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202573484 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134923683 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240285125 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152160447 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174952253 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171884824 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160517351 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.162682271 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193689688 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188419979 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17267411 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195892004 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181216903 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162319144 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205459611 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17401512 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132930775 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157527856 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.142464369 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124387746 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192405752 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161359888 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19568972 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142601529 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165175325 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216939133 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231206075 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198133497 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286752516 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156794745 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177898645 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.208513337 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25604564 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136634384 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21331872 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150208272 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15464672 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174905244 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179235931 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.169233734 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.155436271 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139037132 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204730766 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19615476 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175693366 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158496933 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290772971 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19034932 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.138046305 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198089861 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206572582 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186789774 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189741046 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119835643 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20764716 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206508688 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176732355 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163374915 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163584001 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120006757 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191383084 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219086806 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1758075 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183466037 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225010557 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127964189 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180729988 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169784448 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20231787 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172521256 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183292256 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.115207077 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172275024 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132422876 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12278394 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.223371794 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118025126 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223531621 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12934071 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342332108 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213316089 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152028977 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18462916 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154933022 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1847841 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142255089 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.109612185 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170953746 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157827446 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180677255 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129454036 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180656147 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134427333 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.153177054 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147235971 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.117416326 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182349464 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132875542 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188684725 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154532735 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.156505636 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160748916 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173419788 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149021983 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192721476 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177863014 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158668661 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128783777 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213005823 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151945505 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.155459235 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171865402 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207552643 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147848033 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160729778 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160465659 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214315652 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135768921 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212073263 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13193944 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160221007 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.144754373 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185219401 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153418908 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.17936959 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12504815 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.173349877 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194336427 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.15275531 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1353463 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193123742 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129108478 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121281589 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16357708 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131439768 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.164347245 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.141562382 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.129093008 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179047926 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153251972 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180988212 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178417837 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133618673 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20010712 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128986843 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.155223115 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171532939 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115236821 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198351976 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179377683 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154503847 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199020748 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189537796 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216586965 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156552449 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157180731 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173749778 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153003125 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11645707 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18472016 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153027766 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18376456 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176032893 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214214847 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191834077 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.146363673 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172892913 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164402173 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.201185763 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149651022 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.167752759 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153728748 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190026531 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117316775 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.11858304 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.153474514 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133287587 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152833714 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132852825 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200029423 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162610612 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20987827 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183227064 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136242432 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204750452 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124905738 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155338366 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.188716226 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1346029 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.205286805 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204195096 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163776948 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164632861 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160291548 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.115602953 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15095957 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.129259156 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189917606 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131412829 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129644501 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165355959 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205783392 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171589973 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172015615 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223234046 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164081648 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217599141 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.116087781 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.188469107 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16942921 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181512207 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180752256 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135347399 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.185107655 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176644813 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167299368 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210550614 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154424506 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185376946 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18613788 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.180531146 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127158509 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170570656 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157146082 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132653802 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18993193 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141602663 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155649487 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147955721 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.163164528 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121636473 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209902735 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139183405 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195991538 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154938121 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193980322 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120845067 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166302059 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156766582 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169171829 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.11609678 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165795997 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209127924 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168473063 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153540481 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199296248 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126375781 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.344808871 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185503927 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203452117 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130044593 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166892032 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157932428 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188141599 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15877216 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206707841 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136956273 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204019986 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154723106 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.170143217 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126083659 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173071337 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149556723 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.173866811 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129612518 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150959462 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.166909986 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211595808 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1372093 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155111272 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184514228 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.142268068 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.177622727 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136274245 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219966027 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152249239 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200367983 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150102982 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.192698042 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216661384 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120329228 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12318094 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.157116603 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178321651 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154796188 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158921842 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.204696608 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21862018 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161892871 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188239971 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135020461 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.150996344 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15432451 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1430441 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219806474 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160893998 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133798441 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218558866 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135184636 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15684682 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157874892 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309583979 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14195304 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200653347 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.118807043 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302981258 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125876314 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15750917 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160975786 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196705975 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13007875 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18114603 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184544337 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138200101 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191058066 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133033399 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214279603 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220708348 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163362874 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198491101 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138948637 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188346345 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155602794 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204446121 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166733155 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142804476 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157665124 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207895379 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208151654 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130193929 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153249719 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184710713 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151512246 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197590113 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131345605 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218417661 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123982052 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189762237 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133326166 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150038333 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156426563 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.204961873 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127068908 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204732643 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183566618 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130342912 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123752282 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172084234 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154275254 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164412805 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128798314 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21036066 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126644646 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187142375 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177319782 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125848742 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183232365 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14299736 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15453475 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139719915 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137464577 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157686236 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169632886 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211137401 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126931656 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206059365 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161423884 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191574694 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153353984 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168746315 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66198349 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.151042191 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178818534 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172328987 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187367922 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177155623 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157906819 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185430069 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146083555 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191093973 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145491359 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.265649874 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160007192 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181867992 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128730358 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136778848 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166219025 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129398651 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178310473 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155157929 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165853075 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133046815 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150833703 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168808734 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14152547 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165095987 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179999051 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174715916 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182016541 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208951683 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132852527 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188801836 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198613432 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12804772 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188432444 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171393634 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165766656 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145710698 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128470918 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.16336885 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178949976 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119231892 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186073802 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157113999 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184039667 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154991649 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.161956225 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15838447 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167738623 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15748445 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151818778 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150770221 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184935491 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132749596 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.122429165 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184400405 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155209717 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.181535385 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123436807 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169471199 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20951212 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.120154764 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159158688 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28088422 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186726809 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184430243 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.176841543 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132367254 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170321634 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151809076 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.180568452 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157592905 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.124732062 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156282177 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.12586499 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.195738566 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.152864189 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184532672 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176188614 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188062536 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190670828 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.161574068 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28473477 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165619376 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156405897 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.125704841 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.154859557 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137791127 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157403634 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138799533 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212848298 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179358971 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.182235781 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14229989 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16085126 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.1223314 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127661943 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192876905 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149144716 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187226733 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140356875 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.113194184 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171019718 seconds)
  done (took 83.12697847 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169661458 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.154466673 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171368969 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222704759 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199327744 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29216081 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.232222531 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257167255 seconds)
  done (took 2.884764234 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120868005 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161169399 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142150916 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145789351 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117200024 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.454545791 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160180921 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120963628 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165479836 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.161170309 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.143786904 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.619975533 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.11492635 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145922766 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.130697036 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.117296716 seconds)
  done (took 4.204072723 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.56919754 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.60221221 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.403749738 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.285959728 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238026226 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.18286139 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.824438448 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194240944 seconds)
  done (took 13.493524498 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.148940164 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134551701 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.832418448 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.264998733 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.151084467 seconds)
  done (took 2.73025447 seconds)
done (took 130.564587762 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122202388 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120770399 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119800875 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153287051 seconds)
  done (took 1.701132035 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.186845569 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096921744 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098203221 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.124931267 seconds)
  done (took 1.701090461 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.443471424 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.096396253 seconds)
  done (took 1.760817451 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.148464792 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143487235 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165625332 seconds)
  done (took 1.665417981 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141553423 seconds)
  done (took 1.337982876 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.13035619 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.122147855 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.247450452 seconds)
  done (took 1.701621194 seconds)
done (took 11.069816265 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121282622 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.509103887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434226287 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135312985 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713642274 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429227579 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029184603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176207926 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17626203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138448063 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134097698 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693408064 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.046810236 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.453900454 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999806835 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.39768215 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694728947 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111545448 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147234608 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11291348 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007109807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137301336 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113484702 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111538722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718203853 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424866216 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109683894 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.397859366 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111558538 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113076448 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427996638 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112897013 seconds)
  done (took 17.63006808 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119812481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173197876 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148169391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112509437 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113357103 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140409134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123193106 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123080017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207724013 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109082952 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162450088 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111102059 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115572697 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137817522 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137242271 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110002303 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111987833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144807183 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118870863 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112255165 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162110584 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110281643 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111387501 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142760575 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11142036 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132881156 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140710916 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122391316 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109626749 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145218486 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115503754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110524175 seconds)
  done (took 5.356206297 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159298272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180718995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149316007 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148374189 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188295798 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11345697 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225129104 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149982899 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205810622 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111899047 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133042539 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139739398 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153008142 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111417164 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165783396 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111620188 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114085774 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143406654 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120688273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112660351 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162805495 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109562557 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112412747 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14146673 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111970873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133963004 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14077757 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124321563 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109795363 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145171327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117080608 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11197838 seconds)
  done (took 5.670676176 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127226966 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126450103 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133985259 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166044468 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121764831 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124000912 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.1566049 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12191485 seconds)
  done (took 2.292006357 seconds)
done (took 32.14862535 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134520322 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127660152 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127823636 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15264868 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194846687 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.14570003 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126373669 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114234952 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152280085 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130634528 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111461314 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114309141 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.159405906 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120128173 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.227761438 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12383424 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.231498259 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.198145904 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146106563 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124024061 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116492555 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233651038 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120046988 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114623709 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.236960996 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113689724 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.217354613 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118750143 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148776188 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.114578361 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.227052954 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.120957131 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115521374 seconds)
  done (took 6.161974988 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.212919948 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.11737023 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.152074217 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119955034 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117519032 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148669638 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.216474128 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148814824 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12078959 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118224036 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.118969217 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226181653 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123056912 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142995611 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120366518 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.116576264 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.248342373 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.118295968 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.111747886 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.127314382 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.112838021 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119107762 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.258298543 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.111860092 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.118300742 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.149543889 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.1202247 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121497049 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.148467953 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120889236 seconds)
  done (took 5.529364082 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128222932 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133328191 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.135887936 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.217657737 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147654389 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163181312 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142253626 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134353387 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175596979 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114192203 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128611271 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181541237 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131872271 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122529061 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.148279921 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133297024 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135106074 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143583362 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120902091 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130890996 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165663069 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132291297 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139915096 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151314893 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113147008 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12103966 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152542799 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.130802869 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121275075 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126494846 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.146653431 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116938973 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115270965 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.179226993 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114406307 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126538717 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.170897197 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125150023 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127395283 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.1760144 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118549891 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115389214 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.17105387 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169056685 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.113662045 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.157317759 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125680955 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126463411 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.143416881 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133603352 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156473028 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.144978247 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134596373 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.114528315 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.143189739 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122005803 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113508361 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.145953658 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129537058 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116114955 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.167106794 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123524219 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124863996 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114529956 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.1557494 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113115034 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111685032 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.148507947 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141767326 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120586675 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.181099867 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115148283 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126082978 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.154971402 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125757429 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125390887 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112955805 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.154761957 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124737891 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118548397 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.156879505 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117636334 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116921364 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.160942232 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136990077 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127513378 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.155849627 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12873211 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116172802 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.144005167 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132230994 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114954632 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118047701 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.158250057 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114625779 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115940441 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.158400137 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12597382 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111380371 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.170782977 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119488072 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112614801 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.169467671 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.12141143 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119381099 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123336722 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.188820752 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113628476 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.154244308 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129877121 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114983174 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120675445 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148797328 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114431973 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131217392 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.160799736 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121445392 seconds)
  done (took 17.152334983 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.328240054 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.315995284 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.184477299 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.316808641 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.159013434 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.213376047 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.31167121 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.31411086 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113032064 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183863141 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16610938 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.282739964 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146900423 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143006463 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.315933647 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.372066646 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.176493038 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153858216 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184198827 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128968465 seconds)
  done (took 5.747648787 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136972819 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15101767 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169757829 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143700966 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121291376 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161172609 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114996896 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132006346 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154845422 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125271221 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117194171 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161756606 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12465895 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128149043 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160779797 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.15431122 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122333627 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149268263 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.1384913 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119157568 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137173858 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142597636 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123147062 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168403272 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130708487 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125691196 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143195184 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12259301 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118402621 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.119714221 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.150320702 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135858517 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120548687 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.141156802 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12788837 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129907171 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.14798331 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.11876935 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119265968 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.11736316 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.16141629 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125280469 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121876918 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.135882784 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132946216 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11749905 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.124755454 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.159716519 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.113643184 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129380974 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.158024602 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127192592 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.121873431 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.163054229 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119847574 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131376755 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.155236804 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126559539 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119828804 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113510312 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.145185858 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119793535 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.119913646 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.156686878 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12814803 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134878963 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.16196369 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115417812 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118822646 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.149798154 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120738504 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.12933886 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.167069706 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121027514 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.117582578 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.157169832 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.1221596 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.101328137 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123575033 seconds)
  done (took 11.845134765 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.142650363 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.120986448 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133026594 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.182891205 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124757191 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119530489 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.152094916 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13584404 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12467866 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161695206 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126647779 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127463528 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169919091 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125481403 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.119085443 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162818981 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126176703 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.154088939 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.165409694 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144027865 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124462181 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.153016887 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128023841 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126716493 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17684172 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126950959 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141532448 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.156893741 seconds)
  done (took 5.204508631 seconds)
done (took 52.852276384 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.355246492 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.579153314 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.340881233 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.335404667 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.405317178 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.356880101 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.333054107 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.335686653 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.034803368 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.314654735 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.335540054 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.349888402 seconds)
done (took 30.313994115 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.348826953 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.855155834 seconds)
    (2/2) benchmarking "String"...
    done (took 1.656641818 seconds)
  done (took 4.742571376 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.329662803 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.329767131 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.554544166 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.328081365 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.33089173 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.349270816 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.328814786 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.328446703 seconds)
  done (took 16.781636766 seconds)
done (took 27.432821551 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.397892166 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.518740762 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.579201131 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.333103815 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.332425628 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.342057829 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.332868131 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.363432109 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.337196789 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.345374122 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.756511851 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.594761894 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.333250675 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.713684327 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.345431211 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.3341721 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.349746917 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.584249406 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.334724199 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.364885356 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.313289587 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.312915271 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.371595389 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.333972141 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.341343589 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.341997944 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.399727878 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.331438187 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.525152372 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.348557629 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.367130463 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.33509842 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.398326499 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.347924296 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.337887081 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.334620971 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.529123119 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.346184159 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.319952991 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.341261808 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.529458056 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.351377268 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.345528626 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.341901696 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.334909413 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.399240498 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.323464308 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.450678417 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.363104451 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.339849228 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.410788493 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.728727632 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.349583085 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.337567993 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.342693258 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.571500007 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.361279609 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.405976742 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.362154788 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.337979552 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.34717295 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.333986349 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.33696553 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.338619382 seconds)
  done (took 152.449431304 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.333837618 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.337502531 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.33745993 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.338085178 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.337594409 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.338735384 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.335209266 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.334728347 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.338588917 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.368551703 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.339550671 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.335691583 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.338676592 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.358760373 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.342407253 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.355060726 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.339326437 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.355038653 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.360359802 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.336038909 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.364512137 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.340476685 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.335175605 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.336550976 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.342402382 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.418459884 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.380401365 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.350777544 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.345382629 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.334784101 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.338456054 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.34355713 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.99776178 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.20710926 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.347966862 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.372320293 seconds)
  done (took 85.25460641 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.335954387 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.336217684 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.337234222 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.37151301 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.336060242 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.957177956 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.961423556 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.05685177 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.960032216 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.843178953 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626826436 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.336586692 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.431798506 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.350876333 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.340051155 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.353052305 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.36488775 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.339126594 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.33880932 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.944574924 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.349662502 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.335713776 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.520877893 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.355975706 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.372963126 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.736466264 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.339097344 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.373309892 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.677852502 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.391589608 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.336696081 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.768666926 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.623681546 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.453754827 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.33893742 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.341295407 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.373554168 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.340612945 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.622536478 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.340025371 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.339994906 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.339598986 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.343053747 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.072349815 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.34335001 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.964329713 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.343958537 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.328255227 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.339057387 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.340201409 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.768707026 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.128897953 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.344596067 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.338554906 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.342884037 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.339972525 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.339877078 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.375944512 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.835297845 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.438066183 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.340609753 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.344002605 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375313209 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.341342187 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.444846429 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.342053154 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.129141375 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.391697454 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.572633285 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.948937543 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.341066769 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.441099325 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.464032301 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.342933247 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.339606987 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.341703366 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.341566865 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.341161532 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.45445681 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.339898242 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.785900723 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.524573693 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.362465551 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.851325025 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.346111474 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.440553494 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.342293882 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.765460616 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.345050023 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.342214572 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.118123963 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.441364704 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.340923395 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.342222254 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.341392255 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.783281744 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.962468583 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.641632387 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.347478035 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.233333334 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.345993855 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.798998395 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.942640665 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.065297032 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.347595078 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.460435434 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.525769533 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.361516622 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.343013044 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.852555512 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.348240099 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.403941585 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.344348166 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.749334768 seconds)
  done (took 384.691152977 seconds)
done (took 623.626582725 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.254313811 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.201369925 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.344153296 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.209357174 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.187896252 seconds)
  done (took 12.44027665 seconds)
done (took 13.683742907 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.547605098 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.551767263 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.413710979 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.550492955 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.378597636 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.569081432 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.54113752 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.370072822 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.461743671 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.431825042 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.468479793 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.402775646 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.380799678 seconds)
  done (took 20.312202593 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.641474126 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.353982984 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.41319942 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.6163882 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.3919188 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.640975592 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.682411884 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.352090311 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.49697468 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.363547733 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.3597954 seconds)
  done (took 19.559206377 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.637314216 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.353342036 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.407403192 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.613111512 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.389797683 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.634403058 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.671250518 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.35463274 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.50014221 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.363964248 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.363074748 seconds)
  done (took 19.534742508 seconds)
done (took 60.648772894 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.266499554 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.672596775 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.381259998 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.461558531 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.358901979 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.374438688 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.441445793 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.362182643 seconds)
  done (took 29.564330272 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.359313925 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.359232308 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.358095118 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.356549282 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.359913102 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.35716891 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.359511652 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.359426784 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.359080503 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.359895586 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.358644371 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.360204143 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.358857399 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.358634046 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.360873523 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.359666211 seconds)
  done (took 22.992076681 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.361563229 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.35872843 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.359143983 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.35847342 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.360089852 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.359190168 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.361004791 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.359766936 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.359511772 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.360732959 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.359509612 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.35968135 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.360284896 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.359196127 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.357820706 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.361850966 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.358502573 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.362244379 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.364918418 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.361194229 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.361472314 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.360990013 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.358577158 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.359679826 seconds)
  done (took 33.891372263 seconds)
done (took 87.693355463 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.349656696 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.374659993 seconds)
  done (took 5.972414915 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.421441813 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.420143751 seconds)
  done (took 4.088171527 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.360577913 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.361868181 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.359149811 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.36217181 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.362788469 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.361187052 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.362526617 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.362956056 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.360308715 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.361559607 seconds)
  done (took 14.862923598 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.36107739 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.361920514 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.360879869 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.36438555 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.362042274 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.362816492 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.361894599 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.359929272 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.361582047 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.362963374 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.36635568 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.362433976 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.362284047 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.362372588 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.363667188 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.363425435 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.362838056 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.36251543 seconds)
  done (took 25.774668118 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.37645533 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.383699635 seconds)
  done (took 4.010420637 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.503087154 seconds)
    (2/7) benchmarking "second"...
    done (took 1.404501875 seconds)
    (3/7) benchmarking "month"...
    done (took 1.479019233 seconds)
    (4/7) benchmarking "year"...
    done (took 1.469546545 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.404694892 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.383420508 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.404925628 seconds)
  done (took 11.298617158 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.363676054 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.576712669 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.707402751 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.892398993 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.365552966 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.365685834 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.172985847 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.368045666 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.369872946 seconds)
  done (took 15.432888075 seconds)
done (took 82.68732844 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.353760368 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.390552769 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.38282652 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.374330677 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.704434447 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.397422518 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.358288793 seconds)
done (took 17.212097318 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.341218334 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.339197119 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.35031353 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.362137791 seconds)
  done (took 10.64431124 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.354105906 seconds)
    (2/2) benchmarking "read"...
    done (took 1.641971863 seconds)
  done (took 5.247576611 seconds)
done (took 17.143357663 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.367156021 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.367245486 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.365805557 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.367144205 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.366152629 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.368197573 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.365510588 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.364767325 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.364454688 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.365222593 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.366886105 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.366414708 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.366388765 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.368093579 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.367150114 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.367010611 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364774658 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366658723 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.366738472 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365999 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.365410869 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.365922214 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.365165324 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.367920493 seconds)
  done (took 34.043913099 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.369910998 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.365544021 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.369197292 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.367789918 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.366515087 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.368438453 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.366137613 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.36596455 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.369058641 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.368204143 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.365786032 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.366739272 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.368615959 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.366470747 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370112247 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.36701182 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.368881924 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367180575 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367861726 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.367783031 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.368652509 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.366261477 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.367023977 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.367104103 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.366660937 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.367575285 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.36743878 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.368083857 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.367562159 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.366234835 seconds)
  done (took 42.279872298 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.373885288 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.374830166 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.371986747 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.37187643 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.37196733 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.371173141 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.372320888 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.369255091 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.372384117 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.37247116 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.372894969 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.372333578 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.372054362 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.372437388 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.371327024 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.371752804 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.373107324 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.373777847 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.372336041 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.373539526 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.372138889 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.372682111 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.374208295 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.370814449 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.371654906 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.372612841 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.372082263 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.373611086 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.372038529 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.372488924 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.371152564 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.372822334 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.374603983 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.373212568 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.371418087 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.371593812 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.376452192 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.37985943 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.372645946 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.372745232 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.373086255 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.372967784 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.373286567 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.373943955 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.372640321 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.375193686 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.374451165 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.373442181 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.372914768 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.374194062 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.373559242 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.373029558 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.373488544 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.373758028 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.373334145 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.373441749 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.375702049 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.372959053 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.374018295 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.374903387 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.373859275 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.376309436 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.374331935 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.375540882 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.374633413 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.372554853 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.37386432 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.375078376 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.37547574 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.375071956 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.377176585 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.374904747 seconds)
  done (took 100.137320669 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.371878371 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.371817752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.372597047 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.372637119 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.373275581 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.374490869 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.372776203 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376929761 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373508426 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.37340058 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.373308988 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.373071552 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373489551 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.373356975 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.374139493 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.372009907 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.374110652 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.371650378 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.374390145 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.375248894 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.376197506 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.373365185 seconds)
  done (took 31.476114162 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.374670478 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.374496205 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.37371571 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.374844346 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.37661227 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.377471579 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.37497364 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.376811955 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374847946 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.372832346 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374247654 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375179271 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.37623056 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373898638 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.372998519 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.377088237 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.375434741 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.375999328 seconds)
  done (took 26.010856169 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.374609983 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.374631208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.376363408 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.376055762 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.375632313 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.376223045 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.375643237 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.37790824 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.376761301 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.375146547 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.377807638 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377251229 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.378752627 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.375295296 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375582722 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.375929399 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.379732068 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37839607 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.376663633 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.376362702 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.377018509 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.377858423 seconds)
  done (took 31.54655737 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.376388756 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.375827386 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.375007451 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.376827386 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.377495682 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.376618902 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.378224234 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.376023495 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.379670653 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.376624601 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.376361018 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.377944362 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.378048795 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.377422562 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.378848494 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.377693846 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.377299017 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.377672001 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.378274244 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.384785893 seconds)
  done (took 28.815309469 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.381304295 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.379825266 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.381056429 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380776428 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.380896397 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.381846393 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.38077756 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.382183037 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.381336243 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.382330692 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.381289505 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.379347647 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.380046603 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.383013883 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.381628375 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.38020921 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.382723116 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.38196941 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.38116321 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38052891 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.382026247 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3822725 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.381986167 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.381229712 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.383002406 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.383098375 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380874268 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.381059304 seconds)
  done (took 39.942797831 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.381451688 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.380504256 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.380227119 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.3784215 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.379065913 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.378941155 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.380104627 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.379716541 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.380161386 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.380871961 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.383197301 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.379804041 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.380296952 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.378228347 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.381564072 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.380806081 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381480023 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.379904958 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.381332122 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380938797 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.381529094 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382338813 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.380489061 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.379417394 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381550917 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.381818887 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.382889243 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.380307753 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.380910385 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.381957909 seconds)
  done (took 42.68304598 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.401264389 seconds)
    (2/2) benchmarking "in"...
    done (took 1.402740772 seconds)
  done (took 4.068972367 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.380153068 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.38271937 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.382589506 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.382277124 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.380776802 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.382312925 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.381804205 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.383083426 seconds)
  done (took 12.321462529 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.376143115 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.382677678 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.383718583 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.38442174 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.383540651 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.377396323 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.387196225 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.389214194 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.380425327 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.380383836 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.383973348 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.383186248 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.380963485 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.382154469 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.379878201 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.383332278 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.386244642 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.384690832 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.385325075 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.385324885 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.385937167 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381342917 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.384785369 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.386859508 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.380568631 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.387168345 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.387354377 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.391419872 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.379794369 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.383982906 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.382100888 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.385182315 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.386319973 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.38583689 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.384524343 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.386569583 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.388073278 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.387621678 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.387923885 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.389303128 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.384485229 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.384789939 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.381458631 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.383116008 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.383564739 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.389814815 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.386682862 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.386318948 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.381161606 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.384162302 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.389993351 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.381499626 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.386842167 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.385247567 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.385992597 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.391734796 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.390651097 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.383650867 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.38835572 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.391878431 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.3977261 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.391947934 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.385265996 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.392427217 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.39145696 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.398229752 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389581018 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.391418566 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.388523993 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.387817825 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.38910097 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.396461073 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.397001694 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.389277033 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.388326165 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.387295453 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.383984451 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.389727722 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.390467232 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.390366036 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.392072452 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.388556219 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.393805626 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.39866795 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.384713177 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.391524173 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.389901299 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.389355071 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.384941224 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.392056072 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.394503689 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.387571615 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.381959003 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.384388681 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.386027156 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.390509052 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.383693147 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.384850612 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.389693685 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.389605556 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.389615172 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.38579038 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.390355868 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.391200181 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389265496 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.390585399 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.390473045 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.384202867 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.39253634 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.391793298 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.389929493 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.385873649 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.389800295 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.389977504 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.386948848 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.389785158 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.393143139 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.385717486 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.3940648 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.39197071 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.39281348 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.403699753 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.392337892 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.389221363 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.390452054 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.397155347 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.39019884 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.390098338 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.392694305 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.390676686 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.390088526 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.387323198 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.392575333 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.38596151 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.393882259 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.388155653 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.392864358 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.390555457 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.390681535 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.388257896 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.389699107 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.38991041 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.388940959 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.390272421 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.395032813 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.391434175 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.396354338 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.390105069 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.389161644 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.39280581 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.393892593 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.395280799 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.389014817 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.39473191 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.388503132 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.395834911 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.388852028 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.394056299 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.393874472 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.393476689 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.394933748 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.389021192 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.392948117 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.396064944 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.391559695 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.388419332 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.393687866 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.392987622 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.394787548 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.387633198 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.395458396 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.387458782 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.390754364 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.39886691 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.392814184 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.393926989 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.391529489 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.394126948 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.392600938 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.393260239 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.390721341 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.3936755 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.396326745 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.394828896 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.399029458 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.395609034 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.396769941 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.389509457 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.389909743 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.396598772 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.392194818 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.398414198 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.401123229 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.401156315 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.390619065 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.398528065 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.389284372 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.398825812 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.394542862 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.398096064 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.397227961 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394847622 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.390431417 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.397719246 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.391302702 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.397330018 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.390106709 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.397919939 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.396140479 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.396827527 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.398057307 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.391656804 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.392495612 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.397526384 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.39699095 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.396759049 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.391181918 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.398743753 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.39037318 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.391579563 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.400405747 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.398091393 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.398002748 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.397614996 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.394100854 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.397628574 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.395690318 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.394143349 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.400166896 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.396064851 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.3955809 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.399417896 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.397793641 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.395079606 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.401993654 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.398826715 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.395060542 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.397709166 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.401932959 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.396370559 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.395466599 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.402037722 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.401971109 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.39881302 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.398025488 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.394229938 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.401689146 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.400635392 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.4010301 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.393083109 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.400639872 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.39396142 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.39974817 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.396160973 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.396167348 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.395970031 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.397243756 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.403447752 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.399411601 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.395468618 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.402117312 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.39892375 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.398088747 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.397350238 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.403190549 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.400110887 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.398970789 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.396970061 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.395996172 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.405551805 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.39423249 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.399158237 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.394812573 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.405648723 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.413616644 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.402452057 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.40076977 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.402595228 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.401466059 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.399591856 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.399736103 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.396531611 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.398624334 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.398192853 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.396985117 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.40215936 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.398417037 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.403030034 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.399145116 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.400663452 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.403229983 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.403010296 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.396996782 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.403018179 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.401527682 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.403801045 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.396521227 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.402312516 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.399170149 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.401810005 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.397765211 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.39800553 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.405577218 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.402298236 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.400573266 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.398127014 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.3986407 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.398117679 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.400748396 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.404321875 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.400280511 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.407373051 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.401163247 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.404932197 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.401135107 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.406258124 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.406236668 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.401858897 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.407664633 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.403736903 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.397572755 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.398106493 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.406115579 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.406153919 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.408235081 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.39917487 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.406884146 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.403263588 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.40446688 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.404167734 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.404231695 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.404473645 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.404500911 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.407318738 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.405500304 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.402002374 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.402379899 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.40806 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.40394922 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.404654666 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.398830392 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.40352332 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.406843647 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.40030861 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.401235591 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.400746958 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.404838811 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.40512553 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.406711245 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.405567178 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.406438186 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.407138958 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.406706923 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.408933091 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.407551543 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.408686511 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.409070035 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.408241897 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.409760868 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.401266016 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.407011821 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.405966511 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.403807377 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.403161105 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.403786621 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.408174684 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.401673173 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.41272765 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.406321753 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.404890887 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.403652481 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.408484076 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.402050211 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.411496159 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.42320402 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.402715034 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.410474858 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.406083775 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.402682682 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.410549519 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.406777503 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.400679282 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.404630511 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.40886667 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.412146301 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.401248139 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.408423333 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.403597959 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.410455788 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.410163042 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.407221855 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.408504228 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.409455211 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.401373532 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.408577543 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.407537211 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.412002301 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.404079229 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.408041106 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.405180523 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.413145705 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.411745428 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.404115885 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.411494745 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.408913906 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.404655412 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.406163527 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.41116086 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.404313085 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.411633304 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.403842519 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.407813278 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.408254323 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.408149569 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.406944098 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.412099228 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.405920021 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.404953707 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.410599508 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.410260576 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.410522155 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.40809875 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.410063174 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.404119009 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.403680013 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.410267244 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.404952762 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.411405036 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.40748951 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.407535063 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.406499785 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.410245947 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.408720703 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.410585202 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.403012618 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.405266095 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.412968016 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.409929239 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.41187947 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.409300694 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.410752197 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.405929873 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.407774908 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.410613856 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.405506912 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.407731447 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.409450967 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.406679444 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.407055583 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.405854818 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.411586961 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.410638476 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.409648976 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.406116776 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.414260491 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.410938757 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.411946267 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.406801711 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.406827941 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.407384087 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.409592247 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.411944741 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.404489788 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.412424122 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.410785564 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.412438741 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.407846328 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.407031408 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.406775432 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.413792898 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.410088586 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.403931521 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.409027203 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.403747086 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.411127438 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.409302212 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.407542665 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.400650412 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.404256332 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.404809457 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.407861997 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.408623267 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.404553055 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.406678357 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.40590713 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.411695169 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.410067713 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.408830035 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.409155823 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.404477334 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.410263258 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.403723421 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.410034672 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.404176469 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.404478181 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.409317462 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.408696127 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.407263749 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.40887256 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.415848977 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.406174945 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.401446107 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.404076432 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.408369381 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.409719605 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.409060809 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.403917916 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.404213613 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.408531532 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.408291827 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.408218714 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.405723086 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.415323015 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.412470312 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.403153066 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.400994684 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.406258066 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.409377868 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.407035916 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.407556193 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.4021077 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.404834738 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.409979645 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.406863021 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.406981204 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.404991978 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.403151206 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.409009437 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.402551598 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.405638412 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.403250182 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.408679581 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.405829916 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.404239338 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.41406335 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.409309641 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.409486243 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.421092278 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.404596833 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.403300354 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.407507538 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.400981135 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.408348135 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.403620248 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.406101011 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.407211842 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.406649458 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.405925678 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.401037232 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.406150553 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.403469497 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.410072658 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.405779288 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.401388949 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.402216568 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.405345349 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.405339937 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.409812978 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.405680112 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.406280774 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.406307947 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.401097816 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.413315276 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.41492057 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.40767822 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.408093285 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.406808913 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.404903359 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.405655499 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.407889641 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.411230574 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.40687017 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.406265936 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.403087649 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.408891769 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.406712408 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.403252373 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.402401499 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.40261148 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.407156805 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.41358247 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.417891894 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.409005869 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.405722556 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.407084019 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.410348982 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.405060562 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.409713028 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.409451198 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.404136244 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.404707961 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.411139765 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.409067833 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.407804082 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.40494534 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.413782881 seconds)
  done (took 835.439212665 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.408884611 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.407699557 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.407397751 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.409154959 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.408120178 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.406263948 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407444902 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.406697987 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.407059885 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.407640933 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.407217986 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.408188712 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.408662254 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.408303723 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.40877752 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.407941524 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.408267388 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.408718036 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.409224561 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.408579806 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.408949986 seconds)
  done (took 30.857198879 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.40889304 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.407775166 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.409092599 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.40871039 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.409544228 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.409985415 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.410072227 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.410003678 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.410963085 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.408907017 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.409578641 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.409682918 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.409512931 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.408638856 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.408963228 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.411166136 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.410001116 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.409968426 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.41175039 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.410807662 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.411979878 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.411939763 seconds)
  done (took 32.306354837 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.411915537 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.412824826 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.406546463 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.411916007 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.411931877 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.411331442 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.41103393 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.41151002 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.412311142 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.407398677 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.406205033 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.408800394 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.411228924 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.416356204 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.409328341 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.414868094 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.413189709 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.413419291 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.412734699 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.411849575 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.413984515 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.414969786 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.409729719 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.406116948 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.413057571 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.414414774 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.412547053 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.4115731 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.408156622 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.416699247 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.413696245 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.407679749 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.411620651 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.40974326 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.408855093 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.416185447 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.413435507 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.412581354 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.41195628 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.417138209 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.427637795 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.413222289 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.41705012 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.4159934 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.414973697 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.410860679 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.419572724 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.4135872 seconds)
  done (took 69.093463603 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.413955007 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.415376791 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.411211354 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.415509435 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.412636084 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.414129732 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.413371206 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.413746655 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.416461054 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.410858128 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.413467197 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.413091384 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.412786296 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.413690331 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.414573387 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.414058662 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.412361746 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.413227647 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.413287929 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.412581483 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.413839663 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.414737147 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.415535137 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.413627139 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.41458749 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.413664888 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.412206927 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.415982767 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.414478086 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.414216277 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.415909883 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.414806236 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.415621719 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.413964369 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.413114643 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.415766089 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.414890928 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.414553767 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.415830054 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.414433502 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.41596803 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.41583009 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.415441448 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.416138906 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.413632739 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.414469786 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.413533884 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.414374947 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.413022025 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.414657024 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.415799653 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.41438224 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.41388652 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.415591516 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.414634546 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.416296323 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.414161458 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.413762583 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.415676421 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.415606649 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.414732453 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.416116838 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.413575753 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.417511266 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.414795967 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.415272963 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.414938379 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.413940728 seconds)
  done (took 97.471127017 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.4181848 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.416988858 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.41542162 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.414688909 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.417225427 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.417038359 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.418311493 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.416921698 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.416461982 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.416541219 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.415945452 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.416441284 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.417487921 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.416868205 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.417261175 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.416822683 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.415833526 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.416612834 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.417546863 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.417332162 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.417404928 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.417226799 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.41774649 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.419165903 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.417785901 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.417082549 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.418106043 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.416627971 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.416230738 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.418092266 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.418053968 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.419545873 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.418413501 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.418350242 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.417844232 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.417071088 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.41816029 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.418480491 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.42080702 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.419112202 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.419604375 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.418200557 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.418175814 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.417388118 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.417161175 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.416683088 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.418687461 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.418734918 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.417227787 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.41873244 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.41868192 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.418292406 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.418735371 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.417373215 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.417896571 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.418432493 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.417743763 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.417263209 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.416839413 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.417501352 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.419098182 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.417507832 seconds)
  done (took 89.18920104 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.418179079 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.419388281 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.416980691 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.417007883 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.418713477 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.417104559 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.417456642 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.417855895 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.41742417 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.416234874 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.418945446 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.417309217 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.416713923 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.418527282 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.418120537 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.418618808 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.417119876 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.418638245 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.419328079 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.417478629 seconds)
  done (took 29.647908712 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.418268571 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.418285071 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.415865376 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.417247474 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.417599352 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.417206106 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.417785026 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.417367545 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.416403587 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.417321642 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.419960275 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.417745786 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.416155502 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.418387882 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.419564569 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.41605833 seconds)
  done (took 23.971649016 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.417685744 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.419614688 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.41831043 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.418186919 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.418473699 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.417633253 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.419626204 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.419480289 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.418610876 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.418897667 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.4194695 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.419444487 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.420208054 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.41905233 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.417948148 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.418927734 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.417667018 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.418328626 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.418927503 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.419476156 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.419822469 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.419450271 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.4181389 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.420834392 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.419545248 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.419371092 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.419313394 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.418127214 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.421216643 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.420440903 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.418678053 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.419518492 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.419123436 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.418090547 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.422347358 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.41935892 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.420106018 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.42081458 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.420467856 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.421740419 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.421538907 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.420300902 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.423307041 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.422574321 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.420728556 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.4206081 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.420734783 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.42042203 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.420265891 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.419247036 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.421347069 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.422043698 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.421050793 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.420384245 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.421280907 seconds)
  done (took 79.38221378 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.42170603 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.423307594 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.420472742 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.420918603 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.422109021 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.420234533 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.421485335 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.422663953 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.420268687 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.422945502 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.421620954 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.42290562 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.420727136 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.421498622 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.422421978 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.42243212 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.421375782 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.421982544 seconds)
  done (took 26.887530446 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.421815021 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.421412621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.423435488 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.422021311 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.421135833 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.423310884 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.42103215 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.422512861 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.424818519 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.421590295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.422465839 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.424155751 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.423518337 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.424049904 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.423342097 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.422108263 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.423988178 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.422887047 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.422655435 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.423671625 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.423350624 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.425631254 seconds)
  done (took 32.601475386 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.417124259 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.415692431 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.417295904 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.434738149 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.430878777 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.418231404 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.418755165 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.415468344 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.439239576 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.458709539 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.454627753 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.430350989 seconds)
  done (took 18.44951541 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423387257 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425180168 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.424080715 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426406378 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425795951 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422988296 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424030077 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424329889 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424981318 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423953153 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424385247 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426520705 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426034416 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425152042 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42709266 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427891866 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425151581 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426390566 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424493438 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425521381 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42532958 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426566704 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426508069 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425830215 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424495259 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425380239 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426282081 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425508446 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426769608 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425731851 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426735999 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425662442 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426755246 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426003119 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425273781 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426951991 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426393824 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42753369 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426788148 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426326903 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.427277302 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426723547 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428906819 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426115464 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428561757 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425225995 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426009847 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42568015 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426905753 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428730894 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429334807 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425724422 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427673276 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427883709 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426730996 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428372424 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42660494 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426657018 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427422911 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425572088 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425242733 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42569621 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426712545 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425729188 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42920273 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427159914 seconds)
  done (took 95.427527398 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427190097 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.426142012 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426926905 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42599056 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426109338 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426377452 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425387328 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425070101 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425665598 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425561712 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427166134 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427163293 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427113889 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426845637 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425469519 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425183635 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426500262 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426728087 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427330202 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430292803 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425407743 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427853247 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429249123 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427102364 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428247977 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426909233 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429462207 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426482313 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426166099 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427643173 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427562988 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426830047 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427909391 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.429160388 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425867552 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428217052 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427620032 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426562543 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428254536 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429634705 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428380104 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427308475 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426548752 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428558599 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427497841 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42984617 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427841315 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428934022 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427564788 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428290547 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427465844 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427140077 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42852693 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427410544 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429551042 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428635618 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427411099 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427934597 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428965194 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429010302 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428227867 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429017749 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42994238 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427234589 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426930677 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427791551 seconds)
  done (took 95.516958009 seconds)
done (took 1950.820326153 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.588260303 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.541391216 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.422936138 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.434894301 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.422625058 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.447316255 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.435268232 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.422392625 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.423455517 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.422457772 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.42314038 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.61377267 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.480131716 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.424910384 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.423449192 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.520676616 seconds)
  done (took 28.749132717 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.454819396 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.432466248 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.543445117 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.426246679 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.453302504 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.620503183 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.48879025 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.431706779 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.603618617 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.447207453 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.422968948 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.450238043 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.42741456 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.426525028 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.446714183 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.622087938 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.681857547 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.424555668 seconds)
  done (took 31.108280991 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.887486497 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.442617206 seconds)
  done (took 5.631896214 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.449235712 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.428035834 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.428507537 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.426028002 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.421229483 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.419647087 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.428037818 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.42495996 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.429986225 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.554861793 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.431505723 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.438906275 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.425613232 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.428424866 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.430457396 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.473746367 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.578672924 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.432357631 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.429642903 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.431620208 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.427501829 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.530048959 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.469911 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.432937643 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.553305567 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.424676925 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.431579282 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.432871325 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.56048447 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.432620482 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.427832604 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.425842427 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.428705519 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.436994939 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.905080606 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.422800023 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.437126677 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.454153249 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.430368091 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.578051856 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.426752297 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.432515824 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.420727754 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.899872663 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.545740777 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.54995556 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.428562031 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.43183818 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.429959479 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.495562331 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.427443647 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.428325474 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.484543868 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.26339478 seconds)
  done (took 90.524369428 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.466616167 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.422062129 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.60051533 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.443393912 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.421209178 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.420242134 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.423231756 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.704355795 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.477771688 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.419990507 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.728035045 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.99474171 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.42757743 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.498301973 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.32975947 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.511447073 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.421502606 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.419159638 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.426371137 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.424315792 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.973634623 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.419371021 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.420112821 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.525359796 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.456835796 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.94035195 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.424888662 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.423616877 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.428396496 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.418618137 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946820473 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.43632311 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.519899086 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.422863525 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.691509123 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.79185086 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.757602553 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.42471577 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.460820638 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.425727454 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.436987209 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.912024176 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.774594432 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.422606087 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.420775816 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.921999559 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.421660786 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.42372823 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.430200715 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.676484717 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.420375349 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.42095601 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.420436865 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.420853972 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.421789629 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.529988273 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.521956299 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.930874251 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.427452773 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.422161218 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.468864243 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.422441889 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.43129528 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.424081896 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.440666455 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.775672726 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.621693857 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.429993426 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.775689576 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.936729162 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.433010139 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006146125 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.425558008 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.435502722 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.631839411 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.422605752 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.438119563 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.922879687 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.448955337 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.421498319 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.756128165 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.424328946 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.708758329 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.436860217 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.421717299 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.99768419 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.430728476 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.471536398 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.421031911 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.426104286 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.420253429 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.420637082 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.694412607 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.456106488 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.421821482 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.420622472 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.456215903 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.422237931 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.436504272 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.422376418 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001751969 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.428775938 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.422237962 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.42218773 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.420746585 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.422441823 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.42175281 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.42289874 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.694406551 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.435861201 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.425676917 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.42327508 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.421012398 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.432903022 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.483159117 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.423406176 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.717149408 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.425749992 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.420750847 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.422842855 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.422094752 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.450064033 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.421225439 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.427971761 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.284450834 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.687983963 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.436849161 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.422673538 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.422734445 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.424573288 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.422697123 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.42384641 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.517927178 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.425157463 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.207334307 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.465016803 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.428583524 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.424121263 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.425784502 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.424310303 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.426579252 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.424758719 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.718753178 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.693137461 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.606678377 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.426649898 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.42345456 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.201839351 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.461331531 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604819416 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.441817081 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.423881642 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.674108099 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.677570613 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.427464553 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.425848015 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.426232091 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.692254515 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.424731445 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.739833046 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.970623613 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.425872958 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.426160008 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.219201645 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.135067458 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.431188113 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.42557484 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.711819296 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.443030295 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.427825284 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.427616257 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.427025442 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.426976333 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.427273433 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.436830274 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.426002523 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.427423117 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.477173923 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.616837687 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.442284911 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.438846934 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.928735763 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.469965374 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.429223166 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.431424645 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.428798039 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.42691641 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.515932665 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.432167553 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.453842745 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.428334053 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.427691216 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.943868971 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.431023193 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.428526234 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.618167436 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118881718 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.43141423 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.427360698 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.428122134 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.367499585 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.952113054 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.438104948 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.724959023 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.439203808 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.464550438 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.427360718 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.460076779 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.952234724 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.427413943 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.428525721 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.091124791 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.428060523 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.833534249 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.428697078 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.428072203 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.022252116 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.428387331 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.430653169 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.428842291 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.428492058 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.748509825 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.428500112 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.446164039 seconds)
  done (took 518.801630643 seconds)
done (took 676.116259373 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.429109292 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.427868999 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.417156135 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.432203466 seconds)
  done (took 11.014136815 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.467665582 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.432657118 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.442892341 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.433715534 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.449189096 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.432216467 seconds)
  done (took 9.965917922 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.428633717 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.429987503 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.433759876 seconds)
  done (took 8.601332723 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.644744285 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.446669849 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.789892533 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.428372615 seconds)
  done (took 9.617251952 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.440971176 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.443211637 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.44465828 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.444330171 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.473513618 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.472123578 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.445914524 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.446317384 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.469995732 seconds)
  done (took 14.389480011 seconds)
done (took 54.894852063 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.578626688 seconds)
    (2/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.679037767 seconds)
    (3/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.561958176 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.533476082 seconds)
    (5/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.615720333 seconds)
    (6/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.411692278 seconds)
    (7/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.436284816 seconds)
    (8/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.214639035 seconds)
    (9/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.463794864 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.496734542 seconds)
    (11/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.641054434 seconds)
    (12/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.425314894 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.434470467 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.419306737 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.492850648 seconds)
    (16/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.490395534 seconds)
    (17/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.311587602 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.413719993 seconds)
    (19/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.420591097 seconds)
    (20/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.558476345 seconds)
    (21/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.563633722 seconds)
    (22/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.427421201 seconds)
    (23/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.561560052 seconds)
    (24/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.427923288 seconds)
    (25/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.49786748 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.537861384 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.188673194 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.50080178 seconds)
    (29/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.710229698 seconds)
    (30/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.420730438 seconds)
    (31/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.496828695 seconds)
    (32/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.606894172 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.437085418 seconds)
    (34/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.276715319 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.418488325 seconds)
    (36/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.58119617 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.519499883 seconds)
    (38/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.533450263 seconds)
    (39/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.467654343 seconds)
    (40/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.419818329 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.494362667 seconds)
    (42/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.519452329 seconds)
    (43/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.249108898 seconds)
    (44/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.560512676 seconds)
    (45/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.463841048 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.55415454 seconds)
    (47/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.416335935 seconds)
    (48/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.504565978 seconds)
    (49/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.425621224 seconds)
    (50/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.450064254 seconds)
    (51/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.626757174 seconds)
    (52/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.464189119 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.518008525 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.689242882 seconds)
    (55/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.564715703 seconds)
    (56/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.415713682 seconds)
    (57/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.49930658 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.593759408 seconds)
    (59/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.28356936 seconds)
    (60/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.42106865 seconds)
    (61/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.473247797 seconds)
    (62/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.416016255 seconds)
    (63/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.522134264 seconds)
    (64/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.502475659 seconds)
    (65/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.507833966 seconds)
    (66/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.561515331 seconds)
    (67/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.198819161 seconds)
    (68/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.563038108 seconds)
    (69/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.137339618 seconds)
    (70/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.092399311 seconds)
    (71/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.47040603 seconds)
    (72/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.533496877 seconds)
    (73/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.465624983 seconds)
    (74/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.425733508 seconds)
    (75/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.420972201 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.535697942 seconds)
    (77/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.429946005 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.562865636 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.523971459 seconds)
    (80/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.433463114 seconds)
    (81/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.526867056 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.544788136 seconds)
    (83/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.415985385 seconds)
    (84/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.420031675 seconds)
    (85/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.77168274 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.46970186 seconds)
    (87/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.428105193 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.545522635 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.587145891 seconds)
    (90/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.458355451 seconds)
    (91/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.236513967 seconds)
    (92/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.519029798 seconds)
    (93/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.545468238 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.547749016 seconds)
    (95/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.608852249 seconds)
    (96/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.440127415 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.54638785 seconds)
    (98/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.524312988 seconds)
    (99/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.497011596 seconds)
    (100/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.609785667 seconds)
    (101/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.560216731 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.580796991 seconds)
    (103/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.255305483 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.71241187 seconds)
    (105/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.186566579 seconds)
    (106/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.479394394 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.528468725 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.417870621 seconds)
    (109/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.58547202 seconds)
    (110/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.599196681 seconds)
    (111/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.46816421 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.41935461 seconds)
    (113/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.502579471 seconds)
    (114/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.419400234 seconds)
    (115/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.526265574 seconds)
    (116/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.246460732 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.719701349 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.439154762 seconds)
    (119/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.489273388 seconds)
    (120/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.290719676 seconds)
    (121/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.620157094 seconds)
    (122/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.152709066 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.436791497 seconds)
    (124/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.530815849 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.235683934 seconds)
    (126/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.696112583 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.599880762 seconds)
    (128/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.475269924 seconds)
    (129/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.62339425 seconds)
    (130/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.586698362 seconds)
    (131/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.419453779 seconds)
    (132/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.429075683 seconds)
    (133/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.105517071 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.420649642 seconds)
    (135/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.652242859 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.593116406 seconds)
    (137/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.510250383 seconds)
    (138/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.473329561 seconds)
    (139/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.704656307 seconds)
    (140/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.436375003 seconds)
    (141/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.511497855 seconds)
    (142/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.463832046 seconds)
    (143/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.426132077 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.64158664 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.572183067 seconds)
    (146/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.531888201 seconds)
    (147/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.397701207 seconds)
    (148/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.42567717 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.501625721 seconds)
    (150/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.248749131 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.461736156 seconds)
    (152/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.428124589 seconds)
    (153/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.442925878 seconds)
    (154/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.577168492 seconds)
    (155/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.546066315 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.442400218 seconds)
    (157/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.446718454 seconds)
    (158/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.488631491 seconds)
    (159/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.494049211 seconds)
    (160/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.615126024 seconds)
    (161/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.473683608 seconds)
    (162/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.295918944 seconds)
    (163/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.51010507 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.500363801 seconds)
    (165/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.402515628 seconds)
    (166/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.662770419 seconds)
    (167/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.478080341 seconds)
    (168/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.423547678 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.558713641 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.479055133 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.440110399 seconds)
    (172/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.597482427 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.570281227 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.546922813 seconds)
    (175/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.434146707 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.547203051 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.51753035 seconds)
    (178/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.421614149 seconds)
    (179/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.5875832 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.551743037 seconds)
    (181/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.554907817 seconds)
    (182/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.13645154 seconds)
    (183/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.666803037 seconds)
    (184/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.168724967 seconds)
    (185/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.671495869 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.642946948 seconds)
    (187/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.343888645 seconds)
    (188/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.546726534 seconds)
    (189/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.474206222 seconds)
    (190/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.517603238 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.58634386 seconds)
    (192/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.659964904 seconds)
  done (took 360.011892233 seconds)
done (took 361.318939753 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.466823705 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.527453732 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.449001841 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.450379171 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.450758815 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.451839858 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.470424057 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.45013323 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.460516748 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.458885658 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.451211962 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.460373387 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.464129893 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.458801541 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.483351135 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.451501567 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.449050741 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.456879327 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.461479879 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.462761154 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.454244451 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.450956219 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.46862467 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.451306335 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.459451207 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.459367721 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.457579353 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.454096681 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.459288688 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.463231565 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.449809583 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.461689871 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.463441248 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.459345101 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.452993198 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.460232184 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.452098538 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.530762789 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.468554577 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.459512042 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.456041544 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.464979759 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.457125297 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.457011959 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.461845855 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.473767882 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.461477512 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.46732631 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.449683162 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.450248681 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.474467002 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.460456474 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.457187009 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.445117836 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.453168389 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.471709101 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.459680573 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.464882063 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.454579522 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.449659124 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.482212782 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.465837952 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.457713087 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.457358302 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.45117195 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.457376773 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.451881601 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.457458074 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.447965015 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.447178701 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.448053187 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.449588951 seconds)
done (took 114.457455293 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.570465122 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.437764218 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.585386741 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.447276711 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.603151493 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.576360375 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.44594013 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.447792467 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.445067236 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.272169701 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.442659907 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.440314898 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.438421789 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.442684205 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.568389044 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.438106732 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.436486868 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.152472687 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.439012704 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.578247713 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.430131815 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.434269754 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.4339422 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.256477039 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.429625595 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.425233267 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.570546469 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.431130841 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.142821425 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.420738736 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.42267162 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.140381114 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.567849491 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.444254426 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.43729103 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.435426206 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.587470928 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.42572014 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.547611023 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.546312749 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.559804532 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.462626891 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.413997026 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.41248996 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.421378097 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.421254613 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.41864222 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.448287829 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.410223991 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.414405966 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.141458115 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.426061206 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.425524593 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.414472139 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.416646351 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.431719528 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.412336148 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.415063233 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.55479716 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.415152605 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.536452398 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.2357342 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.23231783 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.410001847 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.403674523 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.40924508 seconds)
  done (took 114.717325491 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.470748145 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.476462107 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.508849158 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.404658681 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.453617931 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.509451265 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.406684362 seconds)
  done (took 11.515955528 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.407772895 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.406494057 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.450254229 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.44905987 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.404826177 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.561225878 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404009445 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.409255909 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.402659688 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.452080737 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.405948011 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.406051425 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.412899792 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.395656075 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.446338857 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.407932307 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.51165588 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.397675207 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.401827296 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.550889038 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.398486811 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.406907255 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.44634995 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.405386624 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.402250567 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.399837955 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.17449805 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397866596 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.397020619 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.401730124 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.397478877 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.446356948 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.399477051 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.391100027 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.394774485 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.506468259 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.395706961 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.394830537 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.399523524 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.384406187 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.396407794 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.394065988 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.396606672 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.39335075 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.396460452 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.412483134 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.395630766 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.393006074 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.393239707 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.397604742 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.436899894 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.393979291 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.393497632 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.39005141 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.440288608 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.399564757 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.391694437 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.389298412 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.394453206 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.392424941 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.539693694 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.433596913 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.391921929 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.43189399 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.390778157 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.390777327 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.395143313 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.388363689 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.474854111 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.388245654 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.431907332 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.387893959 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.567269385 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.409246733 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.390798582 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.387125312 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.385865481 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.388501575 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.381506276 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.389789413 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.388420053 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.38330332 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.387933131 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.386889822 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.387217572 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.545333244 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.491716979 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.387809428 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.394672983 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.386930441 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.385805209 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.432715655 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.385662724 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.384818844 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.433198745 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.492458011 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.431193134 seconds)
  done (took 143.331868551 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.392079831 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.391245248 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.382732941 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.405585843 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.379590261 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.377024833 seconds)
  done (took 9.591816751 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.381626734 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.384078429 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.382392036 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.381992109 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.38936173 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.384549621 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.390606669 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37786926 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.384927195 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.385289933 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.385932008 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.390199239 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.391343884 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.379515539 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.384082157 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.383138449 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.384952804 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.379158731 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.384032542 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379818217 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.374188481 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.379375925 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380521993 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.376016083 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.385061505 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.38550628 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.395145014 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.383232483 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.378923856 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.381194333 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.38085295 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.382432732 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.376312509 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.378990192 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.387231262 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.375966294 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380911426 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.387346188 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379436512 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.384388177 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.385958355 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379903008 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.381558929 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.387290452 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.375047879 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.377739303 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.388663801 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.396926803 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.382181567 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.386744546 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.388227788 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.381075627 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.38368223 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.386900351 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.378302609 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377696335 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.38874309 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.387120102 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.381215368 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.376908049 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.381216267 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.382560261 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376792084 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.386516555 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.378501293 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.387636906 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.375983851 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382193993 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380824066 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.379274401 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.389644715 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.379633526 seconds)
  done (took 101.836227141 seconds)
done (took 382.306359926 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.677651535 seconds)
  done (took 3.937389315 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.395006493 seconds)
  done (took 3.655454141 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.504794704 seconds)
  done (took 22.767507772 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.387954983 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.455646145 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.378150546 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.381810507 seconds)
  done (took 10.861691009 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.658101733 seconds)
  done (took 3.917444605 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.373250721 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.371489589 seconds)
  done (took 6.004130461 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.577924871 seconds)
  done (took 3.8366599 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.559313119 seconds)
  done (took 3.818921241 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.403524444 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.388514448 seconds)
  done (took 6.058141268 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.350748709 seconds)
  done (took 3.610437404 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.158859578 seconds)
  done (took 20.418113136 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.381876586 seconds)
  done (took 3.642735407 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.426632515 seconds)
  done (took 3.686333758 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.876051816 seconds)
  done (took 6.135714825 seconds)
done (took 103.611140946 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.368647785 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.370513419 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.368601303 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.370506316 seconds)
  done (took 10.737744303 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.461968129 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.461448676 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.469587683 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.451590805 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.450533524 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.462644856 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.407956006 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408634586 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.452755873 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.451759514 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.468545816 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.452422251 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.461667155 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.410177549 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.453391619 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.469927057 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.451581092 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.470471604 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.410157044 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.453277453 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.385615268 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.461575134 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.45290269 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.383830226 seconds)
  done (took 35.92494348 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.893459975 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.447896308 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.530424527 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.428142579 seconds)
  done (took 7.560191281 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.462027038 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.463951347 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.484591076 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.521199188 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.547181421 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.481034541 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.412420774 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.405709582 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.391067935 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.464948415 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.51747646 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.454732522 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.561551398 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.386044479 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.603124181 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.385523542 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.385554759 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.463111858 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.519851303 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.548452551 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.385601164 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.463450291 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.469461654 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.463350045 seconds)
  done (took 36.504075535 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.392990231 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.403603859 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.384270513 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.401324599 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.384617319 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.385820131 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.381185043 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.387323865 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.381360215 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.381547718 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.381613465 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.396183174 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.382183289 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.380319658 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.387968996 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.381301009 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.380260413 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.386353052 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.387524202 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.380928034 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.378905106 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.385050972 seconds)
  done (took 31.756581902 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.366799837 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.366202961 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.716848502 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.620698933 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.36529369 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.3651472 seconds)
  done (took 14.058363016 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.439015768 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.581622134 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.377753505 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.715130376 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.80863412 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.378893309 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.373081687 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.612186486 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.906502049 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.903536341 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.433224754 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437398661 seconds)
  done (took 20.225066335 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.3684384 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.372599007 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.379017768 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.386583213 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.424525885 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.376311756 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.38081066 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.367728559 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.431654219 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.430115442 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.382573863 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.428502286 seconds)
  done (took 21.986918135 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465343894 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373627719 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373991638 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405607856 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374232955 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.21747616 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407351667 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097657673 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.381421745 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647814918 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374207921 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46468057 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628863832 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383541952 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382715596 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.365034448 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604670074 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874755219 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376748067 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38120162 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408773618 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379799768 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3849045 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.58479432 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270928042 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376478518 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.683456576 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376271773 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664028726 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643821918 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643229306 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383828232 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650949726 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012553182 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479966079 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584108139 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396671463 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377831046 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.360958486 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.395883726 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37993444 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380144946 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638855788 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38611507 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377915806 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378438834 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114914574 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.387562645 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.376580684 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37846174 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641637292 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481196445 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.382653842 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377643429 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420581671 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377651387 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.384758266 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502957862 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941954723 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393930799 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381767194 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.385499835 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373393241 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39321171 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997217862 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.38451488 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.383821751 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383478765 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37828705 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392506016 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407638303 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379535749 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.399127146 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379147398 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098884897 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384611564 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382723366 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948853966 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388383517 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.387345055 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610140628 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380588906 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380275468 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.378351245 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380010579 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077446715 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38724659 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.368424424 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422846665 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104300866 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594482012 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403923974 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412131114 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603042037 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.356978699 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382647963 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.381638404 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38383843 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402781276 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115024474 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38444506 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.386574285 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637184728 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.591764684 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38103362 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.378545628 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862626998 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389886694 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.40724744 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392045801 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.595229073 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.986100831 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64799184 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38911187 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413374928 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382828521 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134875132 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384912733 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.393512583 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385328112 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646284469 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.177125584 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38154637 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451367481 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388704163 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383134286 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396527307 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384926404 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382859389 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.587320305 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388280258 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650844129 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.390186235 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383927916 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.381439418 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40048157 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.382939149 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605694469 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386290422 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664756346 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384094663 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383664105 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385034821 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.604633244 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.390948146 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.394953972 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645391925 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39671285 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402980433 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652943577 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420214731 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493486499 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413512441 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.39232144 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645232338 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.387841951 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.388843352 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397010074 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386909763 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388579641 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.391021582 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385535864 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985462369 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360818784 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389948934 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386244068 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.399116221 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454082997 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391656037 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593067739 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.400553234 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401520298 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.390778598 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.388331881 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615279364 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650286299 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.392231185 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462419971 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.867250035 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990359753 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399060723 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.384570023 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.385029652 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.385794728 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386234861 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386081635 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387034376 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59601646 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658477682 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386697488 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.988017411 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38968326 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397455853 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.393542982 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648774225 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.401521067 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389604237 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.390172629 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393894297 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390433422 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65669871 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53017856 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.403095477 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38786076 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.906479207 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393437681 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387812696 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388898823 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419960749 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396499131 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225293655 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648488836 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392127876 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652026008 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407053544 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.405079957 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.386323241 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387680695 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389004397 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.404230256 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401300242 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.596196483 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39345253 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407922162 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948674882 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130429073 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938519242 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390147815 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.389714399 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395552249 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.124477736 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39420081 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389384983 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621919263 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119623557 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394072091 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869051508 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.406652873 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14666631 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652731862 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627142938 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389545103 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.390789447 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658444567 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60618001 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421994574 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390329525 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397061342 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.366834408 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939449438 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392664051 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469491309 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120433521 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394498348 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392761873 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.461968323 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401497489 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773322301 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395383401 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391779482 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40037936 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403810453 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229722218 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394203456 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391544371 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021294579 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399133446 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.879819441 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396799474 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600646929 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.659528356 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.657126737 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.397879587 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.398387488 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.649885789 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655576666 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399966868 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397067094 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946017806 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.259480358 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.397819971 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39302573 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141774381 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403991335 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688426246 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.400625773 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.397244448 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398929075 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393210374 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394482595 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.391826788 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399379852 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369207045 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895366875 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.39045796 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392072131 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400935851 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399552482 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648435385 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.408986356 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999509273 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625927285 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387609933 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441193252 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.397885556 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399182881 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.372365515 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394342497 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395738359 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430132717 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616772526 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394452187 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.374643927 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423657778 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603228223 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395404798 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404544974 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617163971 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.39938121 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.411125197 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138593332 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427197011 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40268735 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398516175 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399349156 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454550287 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462909781 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603412244 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.664003142 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666048852 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785659753 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408467239 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397843434 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.409581176 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491867504 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396083823 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.402175608 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.170682191 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006027875 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134495544 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001643515 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662821481 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40423022 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404653019 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396071085 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534863224 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396655133 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671007681 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396004535 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.414817045 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419345903 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40507029 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399616948 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613003941 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67339845 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39941121 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398259848 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402708781 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.398170333 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664592246 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.614885743 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901621329 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966941085 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398312738 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401544873 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136765902 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675996642 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397839379 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398205356 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398320796 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.415336155 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418976586 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.408244694 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411505073 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533482384 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661411827 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042668869 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.667121113 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.442310989 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.915584988 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397786565 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652952357 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164737869 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606346907 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010759612 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.12903231 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663069524 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468698512 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607806493 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.403051455 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535417576 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.406538064 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407315031 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401051839 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401071653 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.398997576 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.662848542 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017426217 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663930185 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.404467327 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.408972679 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436377095 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.60926905 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.626933251 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106682773 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623079957 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668399444 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41400691 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400969373 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009417156 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668168965 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407806817 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.404990115 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622545315 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408054008 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426672889 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.918917032 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.399433446 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960027149 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.291290435 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422780224 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410855071 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.132905745 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008820549 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.406177286 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908434036 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406702812 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404612408 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682573018 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.408972836 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40932142 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685189998 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.407122762 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409037021 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619008607 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.013033782 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160508003 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.423357368 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409533165 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.40545842 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403312966 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427841915 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403837759 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412404109 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.81036827 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407897256 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404314285 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416131283 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.403678805 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411522947 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.4088681 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403687242 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.410581468 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.39714035 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.3995341 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415979144 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532896806 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968977222 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406544609 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.079587402 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.725968449 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657447735 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414579405 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.385128735 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.408308136 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40666615 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406214899 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405678945 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408955624 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971363014 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.410186038 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.675888669 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417366946 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.405741168 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615847858 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420198419 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617360255 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425751417 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430498404 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.381581471 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406146315 seconds)
  done (took 989.036399265 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.402345541 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.416319304 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.411048091 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.450680508 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.443084411 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.412433731 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.423388532 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.435765945 seconds)
  done (took 20.680307827 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.402214957 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.413399133 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.401800556 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.408292631 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.403666136 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.883864442 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.402059804 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.414810152 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.422546001 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.414592803 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.402972986 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.094873292 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.428750939 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.401113802 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.392788643 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.410089875 seconds)
  done (took 32.985164697 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.510415461 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.590645584 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.328795196 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.451445001 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.440112982 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.409861339 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.63826739 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.419104146 seconds)
  done (took 27.074234166 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.414697003 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.413157054 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.414204235 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.413774982 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.415298008 seconds)
  done (took 8.357797264 seconds)
done (took 1258.148028445 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.41151171 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.411324136 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.412644899 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.413923461 seconds)
  done (took 6.936167766 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.382731213 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.383205926 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.384274306 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.398251142 seconds)
  done (took 9.835483592 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.10756118 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.003069382 seconds)
  done (took 5.397573886 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.898256767 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.901614071 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.899070471 seconds)
  done (took 6.987325663 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.693748632 seconds)
  done (took 2.981253007 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.334246966 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.406709287 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.075216618 seconds)
  done (took 8.103252861 seconds)
done (took 41.527211268 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.402138191 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.746899656 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.558118629 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.402593241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.567219137 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.558638392 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.139963367 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.403692887 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.414153319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.409188802 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41085403 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.568319417 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.118863024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.741788351 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.120286126 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.648918514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.562896565 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404335426 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414553349 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.408578719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.145741762 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.403253856 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.409333673 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.412466094 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.569293715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.549850965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410972456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.649837841 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.404682498 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.403488482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.55665994 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.417789756 seconds)
  done (took 83.624423107 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.40835281 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.411205647 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.412582888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.417016182 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.406766801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.435371258 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.407098557 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.40612622 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.405277255 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.417269754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413307537 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.405362714 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.406993792 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.405450846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.422662033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.407950444 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.43231883 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.410772988 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.40641221 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.405219248 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.406583121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.418531649 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.406068272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.412586302 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.405043421 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.418354444 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.406372361 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.411667742 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.407117824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.406635091 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.41877605 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.415770671 seconds)
  done (took 78.467625016 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.410777993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.410599194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.411403428 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411460777 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.412741889 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.411919022 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.415897625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.4129097 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.427832184 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.424717765 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.408124031 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.423208267 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.407476068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.407757437 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.40876611 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.408944246 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.424281252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429191494 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.408180335 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.408816097 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.423378648 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.408279296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.408963189 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.408228917 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.424266426 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.40992601 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.408216938 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.408492901 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.421202967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411713426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.414112724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.412247986 seconds)
  done (took 78.535985745 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.735363045 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.422265246 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.425515203 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.417577902 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.425807106 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.422055423 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.418155091 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.739120323 seconds)
  done (took 15.297976907 seconds)
done (took 257.213653683 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.413564758 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.909250597 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.442511133 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.413468427 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.438638982 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.442601409 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.63598004 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441609007 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.637635982 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.438185869 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.433992959 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.415230209 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.206376361 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.570529707 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.264710483 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.369571123 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.285671449 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.416115006 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.979720124 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.700565754 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.444333046 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.409892093 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.248273957 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.295284696 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.397911212 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.495716083 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.5121872 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.63962283 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.574528327 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.49391106 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.926573925 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.416035268 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.417421637 seconds)
  done (took 65.421915396 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.416400565 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.421991628 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.426436952 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.425072558 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.421497083 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.426181083 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.416406913 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.425946889 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.426687091 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.424623851 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.425458008 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.423659796 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.42515003 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.422398762 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.422582454 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.403452648 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.416076826 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.423937153 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.417924094 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.40509178 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.422233723 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.42623735 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.425392283 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.423118017 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.427772752 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.427697129 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.423646815 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.425023432 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.42444838 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.424600007 seconds)
  done (took 43.961308327 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.42722786 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.981799124 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.144989795 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.427533149 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.420033588 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.423763548 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.701954768 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.434809474 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.422697137 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.423605109 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.900159523 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.436869839 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452865108 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.151186531 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.427959034 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.429809117 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.429298179 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.421026558 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.993247549 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436735456 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.700684056 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.434225902 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.701903503 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.436951506 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.42377274 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.422074174 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.426290217 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.227289933 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.444673871 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.901252421 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.192941286 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.70297431 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.181520802 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.204865786 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.197585898 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.435637423 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.430311969 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.90357148 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.428782269 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.422154827 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.69988522 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.429524517 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.154123349 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.107390684 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.441206601 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.429790075 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.244543781 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.928280073 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.667611316 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434233803 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.182213867 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.429979249 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.431512384 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.424427319 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.659550503 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.431627144 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.423269756 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.268758847 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.44923367 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.701218954 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.437140684 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.423693303 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.99474425 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.428914639 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.988278706 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.431004681 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.431617631 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.423926906 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.152285184 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.432600034 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.114752554 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447598855 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.432170731 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.90918986 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.99937396 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.322895733 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.432562152 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.996562009 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.202340173 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.719526812 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.434916288 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.241119142 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.72550561 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.43410939 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.435182479 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.435754828 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.433400372 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.500116316 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.702029153 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.048582523 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.114231325 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.271348799 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.723125183 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.439305602 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.425995166 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.264713519 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.450628095 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.434227872 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.149427728 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.121157052 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.447695869 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.432896513 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.106097036 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.451333418 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.706645828 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.437485391 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.18941343 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.433187295 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.498055334 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.435026845 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.433414303 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.430949879 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.706213738 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.437000187 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.435970675 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.104241279 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.943597438 seconds)
  done (took 198.480937493 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.422796447 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.422174906 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.42226168 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.420972732 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.422063862 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.429266302 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.42201213 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.421908898 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.427157166 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.422755685 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.42333905 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.430859418 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.429172177 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.421596285 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.422350245 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.422852446 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.422256859 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.429516888 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.423515108 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.423851808 seconds)
  done (took 45.786904091 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.436328062 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.977937155 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.949737518 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.442007284 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.433208427 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.428448493 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.48303494 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.436010719 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.432236535 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.723087079 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.605674163 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.436896115 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.434003319 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.433111828 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.944530252 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.419028311 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.724298389 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.985454625 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.443975624 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.980498486 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.41937974 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.437226842 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.428460873 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.98085392 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.740832325 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.714379834 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.493433917 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.98674058 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.441008004 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.434560292 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.982003452 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.446543582 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.430721331 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.974226304 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.445663027 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.452491044 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.434954635 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.486927154 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.491580223 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.727200562 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.994056734 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.722746867 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.455943904 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.604432845 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.437919928 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.41566793 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.991562303 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.447345489 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.415201419 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.437841669 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.445565771 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.955909887 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.437949861 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.957853145 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.442246846 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.440047322 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.984441334 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.963271434 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.9556333 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.604868841 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.43719086 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.710491039 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.443123667 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.993845467 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.446919225 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.44130165 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.440946906 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.601816645 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.99385947 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.71773907 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.735388786 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.736003346 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.447780568 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.494830375 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.438921445 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.729043907 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.500927419 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.850158313 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.735513688 seconds)
  done (took 129.411576777 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.692072806 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.552748931 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.803778157 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.025948175 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.941915718 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.574724027 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.547958547 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.673838232 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.439397784 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.527452682 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.076528239 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.552794059 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.169115922 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.527759078 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.538001914 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.57539408 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.82998162 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.426410017 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.10592388 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.044460886 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.440920517 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.541549827 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.950127496 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.626134049 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.435085915 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.017808586 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.386414765 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.958101423 seconds)
  done (took 54.292224377 seconds)
done (took 538.648000659 seconds)
SAVING RESULT...
DONE!
