cset: moving following pidspec: 9519
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.506090963 seconds)
loading group "string"... done (took 0.527194152 seconds)
loading group "linalg"... done (took 9.01791316 seconds)
loading group "parallel"... done (took 0.175360809 seconds)
loading group "find"... done (took 1.289691586 seconds)
loading group "tuple"... done (took 2.026968595 seconds)
loading group "dates"... done (took 1.495062052 seconds)
loading group "micro"... done (took 0.205346252 seconds)
loading group "io"... done (took 0.545080353 seconds)
loading group "scalar"... done (took 50.453134076 seconds)
loading group "sparse"... done (took 13.721861065 seconds)
loading group "broadcast"... done (took 1.290408036 seconds)
loading group "union"... done (took 10.227715678 seconds)
loading group "simd"... done (took 3.040472608 seconds)
loading group "random"... done (took 11.528491987 seconds)
loading group "problem"... done (took 2.224505408 seconds)
loading group "array"... done (took 24.270184531 seconds)
loading group "misc"... done (took 1.148368574 seconds)
loading group "sort"... done (took 3.784618663 seconds)
loading group "collection"... done (took 19.344083383 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.6165004 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.183016374 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203936039 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.287358845 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.236379271 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.151328003 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.136664789 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.257392151 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.631205519 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207926111 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.129436848 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.50796448 seconds)
done (took 6.291234634 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.249389264 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.179604538 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168174347 seconds)
  done (took 1.031837836 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073961345 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.153272324 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.104981252 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.091866997 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090972903 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106186145 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090559772 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106456931 seconds)
  done (took 1.432151687 seconds)
done (took 3.477918576 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.498121085 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.857211486 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.505853132 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.162544418 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.299237366 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.296788043 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.330525478 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.199637495 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.08854021 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089580676 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174253103 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.383982655 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.434445452 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.949555152 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089337712 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.113500249 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.116460673 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.759756506 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077779693 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.112216458 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.51001022 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.192123049 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.096810498 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.122791536 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183787524 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130237774 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160416647 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100524505 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664672129 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13229909 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186747179 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095748893 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15794842 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.192661078 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.206849961 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.091657424 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669035182 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199270187 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.093088687 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097270586 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.656442095 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117625846 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.184706729 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101653586 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089127612 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182219814 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.095175307 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077010996 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.114255498 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084306981 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163638712 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.459518789 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103554198 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170487313 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090657976 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.67707715 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098026471 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273180372 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123368179 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.089894404 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088768969 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087604583 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157258856 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092957798 seconds)
  done (took 19.923926742 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150019104 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165186397 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075001214 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155317535 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121936712 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077920341 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09929839 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076374293 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106939545 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.242506075 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135122161 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.15292831 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088663804 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084880557 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125485647 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246112786 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107096892 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119517705 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084809588 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088384857 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137488162 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095033947 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089765282 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108242319 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167438024 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199954359 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106775182 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120609997 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.084316855 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095025273 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13945691 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143571941 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.088894784 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083951924 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169262937 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120158542 seconds)
  done (took 5.162085029 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200573682 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122280299 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.212874018 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16073753 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145169348 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167203699 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.145578973 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.281739311 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.271310445 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159322399 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12668272 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.092526577 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076998688 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.077247153 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094274272 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.480261665 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.177697717 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129513604 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153275383 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085307316 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096019291 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367992439 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098997738 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079760293 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098278285 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067139335 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.198804955 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083698332 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.088320525 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081544583 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085614023 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134535253 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193320384 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127772804 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119681143 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083018187 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096325543 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.217377854 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091489036 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075344393 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123059129 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114535205 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136360731 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096893719 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0929637 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219094007 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.179845335 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079062037 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118403269 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.076731045 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.192828222 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123513712 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077044566 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283623864 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114776729 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085052327 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079739275 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.267924547 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.112729488 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.078037004 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093370652 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084780988 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07583952 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.427026908 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104192957 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.030327816 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079391563 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156940471 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081818467 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102212743 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083174123 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082466736 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116253667 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078597262 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075342438 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094201629 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076820117 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078820086 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098105592 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094967882 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079120908 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097939395 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077199718 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143636524 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.111959154 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098789614 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121575853 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083096613 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077194799 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12552035 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080039249 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081385297 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.16999126 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083544148 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109697139 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084070651 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140149551 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077737091 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.221308432 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081446902 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104127002 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09862235 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124871863 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09828929 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07693316 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096943585 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076685027 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079041073 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156963528 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079300083 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076912759 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084220582 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095987452 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090459831 seconds)
  done (took 22.923765901 seconds)
done (took 48.694606434 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.44502953 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086252134 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08595811 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104356991 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086408462 seconds)
  done (took 1.575540641 seconds)
done (took 2.322124095 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320918593 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197584613 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097875481 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.194843157 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083830478 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200167663 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.187189306 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092597186 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212110053 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083795847 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.190439729 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083010014 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101961116 seconds)
  done (took 2.809070324 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097585167 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105034942 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096315941 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11386329 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078052001 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094653082 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110750151 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106197998 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094886278 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105601287 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078899736 seconds)
  done (took 1.821702555 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094989297 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101800236 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084543789 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110670105 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079669773 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093667442 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108991852 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103064596 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092566539 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105914492 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078751694 seconds)
  done (took 1.797267403 seconds)
done (took 7.164906596 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.075939622 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 26.652647239 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.166274104 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.285736959 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343137583 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.250424512 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.651251005 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.154131433 seconds)
  done (took 31.474830836 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.115158354 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084742975 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.106816629 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.139117777 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088299519 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.107698863 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088301646 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087647403 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.108650132 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088527653 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086791351 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101357147 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085409422 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086443412 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090210751 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101187953 seconds)
  done (took 2.372070286 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138901654 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111677743 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109105214 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093075083 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087886024 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110304143 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094587378 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091009854 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105594206 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089654917 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095600314 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107535673 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091519638 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08716077 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107330519 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119921346 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087137863 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.1068749 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116983779 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092383328 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109546549 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.091274371 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090946871 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107619087 seconds)
  done (took 3.269212196 seconds)
done (took 37.861237526 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149434843 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097714611 seconds)
  done (took 0.993809486 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139698573 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153867603 seconds)
  done (took 1.044872827 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107584982 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084002299 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133188279 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098663048 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085517906 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099223181 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113398868 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099700149 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085034676 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085266048 seconds)
  done (took 1.747177419 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088728169 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088938514 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.115988976 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138597759 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109743423 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.088926311 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091046525 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08725077 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10783236 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.085153737 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093518602 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122555946 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090149206 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120852546 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.089997769 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.089692808 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109726593 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.089592941 seconds)
  done (took 2.564208051 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085066526 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.08618642 seconds)
  done (took 0.929352286 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08869471 seconds)
    (2/7) benchmarking "second"...
    done (took 0.084779827 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08636222 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10319353 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.085405842 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084141828 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100008818 seconds)
  done (took 1.390861466 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.494857397 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.264127725 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370036491 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10267679 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.141420328 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.336234625 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.141181347 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.098316189 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097722689 seconds)
  done (took 2.838871088 seconds)
done (took 12.262011001 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091079225 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.214430094 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.625420597 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.227178157 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084470338 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158443402 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.287505754 seconds)
done (took 2.450587849 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349139953 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.148816725 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084005578 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082575171 seconds)
  done (took 1.419986766 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078347762 seconds)
    (2/2) benchmarking "read"...
    done (took 0.092686216 seconds)
  done (took 0.935284183 seconds)
done (took 3.118676122 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083504358 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.084219319 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.123454712 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.0827497 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083755182 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082254908 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.100293651 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082975777 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082337734 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083025529 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101484424 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082940548 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.084360914 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099332091 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082568222 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082029081 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083247875 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.097856124 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082379252 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080520481 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098834113 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.082048415 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083188834 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08268774 seconds)
  done (took 2.911551234 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108577082 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083559225 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104053568 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08947956 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.086760249 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103709603 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088790304 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.084646245 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087253867 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10227335 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087603442 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087118691 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102060158 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088376033 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084754305 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103174386 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08904621 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084283734 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100312381 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088653219 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086886134 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101104359 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088128088 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088355578 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103651207 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088851333 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085324211 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100366976 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089206416 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087763227 seconds)
  done (took 3.543472476 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096259267 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083541069 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08616909 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.112230616 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084938561 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086228995 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099972704 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085702116 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.087624622 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085353359 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105231652 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.08680042 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.083722851 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.104086875 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.088823791 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.089281268 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095620465 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101092449 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084001681 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088417415 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.106067265 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084318878 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08654366 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085351444 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.103078625 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084227417 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087377331 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.103662008 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.0880179 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087110216 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089454596 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.105650634 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088175188 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097279891 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.105582728 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088732093 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.091358738 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083172609 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.105590473 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085197791 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083778446 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.102853208 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085301982 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093337782 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.086656697 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.104220305 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084858507 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.087633495 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.103610864 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092385451 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08392794 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083939803 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.105022137 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088550609 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.088753726 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.100471903 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088775294 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.083171704 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087245114 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.10319977 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.083647218 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083764053 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.1073519 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088025492 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102852152 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.108909264 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085473128 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.088166986 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.087621138 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.108874386 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089658057 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095622688 seconds)
  done (took 7.433290176 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098573434 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093644758 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084526552 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100742153 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084555202 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.084115732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105046335 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085643492 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085208501 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.106920052 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08662653 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084798675 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083756025 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103173955 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086136411 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084135848 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107610857 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084854422 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084569282 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101630683 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086142442 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088475439 seconds)
  done (took 2.78727067 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227094311 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090987476 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134793274 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113705537 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102629971 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113182184 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090082874 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090135282 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103812304 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094613348 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093180336 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105243271 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1027104 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092361015 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109430305 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095603337 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087871074 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111018631 seconds)
  done (took 2.735662993 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101114376 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.08510263 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.124083983 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08735745 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08525034 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086551494 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109067555 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108611054 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085989898 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.103688216 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094230934 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087226024 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104055026 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087971044 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086826314 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106455378 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.088181354 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085914613 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109889255 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09321109 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091561244 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110865618 seconds)
  done (took 2.900954133 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101102197 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.085586382 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120256189 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089285336 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084323996 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08528727 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109783143 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.087260633 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091759526 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103309989 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087501724 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08703642 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.117843967 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086918424 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.090570625 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10286559 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088355841 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087351865 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103519298 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085818705 seconds)
  done (took 2.674874386 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17099542 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12057679 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105528639 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112118394 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121578848 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106666394 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111750993 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123109982 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104676325 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132495242 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106092939 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105247116 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129684684 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110069596 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104401981 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130766081 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111996161 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129533997 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105622087 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105139962 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134605548 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105889625 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130217807 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105771454 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106106791 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122739867 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10644373 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109973138 seconds)
  done (took 4.054167348 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087451857 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085880727 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083933255 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100443098 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085249785 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083719528 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.084027561 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.101140414 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087838046 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084274435 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.101102083 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087153468 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085452202 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08490168 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102034052 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.085729406 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085366551 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.08437127 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101251527 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085362895 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084925543 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100606597 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.086768497 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084215339 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084126861 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101898693 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085761067 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085381939 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101824734 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085901864 seconds)
  done (took 3.474832982 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096756259 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094271304 seconds)
  done (took 0.977465405 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093759945 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101754002 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085241363 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10267918 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092301964 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085302678 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111426591 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093108988 seconds)
  done (took 1.554022571 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.143459211 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159474008 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092133532 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098360172 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.159730468 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.151755143 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13321131 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090764877 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105514081 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082173285 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154215806 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082462614 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090115796 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08521276 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108004506 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095550263 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.0866369 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115343947 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093524989 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.089210048 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108288369 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096248774 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091091887 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.114238593 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083912654 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090534174 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11141791 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100734648 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085537832 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109593463 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089160411 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.085087969 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.107029262 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092447274 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.086982393 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160256132 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098391198 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104164149 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091850721 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092034094 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.137385888 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.087279316 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090858536 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087059917 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111618028 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0925124 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.092447173 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.103933339 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082548237 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084694613 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.102231366 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085782316 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085401194 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106846931 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090706312 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09712427 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.106752987 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087196257 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084844631 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084966643 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.10628293 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085251021 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090875854 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.108113372 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091582645 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08969138 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107076294 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086846018 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087771521 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.105339126 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091027168 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105026886 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108526435 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.092859535 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091759902 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.104421742 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087904873 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092088292 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105689963 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091409223 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090636874 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.132344711 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093772977 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084882374 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083989708 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112891097 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.090075202 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09023763 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100391229 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100635644 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.090048176 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.106433854 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083640583 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088119831 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103735471 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.091481618 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082593879 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089548328 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.103512818 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.093509717 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092094972 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106257151 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092584247 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09258996 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111511878 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090423611 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.152310385 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087696489 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08579451 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.089151952 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111842603 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084959916 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09029268 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.103375695 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088372948 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085413199 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110880104 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091200387 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.089572133 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.108853374 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093938933 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09198376 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10715678 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.088126058 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086507657 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090873811 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113319068 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092285772 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.088506909 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.10491886 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087694495 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089917614 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10853105 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087875712 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092558858 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105305205 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.087791585 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08870473 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.092373978 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109627938 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086937909 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088677695 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109394428 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090254972 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089243234 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109652353 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08651952 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082019864 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108999449 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08632715 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.086931286 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112807525 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08746325 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.089557924 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086571433 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114112751 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086836838 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.091703676 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108822101 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093654689 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09196984 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101339515 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089235258 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.090174354 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110066618 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088111456 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.087189912 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.086094484 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.114782181 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084794657 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090455912 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100556014 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088904764 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.093470346 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.107069252 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.091901947 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085961234 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.147260348 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101751281 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092377055 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108329387 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091489471 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.091165374 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107505137 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.092703859 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093587049 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.093709519 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109090578 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090046015 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093323105 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105432489 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09028182 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089163249 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110507602 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083517961 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.088284041 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081046169 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.111666249 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093853354 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09186815 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.111224773 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090734333 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088874983 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115469673 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087923801 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09117562 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100802574 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.094495696 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.097969593 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112056375 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094998463 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092382569 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08737069 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.107416412 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099165199 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089280665 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109835161 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.088354597 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083321359 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102188273 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.093840482 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.090889585 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104189246 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0880094 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092869758 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093324942 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.107905159 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083902143 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.092918424 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114163799 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086892001 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090961071 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105832984 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089316152 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098273225 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102110117 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08857039 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093272227 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.111962113 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088123748 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090545703 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.109019905 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097096422 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.090907522 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.090534451 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108160488 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097184497 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088086931 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.10609604 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089053661 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.090539601 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083901475 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.108724476 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091929141 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08769998 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107338703 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096134649 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094158772 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.114769144 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090517347 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.091649506 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.112577028 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096018452 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089074077 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.111861958 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08840854 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084710915 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086057955 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102807193 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.090094029 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085956681 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.112138238 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090294493 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089778642 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.1115433 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095486833 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088287995 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.112068588 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102919248 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084221073 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102351814 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090298529 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090114079 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.1061573 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088352278 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.088554298 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121079463 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.094261461 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094720006 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088243446 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.106885236 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.095616244 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.096091011 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113946138 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.095353591 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.094979689 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105397401 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.094300254 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087846371 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11437151 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086235692 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091038552 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1084466 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092213026 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088785925 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089545625 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.106456566 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085617999 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087370607 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.114252455 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091059735 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.092577551 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110002253 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09009055 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086726136 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10565324 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.097051176 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090187431 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.113259768 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089492976 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084496801 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084581852 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.11339394 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09301368 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.094128604 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106612839 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.093796541 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095984822 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.111545372 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.090459287 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.099200542 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096864858 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.114639631 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098014444 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084490456 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.108263606 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09755628 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.08831565 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.111648404 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.092188268 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084945176 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112992044 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.09660043 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093372032 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089272273 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105445722 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.090022186 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.095034991 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111715099 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.092900401 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.090494435 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110776851 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088161923 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093379891 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.094212899 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111408545 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096201228 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090639865 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.113120584 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08946797 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.094243655 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.107587633 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087042751 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084556833 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106838181 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.09672102 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085402952 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095128272 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.113183703 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089187908 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09002456 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.113550037 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088902333 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094895921 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112128956 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090305416 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098617409 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.107102624 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09096884 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.093786661 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.093974476 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104166115 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091587441 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089926293 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11580356 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091575681 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.093595955 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1110165 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095860849 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.090873494 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.112678879 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.095976102 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.095422206 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084353218 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.115824054 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096290763 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.090831828 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109350864 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090693305 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086604255 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108867153 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.096456211 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087542954 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116802879 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.095861944 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090183173 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088959617 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.115141285 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091382013 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095699888 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107485084 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094375572 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08519386 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113914401 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092852865 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.095189261 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107209378 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087848153 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09519209 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.093407983 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115152365 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095463271 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.095292314 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104747968 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086753083 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.091173443 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107914927 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100330967 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096104886 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109031017 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091720479 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.089470014 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.089215983 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117083317 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087282407 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088966382 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112461352 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093981427 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089976366 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106593045 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.095106996 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090677272 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113768691 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092590228 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086691972 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109999819 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.097282307 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090061132 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087106392 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.110507613 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096820103 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090519522 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108630407 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087387365 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097939204 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.114422225 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097705431 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088943988 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.113082987 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091386734 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.090375029 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.115682011 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.09264993 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092246645 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109131767 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096083818 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09788959 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085122557 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.109717672 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099489725 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09413315 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115903271 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.092490629 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089959748 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116497831 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097596112 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.091049918 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105594224 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089227696 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090766102 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085758679 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.111339189 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098608268 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090974713 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110206604 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094594258 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094372622 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.10984128 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.092416674 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086010947 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115311278 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091290798 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09518108 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085413651 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106419437 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09210843 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095068223 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110919054 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095216108 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.089570058 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.110238402 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088137468 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090359058 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094582888 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115291989 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.096689602 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090865416 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.110722486 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.094227278 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099666406 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.111876747 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093596535 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100161095 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.115551565 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094506214 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092339882 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116769799 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.098847452 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.091199666 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.115691055 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092356696 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092852888 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.095673642 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.119096134 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103493572 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090431782 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107071112 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.096619912 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089665732 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107222701 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098358144 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096974533 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.116568215 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094479831 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089244875 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118266581 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099794007 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092395911 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109066085 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092492488 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.094811824 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089862013 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.114520042 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090235745 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.096915629 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.116121598 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097872815 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.098859458 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.105857991 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100693065 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095319064 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.120648824 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.091186714 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087557619 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086663686 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.112076193 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.098230444 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.098811397 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.114607975 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096507156 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.094008157 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.112330516 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094552434 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090120272 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.096693089 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.116293283 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091098527 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.094713307 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.112705705 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095765164 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.091946501 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.11615963 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.098329899 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09393785 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120314553 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097811038 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091168105 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089047296 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114437871 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.092124589 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094869256 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115949829 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091197553 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087039856 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116826833 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.099282293 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092451428 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115977428 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100525341 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091736568 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095414443 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118698978 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.095638387 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.091264323 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113938387 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.094347593 seconds)
  done (took 59.274503009 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143385818 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097655629 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111758612 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093189574 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111209087 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113489857 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092453536 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093158549 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.113308567 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103032973 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091351678 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110457628 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109685337 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113903099 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13112631 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102360455 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110813313 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094177998 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091434315 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092035572 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12768958 seconds)
  done (took 3.086870651 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112141794 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.10586586 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12367994 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107611347 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09851402 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126878875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103331463 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12479175 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108076196 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099646342 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.128010498 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10425966 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.119997642 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10197694 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09999095 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120833763 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108043954 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098876021 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125765164 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104642578 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121556572 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10480004 seconds)
  done (took 3.286376844 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.103431184 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.096429448 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097937071 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.112125491 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.096628668 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.092119327 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119537001 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.094838304 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.1019639 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092698903 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109195339 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094512521 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098011829 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.111436522 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.089961513 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.092409175 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.121421917 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.097278696 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.097495877 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091499453 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.126708294 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.092888969 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091969839 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109432251 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104594295 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.097057437 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.112671819 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.096991061 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087615569 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.116282924 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.095033875 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093585678 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.113841833 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091718575 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.088609594 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.097004522 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.117496425 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.093453662 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.092106964 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.114002926 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.094799458 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.096690647 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117794864 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09503869 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.09350163 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094215932 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.117341025 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093374515 seconds)
  done (took 5.6885346 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125015057 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151658292 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09767159 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124144954 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129655647 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.102527251 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.094687016 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126195131 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.094216514 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.117466498 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110496401 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106699218 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120076254 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.100795024 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095116811 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119878706 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099918636 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094955784 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.121706205 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097778388 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10062077 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.118795619 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107320807 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.126255823 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101701351 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095445846 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.115996166 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.102107772 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.105159441 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.122014487 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.101597243 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.100352381 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.371668001 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099098897 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096013441 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.118956995 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.109302681 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.096507441 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.120312218 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095266031 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.097734783 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.121123023 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10001179 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129077051 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100594814 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.099514494 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096260595 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.116888937 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.105961348 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.117662905 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106143176 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105973085 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.119927247 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.097617266 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100398814 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127584271 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.098569876 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.094411496 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.118977048 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.106358258 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.094706797 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12047267 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108622707 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.097408197 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.124940182 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.107211705 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11830466 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.100193014 seconds)
  done (took 8.644397103 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134811148 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100368132 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129897447 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109388853 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100161152 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.122519353 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101257411 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.098773603 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122856945 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106554953 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120784752 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.200259028 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.119281408 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107173456 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10009201 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122534033 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.101866006 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100956551 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122756543 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101700705 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.100632 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131243812 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102042615 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12941839 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113934929 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098688813 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121824848 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101850899 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108931862 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123629243 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113837648 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.122024768 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103533298 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109331629 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.133573691 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.101779488 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09577594 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12324346 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.102738212 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100868839 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.118972202 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110587572 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101018553 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.119187291 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102224879 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101117848 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.131963768 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.112308044 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127274135 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107865555 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.100654944 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131794857 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102418391 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122380538 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111638602 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.116219674 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131566365 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110280314 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122943008 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112422889 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108924408 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138426979 seconds)
  done (took 7.958239871 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095836883 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095749856 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.092034523 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.113882386 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095297863 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092790853 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093752815 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.115215016 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09517303 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094290799 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115420975 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095597443 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093251727 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0937601 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11472159 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094525334 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093823459 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092559871 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117641415 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094301186 seconds)
  done (took 2.843017538 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.104274334 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112771162 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.115957447 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10369244 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.096161327 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122453596 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.098732836 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097418459 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096274478 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119296821 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10597049 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104167841 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118672171 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102559447 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12641493 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10374378 seconds)
  done (took 2.586263276 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117273012 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115391837 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.190134441 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.09966017 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.118766534 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104761414 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.097415946 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.120967801 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.096929064 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10321666 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.100368275 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.122829413 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.098207761 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097339936 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.118016252 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.100879124 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.094211872 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.122123565 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.098145187 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.185502185 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10361679 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.097229075 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.097800304 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.122543763 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.097175712 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.099579796 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.125399138 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.096495433 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097925453 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.120319358 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.0992608 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.103074264 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.118481904 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.102782449 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098145011 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.118079069 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.098411115 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.097424689 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.121594207 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.099098931 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.099920462 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.097786355 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.120391367 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101496871 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.094526267 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.118883259 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.095842928 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.102123475 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.119071159 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.099190132 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.097248008 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.126983338 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.104654296 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.105919326 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.127196968 seconds)
  done (took 6.888748433 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110121573 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098370177 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.12972342 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0964069 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.097794327 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.097104922 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.120620608 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.099403262 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097896744 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118667558 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0998433 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098117176 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119911671 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100998952 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098093759 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097977752 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.116448593 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.098908094 seconds)
  done (took 2.755690958 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104321153 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097681802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101780611 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.119015775 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097024645 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097222243 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115646834 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.097943693 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096672184 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096185833 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118980502 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.098673894 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096730322 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120048966 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09725428 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0960006 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.118804013 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097559126 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097319949 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094389249 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120060711 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097819649 seconds)
  done (took 3.141974575 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111727017 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183034493 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106608166 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.19163423 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097629762 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094721433 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127245278 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098542983 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112553847 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117335111 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096276315 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095417106 seconds)
  done (took 2.29844304 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127457962 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136123166 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119383402 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099181614 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106740705 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12319237 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102948018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100948533 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132936601 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112816445 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122039567 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112037983 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11034483 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13133903 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107261795 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127701627 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103802608 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100902204 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097286036 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139426014 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10213154 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132544853 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102679729 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101477686 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123859503 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111497971 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132064907 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114158794 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10146493 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132049637 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108308705 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100309264 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132835677 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113413389 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119362853 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112198135 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101177173 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139956584 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107785189 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131173179 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100835878 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106620448 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133134948 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108623235 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109947117 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124745536 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107678163 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124047016 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104198285 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12489681 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129268492 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110074665 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127991474 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113399085 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109918291 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146255946 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113525889 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132970492 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108079264 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135579961 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111799487 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107795846 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132350297 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114600634 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12874458 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112109704 seconds)
  done (took 8.585328852 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140335543 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098194724 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123579417 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113789928 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110184334 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12571941 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101906244 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123703469 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103957695 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098611783 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170554307 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10446799 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112618516 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134119676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102485483 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122806627 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103652934 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10973046 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121551178 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126758977 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102259243 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133503717 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11095943 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132940459 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114257385 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128639851 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104355706 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101605571 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123452158 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104169398 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107692059 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124656058 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112060967 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098345024 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133185976 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102775693 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101837407 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130131543 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103113411 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129292163 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111984418 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118219526 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124945381 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103689904 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136219108 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103867879 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103245259 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121309069 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105130456 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099002752 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13427425 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115699452 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112993449 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133632394 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103195399 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124747486 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104671871 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102835758 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124068899 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110934424 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111368601 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126195898 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125543087 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125088505 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104712126 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110569956 seconds)
  done (took 8.524508757 seconds)
done (took 161.378273767 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148539735 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.188608083 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145875699 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177836434 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093152198 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.125237585 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147384527 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147975803 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090929396 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114745697 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092882709 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094227119 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.180174164 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093773145 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091923298 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.094409982 seconds)
  done (took 2.89859816 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19170432 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.30745068 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108852021 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118235063 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100714907 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099044689 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119112297 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100129269 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097187431 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126784611 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100651563 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094803873 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126812058 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096818787 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097332605 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121250992 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106584202 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099369416 seconds)
  done (took 3.095291732 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119201776 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141614922 seconds)
  done (took 1.144515302 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129630067 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197821707 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274326386 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172536401 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12045387 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.1375698 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151351475 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132584695 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.179388409 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134056654 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112357423 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097942848 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146116741 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103458468 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111081215 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121123046 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126253989 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.130978332 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.110955371 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099892607 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142042321 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104479432 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102982444 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.131152015 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.169735652 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132943512 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103731542 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102429597 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12228885 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109690864 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104921301 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137557236 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110003736 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174532562 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10311132 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170369869 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108537162 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120091139 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109876661 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097796917 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125033421 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102251691 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113912606 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.121914502 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102972492 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128667364 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104644508 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102591162 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129430082 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109492579 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105972511 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128747151 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168847363 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11108737 seconds)
  done (took 7.785236861 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.852917812 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140556171 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098068989 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.985517959 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148040812 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113906981 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.833583238 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142740259 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229806783 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.903001135 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114481379 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111802098 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261794196 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.250755141 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.180812368 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.369114683 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.687601987 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134784008 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128999515 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164546992 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107104692 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146447631 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119984303 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43812438 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100213433 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098447904 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127666803 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111059017 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178478422 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.097842242 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.101892849 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196740035 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.285272661 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208559966 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097696761 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119850214 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097763685 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187458749 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269656207 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219195378 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160780167 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116789205 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097986764 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106089792 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142603464 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093520098 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179941474 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191757672 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189894645 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103779088 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111317354 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131550426 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105967712 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179446014 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094950077 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.354703747 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.375794213 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09884635 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106426455 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136489851 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271470559 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098427834 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235985044 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147307216 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21511467 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098044454 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802662832 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18559766 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097395138 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103759356 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129424316 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103791486 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128018828 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157306729 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.404920259 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110861813 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12420132 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099202949 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227150663 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09852721 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096358864 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180815814 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121296748 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108018529 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111759616 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133958079 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186809846 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.24616889 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133093459 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107623555 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103175192 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133978663 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099414796 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231419276 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228645632 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176732047 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23174376 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108792947 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182886675 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182868804 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10610595 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187665766 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105582003 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13492091 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107876844 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223067239 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154527694 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100471513 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10310919 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129122517 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.142814953 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122947241 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108500524 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186138628 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.465895751 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.161839326 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.117525502 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103839377 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106349165 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180112225 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1048337 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262601218 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131799989 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181791276 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108058708 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095491346 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127704308 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.158933722 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132106989 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107398404 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128258284 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110700938 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.270614946 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22078459 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11263266 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240057745 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.189617468 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107018792 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191243362 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107088806 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187822472 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10757262 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130060327 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100053925 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795602936 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134535712 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107307736 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103270704 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.202571541 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097783837 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122612839 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099970555 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095936151 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798671774 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100587339 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120231203 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10047097 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104829339 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130437777 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107497895 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12512699 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15748707 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.265623228 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112718788 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105296902 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122276079 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155402745 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123265951 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099730402 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098034618 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.121174584 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109217925 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.102197724 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123452436 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167228115 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177956138 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229102586 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.530770534 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121316789 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099487873 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239957431 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09786389 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.339302992 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108222239 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232667172 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185548027 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096500583 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.350826149 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187176382 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201919315 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102614688 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19135813 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096805674 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105446054 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179065906 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120798114 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108582293 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175060667 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114296184 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110006395 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.210003625 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100758783 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248489163 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097146462 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186904828 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100484192 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105682008 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.34712942 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101118861 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116045025 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180125027 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102302272 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123924549 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.716348235 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101117363 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108855932 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129684254 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233587281 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184785932 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108180663 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10806992 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.135340962 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180329288 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209051497 seconds)
  done (took 45.695838285 seconds)
done (took 61.500989345 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.287602735 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255995796 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.305729164 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.213709191 seconds)
  done (took 2.038163189 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.284928406 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163291669 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.232978689 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097621762 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.247308005 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097355808 seconds)
  done (took 2.030901572 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.497751398 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.386843849 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.34597748 seconds)
  done (took 2.14204508 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.247477947 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235333323 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.349946189 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.41345643 seconds)
  done (took 2.267941058 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.29853011 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132321058 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125648355 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.214320595 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.279308138 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.259665147 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.152509354 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202677677 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.152960941 seconds)
  done (took 2.774467259 seconds)
done (took 12.163246349 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.16200423 seconds)
    (2/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108334531 seconds)
    (3/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.349173986 seconds)
    (4/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.35451288 seconds)
    (5/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.32754722 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130011256 seconds)
    (7/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12743516 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.104722551 seconds)
    (9/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.130833987 seconds)
    (10/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.293538583 seconds)
    (11/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.330461533 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.276010625 seconds)
    (13/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.288220645 seconds)
    (14/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.108146918 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.200014614 seconds)
    (16/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.140198352 seconds)
    (17/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.209138538 seconds)
    (18/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.168428158 seconds)
    (19/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.109974637 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.19948055 seconds)
    (21/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.131624687 seconds)
    (22/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.210903849 seconds)
    (23/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.312370344 seconds)
    (24/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.304533411 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.124078442 seconds)
    (26/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.226513164 seconds)
    (27/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.123395274 seconds)
    (28/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.151239991 seconds)
    (29/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.112095672 seconds)
    (30/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.205922427 seconds)
    (31/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.146902217 seconds)
    (32/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.25677719 seconds)
    (33/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.150666159 seconds)
    (34/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.214086231 seconds)
    (35/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.216481293 seconds)
    (36/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.2143739 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.125423382 seconds)
    (38/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088996563 seconds)
    (39/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.131216509 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106057736 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.106076686 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.160569272 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.135774226 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.28853018 seconds)
    (45/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.204986818 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.130496086 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.182019759 seconds)
    (48/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.128699245 seconds)
    (49/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.194582881 seconds)
    (50/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.190387693 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.18813438 seconds)
    (52/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08344133 seconds)
    (53/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130511219 seconds)
    (54/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.20042996 seconds)
    (55/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.277091999 seconds)
    (56/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.1543625 seconds)
    (57/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.110373101 seconds)
    (58/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.132240413 seconds)
    (59/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.182137883 seconds)
    (60/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.104239767 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.162805203 seconds)
    (62/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.083400478 seconds)
    (63/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083421072 seconds)
    (64/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.152746261 seconds)
    (65/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.200992686 seconds)
    (66/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.082510145 seconds)
    (67/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.13701593 seconds)
    (68/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.11030875 seconds)
    (69/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083688428 seconds)
    (70/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.087198823 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081423798 seconds)
    (72/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.08124899 seconds)
    (73/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.253301482 seconds)
    (74/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195898571 seconds)
    (75/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.107024148 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125318648 seconds)
    (77/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.083283783 seconds)
    (78/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.082358627 seconds)
    (79/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.179026898 seconds)
    (80/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.152249588 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083841446 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.162014947 seconds)
    (83/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.084140854 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104782485 seconds)
    (85/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.202274177 seconds)
    (86/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083113995 seconds)
    (87/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.082207397 seconds)
    (88/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103505345 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148516327 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105157435 seconds)
    (91/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.218388286 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126017748 seconds)
    (93/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082964852 seconds)
    (94/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082457548 seconds)
    (95/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.180023705 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105691074 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.106292171 seconds)
    (98/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.1268262 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098997714 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098119675 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.130131447 seconds)
    (102/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107470188 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12262774 seconds)
    (104/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083716696 seconds)
    (105/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134572764 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.104932895 seconds)
    (107/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.173122295 seconds)
    (108/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.108876988 seconds)
    (109/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.155001918 seconds)
    (110/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.082322462 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.129247266 seconds)
    (112/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.105854886 seconds)
    (113/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.197019458 seconds)
    (114/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.105302276 seconds)
    (115/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.153152732 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.098715501 seconds)
    (117/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.201170544 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.106284523 seconds)
    (119/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106269438 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.128230991 seconds)
    (121/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.158195978 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104543674 seconds)
    (123/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.12327316 seconds)
    (124/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083882376 seconds)
    (125/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.083780418 seconds)
    (126/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.143826427 seconds)
    (127/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.106564081 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109596611 seconds)
    (129/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177467291 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.1304293 seconds)
    (131/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084241638 seconds)
    (132/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.172806753 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.149309955 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125593614 seconds)
    (135/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083242239 seconds)
    (136/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084273571 seconds)
    (137/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.108169607 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.1086413 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106769446 seconds)
    (140/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083108216 seconds)
    (141/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.107654519 seconds)
    (142/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.177934644 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.083564518 seconds)
    (144/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.09386463 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.132914217 seconds)
    (146/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.088915101 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.105318639 seconds)
    (148/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.123585457 seconds)
    (149/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116236085 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.083394355 seconds)
    (151/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.087393561 seconds)
    (152/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.11362131 seconds)
    (153/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.155515664 seconds)
    (154/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.082656748 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10570169 seconds)
    (156/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.107764437 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100479181 seconds)
    (158/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107670385 seconds)
    (159/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084234878 seconds)
    (160/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.130324343 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10731837 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105709958 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.131037743 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111556074 seconds)
    (165/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089055501 seconds)
    (166/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084302422 seconds)
    (167/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.124520191 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127336652 seconds)
    (169/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.106134422 seconds)
    (170/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112759523 seconds)
    (171/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.084315627 seconds)
    (172/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.089266606 seconds)
    (173/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083552187 seconds)
    (174/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084675507 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.182189709 seconds)
    (176/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106933031 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084126093 seconds)
    (178/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097566597 seconds)
    (179/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.128279483 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107542331 seconds)
    (181/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082083139 seconds)
    (182/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082852714 seconds)
    (183/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.110207052 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124607392 seconds)
    (185/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083218207 seconds)
    (186/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.129525041 seconds)
    (187/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.084382 seconds)
    (188/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084849576 seconds)
    (189/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.083856326 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083968123 seconds)
    (191/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.128913583 seconds)
    (192/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.083591526 seconds)
  done (took 27.435902492 seconds)
done (took 28.357961308 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.21426635 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129341397 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108732958 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107797279 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.204251072 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115200481 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.142507843 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112520855 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.114317562 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.129839728 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101022761 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.116942916 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106146675 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201621008 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110562077 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127437384 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100497078 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11462315 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.141881232 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119599646 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.204876674 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102917712 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114046073 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125753339 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179347215 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127107905 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108330758 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109969894 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.139557376 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108311743 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107669728 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098537038 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.144274691 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118318966 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09884503 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.131719727 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101234883 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089583199 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.130666124 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110226633 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116873907 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.106020264 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.133754823 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10150261 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.107081684 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.131839362 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101338096 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11092177 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.124131436 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109192614 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102067309 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.144422343 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10623145 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098532733 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122576611 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102522154 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114954784 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100375547 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.142966026 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102121671 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100774836 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125141393 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110374072 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100048337 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.131911917 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102001415 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.107476438 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.132190081 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10717229 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105019822 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099383151 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.131684941 seconds)
done (took 9.660480241 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107874877 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.156926117 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.201793549 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.212157545 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130039476 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140821136 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12208098 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.129108364 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.14313128 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126462473 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.1589753 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130091305 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.212971048 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.113363408 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115404802 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.136463399 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116101341 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113471243 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.214096292 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.123790875 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156996865 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113138465 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158730348 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12457328 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10696529 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.164461423 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.107857922 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.135611194 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108671952 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115025213 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.1490395 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109670667 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.10640925 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.153208625 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121123358 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113621994 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.142528751 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.1110649 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106299229 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.131707102 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116432559 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124626383 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.132581854 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117717758 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.135919864 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116614736 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115430704 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.139312626 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.111815269 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110683534 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133890078 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13466482 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.114276408 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.139512337 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114130208 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114443563 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.14035885 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116049732 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.10783984 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.140299455 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108595124 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107834203 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13589947 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130312446 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.131953321 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117104651 seconds)
  done (took 9.600654748 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125623572 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135769504 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140705368 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116304057 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110850771 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122631062 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098056757 seconds)
  done (took 1.816189138 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101506128 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18596654 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208862833 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.208588843 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179136573 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.219150324 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146783524 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100576587 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130705555 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135870847 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18659628 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.239884579 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.106293275 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141040146 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186663621 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126051992 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.187549683 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126897474 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113713424 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212857638 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11373659 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127488665 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139872435 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.1009352 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209322165 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101256374 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263742986 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116329219 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132134301 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115266877 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111007772 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204921899 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.206726654 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115354044 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104173968 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209746758 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.203499675 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112270115 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.220778879 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105633328 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.20763826 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113059278 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116285302 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.138130546 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117484135 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.193023113 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121371687 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112819279 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.136937915 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.192926068 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.135922655 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.185000523 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13452143 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.112744259 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110973146 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138277868 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121993654 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113494544 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.220371544 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114680728 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209943686 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.206908769 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183744431 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210972209 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122744467 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212347137 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.204092915 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.112586751 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109382306 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.139842365 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185565062 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.136162752 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113746287 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.196609968 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117795842 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.209227978 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185512037 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.135810493 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114116844 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103345181 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.135431227 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103178981 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.173200202 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.139408414 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109911453 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117680898 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14058485 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111843927 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.1054197 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.150280572 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112005396 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.136736693 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120472646 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.111545037 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142955691 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189784748 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.138113038 seconds)
  done (took 15.515546389 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106365204 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102725123 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107043905 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128955197 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102827568 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102591819 seconds)
  done (took 1.634136574 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143151804 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113940031 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148628528 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115620114 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165657669 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.219230679 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.224863567 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110548442 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.155430756 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127783627 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.220685344 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.199262193 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.230149193 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11562012 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.22440439 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117261392 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.22613547 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111499861 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.149882905 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110682581 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116046165 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145092741 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110798303 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.211039434 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11690208 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.143856658 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112800257 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125122038 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.148094132 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112630979 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.116646401 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.142420512 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109868964 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110078915 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.227070513 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.10796323 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136586965 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125575575 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114739462 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146103184 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.20053558 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137425522 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123156613 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121239525 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.137331674 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109760298 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122494533 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139153135 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.224476526 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123459763 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12111252 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.141446875 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119428704 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121575939 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.135433681 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113230373 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121965312 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.227511373 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.117290272 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.135991563 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.114823344 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118048962 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138703105 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121697746 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.113793109 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.150336499 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108906916 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115238382 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138905806 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.115004295 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124135433 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.141777226 seconds)
  done (took 11.19423841 seconds)
done (took 40.716286377 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.526073837 seconds)
  done (took 2.506393474 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.903496969 seconds)
  done (took 1.889049005 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.159455016 seconds)
  done (took 19.17392758 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.53480068 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.609965681 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.053937647 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.175948127 seconds)
  done (took 3.358385246 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.999920558 seconds)
  done (took 1.998276521 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.293382943 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260696702 seconds)
  done (took 1.548281681 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.723814362 seconds)
  done (took 1.728481771 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.527713504 seconds)
  done (took 2.51726164 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363496709 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175326516 seconds)
  done (took 1.544953735 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.621567339 seconds)
  done (took 1.628463478 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.585153948 seconds)
  done (took 20.592246951 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247234209 seconds)
  done (took 1.256737719 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285709772 seconds)
  done (took 1.296789023 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.644322321 seconds)
  done (took 4.654115398 seconds)
done (took 66.682160903 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113171884 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116343882 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115248736 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140264651 seconds)
  done (took 1.485173721 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122551488 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117287436 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120394017 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143297927 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121867354 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116069434 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143242311 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119262246 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116760464 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145091171 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11794364 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116272476 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145254284 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117175679 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113839614 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144768458 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120729233 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117206176 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143404362 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119018744 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118553485 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.141703486 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121657522 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120207128 seconds)
  done (took 4.03573971 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.1143832 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107532136 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10775162 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131583276 seconds)
  done (took 1.477277199 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125318214 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129052522 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153723679 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125062075 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129290469 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153327013 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116447707 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114144279 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142093027 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124773225 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132378567 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155700917 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.1294881 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11903072 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153943536 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11086005 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117793061 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155948494 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124471426 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124388466 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143338955 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123637584 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121119913 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152733292 seconds)
  done (took 4.189641671 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.188194044 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125451421 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.165996658 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158647898 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.16910145 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.112056745 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.136258132 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.145993675 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.1191769 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.114969222 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.14223407 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160164426 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.145198297 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11535205 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113685144 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.144936704 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.127356394 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.117852003 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.183885281 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.117806555 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146827661 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127466967 seconds)
  done (took 4.094206962 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120116544 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107251885 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102742904 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.137999141 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119638206 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10899757 seconds)
  done (took 1.721653864 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106863701 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101118105 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101904218 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126969276 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106769258 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101234968 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100160861 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.12848211 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101489778 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102414879 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126556876 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101043242 seconds)
  done (took 2.327981655 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.343935809 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106375737 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134489286 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108885215 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112043979 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104713897 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147843951 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106200919 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.270368047 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.106992679 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146258203 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19767506 seconds)
  done (took 2.908456748 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206341504 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141968817 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295341147 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367191258 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161652531 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185886592 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264981427 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187713222 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200785803 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132464136 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240559702 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151686603 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174345221 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170597111 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161855989 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160605212 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191717952 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186553008 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171879633 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196076662 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179652224 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187554467 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176440339 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17391618 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132557714 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184261738 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115970694 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123094489 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192113356 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161250656 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193763266 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167402934 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137215682 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216744363 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257395197 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170396878 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285496362 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155167907 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177781959 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.203846268 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25411347 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134059078 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212232025 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177978145 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125539887 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200550108 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149422471 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.196719442 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.126293433 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137477791 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204064614 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196064406 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.1721371 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159905246 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310311768 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162573008 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164876208 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171143335 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207679717 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183217527 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189594865 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117675639 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20705871 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205357396 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17408478 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163437635 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160888099 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147376001 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162673886 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21690884 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201194895 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154798134 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.2225737 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125470796 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18135801 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166857192 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201373281 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169241608 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180587756 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.114711778 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172489188 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131193164 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147105188 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195338083 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117198272 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222451508 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126456462 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341859246 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212889887 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150112169 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183203425 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179477462 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154671387 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166112448 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110391349 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140863384 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186335276 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152397936 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155815122 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151540279 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160236339 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124631313 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14478243 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.145522565 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152513981 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159913051 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160246196 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180402251 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126738991 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186904015 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144543993 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.173393528 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164818663 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206503227 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125880912 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12565074 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213671751 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178844592 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.128773244 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19833759 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178259368 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.173257125 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132054301 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187228004 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184442831 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16570528 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182254401 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159937351 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13023749 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.17283065 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155841474 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182759251 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150307287 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121840722 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.173875616 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220278455 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.122004403 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131361603 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191471072 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125969553 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149092717 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134093363 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156642437 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138362257 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.138415113 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15648484 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149154146 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18181342 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150225358 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179618727 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129428898 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202707931 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127708423 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.182021997 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142132139 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.112881203 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19668739 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207029242 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123688395 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225897355 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157449883 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215064365 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182713238 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126066625 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202335704 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123519336 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.114472595 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186030249 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148933839 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18474806 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200061473 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1855545 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18793837 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.171596594 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144440456 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190223604 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.171132904 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176872828 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138925128 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181316639 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160258871 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.143053467 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.1194854 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.120923015 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159475187 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126016892 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129980589 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200252583 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18637835 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181250478 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178868448 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13365939 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206802338 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.120918985 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184802692 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.158289914 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163955542 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.176265569 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20381696 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188001987 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136339416 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183048419 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.117573411 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121059095 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.154905 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161429355 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157256081 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131392829 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135488838 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205579452 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196150009 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142596485 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221390726 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188717795 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187457989 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.142241206 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161613649 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192662326 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15436675 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180633359 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158157439 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153252499 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203532313 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13426156 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212834878 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179076216 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159016757 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214262746 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150543977 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152162637 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14458068 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182042335 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132796256 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158720649 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169801459 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124837102 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175963461 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131887536 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11808255 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207286016 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165360987 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165659491 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.184054151 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164367488 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149562151 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136763327 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182823705 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140297922 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113072224 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193686373 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208560962 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14072511 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179312023 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171409802 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15136867 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.31696161 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213479147 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17249022 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161550378 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136221304 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186257431 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157317658 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185999338 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17479324 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16631394 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17291075 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183911829 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137490407 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153317357 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144493989 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173558974 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.14809861 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.126468625 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179591072 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137412741 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209397833 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133179931 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1842588 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153380662 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.171753651 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14674499 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163669637 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192176651 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182305454 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168790865 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.180580353 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.161036092 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216399898 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117975628 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153256358 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.126406947 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205904754 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126255627 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183587772 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.177287893 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214512887 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187597236 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155778275 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163571165 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122324933 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180210352 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145940563 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216138886 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130388619 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160307515 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187848575 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.164055745 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12782484 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186188963 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279682191 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167850298 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168304623 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.147567233 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271044673 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152174022 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128636706 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187048251 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167468527 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.156882322 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179247094 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15751273 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165489835 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1597821 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162093416 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20887246 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189307342 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192313329 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196330087 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140284007 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154071343 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186104012 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201628498 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138527824 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138972951 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18631478 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205196307 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178435204 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.154352124 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15540823 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151515695 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18079328 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194597693 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132434529 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217240685 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123891521 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185934215 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13388777 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119358008 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182771578 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.202085769 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127108345 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202280885 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155866938 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126896165 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151408814 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142838833 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181209792 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134039777 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.152107462 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180553281 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.153330514 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159898468 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202289284 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128058177 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151900584 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172871507 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125285308 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166281119 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139231414 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126809992 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.193567754 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179386014 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.155475116 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175644451 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188724735 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1616032 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180903813 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137474556 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.689492369 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.122116627 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208430467 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144033852 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214018943 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144917303 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187348949 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153371841 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174895156 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159683714 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172253955 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233976353 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187559631 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15236115 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155494462 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137368502 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134621645 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.156571178 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148823667 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185037319 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135181667 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.158190181 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153363717 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136552285 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.170139674 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13450912 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210467012 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144225253 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209572704 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207988617 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133032654 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186558204 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169436906 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153778111 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.161181587 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197573267 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137248808 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171004133 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129811403 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.130519568 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208026941 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119017124 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182422608 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157695331 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181863053 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154754751 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.128854431 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18692658 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135377548 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18408726 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121631739 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177618965 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155841586 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156813433 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123767404 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154094862 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183719752 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150392654 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150953982 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167112844 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206110448 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.120609378 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127823224 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304243866 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154012237 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212573622 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.142584648 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161339913 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140260619 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178635537 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149160142 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185958902 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.124508194 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124759096 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.153626453 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.169195831 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.178112331 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155158662 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20247489 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154971223 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218972016 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.129931883 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.31519394 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134877966 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183167316 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.124958524 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.123165188 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166585244 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127867685 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163586363 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184958659 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20352336 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149662308 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.170746415 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130149496 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.149729018 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127819593 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159236462 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177170961 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154455831 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168944328 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111928837 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166187178 seconds)
  done (took 82.386501463 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167078999 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151012128 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167457203 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221528202 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196811734 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288873712 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229455206 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253573212 seconds)
  done (took 2.782475328 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119385659 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157161775 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140138047 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142853603 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.115682156 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.449753748 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.156875598 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119556684 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165237437 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.158450209 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139864921 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.614678711 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.112833314 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144498443 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128068172 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.116844508 seconds)
  done (took 4.08464528 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.445538278 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.589842959 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.192462368 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.278516377 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.232227225 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.179266813 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.802348786 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.190537392 seconds)
  done (took 13.023085221 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.146895231 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133832288 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.82836626 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.2597499 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150179434 seconds)
  done (took 2.636706368 seconds)
done (took 128.155931527 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.119776746 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.119471611 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.117904221 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151829196 seconds)
  done (took 1.612978548 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.184052952 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09595458 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.097472879 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.123036789 seconds)
  done (took 1.613896153 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.439971042 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094449371 seconds)
  done (took 1.674010023 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147797265 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.14604743 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163348296 seconds)
  done (took 1.585534869 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.14086608 seconds)
  done (took 1.25379056 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128745608 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.120170686 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.23904349 seconds)
  done (took 1.608061317 seconds)
done (took 10.469431065 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119639756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419534802 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431377697 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133497064 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710829926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425511701 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.065223409 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174113883 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174611863 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1363831 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131305951 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.68698283 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.045956263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.361731361 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.000874759 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.385724534 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69312758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109626547 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144397355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111280515 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.040668266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135706458 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111148101 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110018121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716045698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.455287208 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108469808 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.400468229 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10936451 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112618137 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425863057 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111034634 seconds)
  done (took 17.408523003 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118797089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173353486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144881379 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110786598 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111940186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138263296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122324124 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121670951 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20597623 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108725648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1583348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109061382 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113896403 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136533613 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135121639 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108419968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.13957116 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112744583 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116816914 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137858074 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132198997 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107531878 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13740733 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112584049 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108739092 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130701006 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138637304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120538137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108978159 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142240294 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114052081 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109753398 seconds)
  done (took 5.213759541 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158186401 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179441113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146681545 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145848031 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185987055 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111737775 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221115151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147420278 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202863366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110303345 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131016707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136874125 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15005733 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109382713 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163363212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109805786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112532807 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140501063 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118306375 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11106183 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159685068 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109488677 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111216898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140204048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11058393 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133231519 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137217529 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122845585 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108942623 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142602757 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116008217 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110131164 seconds)
  done (took 5.523808805 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125783968 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126406705 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133042198 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163315799 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119551662 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122951827 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15316476 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120293128 seconds)
  done (took 2.195728648 seconds)
done (took 31.464156844 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132115608 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126383454 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126340672 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151161398 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.191730749 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143348345 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124374404 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.112102602 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.149576327 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129393026 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108536967 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.112817659 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156684306 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.116355344 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.223582787 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.121961576 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.226929955 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.194052575 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.144177497 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.121875355 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114327993 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.2298443 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118080887 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.113542035 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.232727111 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112744022 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.215163201 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.116494377 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.147245631 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112995194 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.224077978 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.119797307 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113162767 seconds)
  done (took 6.001196834 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.209410379 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.117158797 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149460375 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118522438 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.115906963 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146806969 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.211888206 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146951878 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.11848158 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117109515 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117566627 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.221926406 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121894402 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.140660792 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.118502763 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114843392 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.243408869 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.116773821 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109002783 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.126138314 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.112235886 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117961982 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.2549266 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.109935772 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117631239 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.148233049 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.119562842 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121388215 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.145076383 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.117670858 seconds)
  done (took 5.385704103 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126709978 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132457323 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134777065 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214889575 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146053484 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160739266 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140386476 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131617168 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172381826 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113021814 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126768191 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18032204 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129575003 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121205138 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145984552 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131079616 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13410864 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141424865 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120471495 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129448477 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160847385 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130286535 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138865152 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149459278 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111559342 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119155626 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15165893 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128074743 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120364261 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125113918 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145716183 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115520289 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113203392 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176914396 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113900721 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153572031 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138795196 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124479881 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.125744401 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.172598999 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115348992 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114317033 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.170672158 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166670035 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.142029053 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126042563 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124442844 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125499048 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.141465512 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130797299 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155775605 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.142570788 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134060921 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112558618 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.141109964 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120164153 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111948922 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.14494521 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127313413 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114734378 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.165464194 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121018599 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122490404 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.112261936 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.153693585 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110820261 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.109793711 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.146788583 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139374923 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118247905 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180098929 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112285373 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123849865 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.152998865 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123597039 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12341871 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.139678395 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124451199 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122014276 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.117362444 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.154914278 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115041666 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116269134 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.158972171 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134149024 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125777461 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.154878649 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125589838 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.114983931 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.14271889 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130831739 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113266809 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.145179487 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126483933 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112469478 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115480697 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155455784 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124597925 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110678657 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.168495586 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116543156 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111478075 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.167816144 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11890647 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117639148 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.1510133 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.156971589 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.111308052 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.152876891 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128181577 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111683875 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.147825485 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118306787 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112271682 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129738983 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.158370095 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120429157 seconds)
  done (took 16.854863095 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.322501285 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.312424809 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.181238106 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.311335418 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.15672047 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.210114576 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.308727837 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.308997484 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112553815 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181498847 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164543996 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.276441841 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144679435 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140269876 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.311507178 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.365417051 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173701682 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149800065 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179932996 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127226462 seconds)
  done (took 5.59424431 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133972235 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149246226 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167248064 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142106959 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120038309 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157485682 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112676723 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131746826 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.150708416 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123391803 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114940982 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.15862234 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122164023 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.126221908 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158362367 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.153688595 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121192873 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147026743 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136793011 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117334149 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.136619647 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141714855 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121307786 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16571024 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.12906622 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124342453 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140340958 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119998215 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116367418 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.118654535 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.147625753 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132704556 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.119265401 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.139117893 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125638064 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.12864529 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.145107435 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117017206 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117857815 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116520405 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.158737868 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123649565 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121788345 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.132764089 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131988116 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115986697 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123532462 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.156512168 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.112129137 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129123192 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.156406676 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124408881 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119318556 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.160868606 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.118784065 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129702537 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.153327095 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125290033 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118069588 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.11060648 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.141159243 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118175483 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.11813372 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.153417409 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125833978 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133385439 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.159794553 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113862955 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116573633 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.147206678 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117986021 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.126928571 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165786599 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.119385098 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.116727545 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153887803 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119498265 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.099548688 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121220702 seconds)
  done (took 11.603358144 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141823858 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.118863959 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131826518 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.178832173 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.123342729 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.11814599 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.150748143 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13430164 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123561876 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.158198764 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.125106888 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125782098 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166372954 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122943352 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.117583309 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.15964769 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123601742 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152327345 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.162483734 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141728123 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123375827 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.15077922 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127199126 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12507735 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17367805 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126184762 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140671808 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.154249556 seconds)
  done (took 5.064815367 seconds)
done (took 51.635530208 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.310491266 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.476274122 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.25455493 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.251953927 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.288868896 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.266571382 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.275344431 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.253024222 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.855903981 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.230917342 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.253891073 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.251459061 seconds)
done (took 29.125668064 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.33490504 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.769114991 seconds)
    (2/2) benchmarking "String"...
    done (took 1.786035404 seconds)
  done (took 4.706374065 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.247948517 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.249034034 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.4739645 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.246379538 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.259665553 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.248213747 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.251174898 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.265183385 seconds)
  done (took 16.144758794 seconds)
done (took 26.584523369 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.321291572 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.438283286 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.490791625 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.249553241 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.252989953 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.277718821 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.249687911 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.279464579 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.252724664 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.268165259 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.665258464 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.517923932 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.260499285 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.632641759 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.249551188 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.250117271 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.27119846 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.489114238 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.250374893 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.280339944 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.231937986 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.239238878 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.264751178 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.252248423 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.258329655 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.255431571 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.30022136 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.250696841 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.446271557 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.292201509 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.284733258 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.251871019 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.295070961 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.256556267 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.264252265 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.262958295 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.441644597 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.261824641 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.234526978 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.253813199 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.461722438 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.259103896 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.251713968 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.255332739 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.252156125 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.316014189 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.235642066 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.368105719 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.274658165 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.253790547 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.272183615 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.624431434 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.260412235 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.267848837 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.253338424 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.477290639 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.271438934 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.31670362 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.277771981 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.266394362 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.252056693 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.253218353 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.285437301 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.264488099 seconds)
  done (took 146.970527145 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.252679707 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.257236778 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.257606561 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.301908338 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.257753561 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.257994117 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.253189823 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.253050836 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.258910543 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.28114789 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.257717534 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.25384815 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.257139819 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.201655025 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.26061085 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.267670361 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.257876671 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.257852866 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.27608026 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.254958029 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.258891943 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.258621328 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.259293784 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.259071495 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.301383269 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.33205628 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.263731812 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.258904355 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.266162725 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.255476569 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.302998698 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.260019544 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.901996637 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.11810049 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.266175785 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.285068488 seconds)
  done (took 82.179844095 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.254692403 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.255806306 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.254907976 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.288624837 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.25515645 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.842489521 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.840439321 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.970020299 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.898945433 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.683654197 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.519436523 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.254990687 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.349638632 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.269298839 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.257319191 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.272565911 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.282367084 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.259961539 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.257696669 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.841695063 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.269263528 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.410508722 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.436689121 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.273751015 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289918776 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.652823937 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.254990226 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290043235 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.591898471 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.306509721 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.256979412 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.652989686 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.457957811 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.371082925 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.261100987 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290814151 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.257165554 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.540782675 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.257440998 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.257096928 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.260626991 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947799497 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.261778393 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.845725645 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257647096 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.22452536 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.258976038 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.256765748 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.258630669 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.454731542 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.969913313 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.261955689 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.258574183 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.259978041 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.258812652 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.258196269 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.293360676 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.575739174 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.357196743 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.259013055 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.263776339 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293639732 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.256938681 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.362436257 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.258715441 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.36211418 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.311236957 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.492074938 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.845694539 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.259045419 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.356967533 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.379724587 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.259569127 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.260255153 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.259191781 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.258770724 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.373427213 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.260201073 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.259462496 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.683987309 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.258217918 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.440154823 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.277861304 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.696104946 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.360498375 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.259697966 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.660060015 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.266292355 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.258858938 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.008678403 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.358062592 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.260280727 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.260507252 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.26008615 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.686366449 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.848273282 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.530538634 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.265160246 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.937583441 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.264659036 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.70300925 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.840199987 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.931940724 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.262620585 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.376170217 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.440102563 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.27941364 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.261410572 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.701973264 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.266278784 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.31833538 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.266002045 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.261273699 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.66487745 seconds)
  done (took 374.21975627 seconds)
done (took 604.521405761 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.1553245 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.098035698 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.246662417 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.109221723 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.090671383 seconds)
  done (took 11.860610715 seconds)
done (took 13.021473385 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.458432814 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.461006028 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.326198221 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461040576 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.297346499 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.477914354 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.446131867 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.285398351 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.380129416 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.350608683 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.37730772 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.318222744 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.298100599 seconds)
  done (took 19.102263502 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.544829879 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.270144057 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.32997616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537576695 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.306504006 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.552700747 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.575957508 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.273265665 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.410120464 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.288555477 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.282220494 seconds)
  done (took 18.536124699 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.542033079 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.271438287 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.328760023 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.538259564 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.306996168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.556100302 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.584181787 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.2734344 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413671668 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.286201452 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.283408927 seconds)
  done (took 18.548001249 seconds)
done (took 57.349286059 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.194094989 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 16.532456123 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.298650744 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.359525619 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.279688189 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.294351421 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.362170264 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.282253723 seconds)
  done (took 27.766952443 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.278190653 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.276831763 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.276379563 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.278469383 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.276646208 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.277776017 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.276448391 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.278268822 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.279129769 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.279352967 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.277668465 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.27619804 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.278150407 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.279047209 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.279009348 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.278466125 seconds)
  done (took 21.61296607 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.279829319 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.277632551 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.278101518 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.276601331 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.277212752 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.278208836 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.279770786 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.27883061 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.277844642 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.27905743 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.278666407 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.277160373 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.277703822 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.27953992 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.278870266 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.278685307 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.279484182 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.279381521 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.283087053 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.277787161 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.279560954 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.27858671 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.279133762 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.278903425 seconds)
  done (took 31.856311693 seconds)
done (took 82.400433915 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.267154999 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.27113829 seconds)
  done (took 5.705362823 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.340873573 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.338256393 seconds)
  done (took 3.84723019 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.279158774 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.279078804 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.280999094 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.281364962 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.28027803 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.278989569 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.280087999 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.279685972 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.279668974 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.280693682 seconds)
  done (took 13.967789925 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.280824911 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.280823719 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.279869394 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.282906737 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.280058762 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.280804996 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.280224688 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.280576073 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.280773302 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.281069649 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.284573271 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.279777598 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.282300469 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.280272285 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.281876244 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.281359629 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.280675695 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.279906568 seconds)
  done (took 24.226548886 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.294848022 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.301646297 seconds)
  done (took 3.764978676 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.421574391 seconds)
    (2/7) benchmarking "second"...
    done (took 1.32221717 seconds)
    (3/7) benchmarking "month"...
    done (took 1.397359742 seconds)
    (4/7) benchmarking "year"...
    done (took 1.387464527 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.323104841 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.30131779 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.32291513 seconds)
  done (took 10.644125751 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.282057098 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.490018216 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.62202612 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.848908613 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.283455963 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.285807519 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.085501246 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.284567426 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.286903834 seconds)
  done (took 14.638513372 seconds)
done (took 77.961575838 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.271498105 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.355797677 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.300137784 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.292898061 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.576005711 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.302469956 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.276179913 seconds)
done (took 16.545891989 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.260425424 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.25775095 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.263591086 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.28808409 seconds)
  done (took 10.240446959 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.274455158 seconds)
    (2/2) benchmarking "read"...
    done (took 1.561598556 seconds)
  done (took 5.006959754 seconds)
done (took 16.418697799 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284291245 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.284600241 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.285272949 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.281744429 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.284863623 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.284300312 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.282768679 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.283223862 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.285816221 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.285309948 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.286336112 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.285704224 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.284354441 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286271134 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285007784 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284011725 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285851339 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.284992833 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28431416 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283690204 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285681071 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.285266644 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.286365578 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.287114605 seconds)
  done (took 32.008418803 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.28673934 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.285328839 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.287978475 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.287913413 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.286847964 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.286023206 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.285614893 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.284156838 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.286142178 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.286549335 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284579891 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.28582781 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.28506089 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.285705089 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28870793 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.285114645 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.288482417 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285419305 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287142922 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.28663863 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.288398683 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285373553 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.285891758 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287455024 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.286103301 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28583394 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.288258688 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.287193272 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286844474 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.286939334 seconds)
  done (took 39.767798217 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.293460335 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.295015447 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.290954202 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.289822018 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.289637566 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.291875137 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.289696819 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.29003141 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.289106836 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.290253801 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.290044056 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.289998497 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.290836356 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.292144868 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.28895766 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.290887122 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.292559634 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.290310944 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.290484885 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.29060123 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.292308684 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.291549682 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.291191648 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.290489215 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.291067121 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.29221364 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.290219614 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.291682316 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.291064457 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.291891018 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.292849907 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.292517949 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.291851801 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.291983416 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.291628307 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.293282976 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.295944389 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.298383474 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.291418747 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.291377135 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.292350298 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.292535776 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.292047856 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.292995122 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.292734293 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.292769656 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.292922476 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.293374288 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.293554977 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.293576849 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.293180648 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.293485722 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.293624476 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.293708304 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.294312361 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.294623602 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.293621372 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.292741396 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.292732584 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.295539801 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.294418253 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.294274662 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.293313942 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.292868994 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.295877831 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.295230289 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.294151448 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.293610922 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.293895001 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.295310207 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.294436305 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.293545553 seconds)
  done (took 94.235423935 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.291839135 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292469259 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.291689665 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.291036067 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291176285 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.293554112 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.290303913 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292373302 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292093112 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.292739811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293898814 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292722032 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292838522 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.293487613 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294092625 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.293097552 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.293668466 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293352528 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.295506588 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295121862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294703714 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.293730735 seconds)
  done (took 29.62433139 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29499576 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295124129 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.293144669 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.293772325 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29606425 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296645072 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.294927502 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.295238588 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294993179 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294118508 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294220809 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295745093 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296830266 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293446353 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292906509 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.29650791 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294667515 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.296197406 seconds)
  done (took 24.488078966 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.292438307 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.295030414 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.295551201 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.295002387 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.294930144 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.2950518 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2955834 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.296693858 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.296625676 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.294823193 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.296350513 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296304883 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.295792077 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294417517 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295666509 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.295067891 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.296200418 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294372073 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295524306 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295596647 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.295642811 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295593199 seconds)
  done (took 29.679813908 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296450496 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296211559 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295869391 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294848279 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.295550301 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296746396 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.29683764 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.295798464 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.299152054 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.297781019 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295415553 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.296816914 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.297339773 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294687187 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.295245123 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294894173 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297812728 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294099729 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295609174 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296204286 seconds)
  done (took 27.10595409 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305903281 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300105533 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.299115988 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298367365 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298698356 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.299253759 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298579418 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.301119966 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299693797 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.299705869 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.298511924 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.300177862 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29981775 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.298594233 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300667372 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29975793 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.299539184 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.299591707 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.300053877 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300255968 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.300543676 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299956581 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299589683 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.300330823 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.302439119 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.300996167 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300502408 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.300707064 seconds)
  done (took 37.58504896 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299202434 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298575524 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.299348988 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.299030179 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.298086073 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.297790335 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.297987573 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.298606584 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.299297953 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2981677 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.299876342 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.300269199 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.299284893 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.299897865 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.300498378 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.300646233 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300787821 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.301527579 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300037634 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299606184 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.302072149 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302011979 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.302619674 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.300219162 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299759959 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.300944602 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299265522 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.30002033 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302077753 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298867696 seconds)
  done (took 40.180373943 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.321053633 seconds)
    (2/2) benchmarking "in"...
    done (took 1.321191211 seconds)
  done (took 3.827202973 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.301815779 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300698383 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.30188812 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.301380418 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.300953649 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.302928307 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.301779178 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300163196 seconds)
  done (took 11.597325961 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.297049832 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.303791904 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.301628547 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.302631439 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.301509269 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.297290179 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.30505174 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.306839155 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.298146717 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.299789929 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.302491255 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.301533916 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.30059192 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299791236 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.300516882 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30165053 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.306355077 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.302839953 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.303157529 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.303233637 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.303626877 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.301714549 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301500739 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.305680503 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.299824858 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.308592148 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.30622604 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.310728712 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298272859 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.304823915 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.301636518 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.305560289 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.306105142 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.304592564 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.303864771 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.304946362 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.308793525 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303406316 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.306221318 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.308164126 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.305427386 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.303982635 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.300545572 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.304158037 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302800443 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.307985916 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.305794862 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.303929738 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.299446685 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.302366658 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.308059071 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.299792738 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.305735557 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304488794 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.304521226 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.310089511 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.311795916 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.302908963 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.307034184 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.310931721 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.316072596 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.313555918 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304900581 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.309854293 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.312349969 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.317205591 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.310343642 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.310235876 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.307209727 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.306419828 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.308800961 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.316864117 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.313461989 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.308976245 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.308103442 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.307493352 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.301836959 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.30901498 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.309651637 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.307848729 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.310665183 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.307376902 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.310688349 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.317777298 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.30363305 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.30949225 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.307779042 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.308695245 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.303703285 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.313551478 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.311816472 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.310101038 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.302343766 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.3036215 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.305504622 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.309415217 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.301197334 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.303444853 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.307189818 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.308182481 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.310520533 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.306222796 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.309143866 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.310925789 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.309034298 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.311072098 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.311315146 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.30306539 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.310761475 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.311333687 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.309862379 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.304605015 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.307845303 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.30917306 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.306675018 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.310059766 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.311401328 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.305450867 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.312345458 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.308786115 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.31369505 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.322197401 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.313131506 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.311020963 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.308514096 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.316631693 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.310091732 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.306934558 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.311871785 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.309494604 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.309312124 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.306938471 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.313768475 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.305401617 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.312179525 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.306800901 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.310579334 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.310866884 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.312226667 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.30694683 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.308272224 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.308640256 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.309026381 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.310776618 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.313185701 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.309097295 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.314853969 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.310278387 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.30958015 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.310321408 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.312358672 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.311368357 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.309388341 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.314007609 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.307126689 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313949459 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.30773868 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.313029233 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.313683264 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.311858289 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.311004926 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.30919314 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.310691449 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.313018421 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.311579886 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.310272477 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.312729789 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.312135362 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.312136189 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.307695329 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.313622033 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.306325815 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.311491827 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.317230751 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.312884719 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.313162909 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.31056301 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.314939078 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313114066 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.314695207 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.311402265 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.313235971 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.315710959 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.31448916 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.318398725 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.312396607 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.31366576 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.30920676 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.309485234 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.314647609 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.31097163 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.318923863 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.320917001 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.320245235 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.310436641 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.317834461 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.308618461 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.317821772 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.312477575 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.316843053 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.314693252 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.315241995 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.309775642 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.315833445 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.310657 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.315767417 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.309750933 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.315308042 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.31751751 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.315318003 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.316296695 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.311401005 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.311570582 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.31524082 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.31655467 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.316072274 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.309901373 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.314469634 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.310603775 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.310579248 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.318493491 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.31561881 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.316620405 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.318124777 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.313167444 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.315016197 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.314265531 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.311109842 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.319244951 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.313665862 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.314280008 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.321038047 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.316707566 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.313415767 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.321194575 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.316558675 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.314543571 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.315774571 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.320405533 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.315272998 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.314810209 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.321077001 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.320220444 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.316319248 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.316694208 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.311668086 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.318596703 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.319437087 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.319106696 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.312013545 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.318787031 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.314336655 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.319442306 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.313434311 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.314618905 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.314708396 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.315899348 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.32217698 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.319197263 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.314092468 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.320233143 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.318040226 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.318601864 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.31501174 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.323231138 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.319773423 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.316472567 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.316198177 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.315201382 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.321877748 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.313625013 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.32021195 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.313886597 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.326434593 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.330150135 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.319501948 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.318835531 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.320715536 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319181115 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.317851633 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.317863682 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.316753829 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.316216966 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.316692624 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.315724929 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.319878611 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.316132444 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.321973884 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31769039 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.319133462 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.322139971 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.321281648 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.314916613 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.320412863 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.320988562 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.321294061 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.314242114 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.320117408 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.317377922 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.319481366 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.317358452 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.317114 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.323688877 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.321661278 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.319144732 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.31752432 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.317369848 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.317972341 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.319958491 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.323357762 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.319667854 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.326552788 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.31960108 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.322960786 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.318400695 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.325559168 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.325997079 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.320236502 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.327380266 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.32009986 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.316477605 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.316765827 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.322900038 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.324251328 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.327136521 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.318043543 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.325221945 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323239682 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.323307784 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.322301874 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.323309095 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.322476578 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.322822069 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326152742 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.32246636 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.321193639 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.320817094 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.325549316 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.324920222 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.323074887 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.316682664 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322634902 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.325997214 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.319974553 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.320136135 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.31894175 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.326877645 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.327995356 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.325208075 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.325567785 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.327670788 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325930899 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.325120425 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.331125358 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.324690164 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.326540383 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.330517607 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.325606424 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.333216351 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.320144394 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.329760622 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.326772228 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.321218512 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.319492701 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.321739184 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.328952064 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.320905093 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.33484849 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.326163726 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.322034909 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.322673966 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.32833505 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.319349959 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.331377154 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.341467798 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.322212205 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.329113065 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.323673684 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.321478472 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.328459625 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.32751506 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.319958312 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.322752245 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.328058385 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.330223776 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.321864419 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.327252092 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.320402255 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.327621055 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.325891356 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.324813661 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.325962177 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.327307662 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.321981897 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.32727011 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.324904533 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.329084745 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.322293567 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.322736495 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.324681633 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.330901454 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.330906427 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.324290035 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.328923125 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.328359237 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.32346084 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.324455848 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.329276767 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.32246566 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.328678082 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.322581298 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.32784218 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.325610326 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.326674703 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.3243356 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.329900413 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.322119554 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.324478025 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.330375621 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.329634156 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.328565337 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.324230254 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.330257501 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.323280472 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.322560125 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.329129859 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.323098392 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.329894501 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.327422176 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.328361799 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.32375715 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.327858702 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.328443801 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.3318882 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.323022409 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.325111827 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.331075189 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.330617698 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.332107553 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.329651213 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.331775708 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.324446467 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.327943095 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.330522318 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.325790076 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.326501844 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.333207288 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.328307209 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.325637561 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.328910627 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.331880044 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.331666041 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.3288301 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.325852506 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.334779662 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.33305664 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.332988129 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.327598991 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.329040403 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.327353894 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.33156137 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.332115591 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.326456689 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334154227 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.332453052 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.332556951 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.329375526 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.328011413 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.327906323 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.334173427 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.332825143 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.329181131 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.330981769 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.327206245 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.332572237 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.332835369 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.33141734 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.326592086 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.327551726 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.328891803 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.3302322 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.330022686 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.330112967 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.329342382 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.328690675 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334599746 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.333671817 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.331871937 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.331856795 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.326510225 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.333776067 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.328963145 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.331420642 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.329318623 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.329467046 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.334391587 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.334923828 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.331602683 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.336075458 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.336145208 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.3325954 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.328562304 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.329760748 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.333024366 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.336355286 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.333687731 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.330173065 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.331199221 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.335518403 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.335807174 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.336502943 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.333333524 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.34212937 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.338356178 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.329013271 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.32997334 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334119968 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.336682636 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.33500792 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.335254301 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.33228946 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.333988777 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.337709961 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.335236317 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.335204107 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.33455689 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.334034539 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.336574886 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.330238509 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.33366926 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.333287388 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.337099879 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.335042238 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.333361772 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.3393577 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.337522689 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.337249542 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.351599408 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.333428141 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.331421998 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.336917637 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.325891923 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.332930042 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.32875474 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.33347096 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.332442033 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.332830802 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.333615895 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.329203652 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.332118604 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.331278951 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.339229411 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.331935664 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.327368123 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.32911894 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.334470422 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.331346599 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.334567045 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.332046352 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.331346344 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.331853118 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.327233506 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.338080916 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.339794385 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.33362012 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.333580734 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.331564365 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.330933494 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.329671874 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.331580506 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.335107061 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.330164716 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.331868187 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.327980709 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.333135018 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.332387249 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.326595331 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.328151775 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.328666306 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.332222857 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.338190489 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.342030183 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.33371995 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.329488843 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.332539416 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.333768788 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.330140538 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.332120472 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.332041023 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.327686714 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.328662801 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.332830568 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.333464745 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.331863251 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.327968273 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.334813221 seconds)
  done (took 787.927997032 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.329513618 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.330009198 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.33108136 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.330809049 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331080845 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329092513 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330433672 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.329727189 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.330278002 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.330519003 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.330546316 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.331193455 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.329871328 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.330371276 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.331072639 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.329981866 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330807956 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.330735355 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.330512843 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329842421 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.330463179 seconds)
  done (took 29.14660791 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.332277404 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.331600394 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.33090905 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.332571197 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.33129579 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.331925452 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.330585683 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332982104 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.333238781 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330487716 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.3322956 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333392981 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.330958147 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.331309068 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331827355 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331586778 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.33165109 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.331254784 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.332433076 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.334446414 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332856093 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.332452722 seconds)
  done (took 30.514643267 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.335517608 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.333027395 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.328706667 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.333506884 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.334327393 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.332504754 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.335021933 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.334808094 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.332882436 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.327497577 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.328726241 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.33057284 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.333922534 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.337426818 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.330136353 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.334636079 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.33489813 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.333834217 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.333837838 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.33378717 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.33614129 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.336502034 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.33254942 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.330939763 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.334431305 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.335710277 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.333138228 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.334034715 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.329632481 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.337371147 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.336365716 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.329835771 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.334073204 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.332022762 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.332052188 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.338354383 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.337249294 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.336571229 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.333850814 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.339808822 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.349670701 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.337473308 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.337867461 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.34042946 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.336199965 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.333048903 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.341180753 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.335481326 seconds)
  done (took 65.274727001 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.336829621 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.33625372 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.333999604 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.336713465 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.337567273 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.337234472 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.336137015 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.336476622 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.335817598 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.335201097 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.336268012 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.336517219 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.335363084 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.336902052 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.337597602 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.336311634 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.337242645 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.336669354 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.336069094 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.337362258 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.336196389 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.337645099 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.338638894 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.336478312 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.338641702 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.336753679 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.33681825 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.337705477 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.337256931 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.336085032 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.33760473 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.338635221 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.339125774 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.337267271 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.337766223 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.340290001 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.339354633 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.337702382 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.338615177 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.337606114 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.338539396 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.339880983 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.339279112 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.338989703 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.337863948 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.338809431 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.337389837 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.338745046 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.338142281 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.340114219 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.340099724 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.33857448 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.34164003 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.338881068 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.339954512 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.342174617 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.339945771 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.338640133 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.339789638 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.338338238 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.341158363 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.340205092 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.339695417 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.340219429 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.339481782 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.337996369 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.338916044 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.342515491 seconds)
  done (took 92.205760096 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340535103 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.341176603 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341830609 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340778203 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.341808312 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.340640468 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.341206825 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.340421566 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.341221202 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.341201753 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.341012855 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.342855534 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.341240688 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.343640629 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.342116004 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.340959282 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.343383244 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342505218 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.341803843 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.343056697 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.342243306 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.343491763 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.342036156 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.342064282 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.342768387 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.342955026 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.341783178 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.342871989 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.342353869 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.342958197 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.34444254 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.342022605 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.344335722 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.343387288 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.343405925 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.344136314 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.346648763 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.343598365 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.343850296 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.342985052 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.341956571 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342470284 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.343748253 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.345152244 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.341962663 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.343806413 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.344230512 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.343511299 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.342774288 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.342243953 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.342982754 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.343812102 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.34332667 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.342795376 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.343666617 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.343562665 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.344326254 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.342849935 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.344009211 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.34348745 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.342854161 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.345974633 seconds)
  done (took 84.472279524 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343043439 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.343825079 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.342177141 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.342272661 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.342153115 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.342682031 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.342927226 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.343202731 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.343912672 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.344483526 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344181333 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342106619 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344187164 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344522853 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.342731642 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342470397 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.344013138 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.341917319 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34229898 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.341596505 seconds)
  done (took 28.079408818 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.343058395 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.342794699 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.342298903 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.342198004 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.343804014 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.343173559 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.342674118 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342859663 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342574813 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343024527 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.344056523 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.344601058 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342090413 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.343272377 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.344840408 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.342741212 seconds)
  done (took 22.708992286 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.342727456 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.343805707 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.345657524 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.344865355 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.3426731 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.342044399 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.343422092 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.343520032 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.342942882 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.34548755 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.345097153 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.345103354 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.344771606 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.344293072 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.343486157 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.345722319 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.343236936 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.343824831 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.345457548 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.344952958 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.34601611 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.343527256 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.344503661 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.344073921 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.34506447 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.344153165 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.343182492 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.344291571 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.344064729 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.345881884 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.345698578 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.343889172 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.344952702 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.345328228 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.346632514 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.345127257 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.345914927 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.345334349 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.346540846 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.347038418 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.345989134 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.343735742 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.34482512 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.34455654 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.3450718 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.345065471 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.345631466 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.344870522 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.345396367 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.344199199 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.345410254 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.346657532 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.345779153 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.346708146 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.345935571 seconds)
  done (took 75.185432338 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.345627766 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.345651717 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.344671926 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.345740354 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.34570868 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.345591689 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.346316556 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.347316497 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.344613902 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.346204295 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.343954087 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.347522755 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34509068 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.346844049 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.344361889 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.346381851 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.344996608 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.345057435 seconds)
  done (took 25.440422348 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.345485095 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.346330015 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.345136482 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.344517318 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.345301195 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.347133199 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.345495336 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.344933496 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345923505 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.346592009 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345565321 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.346616752 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347001857 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.346452186 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.344264317 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345765648 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.348262719 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346305578 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.344493649 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344971186 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.348151828 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.3463312 seconds)
  done (took 30.830855266 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.340416586 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.340360184 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.340947154 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.357092804 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.353860645 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.340631426 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.340101882 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.33948958 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.364110341 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.382974464 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.377684782 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.355722178 seconds)
  done (took 17.453426306 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346930073 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347144711 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.347006972 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348823728 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347681259 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346636157 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348567584 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347360746 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349376983 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348199819 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347522919 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347546192 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348303603 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347634348 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348038184 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348189123 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347600481 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348381308 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347215888 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348867714 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347549126 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350337805 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347242532 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347053549 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349085441 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348105287 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348307564 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349366829 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348353238 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350174524 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350742627 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348930964 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350784861 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347987614 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349748295 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349937717 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347720608 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349924475 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350253151 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34900508 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.350565017 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349909064 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350581763 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348797107 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349836643 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348555832 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349820474 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349380419 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349843178 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351304421 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351162576 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349944758 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351271625 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352438796 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350999525 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351367944 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350207136 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350287617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352470665 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350370505 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351650044 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350952745 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350575154 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351649958 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352944031 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351390465 seconds)
  done (took 90.2794092 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350973993 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352382908 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352289235 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351895365 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350775933 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352629421 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350232039 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351081186 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352373841 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35208824 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352134619 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352421847 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352131145 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352604209 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352160508 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352066492 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351871617 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352787712 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352030554 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353769118 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352302766 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351491143 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352144806 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353212327 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352847157 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35243801 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351593966 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352129442 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352424223 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352662909 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351572323 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352315597 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353085426 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.352896598 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352769299 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352339587 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352492412 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35187651 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352459717 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357456676 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352338154 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353926809 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352248308 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351662898 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354070937 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352432157 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353416743 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352720683 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353294252 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353017403 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35331407 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353207744 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353036919 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352554866 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354261456 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351138553 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352602119 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352817132 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353327873 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356242214 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352604283 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352773464 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358310619 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354024832 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354213886 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353975349 seconds)
  done (took 90.508505446 seconds)
done (took 1841.300580729 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.512902394 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.467877696 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.347487521 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.360284887 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.348902106 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.370440487 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.362537204 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.34819953 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.348511983 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.347973754 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.347537448 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.538930606 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.404038219 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.351614483 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.34850556 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.445804621 seconds)
  done (took 27.478370526 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.377769113 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.356453535 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.467013546 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.353621588 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.37673652 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.544960083 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.410220318 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.353893786 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.52376717 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.371922162 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.352739792 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.375117956 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.352561524 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.351850605 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.372078028 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.541896909 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.599401607 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.352606385 seconds)
  done (took 29.661544077 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.798922333 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.35772254 seconds)
  done (took 5.383725119 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.372856443 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.353036337 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.35369477 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.352126139 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.342710758 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.344729114 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.352877444 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.344252995 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.353889049 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.477006783 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.353993584 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.366623981 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.352299873 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.353212498 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.35542625 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.396076915 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.507122556 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.357450266 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.357254709 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.357501771 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.351023757 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.439916314 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.395871193 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.3550283 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.477495935 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.352248232 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.355544229 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.358231465 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.494386949 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.357849848 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.352676195 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.353096949 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.355916489 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.34583427 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.84277395 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.345371911 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.361710399 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.381808708 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.356400269 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.501536577 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.354808452 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.359246827 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.346173845 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.823356939 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.476653883 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.471799677 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.3474738 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.355597504 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.354613526 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.419242364 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.355702324 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.354237491 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.41397529 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.178584702 seconds)
  done (took 86.380264829 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.366360508 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.3476563 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527825848 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.372143328 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.347690971 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.346236097 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.346418572 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.629041527 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.390168075 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.349842021 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.651919353 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.918880545 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.356083376 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.42265085 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.323627751 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.437371396 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.34832801 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.347642442 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.346969486 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.351789275 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900945212 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.348292756 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.346553774 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.458006221 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.385535885 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.857875387 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.347653129 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.347011937 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.36693227 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.34649193 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.873129361 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.352588931 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.450870217 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.35223098 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.618702896 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.721170311 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.682663622 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.347753154 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.364592711 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.350416875 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.357438769 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.839287733 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.700932341 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.347758658 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.347584844 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845982205 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.34758139 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.348982929 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.355757513 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.602152491 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.348091563 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.347171424 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.346566813 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.346358511 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.347383191 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.381821369 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.348576074 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.854691813 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.346788593 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.358870396 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.370915849 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.347948735 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.355456195 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.348532501 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.365005309 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.698744866 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.530145164 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.356012269 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.696589506 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.85741806 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.347066174 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929827194 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.347789603 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.354711311 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.352285328 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.347880526 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.365039679 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.844188585 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.358334507 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.346732113 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.678073216 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.347127969 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.628062031 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.364534824 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.346511477 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.918375694 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.348715081 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.363428516 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.346445759 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.348992811 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.346119416 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.351758182 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.61815392 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.368308492 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.345947021 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.347880056 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.377439079 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.349307368 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.365577147 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.354429779 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.928137161 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.346746689 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.347720446 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.349109211 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.34864744 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.347964752 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.349576781 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.348996215 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.62034147 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.347367632 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.368676701 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.350156046 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.349363316 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.348709727 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.438067773 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.357891721 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.644542187 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.35169573 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.348771999 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.350634768 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.347972219 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.37697952 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.349787682 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.354139966 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.218038304 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.614809637 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.366607858 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.351447539 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.347390291 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.349793112 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.349036485 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.349932593 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.412299999 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.353066116 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.134899441 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.3743354 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.358504487 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.348837958 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.355791246 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.349515071 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.354742533 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.350159386 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.64515983 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.615461943 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.528731706 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.354257037 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.358475926 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.107271377 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.372961259 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.530441395 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.366678276 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.349236261 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.598871136 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.546950979 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.351650296 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.350128125 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.353142356 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.616437095 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.350907471 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.659260595 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.888837972 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.35056197 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.359465247 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.136365888 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.046492703 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.352674464 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.354421665 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.62571953 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.367384522 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.349483703 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.351563041 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.350306759 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.350973964 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.351259777 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.354941718 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.350567768 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.35065852 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.651877167 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.539790057 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.366073778 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.357698392 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.840944592 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.392329994 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.349626507 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.352292856 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.351868759 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.350120835 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.447049846 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.354133595 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.395640563 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.351650206 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.35169215 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.852866274 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.351342299 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.352236679 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.540064548 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04117658 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.353749162 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.350640198 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.350883405 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.279809962 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.863766417 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.416094417 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.640097903 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.35950609 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.388342162 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.350869269 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.445182141 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.866236437 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.356225717 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.353160767 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.003947979 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.351723721 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.873884767 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.351850956 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.353706291 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931083639 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.353808709 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.35584103 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.351606801 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.352035812 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.675068715 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.353268892 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.35513954 seconds)
  done (took 501.731219868 seconds)
done (took 651.862998388 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.352064187 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.352339515 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.338459946 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.35836692 seconds)
  done (took 10.633636024 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.392994178 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.360750106 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.368689174 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.358275628 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.371344138 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.3595461 seconds)
  done (took 9.445545864 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.353308848 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.359841783 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.359182281 seconds)
  done (took 8.305608689 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.565103865 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.379822951 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.694857406 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.356711113 seconds)
  done (took 9.230387438 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.368506063 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.368632244 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.366943961 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.370443717 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.399210726 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.396702067 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.374919371 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.372383453 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.397036976 seconds)
  done (took 13.648491832 seconds)
done (took 52.495732277 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.44411078 seconds)
    (2/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.389029986 seconds)
    (3/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.337514491 seconds)
    (4/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.015157203 seconds)
    (5/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.336729415 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.421164745 seconds)
    (7/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.414322248 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.385503442 seconds)
    (9/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.38634684 seconds)
    (10/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.337202796 seconds)
    (11/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.341520362 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.359182132 seconds)
    (13/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.468241492 seconds)
    (14/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.337299652 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.463354578 seconds)
    (16/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.362274888 seconds)
    (17/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.338894526 seconds)
    (18/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.432385141 seconds)
    (19/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.336693503 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.484722632 seconds)
    (21/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.396873367 seconds)
    (22/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.505779607 seconds)
    (23/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.567463912 seconds)
    (24/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.455364224 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.428016319 seconds)
    (26/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.634843794 seconds)
    (27/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.41925704 seconds)
    (28/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.43250172 seconds)
    (29/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.572787025 seconds)
    (30/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.058044862 seconds)
    (31/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.567837398 seconds)
    (32/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.338514884 seconds)
    (33/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.574721519 seconds)
    (34/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.239598628 seconds)
    (35/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.33762286 seconds)
    (36/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.436524074 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.434319891 seconds)
    (38/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.341712819 seconds)
    (39/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.471667624 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.46406131 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.420164067 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.456064599 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.50642132 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.338581553 seconds)
    (45/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.161551018 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.499228292 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.350000822 seconds)
    (48/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.394325329 seconds)
    (49/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.343065292 seconds)
    (50/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.353833862 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.507255944 seconds)
    (52/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.341835369 seconds)
    (53/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.429861233 seconds)
    (54/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.338807333 seconds)
    (55/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.378659196 seconds)
    (56/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.390015638 seconds)
    (57/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.430437611 seconds)
    (58/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.425502577 seconds)
    (59/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.126178638 seconds)
    (60/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.340395383 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.618067003 seconds)
    (62/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.472636303 seconds)
    (63/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.338836791 seconds)
    (64/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.425599612 seconds)
    (65/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.340656098 seconds)
    (66/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.342067376 seconds)
    (67/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.359400214 seconds)
    (68/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.372541293 seconds)
    (69/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.339427919 seconds)
    (70/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.490529219 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.178981822 seconds)
    (72/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.497380239 seconds)
    (73/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.361657868 seconds)
    (74/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.206068448 seconds)
    (75/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.165775162 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.460881709 seconds)
    (77/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.339436038 seconds)
    (78/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.061431148 seconds)
    (79/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.605223842 seconds)
    (80/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.536207421 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.341048724 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.543936275 seconds)
    (83/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.341318679 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.470189506 seconds)
    (85/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.16351197 seconds)
    (86/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.207622293 seconds)
    (87/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.457431604 seconds)
    (88/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.470455 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.442719181 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.467473989 seconds)
    (91/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.533728727 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.454117773 seconds)
    (93/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.343471289 seconds)
    (94/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.205331838 seconds)
    (95/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.352614828 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.471992592 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.360972012 seconds)
    (98/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.367639651 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.47428315 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.47882045 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.389732127 seconds)
    (102/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.387686182 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.426848367 seconds)
    (104/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.360293052 seconds)
    (105/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.442826048 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.428140954 seconds)
    (107/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.548295865 seconds)
    (108/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.547054932 seconds)
    (109/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.612829356 seconds)
    (110/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.43880571 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.514801463 seconds)
    (112/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.463899076 seconds)
    (113/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.489495959 seconds)
    (114/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.461974092 seconds)
    (115/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.400575369 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.478628092 seconds)
    (117/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.124902458 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.399211488 seconds)
    (119/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.388955697 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.512412943 seconds)
    (121/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.579297781 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.445296124 seconds)
    (123/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.439778982 seconds)
    (124/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.492859811 seconds)
    (125/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.343384051 seconds)
    (126/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.410174031 seconds)
    (127/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.347916696 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.617126135 seconds)
    (129/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.086996154 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.487171226 seconds)
    (131/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.524062513 seconds)
    (132/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.501385836 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.491620939 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.448326913 seconds)
    (135/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.305047204 seconds)
    (136/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.359717707 seconds)
    (137/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.548844331 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.423415562 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.363539205 seconds)
    (140/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.119770217 seconds)
    (141/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.430487089 seconds)
    (142/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.510032836 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.172162293 seconds)
    (144/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.325326439 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.381269501 seconds)
    (146/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.538678993 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.395855962 seconds)
    (148/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.472426526 seconds)
    (149/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.411420664 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.362249103 seconds)
    (151/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.603732314 seconds)
    (152/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.490626946 seconds)
    (153/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.491675295 seconds)
    (154/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.443040947 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.61724857 seconds)
    (156/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.467808157 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.42507066 seconds)
    (158/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.400944423 seconds)
    (159/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.345924536 seconds)
    (160/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.541683192 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.480826738 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.528111926 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.472403075 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.399360961 seconds)
    (165/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.623376127 seconds)
    (166/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.206318015 seconds)
    (167/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.547183897 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.488074611 seconds)
    (169/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.396376451 seconds)
    (170/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.346390191 seconds)
    (171/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.093964925 seconds)
    (172/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.491118171 seconds)
    (173/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.515507668 seconds)
    (174/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.349918308 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.696581012 seconds)
    (176/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.392365954 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.112111301 seconds)
    (178/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.426811309 seconds)
    (179/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.432212528 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.382165648 seconds)
    (181/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.508591445 seconds)
    (182/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.34872524 seconds)
    (183/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.513288256 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.562671344 seconds)
    (185/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.180098988 seconds)
    (186/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.4083512 seconds)
    (187/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.025015973 seconds)
    (188/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.348296246 seconds)
    (189/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.26293061 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.364006312 seconds)
    (191/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.404816288 seconds)
    (192/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.39762944 seconds)
  done (took 344.997875239 seconds)
done (took 346.234067694 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389857499 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.453067791 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.373328241 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.373804617 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375107811 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.369165567 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.390831607 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.374701796 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.385868168 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.38467817 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.365051759 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.380117313 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.387581102 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.381566442 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.408776544 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.375807313 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.374837526 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.382806149 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.385588116 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.387674252 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376300995 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376824693 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.396036806 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.374852267 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382895331 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382587882 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.381791207 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.373653948 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.380566025 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.384297578 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.37450546 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.381810754 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.38863103 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.384744085 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378045436 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.384600812 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377419152 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.455197715 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.39257638 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.384518859 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.379774062 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.387171462 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.383168853 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.380909443 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.38466795 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.395395441 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384003724 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.390569294 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.37397716 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.351550222 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393191253 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.384933908 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.381434654 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.355174418 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.3710333 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.408387979 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.384068638 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393998695 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.380805082 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378501473 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.410789746 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394000411 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.385170871 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38674019 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.380802439 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.390216306 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.384499537 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.391242148 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.383536112 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37954956 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37987698 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.383727993 seconds)
done (took 108.95366654 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.499544689 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.376375535 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.516555095 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.383465703 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.535837925 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.501547861 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.381471382 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.382987711 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.380702907 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.172092912 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.382045702 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.379951075 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.377962442 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.381143137 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.504591428 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.384785309 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.382533865 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.073383956 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.384072336 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.516494069 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.377005344 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.382751943 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.383609142 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.172591392 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.37765383 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.376080046 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.518680675 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.383823592 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.073710471 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.374105528 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.376549706 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.073576339 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.520209321 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.402302889 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.39435901 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.394044383 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.532160666 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.387005135 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.499510921 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.499119215 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.518591529 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.422456296 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.374802555 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.379723495 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.387104447 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.385861252 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.384709897 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.414664351 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.378629617 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.38599768 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.077632212 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.395821238 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.393716778 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.385751797 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.385364536 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.405978026 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.385012771 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.388165316 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.521150097 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.388328557 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.504911095 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.175426361 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.175803045 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.386709894 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.380281135 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.385789103 seconds)
  done (took 111.41543927 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.446866565 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.45572361 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.487609928 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.380151392 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.430700577 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.487777643 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.381981937 seconds)
  done (took 11.321930435 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.387983496 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.389029984 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.430371665 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.431200548 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.386493899 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.53820795 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.387172881 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.394197988 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.386617538 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.434115512 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.389774602 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.389356524 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.396106661 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.381915527 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.431012506 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.393385125 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.498229861 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.383165531 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.389801025 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.536552435 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38730367 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.396020844 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.441418887 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.394574789 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.391427982 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.389783659 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.15722206 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387698082 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.388093443 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.390587973 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3859538 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.437353109 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.390578124 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.384021673 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.386627113 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.499491733 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.389413394 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.388192771 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.393303133 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.379170456 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.391543507 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.389611414 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.392354572 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.389102268 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.391714046 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.408422978 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.391809269 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.389174934 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.39050818 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.393955943 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.434504937 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.390306792 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.388839773 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.389024351 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.44032697 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.399603091 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.391717391 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.388768222 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.394660392 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.389144801 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.540001399 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.43469535 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.392025109 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.433730542 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.391185022 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.390840273 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.393093619 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.390066537 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.477151725 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.39034226 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.432871814 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.390413643 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.56742871 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.411218298 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.394621918 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.389922358 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.390197269 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391424774 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.383905818 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.392110735 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.391262277 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.389381297 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.393571347 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.391482313 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.390834972 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.545881045 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.495910324 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.392244862 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.40105215 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.394373958 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.392506347 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.442590601 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.393616441 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.392229754 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.440609394 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.504794124 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.449134792 seconds)
  done (took 142.882449908 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.400759697 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.400772276 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.392859572 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.41509767 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.389432894 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.388944795 seconds)
  done (took 9.645139663 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.390831683 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.395093791 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.393751006 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.392997292 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.393738286 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.398809122 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.399414691 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390509525 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.396353621 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.397203073 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.398100672 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.405772732 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.406611834 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.39575056 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.399517869 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.398731258 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.400503488 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.394327854 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.394165338 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398060652 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.385162745 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.39519819 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.395884246 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.390464655 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.400766109 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.397671505 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.409481088 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.398067345 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.396022182 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.394601338 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.397520854 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.399897128 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.3903176 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.392475163 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.402549956 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.390384097 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395291533 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.401675364 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.393899964 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.399093935 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.403904589 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.396185899 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.398016197 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.402296893 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.39211571 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.393599942 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.406514401 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.411613053 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.399888439 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.403765652 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.4047714 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.395725481 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.400754092 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.404348729 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.393912495 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394161171 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.407100838 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.403401706 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.399000907 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.392623855 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.398170786 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.403825944 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.389357767 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.398869279 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.393149735 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.40248552 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.389692798 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.396039637 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394784737 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.390215624 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.390646085 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.383535111 seconds)
  done (took 102.861529541 seconds)
done (took 379.374294682 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.655787359 seconds)
  done (took 3.907048947 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.415359385 seconds)
  done (took 3.668076788 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.700791927 seconds)
  done (took 21.952875409 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.439500954 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.402518303 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.356279177 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.357601257 seconds)
  done (took 10.791608914 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.603594205 seconds)
  done (took 3.8401673 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.359373623 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.360150531 seconds)
  done (took 5.961029897 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.551520287 seconds)
  done (took 3.786979661 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.653672486 seconds)
  done (took 3.89917168 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.383362188 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.371296188 seconds)
  done (took 5.997735829 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.334270663 seconds)
  done (took 3.569419635 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.37551819 seconds)
  done (took 20.610933608 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.366197039 seconds)
  done (took 3.60409614 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.416271102 seconds)
  done (took 3.65198412 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.74298167 seconds)
  done (took 5.978837383 seconds)
done (took 102.471500423 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.352931859 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.357574419 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.355600696 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.354215641 seconds)
  done (took 10.65599786 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.41910594 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.418849375 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.424071685 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.41903658 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.417672683 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.419227193 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.393236638 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.392039812 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.419122339 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.420297226 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.426039547 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.418503081 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419481727 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.392543884 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.41889791 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.425097156 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.419934516 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.425184624 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.394658822 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.420202231 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.368280543 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.420513329 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.419805461 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.368327869 seconds)
  done (took 35.116883238 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.878117835 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.43083926 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.5138898 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.413062147 seconds)
  done (took 7.472923741 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.446472471 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.450297325 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.46946799 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.505259954 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.535502232 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.466821597 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.395819265 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.389343937 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.376020825 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.451840176 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.500976246 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.438833856 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.538032163 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.368470955 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.653772885 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.369677531 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.37083958 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.44998127 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.501771546 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.522635467 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.371971634 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.448870493 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.4544573 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.439588417 seconds)
  done (took 36.154892757 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.375718407 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.387161171 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.367939313 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.381902769 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.367330912 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.368501776 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.369362378 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.373747092 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.366922922 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.368123043 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.368651627 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.381317994 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.369678498 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.367806461 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.375670062 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.370646601 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.370305025 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.375695944 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.376941414 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.368618677 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.368384457 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.376412257 seconds)
  done (took 31.437326484 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.358826067 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.356510475 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.707460517 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.613297368 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.358492951 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.364238653 seconds)
  done (took 13.998491737 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.429984511 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.56127907 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.364128487 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.695484134 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.779138925 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.366268594 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.365886709 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.596801201 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.879744649 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.877177768 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.419549787 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.430172055 seconds)
  done (took 20.003644035 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.359624315 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.364096074 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.375029491 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.378644659 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.415752512 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.368835756 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.372809652 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.358616113 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.422316264 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.422008512 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.368283033 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.418704122 seconds)
  done (took 21.865872574 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454730384 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366091572 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.365031179 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364919321 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366836117 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208485591 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378769696 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.048848954 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.370558703 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641498467 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366816825 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458638339 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.625411745 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369904053 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392261964 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.352971037 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599683667 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833540473 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371642006 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371702978 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402645762 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381194554 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378106452 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584703846 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218387775 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37265339 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.687004568 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371039221 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641255553 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615640644 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61606931 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37554697 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645727164 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00496449 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469415056 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566802678 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370678129 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373498074 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.357703227 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.390108897 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374540513 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375696874 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612074499 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375590792 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371555632 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383271109 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068961229 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.380037004 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.371867456 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373003932 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616917213 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471644507 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.37780365 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373193018 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39655617 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373196679 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.378778187 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499343839 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935453497 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375456984 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382230385 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.380447032 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371032267 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375091678 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950546007 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.381891198 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.380105245 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379231488 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375841451 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374885393 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396827826 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375147781 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.394610972 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375073821 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05863934 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376881917 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377212024 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89669572 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377273875 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.383806875 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60539569 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375531918 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376683726 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.373809325 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376604098 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037983467 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383938825 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.357046897 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4203214 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.059686357 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.572374202 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395932212 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406658993 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599833284 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.351411796 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376508269 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.391613193 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378181643 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397345978 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065877322 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376433455 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.381638572 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634237661 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.587557018 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381206302 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.357886344 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832464702 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377311405 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.404196356 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388187591 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.580386673 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.931962302 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627037114 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380196231 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410423725 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378939518 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093201717 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379358208 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.388459231 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377982871 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641465457 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.131787331 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37835723 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447904648 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385414875 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379239386 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37809251 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382328094 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37972136 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.56932267 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379428069 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.642146786 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.382549786 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37874617 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.378318854 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389876512 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.380874784 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601120232 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380220619 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662236409 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381446469 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379691918 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380714442 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.60164407 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.382659919 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.385133117 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641651589 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392149362 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395472114 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630266922 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412863773 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489095194 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409586247 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.388276623 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640596166 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.386562359 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.386983045 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380779648 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382919302 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380450188 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.388548204 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392791517 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940058833 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357788275 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385874724 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381866213 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.3965639 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44899777 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388016756 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57918041 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.391724574 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38381301 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.387359822 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.381790367 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610397029 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625476731 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.383740993 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458396188 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.835579651 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.93934465 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396073992 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.382835139 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.381476732 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.381591395 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382774703 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382443451 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383829586 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579456574 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633395952 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385621834 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.942820834 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385125949 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390049545 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.389631554 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627468433 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.390485097 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383695296 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.381844518 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404302923 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407771809 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632556841 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520572068 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.398431004 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384840721 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.945654018 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3917458 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384180079 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384375077 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415921933 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385675589 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210197266 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645658233 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400832609 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628651998 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385554292 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.400737537 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.382785748 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396741494 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386572638 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.420483183 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392696565 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.58344997 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390640907 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38868283 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944197323 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103049148 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897294139 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390051399 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.402727954 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392490627 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.082486521 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385129093 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386864647 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613812873 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079265046 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385985777 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845241384 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.393703431 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117520722 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631327919 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619859052 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387353751 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.396635399 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635654635 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600010972 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419770627 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387121238 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395021418 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.364241697 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919710425 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400559015 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467172002 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081868943 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392431601 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389743513 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.456133936 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.38833091 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789560368 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390012143 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388913132 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392717182 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407344211 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221502502 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39265895 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387868771 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968671082 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394324177 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.853088081 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388904869 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.58734185 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638291301 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.629776629 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.400685374 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.393846207 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.641545829 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634049552 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391364993 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393210991 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905351412 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.25659428 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.395857096 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389652999 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107931726 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404614778 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665970958 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.393229252 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.395155036 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38910597 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390821296 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390955925 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.389153239 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397039088 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366681564 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855071334 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.407459348 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395995562 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413760917 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414100808 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645531507 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.405942499 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.952884666 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618887557 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390260573 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422127113 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.395319681 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391348775 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.367742661 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39120292 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391731685 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434108794 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.613445276 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398226239 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.368486933 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409697358 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602060228 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391837744 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397685332 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603916304 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.398281871 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.41115396 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096902791 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4260214 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39276212 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396731688 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389836102 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436009108 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462570944 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590732042 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.641385795 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641881679 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780365693 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396504995 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395004833 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.407495698 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488340706 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405456498 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.400227599 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.168898478 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959253253 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114611795 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.959033632 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642727966 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396221589 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400829237 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394993209 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53006862 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394059801 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671064274 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396061446 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.391914817 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418198814 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39563119 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406250669 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610102231 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670818703 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396721 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398536388 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400294955 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.397192054 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646734506 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.607503285 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860687025 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925035339 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398633915 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397491821 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.099945617 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669080512 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397919547 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397942021 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397026003 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.418304579 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.399121292 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.402526115 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404299551 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532015209 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640856442 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033164951 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.641493434 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.434804627 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.915067196 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407159575 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651214065 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163608994 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595537196 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967852072 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.07965196 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663067325 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467319926 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598092179 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.399900763 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534720891 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.396832726 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398194068 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398183741 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399893774 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.397135677 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642593325 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967329971 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664786146 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.401879937 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.399209804 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429645936 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.598657777 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621557352 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07267434 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622329737 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648316481 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407863352 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400258777 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967810176 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649721883 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401817045 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.404450203 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612092851 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401207486 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425948537 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.916658005 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.398258896 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920989677 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.289525581 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420367713 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408729948 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.078497079 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966312837 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.40618552 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865031451 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401978824 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401481025 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680604047 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.408249012 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40385283 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691347312 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.405548709 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407995528 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607705908 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.965944668 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13921977 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.42271964 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409608216 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.403595813 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403316042 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403266928 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401130785 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411416123 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.807412551 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40169068 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402558523 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415342987 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.404606316 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40360958 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.403114538 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403123287 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.409825168 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.402424341 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.397753112 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405357689 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526444966 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942024019 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41354733 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.080147131 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.726090752 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65802787 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408100473 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.379449771 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.408258406 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404177045 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404408639 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404644966 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405489011 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928621641 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.409465986 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.650633349 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409385303 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.614331293 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614691158 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410151104 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606855538 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40608387 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425339933 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.380734036 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40466773 seconds)
  done (took 983.628913662 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.429192825 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.439119923 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.443530838 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.440860209 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.441362962 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.491217624 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.466561722 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.408673513 seconds)
  done (took 20.833855467 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.40635665 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.407104737 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.405745619 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.409101069 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.400904806 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.867259515 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.403389101 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.408939074 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.421730793 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.411581148 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.408111636 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.071193226 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.427709686 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.401427525 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.382946136 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.411453175 seconds)
  done (took 32.928143331 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.430962043 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.5690115 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.214827679 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.426247034 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.417981155 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.405661686 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.611245095 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.418242821 seconds)
  done (took 26.771446654 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.415777875 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.413973653 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.413801618 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.414923297 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.414903592 seconds)
  done (took 8.348901251 seconds)
done (took 1250.453800065 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.411824261 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.413400448 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.412920761 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.414060284 seconds)
  done (took 6.928640676 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.38353711 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.383804324 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.383867765 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.399720317 seconds)
  done (took 9.827365837 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.071857702 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.024136022 seconds)
  done (took 5.371870027 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.90260106 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.897061281 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.892460211 seconds)
  done (took 6.969864715 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.692174709 seconds)
  done (took 2.969832336 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.344087644 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.402294973 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.078169174 seconds)
  done (took 8.102618828 seconds)
done (took 41.447677576 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.402769858 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.659718549 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.560520931 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.402700436 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.564316947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.559271637 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.20699446 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.409865348 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.414982959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.410559191 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.403508249 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.562653933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.126955202 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.660452494 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.128321056 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.649535022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.562854765 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.416311332 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.403877877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.404065461 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.228043749 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.414846845 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.403632117 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.430286251 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.575771206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.549699088 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.40548109 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.679492163 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412102635 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.405453151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.577716028 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.404815262 seconds)
  done (took 83.676183222 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.404847641 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.403610009 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.408636357 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.405629909 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.405522181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.407262869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.404896913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.404197445 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.404323396 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.429666963 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.408144893 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.405891431 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.4069346 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.403768878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.421592801 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.416924478 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.413728214 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405081786 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.406432278 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.406716569 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.406181613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.41499877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.406307963 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.417455973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.406696396 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.414171013 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.405414595 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.423857433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.407257274 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.40768309 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.432460228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.411788402 seconds)
  done (took 78.407974187 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.420064465 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.411483807 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.409122137 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411186198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.412011666 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.406348763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.40914089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.407237352 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.407244295 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.407523858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417984306 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.407915303 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.410660525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.417803527 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.407599773 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.408218117 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.423311169 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.408352867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.407871578 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415553095 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.410565236 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.409217866 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.406848498 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.408465916 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.407906146 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.411026464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.420034498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.409684565 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.411776922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421290882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.408897081 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.408143018 seconds)
  done (took 78.442222527 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.6457869 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.42493084 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.426859112 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.41921624 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426878319 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.424013221 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.418568489 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.656415845 seconds)
  done (took 15.126321473 seconds)
done (took 256.930546853 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.413947225 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.901662818 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.440270079 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.424048574 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.43437707 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.440816839 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.625681725 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.439721889 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.630782372 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.433240371 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.432194777 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.416988837 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.205573557 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.55951456 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.246972096 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.353696793 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.270773303 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.411894009 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.966635633 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.691018462 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.439723707 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.42553355 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.23645731 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.276983799 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.393442729 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.495272303 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.511108652 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.638625598 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.572032947 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.493361384 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.91339559 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.416998858 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.434039589 seconds)
  done (took 65.270666556 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.417819716 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.42226988 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.426069062 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.425892379 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.423138715 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.426441455 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.41923528 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.426835903 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.426631306 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.426841091 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.42652743 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.424553057 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.425475092 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.423894892 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.424542937 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.404385349 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.418057378 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.424720199 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.418146601 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.404706168 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.424289957 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.427086397 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.427234035 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.424349919 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.429033036 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.428244173 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.425573802 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.425736018 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.424650984 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.424611029 seconds)
  done (took 43.984107623 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.428736872 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.97595832 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.129426305 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.426769454 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.421242906 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.424413041 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.695882028 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.42845433 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.424539427 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.424675947 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.884183546 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.431473386 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452317937 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.133993835 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.423531424 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.429736743 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.428622179 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.422166065 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.986031457 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431367918 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.69350719 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.429209557 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.696424752 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.430303767 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.425859169 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423950989 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.428088483 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.217253314 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.442646434 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.894755567 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.160552492 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.698176818 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.153019745 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.206268644 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.240758748 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.432385063 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.430475052 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.89739659 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.425691824 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.424235946 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.694030658 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.423296617 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.141495394 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.089339487 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.441310942 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.431404124 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.243250335 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.917118577 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.656253302 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43032854 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.18615 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.42766341 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433872992 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.42554935 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.655952572 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.42726988 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.424279428 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.250676536 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444893107 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.696746376 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.43390227 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.425279096 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.990926096 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.424561707 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.984629378 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.427957547 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.433916676 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.426604782 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.147191643 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.428618944 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.102000354 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.441618281 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.434614204 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.888189773 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.983102657 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.315893129 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.427479046 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.989520638 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.182141854 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.713664919 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.432097876 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.216191937 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.714967755 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.429945677 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.437255714 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.435958745 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.433500313 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.501161581 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.697269466 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.037559931 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.103656562 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.265132375 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.716703162 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.434728165 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.428313343 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.253492625 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.452181928 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.436235389 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.137024798 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.105194316 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.443297126 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.436397221 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.09387595 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.446400401 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.70111692 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.432811694 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.183417812 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.429026296 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.501187684 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.435413571 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.432927823 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.431182777 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.700524779 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.432137723 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.437509011 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.100093966 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.921612313 seconds)
  done (took 197.916047349 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.43712977 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.423987485 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.424481106 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.438004255 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.423986536 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.430901626 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.423588061 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.424406675 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.428123709 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.423966273 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.422978595 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.432569582 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.4305169 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.425163106 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.425759453 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.424141239 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.424227919 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.442419152 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.428667634 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.423629818 seconds)
  done (took 45.853582877 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.437446011 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.960948716 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.936475937 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.439102741 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.436230462 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.431074806 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.48377043 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.436313554 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.435145591 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.715059287 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.596529046 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.44067777 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436465473 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.4351159 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.93727747 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.416181071 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.714561343 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.962649261 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.440409761 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.961652281 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.415337442 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.441022512 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.429478683 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.963549791 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.722438325 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.703105166 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.487168797 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.963665433 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.437301465 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.435799287 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.962952527 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.440879889 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.433192118 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.954202488 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.440533688 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.453269695 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.436834195 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.485503213 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.488784706 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.718090103 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.972204872 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.710354494 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.450916836 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.608548661 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.440415062 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.415720547 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.97304361 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.44185426 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.417317595 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.440307324 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.44647472 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.949817177 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.434645003 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.949527291 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.438564163 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.442588072 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.967383933 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.949086163 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.943400184 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.597209724 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.434329548 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.706851732 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.438341313 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.975144939 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.442626446 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.443142407 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.441805882 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.599126517 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.969609959 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.707117437 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.721350048 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.720438822 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.446006424 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.495485765 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.441148194 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.722050666 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.494557054 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.847383048 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.723268899 seconds)
  done (took 128.924269951 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.691811346 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.545866006 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.793261912 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.017063214 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.923205288 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.568799518 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.542187374 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.669833929 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.435434232 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.52039008 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.051181994 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.534581007 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.165014552 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.520894541 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.541655373 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.561234423 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.815283791 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.431651329 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.080228059 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.026290525 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.435667651 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.541360739 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.955153047 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.624416311 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.44115855 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.008148638 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.367273943 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.94823514 seconds)
  done (took 54.056861641 seconds)
done (took 537.289234364 seconds)
SAVING RESULT...
DONE!
