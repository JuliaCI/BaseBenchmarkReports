cset: moving following pidspec: 8771
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.641052135 seconds)
loading group "string"... done (took 0.541693626 seconds)
loading group "linalg"... done (took 9.154151144 seconds)
loading group "parallel"... done (took 0.174511477 seconds)
loading group "find"... done (took 1.41386998 seconds)
loading group "tuple"... done (took 2.243805959 seconds)
loading group "dates"... done (took 1.475147833 seconds)
loading group "micro"... done (took 0.2065258 seconds)
loading group "io"... done (took 0.598560452 seconds)
loading group "scalar"... done (took 46.641898979 seconds)
loading group "sparse"... done (took 14.315573663 seconds)
loading group "broadcast"... done (took 1.177259468 seconds)
loading group "union"... done (took 11.017374702 seconds)
loading group "simd"... done (took 2.871202939 seconds)
loading group "random"... done (took 10.679563947 seconds)
loading group "problem"... done (took 2.316589041 seconds)
loading group "array"... done (took 25.674198297 seconds)
loading group "misc"... done (took 1.162721107 seconds)
loading group "sort"... done (took 3.986574557 seconds)
loading group "collection"... done (took 20.263151061 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.671746667 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143819369 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.224599889 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.35709723 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.225683849 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145112587 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156699258 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.270356255 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.213442247 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.219195892 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144032385 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.545845814 seconds)
done (took 6.014671174 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.245558844 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.248905538 seconds)
    (2/2) benchmarking "String"...
    done (took 0.170256277 seconds)
  done (took 1.054491899 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.068304222 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169726036 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089304746 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.105316573 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.105108964 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.087963238 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.104330239 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.103716605 seconds)
  done (took 1.403982564 seconds)
done (took 3.416712206 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.51709599 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.862677255 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.564176407 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.157111649 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.310179363 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.318115879 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.325148633 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.215354514 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.08479899 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.101257917 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169714846 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.425143821 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.434973954 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.003809299 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.102254413 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093067783 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.124817354 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.789594333 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.072852454 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.128987859 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.558066183 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.188564015 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.10768489 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.111576338 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193142786 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124890282 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.169203385 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.083987898 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671713637 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.122747309 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.196518408 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.074313678 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.170155051 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.234709317 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.213910245 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.085808672 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673555903 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.193161253 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.093998341 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.093749231 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.698891737 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.1245027 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.158688592 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.097395853 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085429145 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180762535 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112569618 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.086993772 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093922984 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.094285987 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16147284 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.47702108 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.085657644 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.151680357 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.099753126 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.719607111 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09495708 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276918727 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.130634568 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099076204 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.069610518 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.097977639 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.151661727 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.087892868 seconds)
  done (took 20.275765509 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150601982 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161286994 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070748622 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.152220767 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136030854 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073702782 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09545522 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069635927 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121520372 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.233573422 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133386752 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.16032223 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083906901 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079951813 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.137767764 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243229198 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.098756788 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.114770905 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094944485 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085423662 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136460871 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.105323038 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088349742 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105638399 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.162351956 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196373813 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100841951 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115728409 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092806106 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095009966 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.135913221 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155768015 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068162755 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094174755 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.180444714 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113191581 seconds)
  done (took 5.103486875 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.215329809 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116954785 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.210103715 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.185937434 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.123446704 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181728965 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136928999 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.287254183 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.31010466 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.171634686 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.127500055 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121212278 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088463352 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08919942 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07983446 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091183545 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.532712917 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.178499893 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.143605385 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.14245819 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098837337 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.095177302 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.722315571 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094710161 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.092181783 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08000765 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08732097 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.196355143 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095659814 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.134252042 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.094761553 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082564177 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125624184 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196644128 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10799804 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134828834 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093136865 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.075308078 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.210446657 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106740055 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086951311 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105502757 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126787279 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125179008 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09215397 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085859652 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.232578072 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.076707633 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118356042 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.065292551 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.20369944 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.110704617 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.093621633 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.148466145 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.305873764 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091901662 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100186284 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.074329529 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091662609 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.288512484 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.108292677 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.090205929 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071892951 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094169591 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.087186475 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.772442529 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105928839 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.94849608 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077399971 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158032835 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098434156 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097521156 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077803347 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095249718 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.108662996 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072830787 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086955195 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.072313776 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.086759709 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079424897 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114038425 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.077700567 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.089282684 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.138593011 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.103122624 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089791677 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11854936 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095889215 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070927938 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121961425 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.090451135 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072772145 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.094010322 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.16139701 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099508653 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.09800305 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097591438 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.134676436 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087922613 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.194038777 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073886594 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116525968 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.091547094 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105107014 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10577452 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089593244 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07721519 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.086609167 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07314245 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154654416 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073454756 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09199487 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.078866352 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103648255 seconds)
  done (took 23.732657621 seconds)
done (took 49.747822416 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.500584946 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.114888036 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096017497 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.114740947 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.113534586 seconds)
  done (took 1.658002345 seconds)
done (took 2.348175459 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.386395288 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200410024 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.111970205 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193546873 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079487651 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.218313142 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186910636 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.105450198 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216129257 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096729459 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196310673 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096039522 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097184017 seconds)
  done (took 2.902115105 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091480487 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120060492 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092039634 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107208642 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073158149 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105921596 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088540948 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121639476 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087961236 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099652446 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071635003 seconds)
  done (took 1.747067739 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087719189 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114463509 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079222917 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10303122 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073108433 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103008134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0871097 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117937613 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087087611 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100096523 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071458447 seconds)
  done (took 1.716520704 seconds)
done (took 7.048366132 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.126458101 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.922873312 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.144050139 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.193328131 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.368297359 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.245723415 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.606460978 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.178201456 seconds)
  done (took 12.661232397 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.169851586 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076337521 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093986921 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078223069 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096793228 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.079233854 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094687459 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07849082 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092943455 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.078545089 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.092664765 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078186114 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093484062 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.078303774 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093192078 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079564842 seconds)
  done (took 2.211092172 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116303339 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115329243 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102323258 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.086749746 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.10008942 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100321853 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085540596 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100779049 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.080859183 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098413043 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.087513271 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102255308 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099286882 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082516482 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101590156 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.088285085 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09723809 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084956538 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.103094796 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.085200687 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10355407 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100139403 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08652232 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103718215 seconds)
  done (took 3.113432503 seconds)
done (took 18.678400489 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171280724 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077604496 seconds)
  done (took 0.945860183 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.142850834 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.144393338 seconds)
  done (took 0.990842813 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.106631563 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092702195 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139179686 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112331238 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078494196 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.092571717 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115711916 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09396694 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077035046 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093126627 seconds)
  done (took 1.705617619 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082357725 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097463811 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089450553 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.142903406 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106580332 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08240417 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.099199582 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.081496562 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100683299 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094217464 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086786037 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117767624 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100760272 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104144936 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099177391 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08783809 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10730097 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102489051 seconds)
  done (took 2.485888816 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077238942 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078826829 seconds)
  done (took 0.860495345 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083728199 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094754402 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083950485 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098952176 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078583925 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094964679 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078307413 seconds)
  done (took 1.319877912 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.496139913 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.264738954 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.357826979 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.1135631 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136557657 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.362189111 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.136743423 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.111920286 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.111821668 seconds)
  done (took 2.837429264 seconds)
done (took 11.848025738 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.084573772 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220075107 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.628573929 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.100938984 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093901437 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.137420709 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.310377437 seconds)
done (took 2.287270344 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342178064 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.152440588 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08653302 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076917101 seconds)
  done (took 1.367616706 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072258585 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102375532 seconds)
  done (took 0.893743999 seconds)
done (took 2.981362045 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075637956 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.127916909 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074102752 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.093416137 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075019373 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.092640546 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075551664 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092078093 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074942922 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.075353668 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091329114 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.075632688 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091460875 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076267544 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09117027 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074851376 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090666713 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.074988002 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090535574 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076180022 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075024561 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092272891 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.074956754 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091795448 seconds)
  done (took 2.778020941 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099834859 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096574008 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082131552 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099620801 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100254217 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.082995022 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098978236 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079050934 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.09967684 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.079244118 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100515204 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084073163 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094220325 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.099461125 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078659356 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.09977905 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08308197 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096422173 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078784068 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100736257 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.082655716 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0954897 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099562718 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083005901 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100897734 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084282465 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095141043 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.078746915 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099206519 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083427591 seconds)
  done (took 3.455265209 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085346889 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072023513 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093346501 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083922046 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089642899 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077333972 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.090098658 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.073670246 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095027147 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.074827227 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.094732522 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.075558494 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089681838 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.07779709 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094896215 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079985025 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.104004219 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073340307 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089816026 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078540878 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.095079677 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07341016 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.075882429 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.09260009 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.075610965 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089338365 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.076200199 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.091727088 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077076911 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092247979 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078860241 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095273454 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076469377 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102495652 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078870552 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092021326 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081908487 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08896962 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078256001 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.072068913 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089756598 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075960094 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089727343 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083706009 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093048244 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077199267 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090173463 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.079342445 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093763544 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.08117007 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.089406125 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.073189225 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095238425 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079252874 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095226016 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.074168901 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.076754871 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.089661809 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.076548827 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092739047 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072256957 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089609892 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.079595946 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093138651 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094124115 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10305037 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.073047425 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095789755 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077596127 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098103581 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079451534 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106396011 seconds)
  done (took 6.861946866 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09148284 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104771962 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079117253 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095165188 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077781654 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093981002 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084762482 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093573637 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078770966 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102804983 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076738746 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095496834 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078678304 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095146702 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077080235 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095314319 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085753938 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095048244 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.076920175 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095695809 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07820724 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102076089 seconds)
  done (took 2.680812149 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235059245 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101701985 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147536053 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093622179 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11650027 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111225566 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080884154 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.1002527 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097522338 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088519613 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105131322 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081534766 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117467415 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106392638 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087484579 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107229677 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09818159 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0895458 seconds)
  done (took 2.693504103 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095079091 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097682672 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103170946 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09817494 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07970142 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096617732 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104540859 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095193168 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.097007964 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.079072807 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107298013 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080775453 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097652771 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080100339 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097255661 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083073348 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097468213 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079805134 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107225491 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103928546 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088745184 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106547677 seconds)
  done (took 2.806529009 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096162865 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096135847 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113253262 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101324755 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078520234 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096741941 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.102116128 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080723458 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10512043 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.079399062 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097284875 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07789515 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105585702 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079485203 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104439568 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080183559 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096668818 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080136629 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095930731 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078799123 seconds)
  done (took 2.575098498 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17257806 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093665955 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112370494 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123979075 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095422494 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111032696 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107102011 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112516352 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110206919 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110799889 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112609805 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095468302 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123773412 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120249051 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094978731 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125117232 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125680135 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124162968 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095054553 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112322926 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127442095 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094984866 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125075909 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09466207 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111910649 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111256454 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096098616 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121027137 seconds)
  done (took 3.894901427 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077400316 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075931527 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093913534 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076018815 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094408655 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076906381 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094487153 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.076588506 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094230173 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077242621 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.077107505 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.212005083 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07613331 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.094158554 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076538045 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093925526 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077069454 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.093318182 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07672114 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094624418 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.078086696 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076168105 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094828347 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076746354 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093994477 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.076213197 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094299514 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076913489 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094038319 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076566876 seconds)
  done (took 3.380038806 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090323763 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105705786 seconds)
  done (took 0.934578832 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.086949206 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11436997 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07768313 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096111208 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088287932 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095467804 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089456906 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105197185 seconds)
  done (took 1.489896942 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.12723643 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.145602764 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.102562266 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108207397 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.126274514 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.139662281 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141218467 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102196399 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.079664804 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089615735 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.138692917 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073880601 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.099814925 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080102701 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10092759 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088316514 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096308368 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088390618 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103689535 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079916307 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100742325 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09003663 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102344405 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.08886685 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.092083196 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.085859366 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.105094917 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108695985 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079143277 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10353072 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080064719 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096967468 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083045243 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101303774 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079032385 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.145051039 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109860903 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080057076 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.101058924 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083874092 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107151562 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078853206 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.102509618 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080479946 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104057798 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100221333 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084140199 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095743625 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.075475361 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075469481 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096093174 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077748615 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095589016 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084188046 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.101179722 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108999523 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080737361 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.093669154 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077098017 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.095421834 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.082246165 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.096655463 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085339478 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099519872 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079369653 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.101715104 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083118279 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096487998 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080885738 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096993173 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083187768 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116232082 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.102205915 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084725558 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101143773 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079823731 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098116563 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085283048 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099604292 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.085365101 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100939545 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087040903 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098749921 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078452916 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.097651284 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085457543 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098303273 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082137877 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.090150818 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094263498 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098812284 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078942959 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093841101 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082023688 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.095380855 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081956194 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.092877182 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083222649 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095207157 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084292598 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10250345 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076333453 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.102985043 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084701699 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102665695 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.082928824 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.138607428 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097474753 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.077799503 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100216499 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084140455 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.095286718 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082801789 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094403972 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076347527 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.096190434 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084976283 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.101460721 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080851843 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102115828 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081998402 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.103467328 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081228364 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09587386 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077392396 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100543948 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088200235 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.104388692 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098633463 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080154743 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07997105 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.101027128 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100942327 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.080896412 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101638296 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08065715 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095489865 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080440483 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.101410561 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.084819559 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.0961919 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082097578 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103257832 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082146494 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09987629 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.084511668 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.096244484 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.075325651 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102728021 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.078380692 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098130863 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088949706 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.096768955 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081131078 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.097368378 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105442707 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080918305 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102980874 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08313329 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101808761 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084962704 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.090747041 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081625417 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098713119 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.087061395 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.097351897 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083846227 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09588397 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.086307165 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09405665 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083025259 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.092292795 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.077841251 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101829111 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080580375 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081436606 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.097349364 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113255264 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093790497 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10331248 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.083066768 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.100067108 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083325942 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100500024 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083672187 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103785274 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084158819 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.101056035 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.081299424 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102384443 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.075480294 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099881359 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081924325 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102285451 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073418984 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097359894 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073534968 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101757101 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.086759902 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.100871267 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086256591 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099328692 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082150326 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108152061 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.0802995 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102078952 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.074907506 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102007613 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089388525 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103499384 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102400666 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.085205334 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099378386 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080380178 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107053297 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081394334 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.101055803 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080334201 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.094252377 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.076549433 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102955767 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082618672 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.096750198 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079001731 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102837238 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086447201 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.098961246 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075275202 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101621953 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08896688 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.097117562 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084420128 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.097856786 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.082051921 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111556008 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.076342932 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10548167 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.103798731 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085374435 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078401622 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.098957806 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081784596 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104102581 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082638625 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099555148 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082018265 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105438598 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080839404 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096485866 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.079021287 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099375368 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.076801107 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099017878 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08465919 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.098883306 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080053366 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107388952 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10340778 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086077095 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108900308 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084101994 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103296961 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086008863 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097257071 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08677174 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.096280618 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.076379264 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.098528178 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.074359789 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09879702 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.079925965 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103087398 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082105913 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100879741 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083105182 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102621826 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.081440472 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104085822 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113369377 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.076543386 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.075793526 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099879222 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102423994 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080648648 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097878667 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081621853 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102405676 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083818342 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105432096 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07667224 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096951584 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.085062487 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.098745983 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085382062 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103474308 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086541194 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.09729056 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084351208 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.098628127 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089480216 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.095111317 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.083266831 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100548999 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083497585 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.099461648 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.080750267 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098148782 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.075922799 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.097950412 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084783832 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095213147 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083840907 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.100399167 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.080483112 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.095728552 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079181424 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104685665 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.076084262 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104872594 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079215482 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09546796 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076545111 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103336692 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083756941 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104236608 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.078623573 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101006716 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08635907 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100508202 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079893714 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.1076164 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088351614 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104133228 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109448109 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.074412797 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.098888054 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09015075 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097011658 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082606893 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099431201 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.078204744 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105500431 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086122731 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.102216363 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082794506 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.095829187 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080874655 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103702874 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083137293 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102141361 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081177649 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103184926 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.078898608 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101654154 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086240477 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.101973998 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087307673 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102483229 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084576734 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09951194 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086341865 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099354367 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.077707262 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.09480624 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082009659 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104459302 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.074664477 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102526905 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085059658 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.098410137 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082369795 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103224591 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.080644282 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100504159 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085157187 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.098392299 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090294372 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098626894 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.079005196 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103021477 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085068861 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.095082772 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.080707081 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097459337 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08781689 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.100799267 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085725081 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101546963 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085115597 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099773002 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085511058 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104015721 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085491854 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096370783 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08746576 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10736807 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082410236 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.099248915 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082380546 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.095581317 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083077354 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105707529 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08038744 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107557421 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08550105 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.100926613 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.081630098 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103765888 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082973481 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106440836 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.078316379 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101754011 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.076869842 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.105918478 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082857235 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105390477 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.099020057 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078938241 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08463338 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103794117 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083600332 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105959328 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104702095 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.076889745 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.094932934 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082579327 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.09936595 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09082761 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097894697 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.082822673 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101311225 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081845812 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097812853 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087231394 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.095414112 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.081181652 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.102823226 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083651465 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.096245624 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.077776824 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101018643 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083343743 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102484101 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08432114 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097272633 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.083482446 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105320035 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.082436182 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095112959 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081390447 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106025662 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.083704091 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09957831 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.077486904 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110063689 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086004479 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106378575 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.078011067 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103433229 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.080745971 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100823152 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08719996 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10142199 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103010083 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.083352224 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103078002 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091578617 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.095680842 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.077626692 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10897012 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08478336 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108602799 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082413527 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101623245 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087312499 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106763915 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083439411 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096893214 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07920339 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097193652 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.077703114 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100878563 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091005988 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.101818095 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.081693974 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103976124 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083799794 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101659631 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082986361 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096588037 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088537462 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.100161064 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089458174 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.09660456 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.076343493 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101777254 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087070284 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098022624 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.081073732 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099099657 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082748154 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.096648483 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.082571563 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107563076 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084973697 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104387122 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084446897 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.100856333 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082664227 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111978522 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080718671 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.101149151 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094038326 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106511685 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084376358 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.103998779 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088149351 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106130283 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082239156 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106301123 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.100109712 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07960468 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105139421 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088150667 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11449164 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083636947 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.094656215 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084220719 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.097284359 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.078112352 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.107380104 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088521933 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105303749 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.084428228 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.099966851 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088945088 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101342685 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086018268 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.101654229 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.082100442 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104338197 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081135619 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10250479 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080881598 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107577656 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087827042 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104507534 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.088122653 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09599895 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092386195 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.107745962 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088442998 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099956046 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078089156 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097375301 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082882103 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107664191 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086314101 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104100979 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084162394 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103301104 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085371997 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104191366 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.081526527 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106753822 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085325519 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.10067165 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085342095 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.099085987 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080319455 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100945413 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087227173 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108072777 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.085980812 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111876843 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086131622 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10223783 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081170818 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104906151 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08204875 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105036093 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083961977 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.101478862 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.078655095 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105400844 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.08809962 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104167646 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087765559 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109460644 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101312288 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.087516118 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109019766 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086480292 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099071315 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08607047 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10120216 seconds)
  done (took 56.090611452 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156410947 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090968166 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101225686 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083108528 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130970634 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083430522 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101381135 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083052879 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103732063 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114891606 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082675235 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082377855 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124887686 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13267434 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129689511 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116137465 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082490274 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103041772 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08292771 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103190122 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104943804 seconds)
  done (took 2.973542944 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107683834 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120984538 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119383419 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102164696 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113352846 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117837053 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099660789 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117679795 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.122795988 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114354053 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103086324 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118960105 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.115232685 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095084401 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114786316 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114744451 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103996318 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112554796 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119176067 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100235494 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114871332 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120529667 seconds)
  done (took 3.252533606 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092437314 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084477523 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107273987 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.080988267 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104604968 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.081942351 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111427754 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.081695561 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111829144 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.082371131 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.099879119 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.080043544 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102723415 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.081979166 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.099797194 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.08123569 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110429789 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084884009 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107440598 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082398789 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.117780038 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101293183 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.08331284 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.0792886 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.115910757 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107320204 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.08300675 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08524382 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.097575853 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085708159 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102277603 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084553804 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105893334 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.079473486 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.097405018 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085457386 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104965044 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.08253477 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101714924 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.080267955 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102402849 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086428131 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108428757 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.081468342 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.102049418 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.080968861 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105233453 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.082596383 seconds)
  done (took 5.284136036 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120270564 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159620541 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088739912 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.149495844 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125148301 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096372553 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.107587892 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147955328 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.08566563 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.107980985 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128004833 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.126829831 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090594263 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112585689 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09251432 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108930819 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091394978 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107891954 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.11466849 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089573297 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116144028 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091020195 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123314822 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124682426 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.1109607 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088827417 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10845779 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.09319972 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123411891 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117010568 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094067173 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115375526 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124914841 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092761948 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108923228 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089455765 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12763823 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109445036 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090448214 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106762459 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089111344 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113669639 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111672392 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107586779 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111346653 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112333929 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091466295 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10458617 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.106140421 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.110009589 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118460069 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.107747807 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112765877 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.11015702 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094769902 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124856899 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.09087725 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.109154427 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109834588 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.104947189 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.106979025 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09176945 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12741882 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109205098 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096953875 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12586329 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112450165 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092253982 seconds)
  done (took 8.34035903 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122594122 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114660696 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125348231 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106600807 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113185913 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112545325 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094395424 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113342187 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094101094 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121961222 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113446845 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.19995208 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089201344 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120661037 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113410453 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094362983 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113408747 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09320509 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11441755 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113595315 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09392382 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127460404 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112909304 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106120123 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128133863 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108632889 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094095203 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114386802 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126012326 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093754378 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12894306 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114511195 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094911266 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125969935 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128383429 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.11340111 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086266066 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11286514 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09362527 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113429698 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090071982 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126646711 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113144077 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089560823 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114573824 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093012596 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126914289 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129494838 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11981193 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102130582 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11410214 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127902058 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09429209 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11465825 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126820087 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.135666882 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107391608 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12736549 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113813538 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106955628 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127558062 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13655086 seconds)
  done (took 7.837738716 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084248851 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08195093 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104076247 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083155808 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104330078 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084037044 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103577855 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084042607 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102523373 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.084072721 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103043884 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084455234 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083234298 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103137555 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083395828 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103447794 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08389589 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103524147 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083318577 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103455024 seconds)
  done (took 2.647617719 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096248762 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12844071 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087666999 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116495327 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087627474 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11771002 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105588676 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089343607 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107541035 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089236806 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118565961 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119299101 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08889049 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115271719 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099730929 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115853078 seconds)
  done (took 2.480327639 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.111317672 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.129337313 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.167333319 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.11099967 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.088069456 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.116885589 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087259876 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.108728822 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085488504 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.113449967 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091662747 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111104682 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087897626 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.107293078 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.087579153 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111747042 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.086191796 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.110953227 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087278729 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.165169421 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114213211 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.09011527 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110220916 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090434715 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.113030654 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114151491 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094897224 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107914923 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089976484 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107682648 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091203985 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118060241 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086232922 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.113286306 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086942463 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.109143434 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086779254 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108381475 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111124209 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087918491 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.108517653 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.091281605 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107407709 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.090495921 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.10654816 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088728148 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105777275 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095212449 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.110369737 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.091494348 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108042345 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.093150341 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113961988 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096853166 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116458567 seconds)
  done (took 6.523127015 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101751668 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1078757 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101963901 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104798779 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088641301 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110303544 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08898314 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110982437 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089200446 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104426304 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089496194 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110104363 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089641492 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109562144 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089130311 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10992556 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084117852 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108869701 seconds)
  done (took 2.605410705 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094785531 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107734827 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093773619 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107717746 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08778993 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107979508 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087359732 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105307807 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085806335 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10622126 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088455342 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107617561 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086124688 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086437603 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108705193 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086200859 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108697026 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084551267 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108109115 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084310902 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108229081 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084240276 seconds)
  done (took 2.932339858 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.104521579 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.168071742 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.120070178 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.178686635 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.085809807 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.10971766 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118100639 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.087591182 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129206789 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.086630266 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.107369785 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.08611603 seconds)
  done (took 2.191334363 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115487057 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147644182 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087377598 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109274352 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11976221 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094531151 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113801701 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093227639 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125540231 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130586796 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093747677 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126392777 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124857785 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126798965 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100281059 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120891436 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113743948 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094257845 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109117723 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137657616 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094247759 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125338904 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113461379 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094352313 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11356744 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107044002 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125223728 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130204782 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114467044 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105271562 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120266484 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114262098 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105701754 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131513323 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107093484 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106096674 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114047956 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136859178 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099409143 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127867396 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108555476 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099860262 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126327264 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123695317 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126302403 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094453323 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123153905 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092987577 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114755939 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145263991 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120862627 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106548177 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121710649 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125775903 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125357016 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144766546 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110299841 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127709074 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121142208 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13222038 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106269634 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122585182 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128086234 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131152335 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100054539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127885319 seconds)
  done (took 8.492089926 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134023783 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111838227 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093477258 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131484041 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127964454 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114411637 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095152492 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115088674 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093792944 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111418503 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164339564 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114648268 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110930346 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12799614 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114749233 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094125005 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1147853 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127574344 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090309887 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145470187 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114819499 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107665222 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129429295 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128731691 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131413825 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119802472 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095666943 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114966629 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094900713 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115258024 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122872953 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095190512 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128198554 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088310228 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128818501 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115145666 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094144751 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124050343 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114652746 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100992786 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129648481 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13739508 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114278663 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095359896 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131414767 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114287152 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094131857 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110603082 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094401094 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111885571 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131603612 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11125252 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131893076 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128416418 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114606006 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095221214 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11550577 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094896331 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115713294 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121475076 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107397735 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116450738 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146065145 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116111086 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095814338 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1287492 seconds)
  done (took 8.418741898 seconds)
done (took 154.336021547 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.127675387 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.167361466 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146168616 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166624839 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081238264 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.137631825 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.115820424 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148280138 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102088315 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08186685 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.103112562 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085864135 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169472192 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082086594 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101546437 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.086656704 seconds)
  done (took 2.715660093 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176155735 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.337090073 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.12161173 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.090827052 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.113505647 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.084264948 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.113284748 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113129758 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086978166 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.115771981 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.085558517 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107167237 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.095030231 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107131839 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.085539447 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.10564285 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.117264034 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085096125 seconds)
  done (took 2.963327544 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110688673 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147959367 seconds)
  done (took 1.083145442 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120875427 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187411571 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318031138 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15330532 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11477549 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130476719 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156031654 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.102999256 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.214344131 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105881088 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12814945 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109350107 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.115075634 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116046574 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119485695 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.090392809 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.138271072 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.099575135 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11960792 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.091075736 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.132461383 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.113738551 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095435965 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.119519424 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185794766 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126682357 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092589108 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.114219987 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.090140152 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118900171 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.111390229 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.106635581 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.126535124 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174655216 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.117383087 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170637479 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.121282176 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.109201458 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.098177619 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.108369764 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.093528836 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116409436 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129012378 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.088694249 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113402897 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.10018196 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114563246 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11262162 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.09359263 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.123900446 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113413471 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091703927 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168069639 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123901314 seconds)
  done (took 7.566969357 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.811924389 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15235708 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087402127 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.955743141 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1381342 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124316717 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.808100474 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111808616 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.26997545 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.817155567 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125656589 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100021359 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.248435209 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.285820191 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.173219783 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359711791 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.690037714 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123249687 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.118538873 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157548717 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120558823 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137209466 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110185379 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454808533 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.090105178 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108414278 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098417451 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121208566 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172201761 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108549895 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093694797 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.212451682 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.276233508 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219791072 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089859519 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107024477 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086707486 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.202958516 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.288789002 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217486827 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179225077 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105638881 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085839672 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118724511 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130785314 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083825231 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193717251 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.184528073 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.184304494 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114802511 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099312432 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122462577 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116413515 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.170607501 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083273627 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356956314 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.379989132 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089126172 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119223973 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10354455 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.284179112 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107941183 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.24465923 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116975214 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.232795952 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109146432 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808967516 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.178162062 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085135825 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.115847388 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116781587 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094577684 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117066587 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172704182 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389043523 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1206944 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093321585 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108384178 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237955406 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.108390526 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086743895 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.196956427 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089886692 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119471799 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102063099 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121190433 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.180927161 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.283454994 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101761329 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121305453 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115288367 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10279241 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.110774137 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.226247127 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.238065064 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.168490406 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.24981321 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096286671 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.195617435 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.178389757 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115994339 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.181983084 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115857694 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10505391 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117493954 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.235933009 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147778557 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087537867 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116585639 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09836566 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150740643 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112605355 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118966826 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.180817305 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.473922414 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.198612784 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08441101 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112404464 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099223422 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193306232 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097277328 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280843727 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120098668 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.179918264 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117521855 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.084485268 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119420035 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.177179736 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119017112 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098222672 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118335831 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121960617 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.26331371 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240948614 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099779563 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256173403 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184422469 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117720092 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.185568401 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121102429 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183856958 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120566098 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095869751 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111762781 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80062025 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102798793 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120164647 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115088028 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199024124 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086675016 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10935475 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.087190822 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105176177 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801774482 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112257733 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084656261 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.11086135 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094547157 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120760528 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118876043 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094715743 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193842073 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253738378 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101437637 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118294374 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08711227 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.19378311 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.089757987 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108676221 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.088054392 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109301822 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098896393 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115515701 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088411422 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.205670233 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.170668652 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.241497108 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567259456 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087556677 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108752984 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251997938 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08813215 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328776194 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119551702 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.24624947 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179949304 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105284517 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.35689344 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18262777 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198934553 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089819585 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.205648139 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085141027 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12082517 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.171902677 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109625073 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097448988 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.168689443 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126012135 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12210773 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.181696446 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087051373 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.26223187 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.084816452 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.180125723 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112507176 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116275272 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.307224364 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109749732 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127269258 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.173854397 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114087455 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088399547 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.749954119 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.088178244 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123132284 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094327137 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.242778701 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.200871168 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098269987 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122071717 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122525596 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173702154 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.227018635 seconds)
  done (took 45.264328527 seconds)
done (took 60.412225434 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305871423 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273329056 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.332425745 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.205162763 seconds)
  done (took 2.041100006 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.221926353 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156224403 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.187085741 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107005864 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.197652112 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084580478 seconds)
  done (took 1.801255418 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.520695439 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.396565383 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.363547955 seconds)
  done (took 2.134183799 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269019182 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.290133456 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.333018494 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.484066048 seconds)
  done (took 2.335019418 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.24975902 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131746904 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101285972 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.181556472 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.24022456 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.187556036 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150224487 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160902374 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131546071 seconds)
  done (took 2.43106071 seconds)
done (took 11.592285493 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.315640841 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.298366301 seconds)
    (3/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.372937307 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.20794672 seconds)
    (5/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.371993631 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.338966656 seconds)
    (7/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.23153733 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117391429 seconds)
    (9/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.310563663 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.169193818 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.149669765 seconds)
    (12/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.1921767 seconds)
    (13/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11670865 seconds)
    (14/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.201087696 seconds)
    (15/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.095204956 seconds)
    (16/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.242706887 seconds)
    (17/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.100464418 seconds)
    (18/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097824438 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.151477724 seconds)
    (20/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.161876542 seconds)
    (21/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.299990122 seconds)
    (22/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.242857394 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125296811 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.203540528 seconds)
    (25/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.24970087 seconds)
    (26/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.193946806 seconds)
    (27/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.183614004 seconds)
    (28/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.228319597 seconds)
    (29/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.246973127 seconds)
    (30/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.244251563 seconds)
    (31/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.160218262 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.137627377 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.117469487 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.128534556 seconds)
    (35/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.103500881 seconds)
    (36/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.096833663 seconds)
    (37/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.250809777 seconds)
    (38/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.163812419 seconds)
    (39/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.232648667 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.118751816 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094940731 seconds)
    (42/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.191289522 seconds)
    (43/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092744208 seconds)
    (44/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.107640376 seconds)
    (45/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.099877318 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.152911117 seconds)
    (47/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084226037 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.205713668 seconds)
    (49/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077431497 seconds)
    (50/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.102559388 seconds)
    (51/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.23185307 seconds)
    (52/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.149163654 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118884682 seconds)
    (54/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.236533928 seconds)
    (55/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.083288637 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118625246 seconds)
    (57/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.180808901 seconds)
    (58/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.208603595 seconds)
    (59/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100523392 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088294068 seconds)
    (61/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119903045 seconds)
    (62/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.078932588 seconds)
    (63/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117055655 seconds)
    (64/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.079360384 seconds)
    (65/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.177679447 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.189719316 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079289915 seconds)
    (68/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.1787075 seconds)
    (69/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.179542895 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11943334 seconds)
    (71/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.146131669 seconds)
    (72/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.201360353 seconds)
    (73/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117296916 seconds)
    (74/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087430289 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.135948368 seconds)
    (76/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.101228434 seconds)
    (77/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.119946468 seconds)
    (78/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.206358323 seconds)
    (79/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.152206481 seconds)
    (80/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.203201558 seconds)
    (81/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116547667 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.199082694 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.224752793 seconds)
    (84/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119502247 seconds)
    (85/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.08345821 seconds)
    (86/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.203398511 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.134672252 seconds)
    (88/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079499932 seconds)
    (89/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.078610719 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117933578 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.112121208 seconds)
    (92/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.104106618 seconds)
    (93/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086196608 seconds)
    (94/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111196478 seconds)
    (95/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.222546097 seconds)
    (96/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.240867556 seconds)
    (97/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.17963786 seconds)
    (98/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.114546423 seconds)
    (99/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.147741652 seconds)
    (100/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.106170368 seconds)
    (101/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.089345128 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110118497 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094285594 seconds)
    (104/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.088334871 seconds)
    (105/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.22432322 seconds)
    (106/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.103318538 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.150879306 seconds)
    (108/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09597237 seconds)
    (109/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.077254933 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127012386 seconds)
    (111/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.084020474 seconds)
    (112/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.103228192 seconds)
    (113/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080512032 seconds)
    (114/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.083926891 seconds)
    (115/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.224727869 seconds)
    (116/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.102355183 seconds)
    (117/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.079339559 seconds)
    (118/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.128684944 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093607351 seconds)
    (120/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.10805854 seconds)
    (121/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100213959 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119227232 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.079730575 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.118876028 seconds)
    (125/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.079291705 seconds)
    (126/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.079142369 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119570658 seconds)
    (128/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07912989 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.119166313 seconds)
    (130/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079345239 seconds)
    (131/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.102852321 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182543187 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.10384673 seconds)
    (134/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202622651 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096032227 seconds)
    (136/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.180827344 seconds)
    (137/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.091466252 seconds)
    (138/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115851543 seconds)
    (139/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096046562 seconds)
    (140/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.111412377 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.113992301 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.136424327 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07969735 seconds)
    (144/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12056826 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09487769 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.119468668 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125679762 seconds)
    (148/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081086925 seconds)
    (149/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093504544 seconds)
    (150/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.110268849 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.15178396 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.080715052 seconds)
    (153/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095949189 seconds)
    (154/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.103182212 seconds)
    (155/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.079130386 seconds)
    (156/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.101156222 seconds)
    (157/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.082188269 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.079784776 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.103213299 seconds)
    (160/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.0794604 seconds)
    (161/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078436008 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111700077 seconds)
    (163/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.080637931 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116951417 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.096268433 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.137504125 seconds)
    (167/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.079897397 seconds)
    (168/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118162385 seconds)
    (169/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093214525 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11942775 seconds)
    (171/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078489497 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104053525 seconds)
    (173/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094245364 seconds)
    (174/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119657525 seconds)
    (175/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.080003145 seconds)
    (176/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.078346326 seconds)
    (177/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.102416833 seconds)
    (178/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.151836542 seconds)
    (179/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111639723 seconds)
    (180/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093390892 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116790291 seconds)
    (182/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080249733 seconds)
    (183/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110893006 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.082353051 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.135168572 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.097199666 seconds)
    (187/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.11270857 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.097047152 seconds)
    (189/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.108160173 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096536766 seconds)
    (191/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.078383958 seconds)
    (192/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114444338 seconds)
  done (took 27.162429825 seconds)
done (took 28.0188292 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225701103 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102455879 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.121900332 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.097093475 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.179562085 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12447207 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.105609648 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.125190174 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125958434 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095969375 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.109993424 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.104224548 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12083461 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.179456157 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.10049516 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115156536 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.088938938 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128036764 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128711048 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.108707677 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.177790028 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114297759 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.103261842 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.1136385 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179105284 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090915335 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120801383 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099213582 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128320953 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095833146 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.120803275 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.089444545 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.131219028 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.105234672 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111501784 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094288285 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112859293 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086490975 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.118225952 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.095028881 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128636145 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094051728 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.123794568 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112778552 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.097005237 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117465796 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088970465 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123951655 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089732857 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121739443 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091414369 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.131211259 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.093782662 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110949056 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08772483 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114417905 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.102753352 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113230357 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103971902 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111839609 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089473729 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112494239 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.096364343 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112238595 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.092812363 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.114148835 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09367531 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.121580037 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092902401 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115924001 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086815468 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11794153 seconds)
done (took 9.080900398 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096137482 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175107222 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.179675603 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.1871404 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.146716104 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.132156782 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.111168259 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.142701528 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.106370488 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.138161612 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149466614 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.117446142 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.214950238 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.103355116 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.132107861 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097028744 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.127990531 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.121708544 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.18782632 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.115592952 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150265449 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.124809685 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126759341 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134268242 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118796566 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.121189671 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122715802 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.096259871 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.120963857 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.136810593 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.115059633 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.121140691 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096635127 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135058383 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.128448033 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.102371092 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.131054212 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097968148 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119163875 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094534382 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132444674 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129058834 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094601078 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132205709 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097028696 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.129660777 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.125378179 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.103280092 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122427416 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.098054983 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.123293983 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.148115299 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.104533819 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.1305283 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.102837969 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12618265 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102800289 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.126749277 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.119922888 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.102310925 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.118950673 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097895312 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.122528639 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143788616 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.097718461 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.126703005 seconds)
  done (took 9.127982347 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.11617942 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.154039396 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.128847642 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106431414 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.125948507 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.085574544 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10977472 seconds)
  done (took 1.730198421 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088581531 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183481306 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182024322 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.183188152 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.180098825 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.190983846 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134986433 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087664524 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.148459823 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123282629 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182553521 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.213793459 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095037197 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.131213648 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186142297 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087055283 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186971339 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114911312 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124614412 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.183531122 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10414985 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142032084 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.103245005 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114026721 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.177578648 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.089626513 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.262796048 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104853494 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119106671 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098132618 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126344144 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.197827814 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.179263063 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.129085506 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093056156 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.182371581 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.17752566 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126472726 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.191890392 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093239274 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.178831182 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.124701395 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.101399324 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.127473847 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.098767404 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.163830371 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130981417 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.126349407 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.10016493 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18477204 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.127902634 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.179757906 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.09701531 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.123670717 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.100912447 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128004221 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107229637 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.126066583 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.186961302 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1030108 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.17838668 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.178949222 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.179525676 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.179296086 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137712026 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.18166462 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.178831326 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.098013136 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124048598 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126028894 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.180473132 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.10180553 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.126436175 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.167398811 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103676048 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.180438138 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.180523736 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121360195 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103640245 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.118446977 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.097686736 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113740703 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.168628561 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099173523 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.364574358 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110280661 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129517492 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124780277 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095543113 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.139137348 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.100269419 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129092422 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128958607 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.100691989 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131607547 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.184232281 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.101068735 seconds)
  done (took 14.612953729 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094079318 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.089937247 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.120672186 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115073942 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09202271 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116104718 seconds)
  done (took 1.552873776 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120538924 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.126589979 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.111811808 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127847372 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.183139132 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.187348013 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.189028982 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123714947 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.11911391 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.138162824 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.187513768 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.191609677 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.186296015 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.105114866 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.189683116 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.130359282 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.188397184 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12586466 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.111077654 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123048073 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.108746327 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.131159118 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097337786 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.175607866 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.130450544 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129394571 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102766879 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.138058221 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.134236088 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.099357454 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.130222819 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.10301629 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120560292 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097944544 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.187664627 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12223508 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123230916 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.107053755 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130489068 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.104569897 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.188780416 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125577565 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.13540653 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.10726261 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125067778 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095330745 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.133717701 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125557153 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.18937179 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.106936197 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.133644763 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.103506673 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.130422289 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.131732658 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096301776 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123763155 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.107980109 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.187605993 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.132234864 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121472514 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121091667 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.130709361 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098404423 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.13309619 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104364071 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132298639 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120183665 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104963313 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123423792 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.102883692 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.13369302 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.127466663 seconds)
  done (took 10.395089861 seconds)
done (took 38.317841229 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.17412748 seconds)
  done (took 2.093692424 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.897208934 seconds)
  done (took 1.819388915 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.009834964 seconds)
  done (took 17.962799379 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.547288218 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.632596869 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.921671712 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163142581 seconds)
  done (took 3.187535219 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.99303267 seconds)
  done (took 1.934061234 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.337994494 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.252846387 seconds)
  done (took 1.518956908 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.715356875 seconds)
  done (took 1.652926671 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.569997473 seconds)
  done (took 2.495502169 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.391403951 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.191873705 seconds)
  done (took 1.527979557 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.655871624 seconds)
  done (took 1.592943194 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.969293711 seconds)
  done (took 17.914524073 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220208886 seconds)
  done (took 1.174081052 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.312041263 seconds)
  done (took 1.260274191 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.586503921 seconds)
  done (took 4.527879516 seconds)
done (took 61.589823197 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101757976 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129606873 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104812394 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127372644 seconds)
  done (took 1.400724658 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106628782 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12532265 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105871653 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125329526 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107537554 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.126373894 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101673633 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.12868826 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099889189 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.128906658 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.125739868 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100560173 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.127484468 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100216093 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122469188 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.103872623 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.129714653 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100404756 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127596837 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100294273 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12647685 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128099869 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.105321684 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12821474 seconds)
  done (took 3.731326098 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099721698 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11743811 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096584779 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.091879385 seconds)
  done (took 1.355129329 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.110116997 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139790605 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.112536953 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.133966319 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.112910806 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.138659622 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123573892 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.098007485 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124364171 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.110419455 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.144065248 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139985773 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114140796 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.128517256 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.111519267 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119187231 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.102286501 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138932623 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.108536422 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.136647561 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.126493826 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.108413649 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.130210648 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109886099 seconds)
  done (took 3.879532625 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177461284 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.140336519 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.150260437 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172996275 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.131548767 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.124354176 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.152194221 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.107812842 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.133308246 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.102804014 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.128745838 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.173907267 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106351919 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126642957 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12553893 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.106101818 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.137992087 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.106326188 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.169809562 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.131074061 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132276291 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.115477602 seconds)
  done (took 3.911172708 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10774773 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119190304 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089932546 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119390129 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107995921 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122487634 seconds)
  done (took 1.626851905 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095916531 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.087402922 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.1183029 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.0891301 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.117944595 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.087468506 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.112785234 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.088751707 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.114263818 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.087945666 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.115553534 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.087194726 seconds)
  done (took 2.15896864 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.284209883 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119080352 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120480071 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.094025987 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.126756609 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092121894 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135215553 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092531096 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.258713554 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088546059 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.137372753 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19629962 seconds)
  done (took 2.706335787 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221589894 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102254205 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32429683 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394829203 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169892589 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177217268 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282577968 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174271635 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200670526 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12056651 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233146534 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139323815 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163621821 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191434489 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14696313 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.217978295 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186874385 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215744757 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157394325 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21957725 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174680576 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180327228 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190734933 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160637278 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117250976 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161058763 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.127936982 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107335019 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183736896 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179940822 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210681123 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13023169 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149454091 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212513377 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224180404 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189700776 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.311422335 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112482889 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.204020023 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191403007 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291442464 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14761242 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209343535 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164747591 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136032572 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195116154 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139130557 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.194215356 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141075774 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149165917 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196197339 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187346862 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196283131 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142783971 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311786377 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154508624 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158390408 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18829374 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200939056 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201205129 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179075017 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103332247 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223221621 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195170285 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190157125 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155690208 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181277527 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108457839 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185018645 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206842673 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195797511 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175021913 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223694539 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109020744 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170387793 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179285759 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163482345 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191904225 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173187711 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099229418 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160562931 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145038067 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13290935 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169432815 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128573182 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218167973 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14180757 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.392729971 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217235417 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166841229 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170591351 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173038658 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175134958 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129298643 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.129721309 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154323884 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.143735248 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166930369 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143558589 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167375036 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148101496 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.11484635 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161975738 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127908076 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144552 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.158993553 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175382914 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171930439 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.137514834 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150233908 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15769627 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.165229159 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181040948 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195797637 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137615153 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111421174 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199583106 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167120479 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143777608 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18561617 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202087734 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175091014 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143842118 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145887687 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230336187 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123944072 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198798158 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144936739 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140033831 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.165186729 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146393103 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165776092 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163312435 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134688048 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.137228697 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232278554 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106334375 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143723771 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182751389 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143349775 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107979606 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148387995 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115645705 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149996227 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155421822 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144580387 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137408641 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171883704 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164852062 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167177708 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14312671 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183843827 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111073072 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.171589436 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156781793 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099689936 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.221801745 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195760439 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108036524 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207250609 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.205860762 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209277338 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170873394 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112585348 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188383667 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135135804 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100553127 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171146073 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169526343 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170976717 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196403476 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232529127 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183818457 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163137946 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13259711 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177556021 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185012925 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165363881 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153029454 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170978046 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181285151 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099641824 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.132833106 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108245382 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148311129 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136773496 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112251755 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219060815 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146783024 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224791167 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168560564 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121584264 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193042506 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.139063548 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173754352 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.184814544 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145986578 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198316258 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192717087 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180042314 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121493327 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171636537 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128677131 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105813776 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143804326 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177316427 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138772355 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113290419 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151815061 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194452676 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185356516 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159180721 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240509619 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177624335 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204407139 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.100627892 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.174309752 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180286963 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167072219 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.167915939 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144808454 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.170913519 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190653068 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14565387 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202594108 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167347575 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175757953 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210957076 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167225386 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109105345 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158569848 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175742338 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148207863 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173115473 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126142199 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138244967 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162000479 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.117446681 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136285143 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192272212 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152698207 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188460882 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.166868359 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182122318 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132251029 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122823873 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171376967 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154898064 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.099359492 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18010264 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225704203 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125833625 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166596843 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18514479 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138018054 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.336631912 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202102589 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194385642 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142435478 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149304628 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147005777 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168804941 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174112576 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18958752 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151466806 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189940988 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170766592 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.123116371 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138319919 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15621346 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131500989 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.164200014 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14409782 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.171530878 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123244274 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223772566 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120857164 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17205993 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172693973 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155917967 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.136668198 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150072585 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20767556 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168061649 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187576232 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167587715 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179842851 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211566143 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131332424 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109389863 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.143614554 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19057051 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110024797 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173276467 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.218255877 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212265812 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173614203 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177114371 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117083691 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134607047 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16661217 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157451363 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213025938 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141468823 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.120133606 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229574629 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133642775 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137105231 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172625521 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2926478 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126578777 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209450722 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.110937259 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285259799 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135596436 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109597557 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170482531 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182028263 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.143278355 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.166570876 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168977255 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151969531 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170328347 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144034961 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200938845 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220439088 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176645741 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187095687 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151163587 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168266458 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173516644 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188003114 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121826433 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.155247444 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172087914 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194695126 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195659231 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143073139 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170557742 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141481051 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167120416 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184406365 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142148441 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212105428 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137663167 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171771125 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119635389 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13424508 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168972607 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193251172 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139463565 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186012274 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172849449 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112979671 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135832089 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153310555 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14054211 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145674734 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.1360238 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191809263 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.106820499 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175512397 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192986682 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136290628 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138199396 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154843916 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140853968 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150577175 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125028544 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138892343 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.151853928 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18904796 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140788074 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188530377 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173272848 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176278335 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169222472 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152168058 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646599423 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.137612352 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193741553 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155566021 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19839472 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158204411 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147361528 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168669223 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158162468 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174532415 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158338178 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.20169566 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170842153 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.172206398 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139404597 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152270962 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121963043 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143438751 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161135965 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16876157 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121118227 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.148428972 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.170198633 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123759486 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153850707 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147218554 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195895576 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157689282 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195203699 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190939991 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1147914 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174190558 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186514367 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14024335 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.174516225 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183229931 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149220915 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126458908 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.142215264 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.14671428 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164151632 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132817731 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172152617 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172530579 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169627121 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142244565 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145523091 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174920247 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150376512 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170439003 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108853945 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.166362244 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169720807 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111514973 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.137210203 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16825798 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169834331 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.137009214 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136825176 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174973044 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194281901 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103067912 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141212717 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292810821 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169241971 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203626811 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.165389134 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113974061 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153929537 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166496169 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.167567535 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143690686 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138745164 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108864083 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141767684 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.194080277 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.166930382 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165374863 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164444159 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169001786 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241200021 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.125183546 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276523288 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147694008 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139217654 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.141443276 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139433169 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122205522 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142883925 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147133978 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203577436 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190418717 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162075427 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.124362737 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13749846 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.102593804 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140809645 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17184786 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163750081 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142392786 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154640871 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.130701285 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124256242 seconds)
  done (took 80.968535454 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150920398 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.141023544 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.151853639 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200912016 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17267761 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26522043 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211355005 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233443573 seconds)
  done (took 2.571219833 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.103561017 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.139707571 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146216224 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126976461 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.125598948 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.390416624 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.138140064 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.101623804 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.186626554 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.14016948 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.124540145 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.599481903 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.127536605 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.124539806 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.097316516 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.126711575 seconds)
  done (took 3.832332323 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.458041074 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.559403787 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.08328125 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.25460951 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236591535 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.160620048 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.762884617 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194058997 seconds)
  done (took 12.750789599 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.133084492 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149004808 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.288797278 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.251095441 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.137934593 seconds)
  done (took 2.00641068 seconds)
done (took 123.839876888 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104877392 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132415007 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106161483 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.135769378 seconds)
  done (took 1.514284907 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.153599215 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.117702276 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091106359 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086942276 seconds)
  done (took 1.491192391 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.493849467 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.119362534 seconds)
  done (took 1.691123848 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.132102226 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.151332711 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.124777476 seconds)
  done (took 1.457871687 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110827537 seconds)
  done (took 1.164905162 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.110714317 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.099112397 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.19423468 seconds)
  done (took 1.457946029 seconds)
done (took 9.830319206 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105538278 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.440718142 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391705614 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142366532 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.731286991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381681651 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.083686738 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162967837 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.212982073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091870385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145355766 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674480615 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038856774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374149927 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.988692153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.374618347 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675570091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121806999 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102608733 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122591038 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.028344763 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120974781 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094092523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122098841 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673571753 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.440778513 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093190896 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.390343885 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119341591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101930672 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.379561566 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122039654 seconds)
  done (took 17.091016602 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102707563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192596181 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104538658 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123932354 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101646047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123660742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10591023 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137322222 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201876383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121327782 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116419028 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121770896 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098428598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122005453 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118605422 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121111981 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09419786 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122754013 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103001574 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125426643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142712648 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09364052 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122481392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094388444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093006516 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15475468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121071356 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.108757458 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121863349 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100645531 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124435512 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094062638 seconds)
  done (took 4.888650837 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144782058 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.202500609 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135281612 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129940292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181474263 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124237154 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217318712 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164308903 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202939204 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094473178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146649039 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093488505 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.169104548 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09342813 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150239838 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092957149 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12312195 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093594398 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132355406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123738011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117757035 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121737015 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095890723 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1214621 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094581085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155938353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093666503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139278901 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093413438 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130508596 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097505842 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123376027 seconds)
  done (took 5.260477214 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105282249 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.133323881 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119769042 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147381162 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100181366 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132856562 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.106187852 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129586072 seconds)
  done (took 2.03476184 seconds)
done (took 30.332526407 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12022872 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141559477 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.113032997 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.136637019 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.18248736 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.0978687 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.110909453 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.125808678 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10668835 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.145590486 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093042569 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.128965271 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.112464337 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.132750014 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.184685851 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.10685122 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.189008535 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.184905242 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.12813994 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108169936 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128996279 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.189750838 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10607541 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09979434 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.194776058 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127284497 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.180195271 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.103569153 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.132509225 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101391417 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.185010976 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.134358456 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.100103755 seconds)
  done (took 5.483945262 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.164209778 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.131551459 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.099589021 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129560655 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.1008717 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.128299713 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.197703543 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.098598625 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12777574 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.099006792 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.127367154 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.161733403 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.135612841 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.09428801 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.132257946 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.099615477 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.195296321 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.130979818 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.094902459 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.089859162 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.124907174 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.097965997 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.204956586 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.124363202 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.098980766 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.129359234 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.102544377 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.134612699 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.101007759 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.12995321 seconds)
  done (took 4.85623326 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107224433 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146261197 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123518694 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.199497292 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16031094 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.106857353 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.147340572 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.115517982 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.156345683 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.0951858 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.142139906 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159637457 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115223517 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.138406389 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.100916425 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.143007882 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.117288587 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.126892623 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103376178 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143985228 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112928009 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.141480077 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117259561 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134553542 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093807217 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132551215 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.133286254 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111549089 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137147893 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.113826623 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.130303406 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099865872 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.128389122 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10697691 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.132339733 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.104808353 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.148847339 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108800218 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.140641713 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.152265597 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101477943 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.13046887 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.123310807 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.184945096 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098041344 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13778322 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.108033236 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.14200513 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096794694 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145080119 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113495826 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.125570034 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.145441371 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.096396807 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095492969 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137650125 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096296066 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.132003871 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.115856509 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.129301739 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.147499776 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.103885384 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137783347 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.099138346 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134522371 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.096442932 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.095633897 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.128573073 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.153611765 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105268899 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.1637514 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09684403 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135609485 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108970713 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13558363 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10845822 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.125313412 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107314013 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13717208 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102531455 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140926448 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.09929096 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.129481064 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112123598 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144271649 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.105109896 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.1766363 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.135680526 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100105464 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127418299 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113962366 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.12765956 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101529626 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.145311979 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096118089 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.132441679 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106849938 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.135715093 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093965824 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.152211788 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101201001 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125963761 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120418308 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.132233656 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.102333415 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134748237 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.111952662 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.125088831 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104878949 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.13575088 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.096567558 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.133032268 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099543041 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124131503 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.11124845 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.141143789 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10282007 seconds)
  done (took 15.560361673 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.287466538 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.307742 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.21008268 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.367337766 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111877499 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.203573678 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.306404289 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.277791607 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134434558 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.171652818 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.192316467 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.246899031 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.128414298 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.124943787 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.310046961 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.371969238 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.158678121 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171351954 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.140590908 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.143807855 seconds)
  done (took 5.451724232 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11885346 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.162203983 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.149181276 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.130077647 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.133392242 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108816928 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.127225285 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.121948452 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.134268134 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.133807215 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.096596749 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.140163776 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.10458951 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.139882517 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.11507243 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.174092895 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101831732 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.133206499 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.150393441 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.103695812 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137849869 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.128037523 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.1371274 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.148246514 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.112513346 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139323109 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095179279 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.13294561 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099665917 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.130466442 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102259302 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.147280392 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102536505 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.133240966 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104972406 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.139703244 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.098276864 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12892015 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.097727368 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.13088234 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.111832505 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.136126869 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.099631667 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.124299051 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.111555626 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.128687681 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.109033956 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.133530769 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108946314 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139967404 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105671623 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.13847728 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102237305 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.146046964 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.098841502 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.14248249 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.109315321 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.139069586 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.131928961 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096074354 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094987725 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.130846429 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.100943572 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.138164396 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.105394909 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.149657256 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.140533777 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096056515 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.132458264 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.10035059 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.130935141 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11242779 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.150555779 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.131831546 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.100464905 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.138979401 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.100745787 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.089350065 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.136953458 seconds)
  done (took 10.811986147 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.124749993 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131834765 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116713408 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.164300849 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106525376 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.134318031 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.101328693 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.148558781 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.108188271 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.139512508 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.108474476 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.14206918 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.150280595 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113239588 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.132034261 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114560617 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136939465 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.166291361 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.117623947 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.159444846 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.108030108 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133117296 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.108333704 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.139760202 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.159246049 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.1093987 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.158081367 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.105857728 seconds)
  done (took 4.728499099 seconds)
done (took 47.951079836 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.21071228 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.374394327 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.153243447 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.152026573 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.184988119 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.181544123 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.151049461 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.160655568 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.051040922 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.143183454 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.153875361 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.152133299 seconds)
done (took 27.154340377 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.214881352 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.672568729 seconds)
    (2/2) benchmarking "String"...
    done (took 1.431278927 seconds)
  done (took 4.18244624 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.160074968 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.149692506 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.368563644 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.148972436 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.166160982 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.167280192 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.149215303 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.155719083 seconds)
  done (took 15.383248605 seconds)
done (took 25.021427477 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.193199981 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.327140971 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.423157002 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.177749238 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.160415442 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.163354396 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.153090185 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.169310025 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.159445756 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.163027237 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.55043934 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.419549453 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.172177016 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.551280017 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.165471508 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.180334991 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.152001789 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.379800445 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.157094979 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.196400892 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.142965099 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.141686752 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.17951773 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.164033089 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.157575751 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.168336639 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.196456707 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.162132877 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.341187271 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.179210348 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.191510464 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.155532871 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.181141727 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.158314608 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.150645664 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.155992601 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.336917619 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.16225639 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.148334126 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.16640522 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.346709276 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.17296438 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.158031906 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.154181099 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.165876308 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.191391161 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.146862841 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.265945943 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.17432912 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.153698308 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.163385155 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.546860178 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.153558184 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.1665204 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.181179934 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.380545056 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.166100823 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.214834948 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.176998431 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.16488447 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.177494503 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.153962713 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.217029757 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.155450168 seconds)
  done (took 140.684750653 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.155921943 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.158183478 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.158013694 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.180444667 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.154426528 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.158510512 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.153906267 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.154008795 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.160792595 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.177731196 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.155240787 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.159820078 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.15857242 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.121728743 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.160904162 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.171426457 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.155821821 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.154750209 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.183401283 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.155536444 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.174527327 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.155006318 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.176558999 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.158928045 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.198140704 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.240167798 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.174004504 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.17404399 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.16114176 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.155448072 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.200032753 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.178714729 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.761225378 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.024293414 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.159173016 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.164719518 seconds)
  done (took 78.530718104 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.155711655 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.156811798 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.15614323 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.187478975 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.155665379 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.717972053 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.731500752 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.870472869 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.876176547 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.482564224 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.156354889 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.408871251 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.157456661 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25141457 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.17222447 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.158722614 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.17426314 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.185815733 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.158898247 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.157474547 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.734232049 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.174220717 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.205547654 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.350249815 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.173115281 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.190481683 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.562160167 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.158173913 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.190570859 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.489838336 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.208571883 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.158177641 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.51762107 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.151049928 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270204933 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.160246696 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.190832909 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.160063507 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.437985659 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.157930123 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.161557821 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.162566752 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.810176923 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.158347593 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.722397918 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.160044962 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.103754158 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.158405005 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.15831339 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.616951117 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.798171681 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.176962859 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.15981941 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.15926633 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.162681561 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.15964715 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.159673618 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.191942441 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.159590812 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.649017763 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.271786931 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.160859816 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.162450778 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.192459761 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.160382561 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.179033433 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.177245373 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.196535818 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.216760427 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.391670628 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.737385684 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.163122165 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257750059 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280033689 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.160715567 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.160552622 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.159741293 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.160782752 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.271435807 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.161226619 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.581438292 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.335865525 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.177050336 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.499757164 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.257649822 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.162009406 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.540647628 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.16478405 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.160559257 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.890892809 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.16072277 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257913243 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.162091714 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.160335975 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.161395126 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.584353152 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.739848406 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.420030299 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.16114224 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.948411773 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.166386835 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.593839169 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.716306004 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.817286127 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.162740524 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.275729744 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.337424022 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.179017591 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.162849761 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.499210726 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.164114537 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.224016657 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.163676403 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.564751748 seconds)
  done (took 361.367177325 seconds)
done (took 581.663795464 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.9533278 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.898993302 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.035387084 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.924796289 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.895555823 seconds)
  done (took 10.797634904 seconds)
done (took 11.890665085 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.354607731 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.355184303 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.223320077 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.355946044 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.19640476 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.374033946 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.345735871 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.183651135 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.278439832 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.245229466 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.275820199 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21644939 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.197372963 seconds)
  done (took 17.692396517 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428918712 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.169736475 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.229926572 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.42678753 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.206345805 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.463053243 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.476932166 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.169653977 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.317261019 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.180878545 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.180171037 seconds)
  done (took 17.341712242 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.430029529 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.169003621 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.237869823 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.414788321 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.211654956 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.4425656 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.457625505 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.170448311 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.32108813 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.195376544 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.180898968 seconds)
  done (took 17.324203716 seconds)
done (took 53.451124566 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.208528649 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.335260265 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.201443451 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.183463792 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.178642207 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.179328225 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.184955561 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.179384244 seconds)
  done (took 10.744678918 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.176433839 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.176548393 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.176310453 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.176672863 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.177502559 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.176322112 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.175715964 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.17657938 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.175838896 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.176602373 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.175742597 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.175675108 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.17646357 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.176058254 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.177177096 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.177780556 seconds)
  done (took 19.916608565 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.180114996 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.176565921 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.176510061 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.177193929 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.177006706 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.178174574 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.178908296 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.178171673 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.177406341 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.178466633 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.17814877 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.178083099 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.176579624 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.176569336 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.178674761 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.178343477 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.177683228 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.178062042 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.18182635 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.179181275 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.177686574 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.177729987 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.177820229 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.17826653 seconds)
  done (took 29.36786638 seconds)
done (took 61.122909534 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.167874473 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.168270115 seconds)
  done (took 5.431187374 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.239583392 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.238301696 seconds)
  done (took 3.573990178 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.180307782 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.180070635 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.179376548 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.18024755 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.178332775 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.177873212 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.179623506 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.178986408 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.179514519 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.179636896 seconds)
  done (took 12.890143574 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.179617949 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.179708629 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.178502724 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.178655524 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.180131462 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.179343471 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.180123313 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.180690294 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.180337462 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.179239216 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.179022425 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.179897281 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.180849642 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.180944103 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.180245712 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.179958067 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.181046483 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.18091751 seconds)
  done (took 22.335215841 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.193695838 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.20199819 seconds)
  done (took 3.492000511 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.319434342 seconds)
    (2/7) benchmarking "second"...
    done (took 1.222407471 seconds)
    (3/7) benchmarking "month"...
    done (took 1.296992463 seconds)
    (4/7) benchmarking "year"...
    done (took 1.288185061 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.221864224 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.202086621 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.240516996 seconds)
  done (took 9.888802197 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.181905918 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.392025967 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.493308444 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.732557756 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.182752505 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.184890783 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.002845573 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.185476314 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.187499425 seconds)
  done (took 13.641678938 seconds)
done (took 72.348713799 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.181822616 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.2240043 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.185231471 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.195860944 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.477568727 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.196301019 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.18295915 seconds)
done (took 15.743931001 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.166555673 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.168364167 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.17143648 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.176016566 seconds)
  done (took 9.778777937 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.172832097 seconds)
    (2/2) benchmarking "read"...
    done (took 1.466043806 seconds)
  done (took 4.738231159 seconds)
done (took 15.617049535 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.183944539 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.182146223 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.181810426 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.183091685 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.181940556 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.183118463 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.183149663 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.183879534 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.183309383 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.181963995 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.182207791 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.18255325 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182619989 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.182628392 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.182373094 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.183403741 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.182480481 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.182920727 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182899217 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.183726514 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.184706833 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.182826933 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.183023536 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.183549609 seconds)
  done (took 29.489793856 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.184670402 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.183442782 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.183126495 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.183442327 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.184195191 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.183969784 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.184171205 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.183250608 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.183808397 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.183854497 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.185205647 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.185151092 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.183627242 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.184531439 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184950569 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.185141176 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.184151022 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183818328 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184277408 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.185448708 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.185169215 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184645396 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.18430781 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.184872091 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.185070473 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.18502141 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.185434766 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.185104205 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.186203002 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.184710516 seconds)
  done (took 36.634436152 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.19049861 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.190673331 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.184679363 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.184819612 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.185147389 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.184943054 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.186494507 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.18561624 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.185904135 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.186118259 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.18562056 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.186155004 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.186043734 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.186452039 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.18543227 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.186217333 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.186573007 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.187471584 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.186046215 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.185747331 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.186440445 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.185304865 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.186983082 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.186731856 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.186626423 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.187540749 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.185919326 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.186949888 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.186791171 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.187730008 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.187073556 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.187228212 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.186185556 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.186973363 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.188244177 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.188156519 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.191052646 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.193911976 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.18701357 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.188237581 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.187352436 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.18713919 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.18699416 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.188733345 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.187388606 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.188527175 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.187143074 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.187719717 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.188094185 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.187706239 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.187111194 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.188212724 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.188712369 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.187889412 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.188222344 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.188273905 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.188075937 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.189292838 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.189437863 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.18956082 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.188410604 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.188338315 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.189607287 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.187648529 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.189989947 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.191108594 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.189889741 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.189566682 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.19015562 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.189516553 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.190457329 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.189852658 seconds)
  done (took 86.616963883 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.189318479 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.188951523 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.189253553 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.189436902 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190255271 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.189706318 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.190728646 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189060156 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191018272 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.19006751 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190057389 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.189607577 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189949917 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.191623688 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.190099087 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.189712079 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.191291564 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.190349393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.189557162 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.191265026 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.191096658 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.190987567 seconds)
  done (took 27.288840677 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.192046579 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.192251261 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.191681042 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.192626556 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.192763848 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.191761777 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.190925467 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.192842306 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191414445 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192424118 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191845141 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191955231 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.192699532 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191798159 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.190949011 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.19368451 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.191023656 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.192369528 seconds)
  done (took 22.564275642 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.192889579 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.192372484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.191722558 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.191290725 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.19286147 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.193491931 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193849145 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.193095979 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.191998028 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.193843532 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.192360925 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192313588 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.192854394 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191671301 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194193237 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.192041272 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.19231173 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191820728 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193557662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194281782 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.193144874 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.1936083 seconds)
  done (took 27.348641857 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.194407379 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.194046126 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.192517035 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.193042397 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.192590736 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.194470207 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.19313245 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.194103126 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.194978286 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.194992683 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.194500787 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.195129274 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.19644991 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.195430653 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.193838188 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195980171 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.194127081 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.195020526 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.194661033 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.194028057 seconds)
  done (took 24.995957081 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197978318 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.1976739 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.197262858 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.198391188 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198044824 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.197818752 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199029821 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.197073332 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.198238065 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.198858835 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.196663963 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.198135493 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.198389897 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.19749767 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.197916016 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198488811 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.199416427 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.198882817 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.198701015 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.199573621 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.198614991 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.199567868 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.199375621 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.199005704 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.199289158 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.198897597 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199357214 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.199833417 seconds)
  done (took 34.668552565 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197178309 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.196002077 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.196609921 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.197395209 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.197648283 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.197285905 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.197145527 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.197722847 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.1966575 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.197204403 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.197597985 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.197990968 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.197839613 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.197121648 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.19753618 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.198190828 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197633621 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.197588462 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197336166 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198937297 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.198958821 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197211293 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.196978986 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.197706341 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197832592 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.198466369 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199014026 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.199494471 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.199167257 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.199062958 seconds)
  done (took 37.044564501 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.247159108 seconds)
    (2/2) benchmarking "in"...
    done (took 1.240419492 seconds)
  done (took 3.600220318 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.198474788 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198342466 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.198284454 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.198696752 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.198648105 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.199917085 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.199458097 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199681337 seconds)
  done (took 10.704675502 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.197090942 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.201127995 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.200266328 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.200284888 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.201621893 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.196615534 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.205719318 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.205104112 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.196558044 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.199313446 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.202998833 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.202441635 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.200756063 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.199345846 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.199112955 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.200978217 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.203191305 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.204016926 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.202560151 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.201852922 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.203732374 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.200472371 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.204182948 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.203462122 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.200315343 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.207066398 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.207088658 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.205468435 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.198122563 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.203888654 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.199939098 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.203394476 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.202730652 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.20325911 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.201861337 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.204371845 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.209064289 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224251348 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.207168601 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.207582977 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.202868979 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.201241611 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.19934287 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.201703444 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.202538447 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.206435328 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.202274877 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.201976261 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.198158805 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.203010292 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.208261418 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.199463553 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.20288533 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.202807338 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.20384005 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.209163243 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.210609724 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.203514829 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.206386967 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.209511839 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.215703097 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.211909371 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.204076684 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.207933179 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.209771496 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.218548841 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210319158 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.209324004 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.204331629 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.205718899 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.207829764 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.216503617 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.216112948 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.208220565 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.206815222 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.205166798 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.20152134 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.205317401 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210166431 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.21094817 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.21043505 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.207118692 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.211610359 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.217377336 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.203346874 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.208548132 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.206807739 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.206307971 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.203700715 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.212012391 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.214004996 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.206476629 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.202578252 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.204405418 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.204463531 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.206626612 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.202798778 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.20377241 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.208124538 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.205948682 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.208551205 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.206367704 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.210328296 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.209855614 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.208934097 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.211132801 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.210505485 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.203251766 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.212031689 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.210528643 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.208034965 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.205879468 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.207722103 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.207972068 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.205963752 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.210340315 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.209592931 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.206671256 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.210747019 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.206943037 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.212318973 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.224470535 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.210889164 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.209188263 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.208832136 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.217435567 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.210561665 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.208188811 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.211411093 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.208374776 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.209213528 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.205496349 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.210127699 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.204560781 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.211123332 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.206212592 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.210814415 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.209101114 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.210727942 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.206854338 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.20894144 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.207506239 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.209796207 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.210507006 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.211560618 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.208227782 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.215129377 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.208865467 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.207901069 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.208900139 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.211090606 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.21011656 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.207021164 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.211588777 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.206264458 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212146593 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.20681572 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.214687719 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.211195678 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.210251886 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.209925769 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.206749325 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210665004 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.213578115 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.212526728 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.209208606 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.212084498 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.209918563 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.212077771 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.205587909 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.211238542 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.20629833 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.212003151 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.217612209 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.211162777 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.212101971 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.211099766 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.214542988 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.213710727 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213321932 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.211356953 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.213901931 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.215070217 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.215158392 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.216328637 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.214149261 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.212033437 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.208067599 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.210398936 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21506358 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.211915861 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.218689679 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.21959155 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.22162072 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.210455774 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.215876052 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.20880792 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.21671611 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.213755652 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.216073916 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.213083264 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214059905 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.209903704 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.215975845 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.211738183 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.216283801 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.209445617 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.212697302 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.21547569 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.214431163 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.213797989 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.210206351 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.210565166 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.213878148 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.213808017 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214517216 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.211075472 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.215351115 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.208264404 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.211587525 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.215533422 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.215792837 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.216987171 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.217386901 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.213036506 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215999086 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.212970321 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.211241845 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.215770649 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.214198243 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.214301583 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220267347 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.216325987 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.212580189 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.219501362 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.216498526 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.212768001 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.216347556 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.218445088 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.214684606 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.213071289 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.220852166 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.21448113 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.216057728 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.216862553 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.212472308 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.216418299 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.218479531 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.219355349 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.212974043 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.216459328 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.21395942 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.217470246 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.21394958 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.216704184 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.216610745 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.216441944 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218506619 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.216556501 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.214107302 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.218821943 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.219020168 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.217058117 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.215424058 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.223216501 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.219549654 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.217380298 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.215673266 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.215385015 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.220399945 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.215694459 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.218828576 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.213321908 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.227608646 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.231300107 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.221451066 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.218459497 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.218497388 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221060167 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.218721825 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.21659765 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214704804 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.216301311 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.215347907 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.215099293 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.219755408 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.215902503 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.21964101 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.21608886 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.218699448 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.22116366 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.217501605 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.215495533 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.220874264 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.221551894 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.219701378 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.215132386 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.219709336 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.21671658 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.218914744 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.218608417 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.21651407 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.22549417 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221781045 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.217810385 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.218088371 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.216871415 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.216390305 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.217733437 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.22254228 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.218809336 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.225342912 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.218389751 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.222038895 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.21829747 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225512501 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.224446988 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.220195052 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.226130095 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.22149565 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.216082676 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.217356164 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.222993531 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.225174492 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.227010152 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.219246146 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.223471604 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221669681 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.223045298 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.221250874 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.221834458 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.221277381 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.2219187 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228216363 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.244095106 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.220681076 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.221709385 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.224022418 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.221653602 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.222399418 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.217104792 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.223266977 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.225950148 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.220480276 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.220808166 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.220437186 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.221868971 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.222236833 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.222587297 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.222347922 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.222024855 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.225156644 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.224885165 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.226607057 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.223213143 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.226197957 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226363557 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22653257 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.22772296 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.220499856 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.226124416 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.223084872 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.220488053 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.219325774 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.221716813 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.225534464 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.220951982 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.227079182 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.224587064 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.222512209 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.222106816 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.227050134 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.219910757 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.229028322 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241744565 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.221734581 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226907639 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.22313701 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.22661942 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.22793332 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.224133128 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.2200403 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.222147593 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226751324 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.22911921 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.220894438 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.226220745 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221030792 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.227809539 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.224634292 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.224785352 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.224481134 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.225454515 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.221359796 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.226709925 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.224000946 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.228526574 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.222007981 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.224123985 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.224172698 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.231441369 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.229230426 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.222759306 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228574024 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.226381301 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.221541615 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.224063418 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.22786272 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.223964 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226814334 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.222862909 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.227525282 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.227825295 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.226504113 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.226188221 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.228494986 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.223273981 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.22438078 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.227853751 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.227464532 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.228585078 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.225343974 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.228466476 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.22468698 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.223401381 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.228486326 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.224988855 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228984814 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225468247 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.22989479 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225061998 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.228380934 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.227926857 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.227139037 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.222466854 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.224489955 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.232413208 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.22994972 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.230889508 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.229615218 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.232388273 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.223849286 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.228022148 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.229715457 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.224662135 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.225550431 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.231392076 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.224350852 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.226590225 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.226367455 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.229790102 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.23157421 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.228922703 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.22440453 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234124061 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.251751376 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23126298 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.226805831 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.227801118 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.225839918 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.229729045 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.228619887 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.226139582 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.234097029 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.231998435 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.231957073 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.229294945 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.227572483 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.225364827 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232811062 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229215051 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.226010104 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.230562734 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.226628361 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231748399 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229576669 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.229754991 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.226243618 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.227379386 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.228584465 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.232150942 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.229625592 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.228892192 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.230206117 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.228240797 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232987364 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.230491787 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.2305962 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.230029038 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.227125556 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232628955 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.227988954 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.231124893 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.230686749 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.229640178 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.233904617 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232231029 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.231436445 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.235556873 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.2372354 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.232253109 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.226566009 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.231533728 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.233039589 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.234242852 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.233393323 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228893007 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.230981836 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.233279166 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233977797 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.232679774 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.230166918 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244209983 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.258371559 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229727508 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.230783001 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.233372583 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.235318888 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.234338204 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.232996488 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.231702516 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.233409548 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.238694457 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.235056765 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.238019274 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234130822 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.231275172 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.236404884 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.231504962 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.234962672 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.233232991 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237488378 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.235008618 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.235255182 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.243671764 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237183523 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.237794247 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255390374 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.23712557 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.233229231 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.235704162 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230775026 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.236522304 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.232725905 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.236916829 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.234192729 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234636362 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.235741104 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.231465784 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23713726 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.235163443 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.239343035 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.234406526 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.230334194 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.233339158 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.234928248 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.235162435 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.236097905 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.236549814 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.2365926 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.236301425 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.232409229 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245169895 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.247506947 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.236361 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.235955655 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.236026776 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.236225942 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.235476537 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.240138645 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.240367606 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.236904628 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.238042514 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.23505768 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239407856 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.23945419 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.232524513 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.233476819 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234193592 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.236882559 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.244800896 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249890991 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.238669468 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.236578244 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238430009 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.23822423 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.233555444 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238677406 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23889831 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.234234754 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.235261585 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240952194 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.238531949 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.235984632 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.235437025 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.241967417 seconds)
  done (took 728.250404185 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.238109057 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236899116 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238067548 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238272757 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236200287 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236623929 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238220003 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.236769183 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.237754989 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23623931 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.236993325 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237696976 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.238696847 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237468103 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237630923 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.23874539 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237670694 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238406688 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.23768124 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23796291 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237631446 seconds)
  done (took 27.135307753 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.238249788 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.238284956 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239485193 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.239230387 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23838674 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.238265417 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.238360124 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238800251 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.239719633 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23895142 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.240023016 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23842766 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.240044828 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.239987535 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238765369 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239355676 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.23969618 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239641854 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.239198326 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239820307 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240463051 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239968189 seconds)
  done (took 28.409937505 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.241317749 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.242551859 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.237713613 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.241475483 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.240605562 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.23970585 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.241898313 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.241015125 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.240310034 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.236754259 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.23737981 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.238209211 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.241544341 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.245747899 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.240009281 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.242905202 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.241421942 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.242406889 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.244258103 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.242383862 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.244366779 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.24516149 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.242250097 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.236939144 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.242676005 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.243763397 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.24134806 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.24310635 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.238203353 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.24781459 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.24235734 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.239538489 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.24245815 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.240526276 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.23939089 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.246405175 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.244179168 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.241722947 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.242469119 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.247438516 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.259337422 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.243785401 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.246124068 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.247078999 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.242525669 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.241023011 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.249714583 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.243274428 seconds)
  done (took 60.794060551 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.243488845 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.243948463 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.243387069 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.24334608 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.243294868 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.243569109 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.244000317 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.242994531 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.243106083 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.243691381 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.243513744 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.244775922 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.243818467 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.244386624 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.243155557 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.242368829 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.242937358 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.243867824 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.243778563 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.244499556 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.243512241 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.244530041 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.244490425 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.243964592 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.243519318 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.241663763 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.243579355 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.243820387 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.244565602 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.244245031 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.246428007 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.243008134 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.243558016 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.243235104 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.243383301 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.243776579 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.243145579 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.243499604 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.245145403 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.244115362 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.244103574 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.243923908 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.243455978 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.244582225 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.243900629 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.244693315 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.244355634 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.244893307 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.244279953 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.244006999 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.245261949 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.244191144 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.24365917 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.244090364 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.244614345 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.244633859 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.244481078 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.244970434 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.244376345 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.244980192 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.245142982 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.244441184 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.24534349 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.245283601 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.24611636 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.24621921 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.246168431 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.246108137 seconds)
  done (took 85.755220645 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245931547 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.245765791 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246040462 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245950621 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246121321 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.245158861 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24576366 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.244852541 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.245146133 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.246488036 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245925973 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.244587759 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.244788105 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.244842762 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.244966363 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.245995773 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.246167115 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246066943 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.246773932 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247023125 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.246138944 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.247209774 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.246806445 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.245398505 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.247163332 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.246135722 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245418798 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.246066076 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245248598 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.245568073 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245300756 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.245552401 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.246120449 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.24427385 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.245691985 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.245387495 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.246228562 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245965885 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.246114289 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.245558024 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.246495282 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246317937 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.245373406 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.245296161 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245078226 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.245695255 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.24661374 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.246672446 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.245223283 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.247070447 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.246275302 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246092061 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245792984 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246538852 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.246620507 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.245399683 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245718387 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247209846 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244661462 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.246444947 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24694954 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.246171576 seconds)
  done (took 78.401083996 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244404025 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24483278 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.246246903 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.243860811 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.243287109 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243940647 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244992258 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.244672191 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244683133 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.243709624 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246194028 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243556735 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245150233 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246173099 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244320159 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245227799 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244082377 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244163613 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245478434 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.244522428 seconds)
  done (took 26.046456051 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.244000285 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.244858777 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.243536779 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245443315 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.245348867 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.246021747 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.244938663 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245059812 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244131973 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244867719 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.244782178 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.244760371 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245226574 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.245376319 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.244584828 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.244278553 seconds)
  done (took 21.069533309 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.244684618 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.245272201 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.246668122 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.247074201 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.245818499 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.24492336 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.245576273 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.245833534 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.245822377 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.245424747 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.245458649 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.24544603 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.245271639 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.24676095 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.246855851 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.247393151 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.245741623 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.247188559 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.245263962 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.248751921 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.247346747 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.247222746 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.246467831 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.247957195 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.246718643 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.247964402 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.246355646 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.248552298 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.246856449 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.247526969 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.247946808 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.248531894 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.247430309 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.246689829 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.2491545 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.248286323 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.247315109 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.247259559 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.247317647 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.247945707 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.247830701 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.247104758 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.24813316 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.248421159 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.249584876 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.248846677 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.248401953 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.248873313 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.248147174 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.248748742 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.249980876 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.250737242 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.247861101 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.249143067 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.249078489 seconds)
  done (took 69.757299151 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248325969 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249501105 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.24846803 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.248219136 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.248900527 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.249367539 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.248054571 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.251204804 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249682938 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.249362969 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249709817 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.250514739 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247966607 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.24893376 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.24891327 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249889871 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.250036212 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.249552051 seconds)
  done (took 23.642686075 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24938685 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.250108371 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.250711012 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.248444984 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.249876823 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.249370618 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249973958 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.250514972 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249791788 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.249860982 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249724571 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.249929846 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250333183 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.251560393 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251310759 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250332529 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.2506047 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251497896 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.250442018 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25048677 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.251296367 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250655828 seconds)
  done (took 28.663515715 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.246949907 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.247043838 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.246143946 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.263297132 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.261028735 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.247039787 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.246401444 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.246429736 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.268443681 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.290838226 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.284245717 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.262975312 seconds)
  done (took 16.268424473 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251221542 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252045849 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251678272 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251913651 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252484691 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251832703 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251402912 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251795977 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25211316 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25443464 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253377163 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252511973 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254209274 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252199683 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252574474 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25284106 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252374221 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252116504 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252686029 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252881218 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253735763 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252401032 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253863854 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253251819 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253277377 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254091244 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252740411 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253168677 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253106282 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254307326 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255012406 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253801657 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253938419 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252918443 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252079539 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254524098 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254599853 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253437609 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254960355 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253532607 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.254446353 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254079628 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253698608 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254984882 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255206585 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254263499 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255764623 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254076169 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254451708 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254980011 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254833338 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256031984 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254704812 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254694662 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254416424 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255605744 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255003034 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254902062 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254117525 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255813277 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256965759 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25502105 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256710643 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255255786 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254850871 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255211641 seconds)
  done (took 83.912623789 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254495981 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256153295 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254176521 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256100689 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255515694 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255918286 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253763972 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253785279 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255064341 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254928609 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255138359 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254892747 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255282754 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255608345 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254850143 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254306539 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255682934 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255165008 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255303807 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256214671 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255850036 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254731616 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255269634 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255923873 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256474246 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256344272 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25659816 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255041099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254566017 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254043107 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255627274 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255527519 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256476977 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.255366748 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255425258 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255836387 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25486065 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254362202 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254753866 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255514104 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255699749 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255937306 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256400146 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256143613 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256484434 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255315025 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255932301 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255294339 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256654173 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2557442 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257337529 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256625293 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256352123 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255315826 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256185055 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256214368 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256952074 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256230613 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257627956 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257277628 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257502532 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255905454 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257795207 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257164445 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256710479 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257794189 seconds)
  done (took 84.043452824 seconds)
done (took 1704.20809192 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.417790109 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.370690629 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.252651214 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.260184381 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.251864873 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.278485365 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.264863763 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.251750673 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.253024694 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.252732532 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.252316602 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.442220742 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.308876501 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.25186606 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.251964422 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.350010519 seconds)
  done (took 25.873511207 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.281927756 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.26041057 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.37106994 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.277595696 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.279863744 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.442066326 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.315491691 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.256333016 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.427164474 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.281834721 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.253683894 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.278656885 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.256163662 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.250775754 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.272271458 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.441957887 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.50313487 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.253433505 seconds)
  done (took 27.866663904 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.704737747 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.265744149 seconds)
  done (took 5.133111771 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.274583932 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.25569165 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.257084179 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.253497383 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.247076567 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.248379753 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.254226382 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.250202362 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.249604655 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.377971261 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.259528099 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.270408584 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.273602116 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.254499803 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.260281446 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.298863204 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.406117569 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.260987127 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.257703885 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.260616673 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.254439792 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.351930641 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.299510019 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.260632769 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.377024513 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.249359396 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.262997082 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.262648979 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.376979203 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.260623493 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.255453263 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.256520252 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.258259137 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.249689563 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.704192721 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.266081854 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.281809684 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.282801815 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.259236295 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.403648151 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.259477491 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.262202946 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.250581572 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.710992348 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.391263164 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.37586774 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.274740621 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.262697299 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.258125405 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.323517763 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.261116093 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.259292111 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.316598023 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.105482336 seconds)
  done (took 81.12330527 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.310297738 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.250357752 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.430849643 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.270698125 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.249251891 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.254642967 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.264984917 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.531573387 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.271645658 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.26465148 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.540708605 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.826722142 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.270624962 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.303797967 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.116330343 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.319809851 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.251222783 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.251177529 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.250984149 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.251881787 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.798949873 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.256018188 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.251930527 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.398459085 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.289312481 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.763703364 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.251421092 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.265460624 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.253669846 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.251273222 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.769167006 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.267926582 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.317600319 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.252169736 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.526449493 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.623855195 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.585012365 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.256182357 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.28277576 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.254731609 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.264168397 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.748872001 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.612058999 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.254460242 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.265412365 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.748304935 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.250914388 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.254844762 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.257583312 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.497779221 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.250275461 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.251588514 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.250273486 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.250846472 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.248405707 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.333267604 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.329548868 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756391073 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.250138649 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.250520984 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.26883236 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.251817256 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.253866737 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.252047952 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.270419861 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.599799739 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.403147625 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.250702134 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.595823181 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.760154797 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.271727308 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.818415666 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.269129358 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.273369991 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.462162029 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.248988275 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.266518836 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.742067617 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.255316223 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.250552976 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.575056203 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.251627273 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.531489792 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.268382161 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.269998907 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821269761 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.260383229 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.255094882 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.249372049 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.250896473 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.248299342 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.250942319 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.51849118 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.27883751 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.247798635 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.249822002 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.275389602 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.25825482 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.251333211 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.250233537 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.811055661 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.270790171 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.24869333 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.251850076 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.249084044 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.253197828 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.251110828 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.251439286 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513198244 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.248595305 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.25436431 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.249264733 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.24896506 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.255217789 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.380176417 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.24755616 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.537438419 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.254570252 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.248515905 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.253668383 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.247026876 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.303692698 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.248420071 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.248693262 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.11687102 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.522016148 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.261879873 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.246637641 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.248184415 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.247100931 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.247947091 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.256138947 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.289078515 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.250217996 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013649894 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.273267201 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.275361294 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.248123366 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.249769822 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.247952987 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.248625269 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.247346538 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.532517426 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.510546066 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.400411011 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.251643042 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.249289367 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.981041794 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.294705559 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.427723489 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.265129933 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.249880689 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.495470795 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.457967359 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.25043909 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.247831821 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.248501204 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505182583 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.248738397 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.549355014 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.772408801 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.263645433 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.253714064 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.016731847 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.940915348 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.250100344 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.252152197 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.52144093 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.264401382 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.249552572 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.249265505 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.250272195 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.263015789 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.267242206 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.250488249 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.250275675 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.24892891 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.29742184 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.438695038 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.264065373 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.260247776 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.733941157 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.26960884 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.250958646 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.257576796 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.253711553 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.251085002 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.336177314 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.253198936 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.277199728 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.251063224 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.257661248 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.747628972 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.252533136 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.252698155 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.439125225 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924960396 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.271699206 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.252329576 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.251618607 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.159506583 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.757941563 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.291510517 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.534869403 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.259276443 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.288951352 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.251692525 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.287383277 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.759132237 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.253543209 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.250742278 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.883583558 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.266741592 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.793383571 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.25154341 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.253731542 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819995029 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.267565738 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.255345297 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.252894592 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.261688644 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553980581 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.253127521 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.303195194 seconds)
  done (took 479.334909597 seconds)
done (took 620.496466059 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.253121857 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.259089082 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.249179175 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.258264163 seconds)
  done (took 10.186490904 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.270570403 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.259303564 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.265090175 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.258638234 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.265659803 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.259143245 seconds)
  done (took 8.746327895 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.25289392 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.25984114 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.259630836 seconds)
  done (took 7.940222482 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.449396485 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.269865217 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.585899448 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.276065672 seconds)
  done (took 8.749187684 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.265918339 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.266303944 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.26618123 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.267807549 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.270971105 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.270793857 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.266428889 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.267342527 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.271583251 seconds)
  done (took 12.579772621 seconds)
done (took 49.371603835 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.245723866 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.415307228 seconds)
    (3/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.965587939 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.316382528 seconds)
    (5/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.394193273 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.246623299 seconds)
    (7/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.310166073 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.304413615 seconds)
    (9/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.245609032 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.368259325 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.348938315 seconds)
    (12/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.393924733 seconds)
    (13/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.282975065 seconds)
    (14/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.382729093 seconds)
    (15/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.40974944 seconds)
    (16/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.164881539 seconds)
    (17/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.191791808 seconds)
    (18/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.305300168 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.354343165 seconds)
    (20/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.269530451 seconds)
    (21/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.294140707 seconds)
    (22/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.422241611 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.298816653 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.345091119 seconds)
    (25/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.399003253 seconds)
    (26/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.354535656 seconds)
    (27/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.460786196 seconds)
    (28/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.346828674 seconds)
    (29/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.31538367 seconds)
    (30/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.338657355 seconds)
    (31/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.510260806 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.334079892 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.363355617 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.398009689 seconds)
    (35/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.912217282 seconds)
    (36/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.924932942 seconds)
    (37/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.39334947 seconds)
    (38/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.503737776 seconds)
    (39/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.297224987 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.291301616 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.339316258 seconds)
    (42/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.248129292 seconds)
    (43/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.33292772 seconds)
    (44/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.321077253 seconds)
    (45/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.449314949 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.281363192 seconds)
    (47/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.422382706 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.016233012 seconds)
    (49/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.400728586 seconds)
    (50/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.909774939 seconds)
    (51/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.004414023 seconds)
    (52/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.298220931 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.387974917 seconds)
    (54/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.253985354 seconds)
    (55/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.317950569 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.34790792 seconds)
    (57/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.249396466 seconds)
    (58/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.092894553 seconds)
    (59/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.35589044 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.372500755 seconds)
    (61/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.269219472 seconds)
    (62/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.989876486 seconds)
    (63/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.356322783 seconds)
    (64/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.400886889 seconds)
    (65/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.311278286 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.2503906 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.254510627 seconds)
    (68/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.361163736 seconds)
    (69/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.253111423 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.406013088 seconds)
    (71/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.341009436 seconds)
    (72/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.359580915 seconds)
    (73/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.312524262 seconds)
    (74/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.310959848 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.336544641 seconds)
    (76/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.299885976 seconds)
    (77/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.346622481 seconds)
    (78/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.256458373 seconds)
    (79/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.365279715 seconds)
    (80/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.255690575 seconds)
    (81/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.289203706 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.254374603 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.424831695 seconds)
    (84/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.302195575 seconds)
    (85/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.324498001 seconds)
    (86/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.408570996 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.361446025 seconds)
    (88/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.252073945 seconds)
    (89/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.999442964 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.361853455 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.338544559 seconds)
    (92/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.252276035 seconds)
    (93/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.365752416 seconds)
    (94/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.358838866 seconds)
    (95/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.042633991 seconds)
    (96/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.969963219 seconds)
    (97/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.253123223 seconds)
    (98/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.254269521 seconds)
    (99/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.288378764 seconds)
    (100/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.256190615 seconds)
    (101/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.275070331 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.368425208 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.295459469 seconds)
    (104/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.252434937 seconds)
    (105/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.070087355 seconds)
    (106/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.271943672 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.469039595 seconds)
    (108/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.303739045 seconds)
    (109/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.312411029 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.320044879 seconds)
    (111/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.403556765 seconds)
    (112/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.047872639 seconds)
    (113/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.273909006 seconds)
    (114/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.406779135 seconds)
    (115/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.95765727 seconds)
    (116/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.427481517 seconds)
    (117/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.263303115 seconds)
    (118/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.312432415 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.298524858 seconds)
    (120/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.407232808 seconds)
    (121/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.294438093 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.470743527 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.051159021 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.389858034 seconds)
    (125/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.399154298 seconds)
    (126/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.253589269 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.345955713 seconds)
    (128/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.275585051 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.334286488 seconds)
    (130/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.254447276 seconds)
    (131/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.269840713 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.136098421 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.274097568 seconds)
    (134/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.077808405 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.465353203 seconds)
    (136/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.411307596 seconds)
    (137/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.168796166 seconds)
    (138/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.310317372 seconds)
    (139/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.311569702 seconds)
    (140/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.415527506 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.399240844 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.340179101 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.000015323 seconds)
    (144/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.287237677 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.403815243 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.303296098 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.303937014 seconds)
    (148/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.255801086 seconds)
    (149/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.316633147 seconds)
    (150/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.263435606 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.27988167 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.961076392 seconds)
    (153/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.30326823 seconds)
    (154/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.025822862 seconds)
    (155/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.41385901 seconds)
    (156/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.430454492 seconds)
    (157/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.441550831 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.271273618 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.399087037 seconds)
    (160/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.34410796 seconds)
    (161/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.260720628 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.333689501 seconds)
    (163/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.9569671 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.305947721 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.40512652 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.375737271 seconds)
    (167/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.443781247 seconds)
    (168/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.318759134 seconds)
    (169/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.29245345 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.288676443 seconds)
    (171/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.931213797 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.445828501 seconds)
    (173/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.316436005 seconds)
    (174/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.303057013 seconds)
    (175/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.014486053 seconds)
    (176/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.472970167 seconds)
    (177/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.26211163 seconds)
    (178/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.287077844 seconds)
    (179/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.264940247 seconds)
    (180/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.352788144 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.306539423 seconds)
    (182/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.259217648 seconds)
    (183/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.342540825 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.266873424 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.502823003 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.291988042 seconds)
    (187/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.268205351 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.276669088 seconds)
    (189/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.403520172 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.363227451 seconds)
    (191/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.303322522 seconds)
    (192/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.300453312 seconds)
  done (took 323.308190112 seconds)
done (took 324.478920391 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3090029 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.331759322 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.28628594 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.287870156 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.288188805 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.291722209 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.296805477 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.287213228 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.285467083 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.285468094 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.290447108 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.28347987 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.300942765 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.283344074 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.321789517 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.287725167 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.28900975 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.281892748 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.286497091 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.289057081 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288654883 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29047968 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.296001158 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.288102128 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.296680759 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298414697 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.296014761 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.29155834 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.284858175 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.287259936 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.280689953 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.300038312 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.290888275 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.284906245 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.290956955 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.285341885 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.2916553 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.332969404 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.293461754 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.284179572 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.281701678 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.290827775 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.295343662 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.294429676 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.284864598 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.297272263 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297380903 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.305490578 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.281236227 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.28647749 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311151568 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.287037966 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.281429916 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.283235732 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.288995314 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.310568028 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.284186031 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.307130166 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.280614478 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.292283792 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.324686011 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.307255294 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.286833306 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.299309116 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.28253228 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.303402433 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.284801153 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.290852711 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.281960164 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293613099 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293578862 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.282782876 seconds)
done (took 102.274898069 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.409375138 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.279759592 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.419177539 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.282224644 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.441837322 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.432001077 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.282525477 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.282462023 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.281965938 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.130248025 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.283167845 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.282195068 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.281458668 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.282966246 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.412667703 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.282995577 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.283911123 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.019476349 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.286087544 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.426042213 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.278018272 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.284041424 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.283197044 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.145393383 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.280798871 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.278567013 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.423752506 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.283836879 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.037152005 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.274904395 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.276681866 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.03683279 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.426691363 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.303583991 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.294020971 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.293249287 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.445232678 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.302236388 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.411584879 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.411810436 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.422034611 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.324271605 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.275383244 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.275387456 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.286001455 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.28748716 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.285648644 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.314014902 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.282566035 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.285563337 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.022180073 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.295434031 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.295085393 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.285657307 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.286460992 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.306168225 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.285685852 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.287097939 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.429709647 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.288908707 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.411908506 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.148461237 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.13301612 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.286874855 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.280067599 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.286658593 seconds)
  done (took 105.407080488 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.351426739 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.361954044 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.388091543 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.285223583 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.33493876 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.389150867 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.287949147 seconds)
  done (took 10.585457846 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.288463162 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.287924649 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.332350659 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.332556477 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.288037719 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.439324565 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.289001919 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.294343554 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.286979855 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.336171303 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.288974301 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.287827295 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.295964282 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.282215547 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.33195603 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.295843045 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.398151677 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.284791564 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.289731174 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.435953066 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.288015511 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.297078001 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.335655638 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.296350887 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.290113153 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.290938093 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.052711071 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.290265045 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.28859918 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.289120504 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.289579442 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.339210303 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.289519264 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.28796873 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.289593187 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401368797 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.290272767 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.288938804 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.290364177 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.286805126 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.29362903 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.289227171 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.290847888 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.288171113 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.290104226 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.310718436 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.290288611 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.294275228 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.290303467 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.289166957 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.337021792 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.290562422 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.29021725 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.29053893 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.340971462 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.299332018 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.290720946 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.291006496 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.290829634 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.290732045 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.439003956 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.335295908 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.289826707 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.335947368 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.290539896 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.290269504 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.289936728 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.290577481 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378594071 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.290150262 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.336604331 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.292375116 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.466582035 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.312707137 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.29381296 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.290405851 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.290705841 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.292991831 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.286373209 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.293590739 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.292266681 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.288995047 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.294848304 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.290662541 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292254628 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.445983904 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398356939 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.292661888 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.301238485 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.294579355 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.294381447 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.340494594 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.292707944 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.292254165 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.341148321 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.403857566 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.34235601 seconds)
  done (took 133.154282276 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.300801366 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.302305083 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.293074894 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.317049574 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.291497465 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.289695624 seconds)
  done (took 8.986748945 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.291446035 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.295812342 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.294384711 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.293654921 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.295097994 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.295624979 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.295596592 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.292013068 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.299165019 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.295593498 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.297333541 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.296929504 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.296351183 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.295036846 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.295336209 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.294689047 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.29594262 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.294219403 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.296517334 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.296315249 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.288626213 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.295631765 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.297491086 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.29295355 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.298196372 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.297867928 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.312069318 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.293690451 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.295016219 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.297834482 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.315176831 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.297270206 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.293317724 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.294269611 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.299050255 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.293090314 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297476571 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.295996317 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.294483621 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.29638591 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.298329097 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.297889365 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.296228669 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.297829155 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.292727569 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.297257111 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.300038865 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.312756915 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.297480749 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.2979508 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.2987183 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.297081371 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.297413131 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.299190324 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.296522713 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.313615925 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.300355084 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.299401878 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.298785148 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.295240363 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.299860992 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.298671097 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.29478031 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.300890279 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.297263865 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.298681112 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.296334641 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.301807823 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.299557975 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.298587394 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.299385074 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.299101206 seconds)
  done (took 95.618344431 seconds)
done (took 354.936955226 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.353755099 seconds)
  done (took 3.550260468 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.355226105 seconds)
  done (took 3.55373525 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.270940923 seconds)
  done (took 21.472257466 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.38092642 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.333395196 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.317902066 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.290141906 seconds)
  done (took 10.520219109 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.524488903 seconds)
  done (took 3.72121469 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.29130481 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.301987369 seconds)
  done (took 5.792097149 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.471083072 seconds)
  done (took 3.668464021 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.570233648 seconds)
  done (took 3.773274199 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.318541232 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.306201873 seconds)
  done (took 5.831839932 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.280430971 seconds)
  done (took 3.47821026 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.927797995 seconds)
  done (took 18.126601138 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.302422236 seconds)
  done (took 3.503219983 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.316175078 seconds)
  done (took 3.513686221 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.659574755 seconds)
  done (took 5.857656893 seconds)
done (took 97.562286302 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.289104195 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.296136109 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.294590474 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.294266743 seconds)
  done (took 10.372519833 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.378014153 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.377882322 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.384671018 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.368150394 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.368992284 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.37922953 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.339755369 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.32477883 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.368526879 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.373825719 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.38605229 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.369143727 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.377933329 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.32567854 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.36782327 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.385416263 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.368929075 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.386650168 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.324688126 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.36936302 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.300343258 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.369135619 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.368164987 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.300799766 seconds)
  done (took 33.862898372 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.813154509 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.368614935 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.450676242 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.347708585 seconds)
  done (took 7.18086587 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.441866618 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.440069765 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.459836311 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.503287613 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.51733757 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.444037811 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.326895111 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.322518279 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.307965722 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.44345093 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.433691226 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.377962048 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.542156238 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.300379906 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.593548137 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.301999914 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.301568024 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.44390604 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.496487753 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.516714666 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.302155932 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.440411288 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.444034458 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.380075202 seconds)
  done (took 35.283001248 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.310512212 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.323115449 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.304391852 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.319378876 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.304515515 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.3042155 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.305670811 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.311040143 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.302434212 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.30298983 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.304682668 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.317890593 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.302949772 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.305165587 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.312077328 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.306128951 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.306191907 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.310330004 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.313295771 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.304555594 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.30497747 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.310987035 seconds)
  done (took 29.988840778 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.293252226 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.292955364 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.645589384 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.549144405 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.29381283 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.298413942 seconds)
  done (took 13.57548841 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.363280785 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.495640209 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.300540061 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.626225734 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.719164742 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.305818667 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.301588657 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.52955297 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.826317912 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.80462207 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.357883392 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.366806123 seconds)
  done (took 19.200408217 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.30127667 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.299373756 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.301059993 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.317770841 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.353746309 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.310815368 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.310637387 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.295255704 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.354938195 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.356765714 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.309330477 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.352227408 seconds)
  done (took 21.06838879 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387742449 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300782298 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298611764 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384951254 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317602984 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143829966 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379748239 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017266012 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.327715456 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575262652 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303995173 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389924092 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.553851001 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308698575 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304212337 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.267107225 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533182884 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754090646 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302624078 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301399375 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337793327 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313633538 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306197596 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.50416449 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150013262 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300969572 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.564552342 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.302072691 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564503494 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.318003398 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310245156 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30186821 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576560639 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940051891 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420859269 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498478221 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303067554 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.302349251 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.288428587 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.302981339 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308443263 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303351886 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312249745 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302699861 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301028434 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310532977 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998356836 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.327446151 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.303051801 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.302838568 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540501737 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406082842 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.307788001 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303736256 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365670257 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302669612 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.309079454 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430945888 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886668664 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313651348 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317991828 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.308166373 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299796141 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328415397 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884901251 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.310785032 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.309223199 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.310323321 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303877043 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313053034 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332822523 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305172084 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.327196344 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304095285 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97835322 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310978783 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328887403 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822118397 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316767917 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.308592853 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536296566 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304765902 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3061919 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.304354953 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305366045 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957112532 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313111285 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.293680457 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349682141 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.009522335 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.522051775 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330659537 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336248837 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.527352368 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.292217511 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304565231 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.305718985 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311756254 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326981199 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.010860592 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328787835 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.314002782 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5619719 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.516322978 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315006318 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.276125875 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770899362 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338246456 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.335802349 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315083162 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.510007051 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.861176502 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327304596 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305818967 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343511099 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307351638 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001369098 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319031849 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.318542771 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318155851 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569834318 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.062576801 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309156672 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376442746 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313687304 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.308799945 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314417741 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313992695 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308257904 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.498929317 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339245307 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.321753368 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.310300231 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308064129 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.306448892 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327017251 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.314460849 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.530910264 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319494804 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591470703 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308565144 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309332216 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309537899 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.529724168 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.310079864 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.316049999 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570032619 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318758666 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324019357 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325222421 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338441497 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418718569 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34046069 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.317444846 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.568518304 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.315945753 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.315030547 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316898809 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315799295 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312898134 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.31672408 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31678432 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860013558 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292523858 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314847142 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.309985266 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.325026873 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378589787 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.318486848 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510934549 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.328457062 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31188872 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.319088163 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.310135605 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538242028 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320074044 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.317051046 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394795032 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.76944726 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.883505094 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.331833582 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.312353439 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.313276795 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.311957814 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313348111 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310915512 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313634003 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510093064 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331400614 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31312179 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.883705852 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318720838 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316421913 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.323480485 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.322902676 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.319046809 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313164196 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.312217569 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317219544 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332433841 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.327671767 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447782788 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.328874383 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312203176 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.874571846 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.320461643 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312474236 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313415369 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344478608 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317910192 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106075071 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57370056 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311192383 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567709891 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319026455 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.336751463 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.313034089 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317173788 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329697098 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.325196109 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338869792 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.324662786 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.324200904 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320274401 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87070857 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016151329 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824104679 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327960231 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.31698301 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336250615 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011039682 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332606154 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315925915 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538706523 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018359478 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331991433 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77802132 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.33272894 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035954614 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558316894 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552006005 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323765162 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.318873996 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561879416 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531713263 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348561034 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316392086 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321633479 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.303162341 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853153231 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332792827 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402458842 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015505119 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33662262 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322250104 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.39652272 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.315885481 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700031752 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339437973 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318015527 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320756441 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321770259 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128949398 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32039448 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317406735 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899397716 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324182883 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.777377387 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334784332 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.517845193 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.333109829 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.320887016 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.317515383 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.334544329 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.570647576 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557770411 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323807395 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319546509 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827758301 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.1914863 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.325761776 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319466675 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019066279 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319684498 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590253223 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.324633904 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.334969183 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33190067 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318506305 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318685097 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.319199152 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323923304 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293683953 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776525285 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.325738091 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337599898 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327240157 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324958649 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.573446667 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.335193636 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.871253097 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553761531 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318049386 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350959703 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.325311028 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331360287 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.313195786 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320437843 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319907201 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35608594 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.539389722 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323032742 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.312867979 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320981161 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530043467 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.321049264 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319987025 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556222145 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.32654157 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.334598383 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027882742 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357676997 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.321024924 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326526789 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323726093 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363761672 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390596477 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522522815 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.337385481 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.332880758 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708119828 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343675442 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329329606 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.337383904 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416763858 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322237082 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.343707015 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.116028719 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879986858 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016170469 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.883696615 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569560788 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328781361 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328246468 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323634031 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458814146 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323278319 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59851091 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323119631 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.327086163 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350776727 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334696355 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332142538 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537352449 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600018823 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323532721 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328709237 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328606149 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.323233332 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333660766 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.532351687 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785135397 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855885269 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329569761 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32997074 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.026947998 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618223271 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325136285 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324427706 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32459221 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.324525987 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.34650257 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.336679241 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324530547 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463266536 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.564528221 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973728516 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.355599112 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.364687306 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.843733287 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324919343 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.598002963 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326348945 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.528860329 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886708667 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.994082439 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595624381 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39579915 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.526734438 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.330886717 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462453796 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.328571397 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326197587 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32589461 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325509258 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.326030799 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.335455799 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891433123 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594220078 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.33161951 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.328832056 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356063695 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.336777829 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549608984 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98874138 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549158467 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335777519 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332093057 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326780618 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887184895 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574177059 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333565685 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.33221696 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557709462 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332828483 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354297346 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.846631446 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.327930504 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843244969 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.216309937 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34982893 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33777251 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.001042935 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89563789 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.334720395 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808290227 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331777203 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336987303 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610328923 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.335721954 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336587545 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613362458 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.334748992 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33846538 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537434005 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.88859715 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06481916 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.348201134 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359125358 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.335858024 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33019553 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373760743 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329887284 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338855373 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.731988506 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353944603 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330034203 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343708376 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.337286382 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341069688 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.335631169 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330130678 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.337274383 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.330876116 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.318669296 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356261578 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459341009 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873106517 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359288386 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.007471344 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.655436672 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.585043202 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341202764 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.322876198 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.336721195 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331002183 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33118561 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332276125 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341568386 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849335657 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.345589276 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.343541265 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.336729977 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.332342071 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540629867 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333781665 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535622611 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348833452 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357903224 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.318707382 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332103157 seconds)
  done (took 946.436921272 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.328918325 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.363541984 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.357193554 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.357516046 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.351701469 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.426449904 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.392455459 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.456562935 seconds)
  done (took 20.267529949 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.329819903 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.337380669 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.342599489 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.338710585 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.334316291 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.780580776 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.359644204 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.336707755 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.349457888 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.339780919 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.341799207 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.97869136 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.358895224 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.339774287 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.335479554 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.338891652 seconds)
  done (took 31.784494812 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.320418432 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.482512173 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.10249365 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.346760812 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.332696192 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.342981694 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.528160097 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.358841257 seconds)
  done (took 26.048733038 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.341689754 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.344002558 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.343412156 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.342747803 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.34346849 seconds)
  done (took 7.948656878 seconds)
done (took 1204.220358578 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.339879944 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.339964231 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.340241917 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.34125906 seconds)
  done (took 6.595796324 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.32084306 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.32126044 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.323158429 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.334854103 seconds)
  done (took 9.534109669 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.005128854 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.951410986 seconds)
  done (took 5.191141986 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.822051333 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.828653339 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.82472 seconds)
  done (took 6.711652148 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.630935257 seconds)
  done (took 2.866421149 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.249559071 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.332960278 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.009561708 seconds)
  done (took 7.828916665 seconds)
done (took 39.96518604 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.342505148 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.579867127 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.488745135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.340374508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.492169853 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.531907874 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.13182562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.338522463 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.334778303 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.331484756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.341685123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.494180674 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.051775756 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.5819359 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.051363232 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.582784583 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.494959567 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.334124756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.331992072 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.358414753 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.13901869 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.339669338 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.34045868 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.340882674 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.494704546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.479016321 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.333480569 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.582599233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.334075895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.33873395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.47862149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.332619763 seconds)
  done (took 81.307460786 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.33331926 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.332973457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.33711876 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.334084567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.333942918 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.334946563 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.333448541 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.335403626 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.34685652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.344904838 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.333787081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.335069044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.33672458 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.342757497 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.335756628 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.341837956 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.342175524 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.333281103 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.333423309 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.348946479 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.337908199 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.333447924 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.335967558 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.336004417 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.334761227 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.33413627 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.350409391 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.334928748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.335115566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.334958558 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.335501327 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.35080947 seconds)
  done (took 76.043480067 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.344331973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.339578349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.337154185 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.334664596 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.337232944 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.336667494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.337444725 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.335230064 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.336232125 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.335310736 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.335766111 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.338487451 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.339128702 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.33749224 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.352857375 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.33611543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.35122104 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.3366488 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.351820888 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.343302093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.339870131 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.345629039 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.336781122 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.337114434 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.356211137 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.339056305 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.33749199 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.337719661 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.343504744 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.336542329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.341678213 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.342206236 seconds)
  done (took 76.130468293 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.657782985 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.347572548 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.350292433 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.342580692 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.351284613 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.347717776 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.343129761 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.66375876 seconds)
  done (took 14.644861621 seconds)
done (took 249.364665995 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.349804166 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.826521169 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.386095689 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.356443987 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.362981389 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.37040836 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.559640275 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.383808059 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.557425285 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.35936523 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.376890975 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.342838385 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.108876506 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.493786263 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.172729165 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.284958993 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.193568248 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.338474382 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.904403299 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.616840551 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.370165007 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.344869768 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.167552295 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.215718941 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.331296613 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.423046298 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.445044214 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.570923772 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.504024608 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.421326959 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.844567188 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.343096091 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.361907943 seconds)
  done (took 62.932537042 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.344709856 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.349711516 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.350501657 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.350535885 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.350422649 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.351185376 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.346600427 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.351306606 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.350022977 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.351401726 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.35072809 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.352143656 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.351381988 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.350724291 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.350869339 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.342122476 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.3457662 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.35009727 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.34582938 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.342157344 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.351240473 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.35154528 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.354577439 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.350942238 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.352119925 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.351215838 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.351772673 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.354434595 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.350343088 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.351260581 seconds)
  done (took 41.741357235 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.351242264 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.920890913 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.060923191 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.360101565 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.347880911 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.35294436 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.616948668 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.351641605 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.35263567 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.351003847 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.807050322 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.355717391 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.384134785 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.08451423 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.353193175 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.353200031 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.354240219 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.35101581 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.924701671 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.364864739 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.63788567 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.357644629 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.619743435 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.360713405 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.370644292 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.350749581 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.354865297 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.167725193 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.370451023 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.810581702 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.08150402 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.619402613 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.106961242 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.087979882 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.090956572 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.359727445 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.353843654 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.81669851 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.35266568 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.350945185 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.618935549 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.35658691 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.070265634 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.027259069 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.368380286 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.354708803 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.17274313 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.831510817 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.582956203 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.362187809 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.075767309 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.359814082 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.355879411 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.353462066 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.579295015 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.354242766 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.351539722 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.196265326 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.376469097 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.621283114 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.361199081 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.353930706 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.914720919 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.358408264 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.915855116 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.357816636 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.361999611 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.371414454 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.071382711 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.360706333 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.036720084 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.369841652 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.356689894 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.810416597 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.917616467 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.231609714 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.355257215 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.930549875 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.130290715 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.640119119 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.36215481 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.141626176 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.641567213 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.362459793 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.357892583 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.359777364 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.357652017 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.421995363 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.621681699 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.989263047 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.036743527 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.201910088 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.644699839 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.361475832 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.355405912 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.201786598 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.377625649 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.357812195 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.072695248 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.040392689 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.371610421 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.363063807 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.047493346 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.3752248 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.626833405 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.365712068 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.078447634 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.361113061 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.423735342 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.358850304 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.363639632 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.376523175 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.626863747 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.363425004 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.359190061 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.027179313 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.850807376 seconds)
  done (took 189.451999858 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.366541819 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.351662195 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.352222757 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.366623872 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.350802109 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.357267911 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.349513793 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.350113137 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.356192699 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.350221829 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.351292251 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.359921068 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.357669293 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.351314227 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.351694838 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.351555167 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.351658024 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.35276041 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.352795012 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.352681235 seconds)
  done (took 44.336582726 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.360359585 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.887941186 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.859025453 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.366636653 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.36200052 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.35830341 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.411202435 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.363114442 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.362403208 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.641939342 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.525176318 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.367188338 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.362586586 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.361827069 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.854548193 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.357268642 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.642582187 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.895337737 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.368687242 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.889387605 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.35917037 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.362667518 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.357748524 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.885146507 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.64595287 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.628585094 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.413430069 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.887521875 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.365361643 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.363442336 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.88615931 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.363691639 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.360475349 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.888022621 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.384459414 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.377871449 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.362859507 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.414477618 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.414728584 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.643827962 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.89634206 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.638196997 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.379062311 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.535390448 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.367055867 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.352602135 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.898512317 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.38605524 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.354842344 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.366851958 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.371367526 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.86444902 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.382602371 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.864040715 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.3866282 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.366292782 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.896109343 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.868037063 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.880587593 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.52597199 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.365627524 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.627481769 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.370632544 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.900520302 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.387113884 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.366207407 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.366870138 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.523542849 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.902694808 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.634454185 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.65277635 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.653583536 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.37105314 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.421503575 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.386285152 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.646626447 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.420029588 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.763124518 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.646877259 seconds)
  done (took 123.207356057 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.612175246 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.47569046 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.734148589 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.933524166 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.842049314 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.496054518 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.468382005 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.618179776 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.37510619 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.451014802 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.977370213 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.480008314 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.094697077 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.44992058 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.464292652 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.524444592 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.740566592 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.33114419 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.020020948 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.942660204 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.362621019 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.473069287 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.871676866 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.548185238 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.372995976 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.897906415 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.279901165 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.857563527 seconds)
  done (took 51.95410162 seconds)
done (took 514.867581264 seconds)
SAVING RESULT...
DONE!
