cset: moving following pidspec: 2032
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.648698155 seconds)
loading group "string"... done (took 0.547466131 seconds)
loading group "linalg"... done (took 9.314211853 seconds)
loading group "parallel"... done (took 0.175794521 seconds)
loading group "find"... done (took 1.524164076 seconds)
loading group "tuple"... done (took 2.101915544 seconds)
loading group "dates"... done (took 1.553356942 seconds)
loading group "micro"... done (took 0.211689336 seconds)
loading group "io"... done (took 0.598204069 seconds)
loading group "scalar"... done (took 46.735207052 seconds)
loading group "sparse"... done (took 14.312041351 seconds)
loading group "broadcast"... done (took 1.252946998 seconds)
loading group "union"... done (took 11.027655258 seconds)
loading group "simd"... done (took 2.790166285 seconds)
loading group "random"... done (took 10.827796852 seconds)
loading group "problem"... done (took 2.312953682 seconds)
loading group "array"... done (took 25.746337763 seconds)
loading group "misc"... done (took 1.167867957 seconds)
loading group "sort"... done (took 3.999635287 seconds)
loading group "collection"... done (took 20.317881109 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.673324625 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146264561 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.226609132 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.358637048 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.227359717 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144762521 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159344458 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.276989319 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.275816214 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.222024764 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.129191617 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.559217171 seconds)
done (took 6.102618275 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.244841908 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.247947855 seconds)
    (2/2) benchmarking "String"...
    done (took 0.16866776 seconds)
  done (took 1.059387826 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.068148807 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.168672416 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08881689 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.105896746 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.104770083 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.088025244 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.10429897 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.103821708 seconds)
  done (took 1.409402336 seconds)
done (took 3.432906346 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.522032961 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.863126241 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.572650256 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.157383243 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.312356788 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.316695736 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.32612366 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.215043357 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.08410937 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.10263472 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169748906 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.432441702 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.435246334 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.015991137 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.100751713 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092363721 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.124950745 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.801328126 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.072035326 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129646818 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.55991003 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.188983342 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.107970536 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.113025265 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193842933 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126538053 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.171295493 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.083570275 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.675910084 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.125261497 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.196573482 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.075326631 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171366546 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.237383641 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214031962 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.086268667 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679146339 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.196165861 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095646978 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.094152054 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672032031 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.126443105 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.161120822 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.098111662 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086222393 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183696241 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117972994 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.08673426 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095094859 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.09506634 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156468267 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.462932302 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.087602712 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.151795408 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.101330322 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.709190044 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096206181 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276041137 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131508468 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.100618869 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.070826332 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.098897416 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.151829809 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.088306221 seconds)
  done (took 20.32751727 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150845934 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161347553 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071504658 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153450224 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137727448 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074097307 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.095575207 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071232787 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122820022 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.234796153 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134487677 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.160899473 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084428547 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081503028 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.139254601 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245919088 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.100577091 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117074676 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09604435 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085880121 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136578728 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10597143 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088538147 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10570336 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.163561063 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19958091 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102506727 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115947839 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093841521 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094125341 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136080066 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157467948 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069079832 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094944465 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.181599299 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.114003079 seconds)
  done (took 5.144036796 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.219645725 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118197777 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.213047199 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.186427238 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125905084 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18094501 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136882898 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.290656826 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.230157338 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.173171249 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124179583 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.090074405 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087143905 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080076108 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.199760745 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073032973 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.557048121 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.130252129 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.170866097 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.142689732 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099048851 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.095913303 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379086701 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077937546 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.091142453 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079605283 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086501397 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.197078832 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095066793 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.254262401 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.078422861 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095272693 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09726539 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.075193386 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1229509 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127023039 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118540972 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092997976 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.091292043 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.210535663 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104819846 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.075046253 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086289466 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108730861 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125791961 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.126875206 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.092794448 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086897671 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.233705533 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.077679913 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119233426 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.088636111 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.206610759 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.114061901 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.093457824 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.308703353 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091670892 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099271678 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075629687 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.30383089 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.108464236 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.089756695 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072852273 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092914187 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.087244877 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.423271487 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104131853 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.098824668 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077569485 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156506072 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097865505 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097794768 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078720044 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095003006 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093238844 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.089280901 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071720998 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089372352 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070805893 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.094543316 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090737841 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.098136292 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093986991 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072806858 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155954873 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.106596053 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091911322 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117160112 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095256629 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.0722729 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120891465 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074153857 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.093558046 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.163739794 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099043393 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.097875886 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097831958 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.134753925 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088488999 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.214179736 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.075129928 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116663004 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.092494847 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106378041 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.105925365 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089334376 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.077256926 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.087532741 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073070329 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.153194891 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.07594801 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.092387887 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.078936474 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.104461255 seconds)
  done (took 23.206018091 seconds)
done (took 49.318687776 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.508669624 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.114165219 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.097933996 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.114761453 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.114655139 seconds)
  done (took 1.67651323 seconds)
done (took 2.374200816 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.386749291 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.20004031 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.112636634 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193178605 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080595547 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.219501287 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.187379995 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10550446 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217229931 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095967812 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.197630769 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096394325 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097521932 seconds)
  done (took 2.913537575 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091634936 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119480414 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092449508 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106511784 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071509776 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107045062 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088301795 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121124222 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089476339 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09951042 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07249143 seconds)
  done (took 1.751006378 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088221917 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113993491 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080716764 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103901396 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073067151 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103138747 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086702118 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118529617 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087023201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10070696 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072620933 seconds)
  done (took 1.725553711 seconds)
done (took 7.079512266 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.13110439 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.890672254 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.144145131 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.195779302 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.371023994 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.248251429 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.601456043 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.181461659 seconds)
  done (took 12.644118947 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.174796971 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077630325 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.097340379 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.079549565 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096942098 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077930618 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097347423 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.079741512 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094092988 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078972386 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093697185 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079910087 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.095138094 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.079706739 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094891332 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.078308632 seconds)
  done (took 2.239114056 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117322194 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.1157332 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103925846 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088187166 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.101131094 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100722486 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085877494 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101287698 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081383165 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099591406 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088022175 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103927947 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102531924 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082426144 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102182431 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.090253724 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098091611 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08661657 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.103154693 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.086777181 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10439473 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.101494831 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08693484 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104316965 seconds)
  done (took 3.14466011 seconds)
done (took 18.726175124 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172062444 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078452689 seconds)
  done (took 0.95411533 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14481311 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.145512802 seconds)
  done (took 0.999585186 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107889359 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093409491 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139111535 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113395945 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.07878677 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.092990981 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115026469 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09601182 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077393872 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094459084 seconds)
  done (took 1.718839337 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082492425 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09829242 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090681489 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.143322433 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108060333 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082314956 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.100193754 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082049212 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100442642 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095047746 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088070421 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118894976 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102510269 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.105125591 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099649003 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087558228 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109823146 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101683532 seconds)
  done (took 2.507289637 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077299182 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079494861 seconds)
  done (took 0.866898246 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083682793 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094297794 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083644167 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098866341 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079414871 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095797926 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079467508 seconds)
  done (took 1.327850031 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.500375284 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.269201979 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.361220642 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.115362245 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.139146352 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.367775484 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.139405859 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112649782 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.11281689 seconds)
  done (took 2.868890034 seconds)
done (took 11.951692082 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.08678033 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.219055064 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.636599731 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.101672617 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.095773435 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.138738346 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.31784672 seconds)
done (took 2.311227541 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344576036 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.154088487 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086916569 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077021201 seconds)
  done (took 1.375541536 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073212879 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102275888 seconds)
  done (took 0.894500244 seconds)
done (took 2.993046713 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077024773 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074998693 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.111914211 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.093646626 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075110971 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.093451116 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075222131 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092147176 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.075322005 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073907355 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.091827635 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.074886797 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09141948 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076388728 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091655214 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.074981039 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091265218 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075735923 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091276989 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076234815 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075003183 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091768452 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.075163938 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092106177 seconds)
  done (took 2.783897473 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101017587 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095973553 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082911334 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100622548 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100607748 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083796215 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099824958 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079466758 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.099850328 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.079013709 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10012243 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083658808 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095480295 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.101478004 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079615692 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100577945 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084031018 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095862527 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078288874 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10147443 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.082837234 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096261974 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100844885 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084043381 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099983645 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085217523 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095545288 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.078895494 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099719198 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084286524 seconds)
  done (took 3.471548821 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085919207 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07215026 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094088192 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083247932 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091347955 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076477621 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.090732026 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.074036095 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093872461 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076905897 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095916246 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076478817 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090260668 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078654314 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094415657 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07978005 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.104274136 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.074117972 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08932171 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078641585 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09524349 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07465771 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0766662 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093435973 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076763629 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089745304 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077173295 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09267395 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077688004 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092436882 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07918289 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096850199 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078223918 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101550138 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080385508 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092698777 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082699738 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089154011 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079190942 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.073030361 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090560877 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075769966 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091104763 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083754486 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093073733 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077507043 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08965353 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.079077899 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093929607 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.081087531 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.089513976 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.074280047 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095625125 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079709312 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096556889 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.074222474 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077950593 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.089527132 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.07800608 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092407307 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073973787 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090027741 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.080678375 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094236534 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095205688 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101321077 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.072863796 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095721639 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.078196981 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097613638 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080162522 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105761423 seconds)
  done (took 6.89718577 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092423617 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105457076 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080198 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095899403 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078594449 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095003922 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085990523 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094348434 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079751806 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104135716 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077833016 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095315081 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079442376 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095214158 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079215162 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09597418 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088242295 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094672397 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07809403 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09670536 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078930404 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102909351 seconds)
  done (took 2.702450955 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235979839 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103168414 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.150072067 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095288599 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119592117 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112120591 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082631646 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101793364 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098806952 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090165441 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107133155 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08361879 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117897994 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106030902 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089128195 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108522481 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099780242 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091249654 seconds)
  done (took 2.72179291 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096379983 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098269228 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105909444 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098437131 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081177938 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098034203 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105920295 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.098269773 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.097231362 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080926864 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107118429 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081677123 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097862914 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081150752 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098002002 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083164704 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098025993 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081002481 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107813627 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107268155 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089422086 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108103033 seconds)
  done (took 2.83318012 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098428241 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096757705 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114714179 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102671794 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078252706 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097050512 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103877663 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081861429 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105042548 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081218919 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09780814 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079200547 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106276561 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080978472 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104116823 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080803304 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097099025 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081187675 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097366202 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07927389 seconds)
  done (took 2.596068676 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.175515396 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095345618 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112702181 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126140155 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097067716 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111425901 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107805304 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11232212 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111792382 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111629006 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112161542 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095437331 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125808345 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120767218 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095984727 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125807788 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125279735 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125154394 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095846434 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111950776 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128340752 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095277285 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125469618 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094681733 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112441288 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111067387 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095866295 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120887637 seconds)
  done (took 3.916171804 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077587498 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075835277 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094880945 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076914134 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095357566 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07709931 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094728919 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.076900274 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093206732 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077260079 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.076066862 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094157969 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.196671117 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.093845358 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077909183 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093609125 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078199531 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.093778978 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078883847 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093565739 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07786 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076733533 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094011571 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077201161 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094027866 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.078314656 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095391488 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077389277 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09475403 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078020105 seconds)
  done (took 3.3951357 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090273422 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105123377 seconds)
  done (took 0.934318437 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08801972 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115912036 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078089402 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096002144 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088239654 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095885164 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090769351 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105448211 seconds)
  done (took 1.495840738 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.127547829 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.146100017 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.102823235 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108279839 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.127949373 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.138701115 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143275055 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101126078 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.0801781 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089628933 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.139232157 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075432021 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.100011472 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081343107 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10036662 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089341063 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09655026 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089590757 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103142938 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081099149 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102235938 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090032534 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103722863 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.089930577 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.093058124 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.084934886 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.106298776 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108891058 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081202968 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.103466107 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08081221 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096653444 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082946036 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101917548 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079458623 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.144191226 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110593983 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080091633 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.102855248 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084335503 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106579626 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080653517 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.103193539 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080823614 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104557355 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083323883 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102809962 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078460656 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.092805088 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075857795 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097088301 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078997426 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095848201 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084115691 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102847426 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108158547 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082046752 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.094033182 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.078820526 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.095253105 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.083750757 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.095637372 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08727344 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099828872 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080667797 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.100771798 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083057417 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097202974 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080987317 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097404036 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083386794 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115526839 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.102627281 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08564608 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101222785 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079935195 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098239296 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085926358 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099650764 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.085446716 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102224348 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087773974 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098464109 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078727647 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.096321135 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.086318302 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098672065 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082018967 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.090668483 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093312178 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098784814 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079302122 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093394793 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081766076 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.096373406 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083193787 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094370398 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084691275 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09569109 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084553043 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103351115 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076500429 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.104878443 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084889819 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102989533 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.083212991 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.139912306 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098789636 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.078155509 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100929459 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085000723 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.095358057 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082847301 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094715672 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077519698 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.096554786 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084863769 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.102332469 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079642761 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101441382 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080253615 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.103736048 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080753711 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095389157 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077640573 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102328398 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088597509 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.104354895 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098341917 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081026328 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079522516 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102084441 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10028016 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.082237467 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102175236 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082061291 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095826311 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080554269 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.101319264 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.085899038 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.096093838 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08312355 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.102373001 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083080017 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099527707 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.084953716 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.096252914 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.074998434 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102626679 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.078194779 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.099526892 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089101965 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097490955 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081042002 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.098253472 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106838392 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081831716 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102855803 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082078229 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101746314 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086242039 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09078726 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081780382 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098003485 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.087296345 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.096893647 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083034125 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09645255 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.087381842 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.093998136 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084299025 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.092754354 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.077462646 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102010646 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08130222 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081900699 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.097600763 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113902854 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095123587 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103775622 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.083333815 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.100763615 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085045607 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101421122 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084165901 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103861971 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084780363 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.102088266 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.08161321 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10352606 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076375917 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100825574 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082994789 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103441149 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073344378 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099225509 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073827551 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102353958 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.085432156 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101991987 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085668164 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098962332 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08262072 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108313685 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.078927975 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103018947 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.074959012 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102156349 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08919088 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105335504 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086156221 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10353812 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099921195 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08106969 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107422987 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082305083 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.100017906 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081092914 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.094293329 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.078142524 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103587952 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082554936 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.096410799 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078745793 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103658194 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087771158 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.098786037 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.077400805 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102843045 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088750231 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.097123391 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084916629 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.097508584 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09120081 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111492302 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.075802213 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.098975021 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.104810203 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086423739 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078686202 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.100719159 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081954914 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.105268146 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082231732 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100142617 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081004161 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105629688 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081322526 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097433863 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08008155 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101184535 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.076663288 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099559458 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.084218337 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.09888168 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.079892302 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107672895 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103902665 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086244593 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10070109 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.092736577 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104095207 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086955231 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094611307 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08621894 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.096171111 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.076846511 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.098027406 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.074555395 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098411079 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08012154 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102571175 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082405449 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100605342 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083758063 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10411645 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082904822 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104761456 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113615052 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.076241566 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.075671638 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101073943 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099955582 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081419361 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097515619 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081221849 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102222019 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085851214 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105492516 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.077597559 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0958115 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08687486 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097743138 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.08721042 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103222162 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087095537 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.096779188 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083915078 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.098011963 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088608816 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.095569899 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.0829707 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10072042 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082410598 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.098886822 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.081433369 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098355933 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.075770657 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.098464555 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085734613 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095271134 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083974045 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.100200579 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081716793 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09565943 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078639509 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104963513 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.076729948 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104758931 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079258091 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.095523096 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076321499 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103464788 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083989909 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104950582 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.077883034 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101369074 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085417444 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101745966 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.077881317 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.107343294 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087027876 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104512976 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10766397 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076099968 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.098554437 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090552933 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097358165 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083223591 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098341931 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07777602 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104882175 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086255763 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.101857282 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082428141 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.094999642 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080663617 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104264541 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083844079 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.10069537 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082200497 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101994864 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.079191874 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10088134 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087037305 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.101830633 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087355607 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102177696 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084055599 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.097823612 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086541224 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098055056 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.077981496 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.094925754 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081616692 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10480938 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.076178847 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102973801 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086485257 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.09864989 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082532983 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102948595 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.080836991 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100102121 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085282322 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.097304973 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092202887 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097646039 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.080139956 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101421565 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086110962 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.095018848 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.081076993 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096547742 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087581043 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.099912435 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085347348 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102362997 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085274806 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099280118 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084586779 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103667621 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086092811 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.094496734 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087888055 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105923461 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08148531 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.099205352 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082473903 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.095135889 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.082766294 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105363287 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.081159065 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107477679 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085881124 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.100298681 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.081839405 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103498733 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082495524 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106410579 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.078066991 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102599145 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.076520175 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.106395694 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082378046 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106572463 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.09778838 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079422778 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084485194 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103984354 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082836806 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106222427 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104343566 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.078603356 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.094770024 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083337127 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.098361492 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091785731 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098520079 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.082638056 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100941911 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081485153 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098645959 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087633204 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.095411348 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.081688373 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10319103 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084517619 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095377259 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07788989 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100929618 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0838451 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102507686 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.082673028 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.096181889 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.083187137 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105026006 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.082724648 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.093397791 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081585454 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105271532 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.08364032 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099047647 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078424523 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109229629 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08497648 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106246234 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.077512295 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103732192 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.080767012 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.10127702 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087035414 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.102359919 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102525815 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08319001 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103690505 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091766045 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.095230179 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.078532121 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109575139 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085313771 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107363582 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082415775 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101911908 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088035746 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106347864 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082138778 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.095746588 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.078101274 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097509048 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.077961122 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099296529 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090945835 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.102809002 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.082029547 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102668648 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08349825 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100393706 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082313533 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.095386365 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087599516 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099090084 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.088903737 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.095910279 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.075086468 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100931813 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086266257 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09760342 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.080463349 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098793014 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083479242 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.096236537 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.082020594 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.105675833 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083930924 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10465422 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083904152 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.100930191 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083422343 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109319898 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080691849 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.100354792 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092891714 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105566266 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084204044 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.104165309 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087559998 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106511076 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082066473 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107339937 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.099509643 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.080047513 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105421474 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088875141 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113549534 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083546393 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.093470837 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08508081 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.09784863 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079509614 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.107064077 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088515692 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105220537 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085173235 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.099359701 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089141261 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100723793 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084758091 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.100262785 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.081629138 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103499825 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081439177 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103336205 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081084543 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106879053 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086949283 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105099318 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.088764096 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.095237065 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090550934 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.107308878 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087432656 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101025935 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.077852341 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097627418 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083026602 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107034443 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08690541 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103231058 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083910675 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102449684 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.0858973 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103095398 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.081876244 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108048091 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086070625 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100803153 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085764769 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.098365807 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079400233 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099690033 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086196704 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106374398 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.085336804 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111782544 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085756549 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102641794 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080783008 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104988152 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082235396 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105728349 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084031642 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.100505013 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.078102125 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107190796 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087486558 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103446518 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08767593 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109386673 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101271764 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.087540372 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107554936 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086208156 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100101761 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.086188631 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100328747 seconds)
  done (took 56.155241755 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.157549908 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090318437 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100077426 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084256635 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13077823 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08301238 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10183663 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.084069895 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103154572 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114853819 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083087519 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082033214 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12414854 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131475071 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128659352 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115621942 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083280565 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103201148 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083443535 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101902454 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103913027 seconds)
  done (took 2.977647212 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106889699 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120425395 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118865187 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1022765 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112366195 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117533788 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099256016 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117808323 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121592121 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112458624 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102917166 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118393475 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.113544475 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095078271 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113592015 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114006548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103773899 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110988123 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119402098 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099211181 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113769936 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117845818 seconds)
  done (took 3.241587896 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09206738 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084309199 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107369091 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.099854726 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086116258 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080983884 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.110713581 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.080981573 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110812501 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.10075223 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.080769186 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.079435687 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102936487 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.081697927 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.099434642 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.081464387 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110391663 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084736656 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107598293 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081801906 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.119277239 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100329012 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083035776 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.096423205 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.096606648 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105230455 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.082239614 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10301788 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.078116299 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.084778324 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101180988 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08362309 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106178716 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.09703767 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.078183251 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084328709 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106367337 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.081448022 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.102262938 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.079155927 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.101851219 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086231454 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107844759 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.081400175 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.102067706 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.079463293 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.1055775 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.082693762 seconds)
  done (took 5.270679543 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.1203078 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158960467 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088994622 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.1482168 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124273063 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095778039 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10819824 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147746178 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085172666 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.108024116 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125857065 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125184605 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.09083374 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112863901 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09074459 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108852658 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089678782 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107377384 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.114451805 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088920526 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11490188 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089616939 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122577579 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123246691 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110260958 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088203528 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106917683 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.092908584 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122687472 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116210047 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094108915 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114882465 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123947438 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092241449 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10788404 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088923151 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125396088 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109306104 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089725612 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105694495 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088485748 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111820663 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109712994 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10686112 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109712674 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110703644 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091127048 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103788139 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.104774856 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108685192 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116063007 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.107482051 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11260657 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108436364 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094078262 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124464266 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.089644559 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107691318 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109633362 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10481749 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.106771507 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09175195 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.125978486 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107712693 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.097426285 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126504542 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111956226 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091317771 seconds)
  done (took 8.291170163 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1204992 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113780043 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125906586 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106042405 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113186408 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112191893 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094049108 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113782741 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092613923 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121310419 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111698485 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199699983 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088601477 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119982177 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113389834 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0932095 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113273571 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092836807 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113451345 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112190582 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092538242 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125781912 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112176057 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10610937 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127909591 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108796044 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092342607 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113121213 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126164286 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09285314 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128312029 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.111651364 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093447178 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126757002 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12804523 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112448342 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087142515 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111264632 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093806803 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114052198 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088480108 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126031847 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112870825 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089288677 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112977412 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093148268 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125928517 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128811122 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119695584 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101338505 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114516412 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126218942 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093750351 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114398201 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1263754 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.135313658 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105889292 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125511617 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11307506 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104955789 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12566874 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135780619 seconds)
  done (took 7.799554832 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083331909 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081619503 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104209261 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081532629 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10250949 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08352183 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.102149588 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08338264 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100244979 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.084690565 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101647911 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084397546 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08272038 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103315466 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083135707 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104302368 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083569721 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102574545 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083028083 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1020262 seconds)
  done (took 2.641489904 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09674242 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126029828 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088019763 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115365048 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086606256 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116379575 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103931155 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088055298 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106653604 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08835942 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119043061 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118152075 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089400314 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11462837 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098828563 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115688796 seconds)
  done (took 2.47361693 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.111150508 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128858681 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.166396907 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.1090988 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.08776452 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.115367045 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.08659623 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.107149544 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086666093 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.11220384 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091147152 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109707076 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086679049 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.107471247 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.08722463 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.110669633 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.085205502 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.111015013 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086254936 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.163985484 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.112387011 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.089390988 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109498985 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089924994 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111552073 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113199168 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.093626084 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107258522 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08954896 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107386647 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090327723 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116353462 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084644978 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.112192831 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086375207 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.108937784 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086334261 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107815034 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109985963 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087101521 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107129501 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.090167707 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106094049 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.090946544 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103832485 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.08892952 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10458676 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094333735 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108851961 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090819944 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107009866 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092266823 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111964616 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096533507 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116075875 seconds)
  done (took 6.480808672 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100145217 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106680282 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101255004 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104468859 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088234443 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109921784 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088161986 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110387605 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089556315 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104153451 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089531286 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109960488 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088583131 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109704172 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08812029 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109435397 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083704007 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109095202 seconds)
  done (took 2.602844038 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094174785 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106588724 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09302948 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10524565 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0874951 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10606078 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086285688 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103535244 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08551631 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104068967 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088017623 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105909447 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086044173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085779984 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107374076 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085725676 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107915517 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085155497 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107157376 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084482951 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107540873 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084151998 seconds)
  done (took 2.920299351 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103976056 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.165531762 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.119232873 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.178762257 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.106175405 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.087402703 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.116754746 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.087443052 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.12819456 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.086681064 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.106909541 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.105018281 seconds)
  done (took 2.206332292 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114900486 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146391186 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086890006 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108192437 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119074092 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094816896 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113969748 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092541931 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125568243 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128317175 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09341584 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125061793 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124788695 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126012504 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098538455 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119759551 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113434719 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094176844 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108351822 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136587219 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094280333 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124156566 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112908265 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094792058 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114216863 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107440917 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123851628 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129919766 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112505624 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105289405 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120864599 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112779642 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105087224 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130179502 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106824996 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104097906 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114920119 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137067288 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09981757 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128265101 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107485333 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098956108 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124969909 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123210065 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124265767 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094698963 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122749562 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093872802 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114854294 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145675636 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120483653 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106492638 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12211813 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126242319 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125772704 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144028558 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11004907 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127083208 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120690608 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129673269 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10764265 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1209569 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127432963 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131511798 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099924322 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127676009 seconds)
  done (took 8.461412758 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133555144 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110649564 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093497118 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130641802 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128331412 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114209309 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09392127 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114474434 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093560596 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111229958 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163374876 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113056183 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110534945 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128343285 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113789225 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093655577 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115246869 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126567785 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090372467 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14528676 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113612446 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107760728 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127786377 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128128871 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131880449 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120173042 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094719919 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114309463 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09416208 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114961136 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122101407 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09556574 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128313503 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088874997 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12761901 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11507598 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093650008 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123893696 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114035875 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100054756 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128680168 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137110734 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115120351 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096063056 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130943201 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114878041 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09484397 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110559305 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094387966 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111287371 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13156439 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110814737 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130673091 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128469516 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113804874 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094660498 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115139431 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093717089 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1154594 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121121259 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107561742 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116598166 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145886031 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114519225 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095157735 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128712053 seconds)
  done (took 8.397614216 seconds)
done (took 154.385686188 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.128226271 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.16769194 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.14579604 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16757182 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08056453 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.138340705 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114470515 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148878529 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102174146 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.082268266 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101428439 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086946204 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.168761388 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082171687 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10042444 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.086429129 seconds)
  done (took 2.716961697 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175173982 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.336457039 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.120932056 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.091403649 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.112193749 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.084559708 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.11347219 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111723132 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086322924 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.117800983 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.084730616 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.10632556 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.095873471 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10607705 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.085661045 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.105739975 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11677837 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.084798764 seconds)
  done (took 2.964019548 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109859242 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146658299 seconds)
  done (took 1.084677351 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120213407 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186666479 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318379758 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153737035 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.115117261 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130131071 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156517783 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.102593135 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.214212163 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106264817 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126167178 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108844414 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.114709596 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115843396 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119645324 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089667399 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.137881596 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09831786 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11919266 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.090200069 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.131831547 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.113268108 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095301924 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.120454055 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184902397 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126245289 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092429675 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113195783 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.090009126 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119765313 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.109570975 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.106717317 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12544871 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173769853 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.116109804 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169333983 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.121579902 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.108285483 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.099461579 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.109084315 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.094370125 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.115112726 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129044995 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.089043892 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113611424 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100840755 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114472246 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.112853952 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.092698771 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122762299 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112272776 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091230603 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.16852564 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122966118 seconds)
  done (took 7.554730266 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.848859237 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153279613 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086281488 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.993941417 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137617818 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124520496 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.849191728 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111869892 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.267582685 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.850137982 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124878844 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099745885 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.248133922 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.283225574 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.170728421 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358479088 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.721812163 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100943315 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1402459 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15719465 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119451736 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137679403 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110879527 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428118691 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.110831727 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10656613 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098228795 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121596743 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170740767 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107481914 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093660773 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.211766111 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.276644188 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.215595572 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088290955 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107429873 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085658372 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.176682242 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.290778659 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.237546767 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.175681862 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104653247 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085528765 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117397158 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131364323 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083554322 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.172915863 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.204828277 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.184702312 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114349014 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101061072 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121461073 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.115808762 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.172162973 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083283804 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360800687 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.35814315 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108800521 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117922068 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103368788 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.286049201 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107252281 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242721486 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116721294 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.234449346 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10722934 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816468206 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.178642532 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08477713 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12160598 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117276136 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095416194 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117473256 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172745666 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.38930204 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121137937 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094431913 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107128318 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223191291 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.108331268 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085988852 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.196232155 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08891583 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119284174 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101725378 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122186357 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.181401515 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.281326605 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100233511 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121584914 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115182393 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102267378 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.110808208 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.225569653 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.237733532 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.169390062 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.244586449 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096121643 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.195854722 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.178409107 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114601695 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.182593585 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096017295 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12750562 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116619307 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.234800121 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147630137 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087287569 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11606653 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098202827 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150044652 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112494601 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097489474 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.201578722 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.47245887 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.19730121 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083719 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112029022 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098818127 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194185212 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098294887 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.282347263 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120802866 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.179035569 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117666634 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.085084802 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119553729 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.176070136 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118834399 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098720741 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118196214 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121063993 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.264159286 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240000085 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100412246 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251774203 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188216708 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116838497 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.185864998 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120298335 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.182952429 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120613617 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096969429 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112193337 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816882586 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102177958 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120530762 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115406943 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.200782909 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08784977 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108341084 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088083696 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104527722 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814520588 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112736564 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084284336 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.110235796 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094640939 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120894501 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118515335 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094093589 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.19424974 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252041666 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103072943 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118696752 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086211681 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.194026376 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.090168535 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.109092983 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087715533 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10915415 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098685141 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11651358 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088069669 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.205875911 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.170224165 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.240589445 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.540234878 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087258355 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.109511464 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249829247 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08757168 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32956937 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119516756 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.246186982 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18202261 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083230679 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359212675 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.203537668 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201973947 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089290733 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.204647095 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084450613 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119118634 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.172376982 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10868866 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097413134 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.1684036 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124925396 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123407561 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.184736922 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087019688 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.263447749 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085043177 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.180114381 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111795909 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094312703 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332377828 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110820361 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126771327 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.174365502 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114549716 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08914923 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.655146467 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08797674 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122207623 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09450228 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.241589867 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.200061543 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097682229 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122983962 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123609488 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.174367382 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.225451217 seconds)
  done (took 45.312451704 seconds)
done (took 60.454215064 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305021438 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272510007 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.331438003 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.203714982 seconds)
  done (took 2.04226134 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.22165444 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157460983 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.187002265 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107223032 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.196173452 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084480865 seconds)
  done (took 1.804791792 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.51599948 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.396914112 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.362679556 seconds)
  done (took 2.132137474 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.270225562 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.290919965 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.335224349 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.481945179 seconds)
  done (took 2.343149055 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.24825365 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131087319 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101433557 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.178963368 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.239892628 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.187509843 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148680025 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160805032 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131455904 seconds)
  done (took 2.428736064 seconds)
done (took 11.604569516 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.388843629 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.281748457 seconds)
    (3/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.209328269 seconds)
    (4/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.282702171 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.277048168 seconds)
    (6/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.382476128 seconds)
    (7/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.353050726 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.16953451 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.288142168 seconds)
    (10/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.20726213 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.224924752 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115368083 seconds)
    (13/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.220431832 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.223531345 seconds)
    (15/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094186918 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.204334915 seconds)
    (17/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.21868779 seconds)
    (18/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115740092 seconds)
    (19/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.28342819 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093534079 seconds)
    (21/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.32754911 seconds)
    (22/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.238023723 seconds)
    (23/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.148480159 seconds)
    (24/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.193213827 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125670963 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.103658659 seconds)
    (27/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117642965 seconds)
    (28/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.148245925 seconds)
    (29/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.262009936 seconds)
    (30/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.128044658 seconds)
    (31/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.089858049 seconds)
    (32/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.26097734 seconds)
    (33/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084356063 seconds)
    (34/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.206964856 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136742923 seconds)
    (36/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.079853907 seconds)
    (37/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.251485549 seconds)
    (38/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078254121 seconds)
    (39/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117063018 seconds)
    (40/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079619369 seconds)
    (41/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.233112317 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117931465 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.127039851 seconds)
    (44/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.103701128 seconds)
    (45/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090255741 seconds)
    (46/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115875214 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.082779919 seconds)
    (48/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.077967864 seconds)
    (49/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.108093735 seconds)
    (50/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093644142 seconds)
    (51/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.10092021 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.182324758 seconds)
    (53/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.102195773 seconds)
    (54/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.147945477 seconds)
    (55/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.206273042 seconds)
    (56/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.221446327 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079331777 seconds)
    (58/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.246288322 seconds)
    (59/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.225045062 seconds)
    (60/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.118149276 seconds)
    (61/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.111470767 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.152456423 seconds)
    (63/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.233352297 seconds)
    (64/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.102989238 seconds)
    (65/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.175907914 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.152021204 seconds)
    (67/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.200052942 seconds)
    (68/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.237486406 seconds)
    (69/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079507046 seconds)
    (70/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.123338715 seconds)
    (71/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087200051 seconds)
    (72/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120117507 seconds)
    (73/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.154851365 seconds)
    (74/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095299943 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118477528 seconds)
    (76/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.113499872 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.129613368 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093676982 seconds)
    (79/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.174296018 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110268236 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096482414 seconds)
    (82/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115540005 seconds)
    (83/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.157698788 seconds)
    (84/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.235996628 seconds)
    (85/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.165503392 seconds)
    (86/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.083391832 seconds)
    (87/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.153260398 seconds)
    (88/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.174628519 seconds)
    (89/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.160077136 seconds)
    (90/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.119960471 seconds)
    (91/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093573016 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.1121224 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093467734 seconds)
    (94/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118521456 seconds)
    (95/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.180023423 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101165104 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122854069 seconds)
    (98/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079778065 seconds)
    (99/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.105074126 seconds)
    (100/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.231179303 seconds)
    (101/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.18615293 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.113464813 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094237351 seconds)
    (104/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.205467301 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.103218908 seconds)
    (106/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093998281 seconds)
    (107/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118747735 seconds)
    (108/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.158343712 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119127652 seconds)
    (110/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.205140715 seconds)
    (111/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093448301 seconds)
    (112/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.078676975 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.120090298 seconds)
    (114/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.07724019 seconds)
    (115/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.208217037 seconds)
    (116/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.102099083 seconds)
    (117/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097506782 seconds)
    (118/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.101269264 seconds)
    (119/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.080452554 seconds)
    (120/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.078645448 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114499625 seconds)
    (122/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079586372 seconds)
    (123/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.210237909 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.136403972 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.1129715 seconds)
    (126/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084095385 seconds)
    (127/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117611065 seconds)
    (128/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092093236 seconds)
    (129/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.108776804 seconds)
    (130/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.102427322 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120667855 seconds)
    (132/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078106712 seconds)
    (133/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119569822 seconds)
    (134/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.150844042 seconds)
    (135/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.195286808 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.10315628 seconds)
    (137/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081289335 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118548319 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097116571 seconds)
    (140/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.077841084 seconds)
    (141/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.104703869 seconds)
    (142/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080133565 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.204431617 seconds)
    (144/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087059645 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120685646 seconds)
    (146/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.078558924 seconds)
    (147/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.103437226 seconds)
    (148/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158531911 seconds)
    (149/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119813582 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.079495039 seconds)
    (151/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.120354555 seconds)
    (152/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089694415 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.1073223 seconds)
    (154/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087519801 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112080538 seconds)
    (156/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.149834586 seconds)
    (157/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.105260449 seconds)
    (158/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.080473824 seconds)
    (159/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.08432346 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118170472 seconds)
    (161/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07953979 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120733189 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.11307509 seconds)
    (164/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109727492 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094870362 seconds)
    (166/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120942385 seconds)
    (167/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094418349 seconds)
    (168/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.10349591 seconds)
    (169/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079987092 seconds)
    (170/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.103473144 seconds)
    (171/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.088814038 seconds)
    (172/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.205414104 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096024055 seconds)
    (174/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.102682449 seconds)
    (175/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.080017726 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080415509 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.137099834 seconds)
    (178/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.078840875 seconds)
    (179/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103199023 seconds)
    (180/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08091467 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.102404102 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097224007 seconds)
    (183/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.078021742 seconds)
    (184/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.105155783 seconds)
    (185/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087630397 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119997001 seconds)
    (187/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080625327 seconds)
    (188/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.102204899 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.080725551 seconds)
    (190/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079849324 seconds)
    (191/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.102444292 seconds)
    (192/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.07947856 seconds)
  done (took 27.256218175 seconds)
done (took 28.117107198 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.226920684 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102859268 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.122819347 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.096908364 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.179375977 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125843576 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.105844163 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.1262173 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.127103549 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095778358 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.110973259 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.104686673 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.121549432 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.179546633 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.101367913 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115569687 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.090576709 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128304786 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.105473045 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.133666616 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.180242267 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089685171 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.12860365 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11292147 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180242855 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092563633 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120967058 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.098208527 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127922074 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095369185 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.121007182 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.089726926 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.130878428 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.105543272 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113458163 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094039055 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112753413 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08752006 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.119547711 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.095877348 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.129698495 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094894185 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.12387446 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.090098819 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.121894383 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118621421 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089217079 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125710724 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088671077 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121426895 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091273779 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.131594467 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.094013701 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111226969 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087173327 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11540462 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.102616157 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112708487 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104624652 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112963595 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090375298 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113065773 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097506644 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112980008 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.094463403 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.114067328 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095130569 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.122860471 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.093671152 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116016277 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08871915 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.118337406 seconds)
done (took 9.124489106 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096206058 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176747681 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.181677233 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.186732435 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.146820998 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.132013031 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.111103184 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143274343 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.105868161 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139770258 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14907896 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.119248696 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.215962361 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.103911674 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.132836212 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09742706 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.130003495 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.123340621 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.189546693 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.116106176 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151275228 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126402324 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125842603 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135713654 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119665216 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.129964084 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122520141 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.097107777 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121260046 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128950558 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.115772419 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.121040853 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.097183914 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136687994 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13018195 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.103197423 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.132749719 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097196868 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.12028687 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095849786 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.13394399 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.130344215 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095982056 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132762046 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.119908451 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.106085239 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.128297692 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.104700339 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123304587 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.098925166 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124901041 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.148895389 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.104898793 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.131648956 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.103618908 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.128106434 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.127871627 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.1036469 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.121360477 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.103276994 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119794203 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.098365138 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124386706 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.146409971 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.098265192 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128539432 seconds)
  done (took 9.189075611 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.116564662 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.156368425 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130119341 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107436563 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.127167885 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08548884 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.110668398 seconds)
  done (took 1.740379235 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08908951 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184385964 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18402119 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184031868 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.180096202 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.191651789 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135052997 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08779237 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.1486493 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123821018 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183917278 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.215249067 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095878395 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.132634509 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186503246 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087231862 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186754491 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114383618 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124035052 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.183891648 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10484352 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142893006 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.103667507 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114973622 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.178489272 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090006339 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263262912 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.106616673 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119604451 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099106019 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126250223 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.198406509 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.179639989 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128432437 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093630686 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.181472757 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.177091364 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124407245 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.192188577 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09278272 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.178115912 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.124042847 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.101734192 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.127648086 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099683048 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.166064466 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130570769 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.101722208 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.125128168 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186564436 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.126288385 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.17979769 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.097789302 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.125853951 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.10245858 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127354797 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.109222944 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.127090702 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185491011 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102885571 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.179613883 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.180269519 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.178516642 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.180913838 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137075408 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.180880684 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.176901183 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.099237827 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124839851 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125180593 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.180220203 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.100635076 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.12821303 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.166515165 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104731188 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.181317725 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.180933465 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122360442 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.104701072 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.118133681 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.099227783 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114480722 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.168410251 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100419968 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121917379 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.347917126 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129930765 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.101090245 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.121014563 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.138763983 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.101459287 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.127541048 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128208539 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.101098775 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131157815 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.184237597 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.101673942 seconds)
  done (took 14.643521998 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09413803 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.089368933 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.120916171 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113462151 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091710452 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114127204 seconds)
  done (took 1.554044583 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120069548 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.126519302 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.112384001 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.128318148 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.183556886 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.187117837 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.188784999 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122022776 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.119882903 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.137750377 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.186602812 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.190497351 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.187001241 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.10534064 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.190084308 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.13062022 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.187678931 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124488706 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.111302906 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123660016 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.108872724 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130477726 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098501821 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.17554157 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.130310023 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.128958328 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101651638 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.13689685 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.108965703 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124008486 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.128570086 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.103978645 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119764052 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098350539 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.188826544 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.120943258 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121134525 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108963522 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12968208 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.106180006 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.190049043 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124356093 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.134143455 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.10847785 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124056283 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095950693 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.132222551 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125986767 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.188028628 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.108488487 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.13230127 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.103254734 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.1299294 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.131511486 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096758393 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123619722 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.107692209 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.190094867 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.133012286 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121046624 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.104792903 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.130858626 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116760827 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.132289971 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104697202 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.131802937 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119444248 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104315517 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123465983 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.103536371 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.13301875 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.127255861 seconds)
  done (took 10.393873654 seconds)
done (took 38.421732219 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.13439835 seconds)
  done (took 2.060148933 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.899617242 seconds)
  done (took 1.828177091 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.810452978 seconds)
  done (took 17.767551027 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.5422834 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.629717033 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.922338371 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162919442 seconds)
  done (took 3.183520141 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.984070139 seconds)
  done (took 1.930553652 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.339921314 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.253701238 seconds)
  done (took 1.525397616 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.716201884 seconds)
  done (took 1.660151582 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.58137286 seconds)
  done (took 2.51328269 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.387526097 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.192745899 seconds)
  done (took 1.526478613 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.657349827 seconds)
  done (took 1.597346654 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.918615314 seconds)
  done (took 17.865013124 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221559682 seconds)
  done (took 1.178207503 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.31208259 seconds)
  done (took 1.262498044 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.511999458 seconds)
  done (took 4.457898365 seconds)
done (took 61.287508066 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101651289 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.1297308 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104360737 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127578339 seconds)
  done (took 1.402422686 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107350159 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125687085 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105984571 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125737939 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107208879 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.126739122 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100658566 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.129807712 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100569931 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.128171454 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12621854 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099489103 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.12881001 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101542617 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122891828 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104030774 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.129117048 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100915192 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128718344 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101934573 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126022438 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.127271965 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.105194063 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127622409 seconds)
  done (took 3.735981542 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100003287 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117805982 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096392535 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.092399677 seconds)
  done (took 1.356424746 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109959323 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139145709 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113013156 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.133237975 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.113772508 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.138526849 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.12425703 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09725058 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124657295 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.110924978 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.144245065 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139122851 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114333342 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.13009061 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.111328279 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119815989 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.10271236 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138898736 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.10849044 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.136363732 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.125534393 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.109025379 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.131491487 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110740999 seconds)
  done (took 3.882749942 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.178257143 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.141919299 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.150210897 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.174391171 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.13195613 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.125693951 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.151591909 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.108045759 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.133159536 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.102561137 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.129649528 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.175117912 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106869427 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127041725 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.125373115 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.106464646 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.137887703 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.106524964 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.171627822 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.132412848 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132117604 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.114388572 seconds)
  done (took 3.92294863 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107867502 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12019479 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090653265 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118799413 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107718015 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123467407 seconds)
  done (took 1.630059146 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095916311 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.087587312 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118918918 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.090487587 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.118511099 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.087382723 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.112974895 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.088472837 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.114098462 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.086836326 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.114869323 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.087927958 seconds)
  done (took 2.159392284 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.282850715 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119460756 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119383913 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.094559659 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.126380455 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092707705 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135506867 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091875139 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.257208719 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08938084 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.137147998 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195211463 seconds)
  done (took 2.704525163 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221516796 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102154103 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324609634 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393370167 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167422488 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175353613 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281802353 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177483791 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200646071 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120522258 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231671442 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139831938 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163749155 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194469964 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148147818 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.218631444 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186960274 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214893111 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157141318 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218120485 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172404933 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179098744 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193791697 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16081523 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117075933 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160995004 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12766083 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108030947 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183077176 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179404723 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210101913 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129700815 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149004688 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21216476 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223574887 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188636648 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.311890092 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111295344 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.204792552 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.19196603 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290797811 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148191351 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209278782 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164392714 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135380615 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19448839 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138787204 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.194063134 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140911419 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149698724 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197066676 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188251902 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196647807 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142544804 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312781024 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153763989 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157295622 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188988649 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19852227 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201671018 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180355125 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103010529 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.221824496 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195386222 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190614886 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.15541155 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180436398 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108606956 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184962966 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207892922 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195964047 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173663705 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223743422 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108896588 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169960862 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180904334 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162424808 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190668479 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173654092 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099461365 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160242502 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143652991 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10556043 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196351148 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127690296 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217090254 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141027181 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.391756044 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215850481 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16642302 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170813104 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173341795 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174974838 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128876511 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.129735096 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127669243 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.171020745 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167920055 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1433349 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16598606 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148945381 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.115663635 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160806253 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128714055 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145202811 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.160412476 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177178204 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173351938 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.137722859 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150529348 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159539155 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164184588 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181518131 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196857042 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137497046 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111708644 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199331538 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16778547 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143219091 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185419135 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200621371 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174312165 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116627568 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175301489 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230304913 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122684618 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200816512 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14371316 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141700998 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.16567939 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144866075 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165539103 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161806724 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133131325 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.138174419 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230374992 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.107011676 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144623051 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181830116 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116776694 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133770674 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147227502 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116111809 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.150297823 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154111177 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145030568 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138629015 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171354261 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165215954 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167426383 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14350273 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183686124 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111321057 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.171965853 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155994008 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099354339 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.219157278 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197000824 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109339642 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208904521 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17998974 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23573344 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171051099 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112722894 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187647453 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134225095 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099727338 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170891058 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169596028 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171198566 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196189939 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232295334 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183506163 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.164118962 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131345448 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177287459 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.18647639 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165255456 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.152806233 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16906935 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179641922 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101286467 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.133816599 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108288268 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148839519 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136784165 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112473104 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218862523 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146586463 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225322509 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168965701 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122276243 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192078539 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.137687956 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174828093 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.185394737 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14619816 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200126497 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193057893 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180320312 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123792409 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170563853 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128925256 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106625745 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144076307 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179429694 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140614273 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113596434 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150463743 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193467092 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185087833 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157532186 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241095422 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179231606 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205455307 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101358975 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172312917 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180433116 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167587535 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16723011 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143087006 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.171011479 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189695479 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144127748 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203013872 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168679673 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147481755 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237534593 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166370908 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1099088 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157829305 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175152538 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148128094 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144619212 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154047847 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137557454 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16306317 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.117829849 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136225648 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192138573 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15229083 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188860031 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.164858145 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182633987 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131690796 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12372494 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1723167 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153326888 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.09990461 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180469922 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198327528 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153312202 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167809251 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185033073 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136984156 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.333106886 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202778491 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19554567 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142725026 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149082147 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147082901 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169020536 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17322823 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188969452 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151539157 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189071756 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170520101 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.124104292 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138523728 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15611047 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130869676 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.165344983 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143691208 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.170374903 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.12318688 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223068801 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120970409 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170324878 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171777018 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.156365213 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.136692815 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149653245 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207720691 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16946785 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189924637 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166854212 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17764003 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212380787 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130660359 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109285983 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.142499291 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190623621 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110411285 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173576982 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.21864733 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210345505 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173587809 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177100589 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118026011 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134281269 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166609487 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156051593 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209513451 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142469815 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.119935947 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228392403 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135195244 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137479378 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172330344 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293183082 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126557473 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21204949 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111959436 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285470817 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134364797 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111000867 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16930361 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181041824 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.143394059 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.166176153 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168528727 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151644501 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169145428 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144539238 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200110529 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218546245 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175995086 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186027085 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.152721384 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16836741 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172951502 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186409193 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12251616 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.155257138 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171661021 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194626192 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197220953 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142190992 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169013979 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142152356 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167780776 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183834399 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141435816 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212458424 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137671242 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171212713 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11954643 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133905416 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16936355 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194048836 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138950998 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185642335 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170299718 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113256194 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136824491 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153703487 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141739258 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14509595 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.135700837 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191440869 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.108095194 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174917769 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193838715 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136494147 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137657462 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153919678 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14016309 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15070676 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125899886 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139244036 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.150760641 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188314124 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140056119 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186617552 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172835931 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175130134 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169974633 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15302408 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646430455 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.138435594 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194663093 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156842171 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197866447 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129474807 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174434815 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169894269 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158447668 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174858694 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159085197 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204301948 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170860989 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.171827125 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138440961 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151986516 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122877868 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.141772425 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161675908 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168736321 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121846117 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147534148 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.170978823 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123976875 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153922553 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147283248 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196152407 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157241959 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195595414 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192558644 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116340013 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175174945 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185967801 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14115554 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175243539 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18303372 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149372189 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128752795 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141598151 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.146670661 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16390841 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13184585 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172100247 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172937203 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167926023 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142434358 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144937856 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174803234 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149146091 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170773556 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108146106 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165320876 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169933779 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112002936 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.137969579 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166933928 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168821337 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.136832173 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136515977 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.153256388 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216216594 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103658519 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140975547 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292591062 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169014463 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203329562 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.1653926 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114183467 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153584535 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167178433 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.167871367 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14295836 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138585537 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108281754 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140691781 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.194218998 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.16720432 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167506784 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164211051 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170242487 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240659732 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.124333376 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27761389 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147698845 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140024814 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.142099002 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139497082 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12379806 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141773926 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147489619 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201867719 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189415023 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163000808 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.125264062 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137990441 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.102733007 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139767813 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171399588 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164248516 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143243069 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154239077 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.130231658 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124514848 seconds)
  done (took 80.94492985 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150271664 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.139747568 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.151570631 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199297862 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171315411 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265401361 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210733892 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233650295 seconds)
  done (took 2.567368883 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.103117879 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.137351413 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14599183 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.12645309 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.126154533 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.389614829 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.138860803 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.101010158 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.186523671 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.140414505 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.124643906 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.598044423 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.127022187 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.126387795 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.097098362 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.126349871 seconds)
  done (took 3.831946574 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.266907537 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533726261 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.953886138 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.237929885 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.231049688 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.181148071 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.741529976 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.17265857 seconds)
  done (took 12.362447696 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.132480556 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149009468 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.290753589 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.251535684 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.137672405 seconds)
  done (took 2.013066555 seconds)
done (took 123.454954201 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105621285 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132360734 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105920831 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134699938 seconds)
  done (took 1.516725379 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.154580337 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.118354838 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092501275 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087409211 seconds)
  done (took 1.498289185 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.494889508 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.118207424 seconds)
  done (took 1.694143685 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.13670245 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.152854908 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.120180861 seconds)
  done (took 1.462291624 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111713326 seconds)
  done (took 1.168343152 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.111213239 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.099280708 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.193856396 seconds)
  done (took 1.45972219 seconds)
done (took 9.856554463 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105596755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.439482244 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391255068 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143064443 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.73139851 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381490582 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.047588561 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163446274 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.213624733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092810026 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146450115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67224439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.07354161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373133408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.02503594 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370998645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674990981 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120776725 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103184515 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124266517 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.994355906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121224573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094782055 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121925555 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673718951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.441682244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09267642 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.387973486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09315737 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129892431 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.379565029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121442411 seconds)
  done (took 17.090787025 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101959964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194065981 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104789412 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124401984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101377288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122760441 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10583174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139019004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203681855 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122147949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116934367 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121851973 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.09867829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122216306 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119575962 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121339774 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.094636911 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122284923 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102974358 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124067323 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143631321 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093178304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122966177 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094375566 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092808484 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.154475861 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121682226 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109542032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121947517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102203252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124701435 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094444609 seconds)
  done (took 4.902342446 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14535216 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.202119613 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135434041 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130486226 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181461922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123827806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.215909467 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164249308 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204878241 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09390611 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147044131 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093200853 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.169201278 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094381185 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149047304 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093005886 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123062988 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093877479 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131624948 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123592639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116905143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121354018 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096058938 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122525071 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09426598 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155826518 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093409276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138166112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092987789 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130687781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096814861 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122855717 seconds)
  done (took 5.263427697 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105396941 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.133098056 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119476977 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147800982 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100517562 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133066233 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105429519 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12932451 seconds)
  done (took 2.040090059 seconds)
done (took 30.356354456 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.120386265 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141402021 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.113552509 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.135717168 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.182192734 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.097621271 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.110726762 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.125743286 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.107178875 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.144405734 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093336361 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.128133031 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.115165577 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.132336406 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.184082228 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.107560109 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.188547106 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.184122244 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.12897645 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.107209282 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128752494 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.189910133 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105662778 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099079462 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.19505233 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126641669 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.17951678 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.10323776 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.132874767 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101835599 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.184934702 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133569658 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.100416211 seconds)
  done (took 5.48506628 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.164423678 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.130719768 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.098819103 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.128769324 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.101515737 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.128084487 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.197917319 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.099294838 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128821821 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.098917319 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.12768506 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.162123276 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.134992868 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.093742782 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.132235122 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.101371056 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.195472019 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.132859915 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.095431736 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.090716633 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.123626348 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.098611648 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.204414686 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.124917949 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.099842874 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128640371 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.103534361 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.134163338 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.100883503 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.130361146 seconds)
  done (took 4.868439207 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107183169 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.147385697 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124522187 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20117412 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161167369 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10752541 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.147954937 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.115610388 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.15782277 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.096287554 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.142537911 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159860193 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115209383 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.136739125 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.100703106 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.143295346 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.117652881 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.125976645 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103570788 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143633864 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112999788 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.141214711 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118519539 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134503294 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093825392 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132442283 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.133409067 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112114921 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136296925 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.113604434 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.130592171 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099907209 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.128691713 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107579663 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131368272 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.104864682 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.15032179 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109740778 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.139736476 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.153335172 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101698696 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.129265954 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.12373192 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.185740192 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098375311 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.137447248 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.109361372 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.141683553 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096529113 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143272107 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114556115 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.124778658 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.145673975 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.097227333 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095622747 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136159254 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096421813 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.13281482 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.115955431 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.128686903 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.146720986 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.104311885 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136637143 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.098794675 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135618147 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.096682943 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09516589 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.127999011 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.153486042 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10589548 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163647082 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096572901 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.134415768 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.109048397 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136765955 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107885568 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.125490235 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107256912 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13741304 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102236985 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140636494 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098850597 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.129357476 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112757909 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.143771798 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.104826606 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.175609547 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.135599639 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099433556 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127756429 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11345847 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.127011011 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101374711 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.14494288 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095275821 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.132081293 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106620609 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.134152491 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09437159 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151200518 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102156848 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12464934 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.121111737 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.132184842 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.101990252 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134412477 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.112259137 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.12451658 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104599563 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.136367343 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097066416 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.131985105 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099095744 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123521945 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.112273409 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.14100373 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103004675 seconds)
  done (took 15.566881511 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.287868406 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.309397544 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210970234 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.367275952 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.112573503 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.203572664 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.306808791 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.278972148 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.133230925 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.171798516 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.191216504 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.245358559 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.127619823 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.126356092 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.311482047 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.372655382 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.159143691 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.173022371 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.140695535 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.14410378 seconds)
  done (took 5.461582952 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119756129 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.162292088 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.148894618 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12969233 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.134495274 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109595668 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.12654872 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.121659114 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.134555635 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.133797107 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.096441673 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139817751 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.104888837 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.140587903 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.115342232 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.173834563 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.10182911 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.1326753 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.150475952 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.102808682 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137256679 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.127956194 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.137315973 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.147945153 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.112561612 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138377165 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095558307 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.132674995 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099454816 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.130323437 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102712271 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.147981428 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102049723 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.13255395 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.105906118 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.138056955 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.098060533 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.128827917 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.098412522 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.130366568 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.113272482 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.136504886 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100629632 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.124369348 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.111820484 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.129096257 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.108145874 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.134872878 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109885571 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139828137 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.10636266 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.137051993 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102466063 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.146304927 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.09935603 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.142435888 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.109117545 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.138537795 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.132118713 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096350381 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.095313775 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.130387717 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.100925079 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.137974751 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.106506139 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.149337137 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.140628291 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096191537 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.132587219 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101111747 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.130744516 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113617906 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.151055097 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.13075928 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.100975388 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.138242245 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.102080318 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.090481193 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.136361834 seconds)
  done (took 10.82482641 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.125050108 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131344432 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116893649 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.164093748 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105890845 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13365864 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102019944 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.148098898 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.108657315 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.139993916 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.108373699 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.142425342 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.151258508 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113224292 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.130959 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114903758 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.137354661 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.167720231 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.117222388 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.158067362 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.10849626 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.13284354 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.108850567 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.139018516 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.158556689 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.109097375 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.158176285 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.106368292 seconds)
  done (took 4.735504098 seconds)
done (took 48.007106067 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.18709799 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.381505542 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.164154337 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.159978332 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.173402913 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.178710138 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.158847773 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.158203021 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.126151057 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.151087924 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.161280821 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.158472199 seconds)
done (took 27.252753306 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.209788079 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.656796266 seconds)
    (2/2) benchmarking "String"...
    done (took 1.427347879 seconds)
  done (took 4.169357602 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.165837554 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.156281284 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.400950837 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.156820328 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.173712052 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.175530584 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.162205384 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.168057738 seconds)
  done (took 15.477692043 seconds)
done (took 25.110877461 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.211722336 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.350254226 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.404415346 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.179292249 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.166440576 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.163473865 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.158247516 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.181816043 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.168141019 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.166142567 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.568026455 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.413078448 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.18927893 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.534187607 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.162639336 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.156070924 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.175478127 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.395214325 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.161929858 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.216015991 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.149400331 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.149643493 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.18853527 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.173386584 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.163268501 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.170493797 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.208381995 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.158751392 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.34483144 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.191442523 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.20744631 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.160727559 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.201423115 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.161025967 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.158632012 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.182444791 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.341728615 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.1663233 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.158200335 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.159909925 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.35595796 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.165653354 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.161044101 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.158971903 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.167382563 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.200349695 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.160024597 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.267593487 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.179042783 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.158954115 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.218340146 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.538723845 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.161068522 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.16572655 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.186549255 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.376141904 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.177318329 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.210269567 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.184833904 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.165300442 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.178820928 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.160189765 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.229625531 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.161473694 seconds)
  done (took 141.09457073 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.159877161 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.163532581 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.1637029 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.182541951 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.165259152 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.164517002 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.161272754 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.16004455 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.164226303 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.19435792 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.164634881 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.165499062 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.163503597 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.187127052 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.167034093 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.183259513 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.16491835 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.160379598 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.188875151 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.161228401 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.168654978 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.166270415 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.180998842 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.16654712 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.207756177 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.258672823 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.199764183 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.196395017 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.171309976 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.161853402 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.200572345 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.186134836 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.7641227 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.034036352 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.169751408 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.184797885 seconds)
  done (took 78.892921313 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.162071344 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.16290894 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.162049855 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.193829471 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.161876447 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.718970693 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.72980764 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.881067589 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.607935184 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.502471069 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.437851625 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.166664595 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.255945992 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.175913103 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.166356315 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.164992597 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.179168879 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.191191295 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.163700136 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.163804977 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.732527561 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.179015892 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.405937085 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.338087729 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.179370381 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.195378831 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.56904203 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.164310967 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.196713885 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.264208703 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.500148155 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.214433315 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.164479017 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.164421215 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.519391364 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281243118 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.16669825 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.196583896 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.165172067 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.445394063 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.166010499 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.165012143 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.16652907 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.16785472 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.815003157 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.168615401 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.728651502 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.168457676 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.119575761 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.168881059 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.165435581 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.08681852 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.845230482 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.18541918 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.16557348 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.168674502 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.165455042 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.165603145 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.198320714 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.156301889 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.260659427 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.166690848 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.170523576 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.198020782 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.166800657 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.372501064 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.169070496 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.820464708 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.224165822 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.299063886 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.735117403 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.170782401 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262968584 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284747399 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.16670973 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.165656623 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.167246583 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.1664038 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.277327637 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.166658525 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.167474284 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.575756306 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.341231737 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.183546723 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.503004734 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.2667406 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.16853709 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.547252306 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.171455159 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.168336728 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.930974599 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.267421388 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.169125986 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.168024745 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.16936332 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.579052273 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.738420486 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.394125892 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.172072963 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.36639067 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.171306754 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.584958497 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.717674573 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.859911716 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.173272019 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.279660837 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.343463959 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.185657428 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.16843256 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.506073567 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.172399865 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.22663088 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.171633436 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.569921137 seconds)
  done (took 363.216173363 seconds)
done (took 584.291209988 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.98766087 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.943906922 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.069132024 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.970993862 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.930830938 seconds)
  done (took 10.999089045 seconds)
done (took 12.097588985 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.361509448 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.365346313 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.233104638 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.363699696 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.205129855 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.377932559 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.349550426 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.193778616 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.277076979 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.251005683 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.279952039 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222522975 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.201858223 seconds)
  done (took 17.779831764 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.468860729 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.17890821 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.238445004 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.420215813 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.216284936 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.449433213 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.479631531 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.178401099 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319704682 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.187545662 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.186672886 seconds)
  done (took 17.422184196 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.470251671 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.179931027 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.245945632 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.425752554 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.220397042 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.452291769 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.488627857 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.179623182 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.316916915 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.188912283 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.188255901 seconds)
  done (took 17.454440004 seconds)
done (took 53.754625522 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.214368965 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.341875311 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.204809881 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.189887255 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.18514487 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.185637469 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.190447964 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.1853137 seconds)
  done (took 10.795697323 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.183389353 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.182499621 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.183417413 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.182885181 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.183203751 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.182190882 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.182073799 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.18338079 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.183922187 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.182883594 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.182577682 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.183514745 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.184388519 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.182701086 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.18342813 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.182528349 seconds)
  done (took 20.02921226 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.185361006 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.183380512 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.182621556 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.182504844 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.184264423 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.184967731 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.18555986 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.183951077 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.183430577 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.184190889 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.184384503 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.183714877 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.184104761 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.185083722 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.183924487 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.186138817 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.185594203 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.184788152 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.188018462 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.183222485 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.183571703 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.184312831 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.184691309 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.183408143 seconds)
  done (took 29.526388839 seconds)
done (took 61.452057557 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.173903551 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.191909052 seconds)
  done (took 5.466374394 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.245060883 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.247341955 seconds)
  done (took 3.595379363 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.185770492 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.185918422 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.185910305 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.186178229 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.186244695 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.185577049 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.185500284 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.185379131 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.185990543 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.185054826 seconds)
  done (took 12.95886006 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.185989075 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.186471086 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.184807734 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.185457433 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.186116267 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.187462807 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.186501804 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.187365399 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.186488349 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.187021761 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.187157079 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.186437044 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.186720234 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.186313023 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.187098765 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.186593979 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.187447087 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.18719716 seconds)
  done (took 22.461368056 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.200194998 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.208253045 seconds)
  done (took 3.511306161 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.325318731 seconds)
    (2/7) benchmarking "second"...
    done (took 1.228744924 seconds)
    (3/7) benchmarking "month"...
    done (took 1.304165233 seconds)
    (4/7) benchmarking "year"...
    done (took 1.294958438 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.228602135 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.209830793 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.228692918 seconds)
  done (took 9.922904631 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.188540469 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.387789601 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.497890463 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.773570996 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.188757717 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.190614679 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.018374776 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.19124448 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.193569672 seconds)
  done (took 13.732634782 seconds)
done (took 72.752018246 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.187216237 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.236019251 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.206483629 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.218827989 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.528361819 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.202539757 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.192162865 seconds)
done (took 15.876952482 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.174253979 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.189200627 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.174849458 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.214151467 seconds)
  done (took 9.856268707 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.181363574 seconds)
    (2/2) benchmarking "read"...
    done (took 1.46867831 seconds)
  done (took 4.75161308 seconds)
done (took 15.715067194 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190358794 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.189354548 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.188631361 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.188965107 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.190428311 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.188716963 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.18854183 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.189743085 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.188315425 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.190319837 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.190003374 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.189262441 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.188446959 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.190424959 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189371565 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.190275558 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190550313 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.189958578 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189195505 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.189013498 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.189563369 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.190453045 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.190513954 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.189738044 seconds)
  done (took 29.655736768 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.192042917 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.190610078 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.190239182 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.190071993 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.189823204 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.189358747 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.189023523 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.191042202 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.191774688 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.189815611 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.189952556 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.191010529 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.190657199 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.191980779 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191852003 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.190767858 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.189992032 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190565574 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190527139 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.192023228 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.191396957 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191890749 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.192020862 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.191530532 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.192659296 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.191506753 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.191495766 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.191756768 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.191319812 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.191898913 seconds)
  done (took 36.836583636 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.196991404 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.197485203 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.192313239 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.191569479 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.191666409 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.191261475 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.1919896 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.191006448 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.191891951 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.193230756 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.193478876 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.193229476 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.192347849 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.193150709 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.194155671 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.192557824 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.192449468 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.194102209 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.192176178 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.19243564 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.193454495 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.194046371 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.194118894 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.193784813 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.193652715 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.193721815 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.193450749 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.191813249 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.192396521 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.192798453 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.192972835 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.193079564 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.192431924 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.193563286 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.193689771 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.194254231 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.198515293 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.200060622 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.195250151 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.193485613 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.193960056 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.194570661 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.193793816 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.194710112 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.195121451 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.194411899 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.19486664 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.194966216 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.193485418 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.194311482 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.194274147 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.195378988 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.193626427 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.194712097 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.195581331 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.195698578 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.19407075 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.195948633 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.194811323 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.194588249 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.19518177 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.195605181 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.195516971 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.195652577 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.195140751 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.19626912 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.194930765 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.195988961 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.195191718 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.196136137 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.195745099 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.195321369 seconds)
  done (took 87.089610045 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.195954504 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.195713242 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.196366146 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.196674786 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195949445 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.197949438 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.197156722 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196256804 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196898294 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.196487025 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197898932 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.198191658 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196691259 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.196699215 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.19637373 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.196792143 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.199248712 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19735878 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.196703178 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.198516679 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198270154 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.198039687 seconds)
  done (took 27.446991786 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.199817572 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.201427974 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.198636378 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.199895663 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.199441017 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.19993875 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.197442065 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.198606059 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197758329 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197782639 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197704786 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197647206 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.20045256 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199175202 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198645687 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.199595909 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198345791 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.199328616 seconds)
  done (took 22.694834291 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.198925876 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.199450725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.198581567 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.198976825 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.197942651 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.19879082 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198991992 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.1997287 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.198875627 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.198499513 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.199524153 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19953578 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.20022035 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199482628 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199493271 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.198964312 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.199149725 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198376439 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199962342 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200272867 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.200073157 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199921441 seconds)
  done (took 27.498038973 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200462766 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.200727392 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.200302397 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.199298409 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.199980612 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.200874107 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.199345464 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.199156061 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.201667136 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.201225286 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200817724 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.201452826 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.20264767 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.201353938 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.201049906 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200693118 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.201091066 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.201067321 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201559644 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.20066169 seconds)
  done (took 25.130877475 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204302311 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204571989 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.205584633 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204647138 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203490173 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.204485616 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204775551 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.204194598 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205436236 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.204663379 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205122256 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.204332036 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20388575 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.206025001 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.204883238 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204301138 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205380813 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206355995 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.205840885 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206074633 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.206164084 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.205162607 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206260067 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.205035234 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.206259409 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.205441861 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206427586 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.207251649 seconds)
  done (took 34.862052311 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204956074 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.203668986 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.204107463 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.205108817 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.204811574 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.20418231 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.204645393 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.204052419 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.203817141 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.205758328 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.204576572 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.203021425 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.204348165 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.204329319 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.204079763 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.204180114 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204148551 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.204875351 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205567684 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205073474 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.203514818 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204350436 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.205721506 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.205047274 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204642916 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.204424617 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205185252 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.205040245 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205385927 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.204752852 seconds)
  done (took 37.256172749 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.251931639 seconds)
    (2/2) benchmarking "in"...
    done (took 1.252190378 seconds)
  done (took 3.621899609 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.206148654 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205601794 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.206547246 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.206607763 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.205405167 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.205659333 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.206007777 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205004826 seconds)
  done (took 10.765201212 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.202124225 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.207617003 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.206132652 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.205993092 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.208144894 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.202150273 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.210559281 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.211385836 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.203854773 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.204614775 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.207845205 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.208089784 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.206744252 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.205502197 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.20539525 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.206997565 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.21023862 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.21004378 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.208331768 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.208321774 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.209431512 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.206604162 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.20874832 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.211189978 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.205315087 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.214060303 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.212661065 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.211205361 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.204127189 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.210492648 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.206405837 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.209664356 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.209407871 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.209478472 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.20944268 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.210424155 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.215491097 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229393267 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.212974853 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.215113368 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209531504 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.208591979 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.206650809 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.208722037 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.208100661 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.214759269 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.210307367 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.210236198 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.205842256 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.20912005 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.215990849 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.205942329 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.209944374 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210854223 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.210756601 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.21600742 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.217658247 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.20931719 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.213759957 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.216396229 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.223330573 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.218969859 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.20896683 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.214263674 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.214862738 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.224259826 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.216862484 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.215457391 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.211455693 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.210715232 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.213500519 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.224150154 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.222013323 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.215071705 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.211844903 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.211572555 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.207205019 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.213300298 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215457372 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.215312204 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.21559312 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.214365625 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.216967363 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.223757949 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.208681243 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.213693907 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.212344457 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.21412502 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.2087677 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.218806475 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.220281757 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.213244872 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.208057597 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.208760943 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.210230704 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.214428688 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.209195084 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210018612 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.21412933 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.211654292 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.211775767 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.21060792 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.21568984 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.216477373 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.21334455 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.216118936 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.21721224 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.208472139 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.217467134 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.217307277 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214405395 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.211335985 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.214718602 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.216838046 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.214205679 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.21928563 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.217975364 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.212082795 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.217949246 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.215414667 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.218932307 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.230734722 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.218078346 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.214504035 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.215021228 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.223383567 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215757487 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.214174988 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.217828633 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.213029791 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.213482771 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.213654657 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.216926127 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.21191579 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217129843 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.211751741 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.215627424 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.214516976 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.216376022 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.21329611 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.214763979 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.212898366 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.214634525 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.215549872 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.218400291 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.21422212 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.220925024 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.215910576 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.213327122 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.215299979 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.217135553 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.215750614 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.213342561 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.219951168 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.212317398 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216927119 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.213088645 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.218940691 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216887633 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.216354401 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.216179782 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.213694483 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.215693122 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.218992741 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.217494564 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.215476468 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.217388339 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.21527961 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.21666173 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.211936532 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.216879313 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.212553778 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.216814297 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.223614979 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.217044186 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.218593248 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.216415935 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.220029614 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.21863685 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220019171 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.216345319 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.219166323 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.219135888 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.221286742 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.223703364 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.219162687 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.218249319 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.214940006 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.215948409 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220636386 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.216700477 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.225421655 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.226805927 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228102475 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.216913406 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.222158574 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.214734194 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.222466975 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.220092621 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.223953958 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.220532983 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.219481864 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.216596374 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.221545319 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.218122357 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.222335051 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.214919886 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.2197167 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.21970201 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.220156314 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220259228 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.217542337 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.218233849 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.221184453 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.219566946 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.220508584 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.215054665 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.22194961 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.213729955 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.216811598 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.221861662 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.22189688 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.22327313 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.224160562 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.220051407 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222653828 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.220190274 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.217750902 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.221557605 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.220452679 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.219350355 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225450677 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.223001736 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.218303031 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226593655 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.222356612 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.216905482 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.222572843 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.224144223 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.220821569 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.219886447 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.225546915 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.221348611 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.220962748 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.222912046 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217441614 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.222294814 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.224042943 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.225414165 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.217821455 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.222504155 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.21952233 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.222766507 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.218718233 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.221465062 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.220634536 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222384433 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.223887888 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.220023391 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.218337712 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.223351459 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.224551659 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.223887093 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.221117285 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.228114154 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.224985309 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.222475594 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.22300228 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.221459377 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.225884576 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.218828688 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.225518928 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.219529954 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232753639 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.236575354 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.226795787 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.225610065 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.225015706 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226345019 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.225357984 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.22208576 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.221365047 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.221512224 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.221498694 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.222021041 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.226481462 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.22125913 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.227069661 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.222955197 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.224259167 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.227477205 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.224672462 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.221384149 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.227755818 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.226797247 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.225827058 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.220864259 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.226823545 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.223798856 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224620691 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.224580904 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.221866428 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230495182 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228945663 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.224819682 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.224269374 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.222817607 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.223357105 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.225350763 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.228972069 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.225252724 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.232898625 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.22606152 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.228055042 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.224841488 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230873819 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.231153601 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.226307909 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.232152108 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.226920447 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.221896803 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.223031966 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.227349856 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.230642927 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.233029922 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.224367042 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.23032366 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227862902 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.228501307 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.226762633 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.227489953 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22689595 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.227907135 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233530232 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.249125661 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.225253936 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227850524 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.228860523 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.227938514 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.227012197 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.223479367 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228510716 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.231752281 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.225333899 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.224901269 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.224891417 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.228967322 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.227787137 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.229328984 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.22909425 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.228034173 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231671082 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.231779289 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.231748335 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.228736716 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.232455391 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234168128 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232763191 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.235255422 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.225739714 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.231396138 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.229725763 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.225922721 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.226654366 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.227158873 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.233007176 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.227439456 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.23370759 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.23157463 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.229094148 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.229738189 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.233510614 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.226713516 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235886361 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248027564 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.228404975 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233285154 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.229576973 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.233136364 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.234723312 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.233061356 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.227432753 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.230412245 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235992011 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236160724 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.228885644 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.233589244 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228009462 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23562836 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.233175273 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.231346861 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.232351103 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.231470706 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.228525776 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.233950959 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23163102 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.234469371 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.227690125 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229337781 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.22977371 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.236723535 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.238105746 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.229622742 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234082945 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.233760189 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.22785923 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.229632354 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.234031842 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228976523 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233963702 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.229219658 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.233214577 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.232701433 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.232397199 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.231144352 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.234474203 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.228373565 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.229379755 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233859254 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.23299317 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.235016778 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.229821759 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.235906449 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.229693508 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.228638675 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.23374603 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.229685608 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23518125 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.232200023 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.234756819 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231143009 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.234450781 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.232125441 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233443202 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.228455004 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.231496456 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.23764267 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236246679 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.237168121 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.235132299 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.236838737 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.229733152 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.233446348 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.237140794 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.230376141 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.232635089 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.23713731 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.231185053 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.232746415 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.232411312 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238355731 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.238916007 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.233967511 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.231167303 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241065942 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.258091821 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238437306 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.231834788 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.234653348 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.232671099 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.235974925 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.234947044 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.23136322 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240600475 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.237831025 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239012792 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235143376 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.234398733 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.23287059 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239717097 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236643256 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.233858597 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.237440439 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.233864878 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239217662 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236976204 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.235883293 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.230942024 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.233290285 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.235291398 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.236600219 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.236859997 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235345703 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.234956629 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.234601218 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.239225564 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237841603 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.236951201 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.236491336 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.232722747 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239295632 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.233359605 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.237742272 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.235171897 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.234888551 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.240369664 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238566934 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236193968 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.241119903 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.24278311 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.236774798 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.234310746 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.235240602 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.238726065 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24251112 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.239754037 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235052507 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.23639612 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.239510899 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2388243 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.238404525 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.237773384 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248124696 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.263844774 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235177812 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.236506896 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239523214 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.241218355 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.239016182 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.23827674 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.237871381 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.239024538 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.245245966 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.240981085 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244067339 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240271171 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.237869613 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.241845412 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.237762814 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.241109278 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.239775751 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243193209 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.241399396 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.240919203 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.249928068 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243312019 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245780939 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260164239 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.241285536 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.240674937 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.242978019 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236757074 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.241756052 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.239426779 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.243569538 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.241130673 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243053936 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.244053101 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.239932681 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244634975 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.242827916 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.24611561 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.241559339 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.237594467 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.239496361 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.243031136 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.24324084 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.244169326 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.244319856 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.24500238 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.244897643 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.240742896 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252912382 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.254899854 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.244960393 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.244973453 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.242614065 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.242852098 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.244103342 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246886693 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.248863939 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.245145667 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.24411483 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.240226314 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244671181 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.244714463 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.238900673 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.240020238 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239736396 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.24282848 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.251138193 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256077722 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.244960169 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.242301495 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244744502 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.242676783 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24096087 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245494932 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24477742 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.240448155 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.243983112 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248307905 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.245959662 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.242952071 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.243060111 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.248310783 seconds)
  done (took 731.95415293 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243827005 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243234785 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.243827414 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242969515 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243797892 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243860828 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243003777 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243950248 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.244478706 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244276584 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.244285445 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244129326 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.244811771 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245214616 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243959635 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244801361 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243726806 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243394388 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244916306 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242947983 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244463463 seconds)
  done (took 27.276947676 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.245949265 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.245163745 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245032453 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.243981423 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245629197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.244886847 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245290058 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245415935 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246547158 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246792604 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246165061 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245632037 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.245282637 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.244987147 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244690906 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244722432 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.244892094 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244651041 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.24577147 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245435484 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245913849 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246035658 seconds)
  done (took 28.552723162 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.247275771 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.248013518 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.243363753 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.247742295 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.246341003 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.245774581 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.24776744 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.245864922 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.246548244 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.243420089 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.243273431 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.245801468 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.250241786 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.253085402 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.245767303 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.248141778 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.247654905 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.248482466 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.248613374 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.247341647 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.249677341 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.250961501 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.246405023 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.241924199 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.248463579 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.247304346 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.246897326 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.248445216 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.24454798 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.251103153 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.247528566 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.243738968 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.248490608 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.246739245 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.246561252 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.250427303 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.249140946 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.249472964 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.247738436 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.253692349 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.263485243 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.250080116 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.253517298 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.252846311 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.24897708 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.247878096 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.256229119 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.249246434 seconds)
  done (took 61.078750172 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.250278691 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.249248464 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.249924105 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.249180499 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.24908357 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.250010598 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.249275272 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.248975846 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.251475147 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.247380634 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.249307582 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.249097083 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.24924173 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.249281571 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.249980965 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.248710133 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.250400813 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.249379249 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.249858554 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.248639277 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.250466139 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.250289305 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.249977073 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.250044677 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.250693091 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.248318816 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.248627513 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.248749011 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.248123592 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.249868469 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.249349017 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.248856094 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.250260144 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.249376912 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.249166265 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.249890389 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.249558704 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.248258273 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.24960436 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.249475421 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.24964848 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.249581954 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.248770949 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.248800585 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.250162911 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.250627108 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.249901318 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.249132203 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.251538953 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.250383446 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.249744161 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.250594724 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.250004822 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.250056939 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.248500558 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.249048366 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.24986983 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.250467212 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.250724006 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.249981225 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.250412741 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.250378585 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.252275417 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.250334341 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.251171936 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.249535169 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.249827569 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.250398384 seconds)
  done (took 86.138981742 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252473932 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.251999352 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25229023 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252473525 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25028223 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.251758381 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250470798 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.250321768 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.251278592 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251299613 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.250804218 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.25135766 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.250235775 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.250622766 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.251429177 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.251536508 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.253083375 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25077918 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.251687467 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252939653 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.251624788 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.251182803 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.252117852 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.252534751 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25251903 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.252296178 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251975032 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.252965268 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252169179 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.251812664 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251833754 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.251988983 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.252764011 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.253398526 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.252878167 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.25201311 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.250706013 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251761499 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.252426735 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.251753954 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.251088556 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251337867 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250821094 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.252938495 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251840664 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.25128865 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.252084533 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.251781141 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.248891546 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251814354 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.251488005 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25330224 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251061564 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.250660826 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.252396722 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.24954739 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250597495 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25200435 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252246695 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.252778784 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251947525 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.249626399 seconds)
  done (took 78.763018071 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250015321 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249874228 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.251376282 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.249844714 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250486461 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250387332 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.251248663 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.250923229 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251057306 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.250651573 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251777525 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251653261 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252176016 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252308909 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25022516 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252488763 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250433996 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.250892236 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251557679 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250616583 seconds)
  done (took 26.177617684 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.250278976 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.25225411 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.250690184 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.250600242 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.249738351 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.251000912 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.250585765 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252297551 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250887138 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250931976 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.251232108 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.251317781 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250987104 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251482601 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.250742244 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.250903632 seconds)
  done (took 21.17496194 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.252271684 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.252731781 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.252564711 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.254050425 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.25292145 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.250478745 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.252016104 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.251372493 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.251944812 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.251297293 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.252082545 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.253606743 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.254353066 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.253140843 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.252961874 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.252850652 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.251833732 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.252319676 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.25375667 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.253812787 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.254389517 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.252209439 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.253542272 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.252382988 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.253706426 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.253562715 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.252937752 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.253810678 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.25249838 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.252890149 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.254442053 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.253360149 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.252888573 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.253063815 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.255556912 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.253785427 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.253277142 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.254413424 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.253828053 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.25366419 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.255460286 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.255372381 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.254573632 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.255197601 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.254870517 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.254898976 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.254836028 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.255462191 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.255628251 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.254789962 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.255227152 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.256674358 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.255817542 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.255126554 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.255970736 seconds)
  done (took 70.11250469 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.256786041 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.255488194 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.255833421 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.255362998 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.254368861 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.254012772 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.255654682 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.258472667 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256867315 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.256485986 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255183226 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.257988924 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256911316 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.25657713 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.258075817 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256085323 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.256595244 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.256461953 seconds)
  done (took 23.776895648 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.25714589 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257237196 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.256866193 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.25682643 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.256826158 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.25703655 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256750534 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.25710884 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256248524 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.257345728 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257058481 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.258107499 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257022567 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.257190613 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257683599 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258405888 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.25912062 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258135746 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.257459321 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259456905 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.257226992 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257698753 seconds)
  done (took 28.827812465 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.254765461 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.253915447 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.254051476 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.26992202 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.268221038 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.253317601 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.25455362 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.254159689 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.274571187 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.295394436 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.292000416 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.269771401 seconds)
  done (took 16.359371086 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258721967 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259055697 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258338853 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258850038 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258811611 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258619006 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258093667 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259925916 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258541226 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259322283 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258353096 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258973056 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258651012 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259351195 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260064346 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259736605 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257992178 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25986496 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258428844 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260032272 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259435712 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259877157 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258188042 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2593019 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258796549 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259762784 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259517349 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260354959 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261154338 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260142559 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261042787 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260903155 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260462055 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260011489 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259951175 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26152814 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260309919 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259548212 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260533753 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260528886 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.260126631 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260587942 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260585506 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260348108 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260913672 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260571294 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26029979 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261646641 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26034972 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259536481 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260694416 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259752014 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260556396 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260135964 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26035249 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260714375 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26109779 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260274136 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260187216 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26043195 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260959575 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260376474 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259878722 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262592064 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259995883 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260247755 seconds)
  done (took 84.322854227 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261993193 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261009996 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260571787 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26079481 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26134599 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259254574 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260516253 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259177907 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259916488 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261575943 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260879323 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261031095 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261269048 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261505313 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260135099 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261290385 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260829772 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261011261 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262947074 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261814008 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260624248 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261890357 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261984571 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260830994 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261402868 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26093241 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261436614 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263151314 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260370517 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26157996 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261238204 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261805297 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262255919 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261911057 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261817411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262244326 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26326297 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261882817 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26200592 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263337052 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262454486 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263172082 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263042926 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263438888 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261470819 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262919261 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261747956 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261979906 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261857677 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261763592 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262142966 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264508162 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26296286 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263109623 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263248479 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262425784 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263317214 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263858458 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263400217 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263375845 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263890053 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262536545 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262390911 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262507103 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262798003 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262786238 seconds)
  done (took 84.457934234 seconds)
done (took 1712.939232783 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.423174351 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.375578869 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.257872436 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.262722994 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.259714636 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.281257068 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.270149296 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.258720947 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.257273462 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.257826407 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.259264035 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.44812695 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.254089212 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.258006252 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.25852494 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.354052656 seconds)
  done (took 25.905467009 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.287816412 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.265704717 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.377340444 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.282718755 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.285745457 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.44322122 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.320272095 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.265008563 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.42607515 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.280989395 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.253689488 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.283830493 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.261729912 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.256359379 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.27965343 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.443969773 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.505565941 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.253728709 seconds)
  done (took 27.942843752 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.697233551 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.290629133 seconds)
  done (took 5.156355815 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.281589983 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.263058099 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.262912134 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.261910611 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.25345034 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.257179079 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.262096664 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.259441057 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.265236167 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.386714647 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.26511137 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.275361177 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.280012675 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.262799964 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.264941695 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.305710954 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.402453582 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.267928459 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.263046211 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.268061579 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.262874929 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.359591812 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.303658633 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.266557536 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.383051736 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.257280774 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.286568374 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.270525276 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.436305093 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.267179653 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.263237002 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.263354573 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.264924367 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.257260276 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.739702146 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.277267711 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.289290696 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.289268275 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.267713891 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.415788448 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.264252681 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.269100125 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.255732975 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.735301842 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.426970041 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.385271843 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.272442253 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.263966571 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.266915718 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.329690855 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.265323104 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.266264591 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.3250119 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.124703027 seconds)
  done (took 81.652648525 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.264759321 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.257245726 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436602896 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.273635307 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.257585917 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.262097846 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.274616649 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.536195894 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.267244662 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.273064047 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.544519409 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.823831009 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.27947636 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.316570584 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.198179639 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.331050862 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.260113646 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.260314472 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.261298368 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.263608956 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.803740985 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.264100191 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.261777157 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.40452644 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.296660922 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.76620066 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.260534843 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.270366912 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.26320988 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.260434576 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.773337578 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.274578342 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.32397099 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.260674585 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.526160067 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.624084329 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.590190974 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.263409204 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.264451169 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.2624629 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.262354259 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.744325113 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.606353978 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.259548939 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.275901973 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752287944 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.259011543 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.264485441 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.262337191 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507120704 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.257452724 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.259400747 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.258743047 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.259697056 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.257561019 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.28103083 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.352190101 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.760740955 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.258597522 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.263679707 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.279633196 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.258672316 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.26610858 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.260727036 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.275056151 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.60264018 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.479432882 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.263006431 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.600823744 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.764797469 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.273943985 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.82811985 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.273113477 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.272784159 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.472644937 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.256278061 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.2726065 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763494798 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.261996119 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.258391231 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.580110551 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.259187006 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.538689943 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.272594799 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.274258827 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821147068 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.265922544 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.264105067 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.257711037 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.257956771 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.256440081 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.260850314 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.523160609 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.29162978 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.255485981 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.255956554 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.258304621 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.261207743 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.258589383 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.258299461 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.817556966 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.275897785 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.255584183 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.258553006 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.255662199 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.256360196 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.257252764 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.259621633 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.523683335 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.255541669 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.25813468 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.256332626 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.256433548 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.261103249 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.373585502 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.261961949 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.539648212 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.25893968 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.259034621 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.25640164 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.255702756 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.257837605 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.257469236 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.257375819 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.125219316 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.519901153 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.272926407 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.256903242 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.260260584 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.257328918 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.258623021 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.257161395 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.300631562 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.257067988 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027804394 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.274871104 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.264242693 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.256472751 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.259202282 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.257963053 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.258832335 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.257994425 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.542544983 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.518699804 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.46521869 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.26089954 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.257016812 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.007122658 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.318216982 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436615478 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.272820543 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.258055003 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.504694223 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.468426261 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.257668463 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.25822247 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.261051065 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521074865 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.2590818 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.564222953 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.783386814 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.273380384 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.267551171 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.031845376 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.971384731 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.264345136 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.262504675 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.532851105 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.274891097 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.259339441 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.258826081 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.260219559 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.273933184 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.277340927 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.264625763 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.259439421 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.259305867 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.552831974 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.450165226 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.274735186 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.265874527 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.7423804 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.281688715 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.259829819 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.272012861 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.262965419 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.25931851 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.335485845 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.262799663 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.276891586 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.261954382 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.259913678 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.75678599 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.260464199 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.266307289 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.44915896 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.940895888 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.276804906 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.261189064 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.260972989 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.180620553 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.768544937 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.296060209 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.543360365 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.26787563 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.298824965 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.261006746 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.364588268 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.768231948 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.266350002 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.262072819 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89617797 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.277055898 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.685345104 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.261471156 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.26344421 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.828896026 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.277510989 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.264372433 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.261483574 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.269136978 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.562504089 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.262304436 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.291797591 seconds)
  done (took 481.327739625 seconds)
done (took 623.154203971 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.261043994 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.262377156 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.257399114 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.266160588 seconds)
  done (took 10.22163524 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.277496331 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.26842142 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.274309977 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.268317847 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.275811785 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.269234129 seconds)
  done (took 8.807953591 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.261398815 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.263324911 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.266945255 seconds)
  done (took 7.967224945 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.459291117 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.282610038 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.593180335 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.29270945 seconds)
  done (took 8.80390381 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.275110108 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.274428175 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.275415182 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.274893337 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.278804499 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.280216183 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.275744122 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.275281043 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.281601977 seconds)
  done (took 12.665096937 seconds)
done (took 49.642887752 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.253704784 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.443591592 seconds)
    (3/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.435205801 seconds)
    (4/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.341764118 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.430321023 seconds)
    (6/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.450859774 seconds)
    (7/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.256221403 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.322623829 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.948165413 seconds)
    (10/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.396753682 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.265117568 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.295889667 seconds)
    (13/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.264528503 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.364143608 seconds)
    (15/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.305278442 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.345989407 seconds)
    (17/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.425015328 seconds)
    (18/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.348567267 seconds)
    (19/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.399868563 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.353231133 seconds)
    (21/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.256155407 seconds)
    (22/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.374942779 seconds)
    (23/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.359332364 seconds)
    (24/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.259043172 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.321224377 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.303773203 seconds)
    (27/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.358085816 seconds)
    (28/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.319411751 seconds)
    (29/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.142682224 seconds)
    (30/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.327551034 seconds)
    (31/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.255635075 seconds)
    (32/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.951063838 seconds)
    (33/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.426479694 seconds)
    (34/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.276569074 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.344333417 seconds)
    (36/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.256223535 seconds)
    (37/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.297562443 seconds)
    (38/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.945081566 seconds)
    (39/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.302547022 seconds)
    (40/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.256726816 seconds)
    (41/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.334799989 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.301972557 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.403565495 seconds)
    (44/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.258002945 seconds)
    (45/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.278117139 seconds)
    (46/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.292712592 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.043776242 seconds)
    (48/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.094972801 seconds)
    (49/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.366878076 seconds)
    (50/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.299056677 seconds)
    (51/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.256894139 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.983595042 seconds)
    (53/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.32207857 seconds)
    (54/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.423828657 seconds)
    (55/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.258018611 seconds)
    (56/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.406516849 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.441272769 seconds)
    (58/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.258781298 seconds)
    (59/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.961371144 seconds)
    (60/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.326019663 seconds)
    (61/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.344617758 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.356097395 seconds)
    (63/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.304488614 seconds)
    (64/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.007749558 seconds)
    (65/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.271639032 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.469872976 seconds)
    (67/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.258866441 seconds)
    (68/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.308012782 seconds)
    (69/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.259641641 seconds)
    (70/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.290573424 seconds)
    (71/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.422654919 seconds)
    (72/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.321317202 seconds)
    (73/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.35018607 seconds)
    (74/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.361967413 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.407068537 seconds)
    (76/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.346987545 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.404204214 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.37747733 seconds)
    (79/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.35941555 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.333880002 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.29187016 seconds)
    (82/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.305271203 seconds)
    (83/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.408060533 seconds)
    (84/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.040939923 seconds)
    (85/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.280059222 seconds)
    (86/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.343009317 seconds)
    (87/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.270071796 seconds)
    (88/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.312557583 seconds)
    (89/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.514150666 seconds)
    (90/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.368959547 seconds)
    (91/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.29731477 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.369853336 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.301793812 seconds)
    (94/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.300105526 seconds)
    (95/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.301007547 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.311945344 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.272732047 seconds)
    (98/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.283356017 seconds)
    (99/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.260674745 seconds)
    (100/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.188303741 seconds)
    (101/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.033645851 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.366345593 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.406766798 seconds)
    (104/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.070369735 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.926195601 seconds)
    (106/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.306301048 seconds)
    (107/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.301510141 seconds)
    (108/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.414118276 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.398230325 seconds)
    (110/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.409630559 seconds)
    (111/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.321026987 seconds)
    (112/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.050716779 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.418224863 seconds)
    (114/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.412600099 seconds)
    (115/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.289111291 seconds)
    (116/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.026220117 seconds)
    (117/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.29006827 seconds)
    (118/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.401065346 seconds)
    (119/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.048429296 seconds)
    (120/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.443191559 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.334918092 seconds)
    (122/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.267093548 seconds)
    (123/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.032604838 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.421897298 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.34612931 seconds)
    (126/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.331748851 seconds)
    (127/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.304802844 seconds)
    (128/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.29995585 seconds)
    (129/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.33017567 seconds)
    (130/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.313482046 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.271521931 seconds)
    (132/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.350507006 seconds)
    (133/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.328650775 seconds)
    (134/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.26338654 seconds)
    (135/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.210347604 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.998039244 seconds)
    (137/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.267703606 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.311942757 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.401079974 seconds)
    (140/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.488316894 seconds)
    (141/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.93154297 seconds)
    (142/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.265268909 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.41816234 seconds)
    (144/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.391701635 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.363246847 seconds)
    (146/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.406031468 seconds)
    (147/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.264525639 seconds)
    (148/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.284118085 seconds)
    (149/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.334831227 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.517751071 seconds)
    (151/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.308094039 seconds)
    (152/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.273415912 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.013712138 seconds)
    (154/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.364065801 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.324137867 seconds)
    (156/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.353370936 seconds)
    (157/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.269611771 seconds)
    (158/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.26628823 seconds)
    (159/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.42865946 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.328063994 seconds)
    (161/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.963848829 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.468487255 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.377352098 seconds)
    (164/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.436522596 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.359132415 seconds)
    (166/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.363844213 seconds)
    (167/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.311400158 seconds)
    (168/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.415988542 seconds)
    (169/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.267552387 seconds)
    (170/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.265884691 seconds)
    (171/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.374113664 seconds)
    (172/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.930554244 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.367452527 seconds)
    (174/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.411375315 seconds)
    (175/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.292231678 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.277413805 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.504477703 seconds)
    (178/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.451189351 seconds)
    (179/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.408366939 seconds)
    (180/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.265988329 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.024769334 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.300962317 seconds)
    (183/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.317839321 seconds)
    (184/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.409315221 seconds)
    (185/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.279467287 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.481445818 seconds)
    (187/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.266605286 seconds)
    (188/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.183694621 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.496509599 seconds)
    (190/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.276211973 seconds)
    (191/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.3724517 seconds)
    (192/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.354047993 seconds)
  done (took 324.652527515 seconds)
done (took 325.830808381 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.309938611 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.340051142 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.294729568 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.293998961 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.296849441 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.275519534 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.304381634 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.294623168 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.293934991 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.293824772 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.275439981 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.29137386 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.307242538 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.290399786 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.328316424 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.295700488 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.294726306 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.290432289 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.293965759 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.296735702 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296192899 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296134062 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.304280393 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.295041408 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303760778 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303237891 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.302212423 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.292171193 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.29278943 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.295886134 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.285363798 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.302929415 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.294099679 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.288711301 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.29419215 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.288098495 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293344722 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.332216669 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.288404404 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.279024787 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.277903281 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.284838481 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.28897355 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.289051136 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.282653965 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.285992342 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.284891944 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.292454193 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.269390103 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.252346563 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298865786 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.272279667 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.26662167 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.242755496 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.269983199 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.294835715 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.269934077 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290054123 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.264599105 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.272539882 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.305512352 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288256135 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.268759587 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.279378513 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.265501853 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.284163751 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.263345228 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.269629417 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.261527218 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.270364484 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.270747007 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.261293487 seconds)
done (took 101.922459874 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.385711095 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.256346633 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.401639328 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.259643199 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.418641082 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.406451806 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.25754051 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.257814627 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.258336093 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.106426585 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.25757841 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.257876057 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.248060095 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.257742618 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.387622348 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.256376824 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.256565058 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.995215386 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.258977581 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.398555709 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.247210021 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.254938812 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.254251893 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.117052529 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.251144489 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.246254452 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.393650439 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.25156575 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.00376032 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.244774946 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.249692351 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.000584116 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.39199339 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.26835263 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.257443411 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.258249294 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.407715216 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.263977201 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.371454088 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.371746466 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.386812156 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.28288814 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.241561118 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.239860923 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.242461827 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.243599702 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.240935158 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.270723742 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.236521625 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.241383968 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.979387612 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.250892013 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.251725696 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.241049629 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.239810999 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.260911016 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.241520582 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.241732321 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.383604148 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.242047248 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.36902512 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.102689084 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.090395988 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.241519861 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.23897157 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.242269742 seconds)
  done (took 103.101745076 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.304419423 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.31920639 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.341767501 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.24346226 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.290091312 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.341089537 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.2413732 seconds)
  done (took 10.23111403 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.243185126 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.241040811 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.284029788 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.285601137 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.241403873 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.389096591 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.237133807 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.243588639 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.236211271 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.283866592 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.238225052 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.236826739 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.246319568 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.230024553 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.278458894 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.241277672 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.34496468 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.231243902 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.234239694 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.384172646 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.232782569 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.240192969 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.280230257 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.239633309 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.233361849 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.235499718 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.991244454 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.232766536 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.231990151 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.233761588 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.232725013 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.282017826 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.232880336 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.229276804 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.232378231 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.344931655 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.233780905 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.233386039 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.233584868 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.230287188 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.232969733 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.233436896 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.232870973 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.233393312 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.233933806 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.253307162 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.232704137 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.23318104 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.23367583 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.234857154 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.280142398 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.234040833 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.23388958 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.233097847 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.285433354 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.243433261 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.235112004 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.235071671 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.236035782 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.234053395 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.383490794 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.277613521 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.234804022 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.277817998 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.235449922 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.235881739 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.234942777 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.234033703 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.321923166 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.234539431 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.278152293 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.235164099 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.410423493 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.25542936 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.23669617 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.2339977 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.23467163 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.236150728 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.229858386 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.238212724 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.236599391 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.233264906 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.237628063 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.236606688 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.235902863 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.387938257 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341148115 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.236792443 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.246597238 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.239152981 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.23615345 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.284527924 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.237305272 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.236212859 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.28411103 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.347677795 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.286033985 seconds)
  done (took 127.746980858 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.245523643 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.246041857 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.237281057 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.259731358 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.23690205 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.234873356 seconds)
  done (took 8.60566349 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.237520847 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.241563716 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.238453657 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.238834055 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.239353679 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.241131116 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.240680941 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.237132023 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.241463163 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.239495785 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.241707179 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.24238764 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.242704149 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.241096948 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.241283147 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.239581012 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.241643843 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.239014504 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.24007934 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.241363128 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.236335288 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.240847533 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.241195034 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.238626502 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.244437871 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.241739504 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.258771534 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.240569458 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.240684613 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.244483123 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.259012034 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.242532079 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.238414542 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.241805019 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.243368513 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.239086769 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.243760701 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.24366088 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.241839219 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.243030949 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.24293538 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.243597254 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.242291182 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.243363877 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.23999838 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.241665112 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.246033991 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.260957493 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.243690636 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.242953409 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.244552998 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.243259844 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.2442607 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.245785988 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.242077738 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.258777552 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.246368571 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.244880065 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.244033603 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.241446376 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.244865067 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.244003825 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.241734357 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.24445489 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.240768237 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.240582816 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.238027752 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.243308067 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.242545742 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.240302948 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.241584829 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.240382465 seconds)
  done (took 91.62582226 seconds)
done (took 342.479017459 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.057553715 seconds)
  done (took 4.202088426 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.231614098 seconds)
  done (took 3.380183567 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.168563621 seconds)
  done (took 21.317761617 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.301910733 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.260376404 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.243907746 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.225850771 seconds)
  done (took 10.173401637 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.46016433 seconds)
  done (took 3.601726715 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.228967356 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.228228579 seconds)
  done (took 5.601572827 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.374927707 seconds)
  done (took 3.517570318 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.457647444 seconds)
  done (took 3.599725169 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.255996069 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.241100371 seconds)
  done (took 5.64841369 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.217134856 seconds)
  done (took 3.360254647 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.465752019 seconds)
  done (took 18.609566387 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.23344439 seconds)
  done (took 3.379414424 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.274063203 seconds)
  done (took 3.416020798 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.604794298 seconds)
  done (took 5.74750756 seconds)
done (took 96.700838238 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.224795459 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.226200666 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.227621672 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.224083585 seconds)
  done (took 10.045665509 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.314112603 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.313218887 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.321314812 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.303890636 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.303450925 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.313755377 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.260765093 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.260866988 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.305086843 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.303202343 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.32166583 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.303768162 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.314011516 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.26116841 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.304329752 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.322323284 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.304129301 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.322286065 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.261270133 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.304534475 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.237017195 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.305553746 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.30395756 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.237119269 seconds)
  done (took 32.246093159 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.749316013 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.304056889 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.385960207 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.284745823 seconds)
  done (took 6.868889086 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.378953217 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.380053506 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.397471145 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.440914994 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.453899019 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.380024504 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.26237541 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.258331482 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.246321076 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.379069301 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.36846904 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.312821661 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.478270858 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.237636707 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.526617803 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.23604487 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.236683591 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.378810871 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.432512602 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.451745039 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.238118027 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.370811358 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.379566964 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.315716923 seconds)
  done (took 33.687319219 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.24738261 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.253662605 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.238838053 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.255429921 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.238656555 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.240077163 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.240962693 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.246399904 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.238548384 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.239501536 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.239580591 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.253493035 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.239178982 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.241003087 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.248275512 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.241280104 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.241687328 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.24696262 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.248402579 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.241975517 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.239744033 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.246825371 seconds)
  done (took 28.514615822 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.228644023 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.229297402 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.580550142 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.485336239 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.229360399 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.235371344 seconds)
  done (took 13.135071729 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.298868208 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.436084055 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.240568393 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.564295603 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.656261532 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.241995874 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.237561321 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.468321821 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.763150973 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.739801138 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.295344163 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.307489478 seconds)
  done (took 18.396731515 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.235602696 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.235749174 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.239982111 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.252974458 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.289868918 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.24742205 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.245086529 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.23115871 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.291185428 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.299702691 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.249215958 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.288135839 seconds)
  done (took 20.254620738 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.324061031 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236239921 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252724531 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288027477 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255930312 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080098794 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301075833 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.967920145 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.263408993 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51050856 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236858942 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.330901242 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.49077455 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249549688 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241721748 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.211299265 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4695734 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692652161 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243010976 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237211215 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273881869 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24823403 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241856033 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.439218232 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086120746 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236894083 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.500673402 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.237753113 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496912088 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.254643551 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.247212353 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.237667916 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.513007139 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875081888 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356335079 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434741835 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242388683 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259779335 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.247956016 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.261572978 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249171731 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244383299 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.250221745 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239226246 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.240369284 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249024991 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961149639 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.269754081 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.23994519 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.2394842 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476583223 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351852555 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.245558988 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.239780842 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254551435 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240285873 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.244626142 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363922658 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827643921 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248749868 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257087036 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.244904737 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246530067 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255423822 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825035571 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.253231304 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.246267774 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.245854492 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241026333 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250076789 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.269946479 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240131204 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.267583997 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240560977 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912976363 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246407798 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248689274 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763373589 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247293846 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.247313347 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.471386534 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241725763 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241694611 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.241565112 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.2426151 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891489609 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.249802906 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.229355338 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.289113395 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.973047157 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.462830271 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264388329 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272566217 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.464583909 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.230863388 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242414065 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.249657602 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248573026 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263885533 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.958474987 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265316552 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.249144401 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49960712 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.453994741 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243056834 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.238111362 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710285463 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264686082 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.272265371 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.255204596 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.445200409 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.795744168 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.263616817 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242562588 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281942341 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.243605294 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940887132 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248961765 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.25478496 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250272181 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505433511 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.998920456 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249833632 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310156981 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252766841 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.245724316 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250138417 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250107024 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.243584963 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.433924947 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266006341 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.25911364 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.245867936 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244283726 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.251049284 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253665023 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.251114358 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.468185262 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247901351 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526522909 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244828708 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244344145 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245728345 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.467058459 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.251344917 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.257771972 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507873468 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247438415 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.249911224 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.261413965 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275996478 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352806241 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276413827 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.246324427 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.504875215 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.251777426 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.252759638 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254586451 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.253821399 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25319883 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.254015184 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255279577 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7996764 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227811051 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249335726 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246702336 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.262836921 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.315384605 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.256830351 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.447765796 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.253141341 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246634741 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.276894301 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.247496343 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474451197 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.256361051 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.253967555 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330392497 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.708562311 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.81797084 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.268676562 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.247887433 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.247780458 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.247329285 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24849682 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247881678 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.248745636 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44683077 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266501185 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244725822 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.807822255 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256316062 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.254695246 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.26099433 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.260018663 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.256762018 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250211126 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.25395763 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253103599 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260828413 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.263731706 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385398757 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.264702152 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249515324 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.768362295 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.256658611 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250495055 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249695745 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281486097 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.256641803 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111773834 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516113507 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248779771 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494546238 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256773976 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.273161887 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.250602464 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250586341 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265970857 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.270429812 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279006959 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.260620049 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263575308 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257573032 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813902061 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945273097 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760662092 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265619765 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.262013969 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256174389 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.97243822 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272162117 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251508677 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475361282 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974775683 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273210018 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717530741 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.283584614 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.978210559 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495589437 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488715241 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258302792 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.257863086 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499064063 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.468739551 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28467236 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258772567 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256648747 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.240038934 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806662625 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27378692 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338378023 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975577359 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274951591 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258910213 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.256222071 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.267849099 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.639215382 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274112468 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252761936 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266619447 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27132789 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113940687 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.261627132 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252784025 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835072597 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.274101373 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.721882156 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275364756 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.454755319 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.269141052 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.25890869 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.25414334 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.269541054 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.510701291 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494858383 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260310219 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.254172342 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766214734 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.128104899 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.261672344 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253679158 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954506559 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271442985 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526896996 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.273981616 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.268580894 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261159011 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255301808 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255899929 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.255503918 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257577018 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227640975 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713379471 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.25997985 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264002142 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275495769 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260769659 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.509880404 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.271513165 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.807703578 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489729015 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257681143 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307619374 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.262173923 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263452938 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.250012066 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256502522 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255067761 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260992637 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.481590632 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25707362 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.248773522 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330144042 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.488567798 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.25710212 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257623581 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506365692 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.262962507 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.258315872 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968060545 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295835537 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257808265 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280528682 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.272077622 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.302707764 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.324450386 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.457885126 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.274513302 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.269417265 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640237428 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279638681 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281351355 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.273302622 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361274272 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258130521 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.28128909 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.052695822 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815578989 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955561494 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.818989209 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506744953 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266197571 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261468494 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259176225 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394296237 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258665359 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534930106 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259625311 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.2584565 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302527366 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26940789 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265542161 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488521745 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535700492 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258073437 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272231459 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264114361 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.260115647 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.269577563 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.469914232 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720134379 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791755896 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266282322 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.259621415 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.007461455 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559552643 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260025682 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259738863 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25963075 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.263465087 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.288518498 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.273582129 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261225442 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400855027 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499927126 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907921843 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.292467688 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.298388108 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.779071182 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260367721 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.534701031 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260954795 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.463259668 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823453571 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.928213209 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53093388 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.331869443 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.463536582 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.266515384 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398483274 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.262345847 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.26574659 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262456287 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261621785 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.26260144 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.270823315 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824863662 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531463527 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.26806669 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.263773141 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297249674 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.270691913 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.483884579 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919762627 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485520008 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.272443205 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266142135 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263384877 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.824833315 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510609636 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269355558 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.268406858 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491878655 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269242946 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.29253633 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.782960083 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.263814581 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.778746016 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.153595672 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285034716 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263295196 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.9339137 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828997052 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.270235148 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745219494 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270205696 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263721709 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545744929 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.270864564 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.26692849 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551797612 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.269494768 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267997694 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.471480295 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.825896717 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000484024 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.286265682 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292559777 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.266062095 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265913372 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268783393 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269423836 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265768868 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.665202217 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.288891612 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266033995 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279035063 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.265948109 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277486797 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.270650513 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26615485 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.274186468 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.262643457 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.264162333 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274422666 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393282777 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825681637 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293500553 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.945571001 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.590550259 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.520683456 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.270055434 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.258493519 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.271825363 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266798894 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267809149 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267682112 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.276873362 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789673682 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.274317134 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.280462974 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273107464 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.268376623 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.477112591 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.269020621 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.470739532 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275370951 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292837224 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.255905303 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26757071 seconds)
  done (took 916.151281579 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.291357827 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.266626694 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.273836751 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.327522278 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.266138679 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.368323181 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.33052482 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.26576207 seconds)
  done (took 19.567637389 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.264096992 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.276720272 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.263787025 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.272368816 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.271606857 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.71656291 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.29507733 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.271960839 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.283753069 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.279426834 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.281751571 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.90732861 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.293039844 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.27480185 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.274524148 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.273800854 seconds)
  done (took 30.679810275 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.095853317 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.350633627 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.95700891 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.34550997 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.309258811 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.279355579 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.440651047 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.286353764 seconds)
  done (took 25.245422131 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.281025399 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.28071566 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.2810565 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.280266977 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.278470918 seconds)
  done (took 7.58284795 seconds)
done (took 1163.520595067 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.275888467 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.275728499 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.275720311 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.277179399 seconds)
  done (took 6.283571802 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.258005161 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.260281158 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.258447856 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.275530767 seconds)
  done (took 9.233241337 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.929714177 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.877240004 seconds)
  done (took 4.986480733 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.736285748 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.739774074 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.737099601 seconds)
  done (took 6.394550188 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.562339584 seconds)
  done (took 2.744323693 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.147437613 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.261576403 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.91980912 seconds)
  done (took 7.510688283 seconds)
done (took 38.33318332 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.279239446 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.516832487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.424809141 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.27988566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431448805 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.425790881 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.003070766 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.276326474 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.267709888 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.274260274 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.279855685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.430531733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.052348538 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.516746423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.054995613 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.517162963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.432828602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.267769536 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.282526819 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.267729732 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.007347416 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.277214799 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.279367145 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.268048854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.434886663 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.414748448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.272028501 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.517687286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.268474863 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.268913549 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.434324999 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.269273516 seconds)
  done (took 79.177197326 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.268500325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.267950523 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.27245618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.269757533 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.269693915 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.272079894 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.26938883 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.269492474 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.276258128 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.276841374 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.269473515 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.268371693 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.271577629 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.279484175 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.271194554 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.279753833 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.269660851 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.269306021 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.269598872 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.284750256 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.270741987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.282306377 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.270095926 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.279482747 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.269333018 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.269711746 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.286286056 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.270278027 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.269880623 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.270100619 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.27155223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.285936319 seconds)
  done (took 73.925045973 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.280362252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.275422086 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.272624834 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.270717278 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.274335876 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.273221174 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.27153669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.270859649 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.27122834 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.27055856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.2740353 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.270450966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.272557202 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.284179131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.272995742 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.278881354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.272236614 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.271820084 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.287034782 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.271694963 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.290049275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.270929095 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.28803082 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.271537402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.288369819 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.274184874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.272354244 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.272359625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.271702437 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.272194147 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.274554808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.27154791 seconds)
  done (took 73.990043413 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.593384256 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.284066586 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.28516034 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.277850638 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.286454567 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.283434365 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.278363665 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.600552821 seconds)
  done (took 14.074568811 seconds)
done (took 242.3485448 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.278563522 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.775460296 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.325834148 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.27730216 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.302563204 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.306468289 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.495191216 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.321089812 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.496412491 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.295295623 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.296688972 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.287884365 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.042972546 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.429566495 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.107575043 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.22252967 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.122625941 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.274560316 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.823241197 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.554311834 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.304807365 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.275623549 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.10434813 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.141268436 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.286479074 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.361868698 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.376338208 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.499737417 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.434879377 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.356607427 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.772504889 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.283943303 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.28387756 seconds)
  done (took 60.70655666 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.279189029 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.285345617 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.285439428 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.286444427 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.285783865 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.285574019 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.28072789 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.285281411 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.287473117 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.286144989 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.286720864 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.286856217 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.287794523 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.286448788 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.28643483 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.27821443 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.280430591 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.28649409 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.282079055 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.278314521 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.286815709 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.287783407 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.288783848 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.287187761 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.287055971 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.287431798 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.28669298 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.287517902 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.287638544 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.286924189 seconds)
  done (took 39.749805127 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.286994059 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.825181006 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.999323754 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.294341969 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.285392548 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.287636421 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.551563035 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.292566755 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.287552707 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.286721101 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.744448029 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.297641495 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.317429239 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.018983855 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.291830993 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.289354784 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.289496173 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.285895844 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.833795548 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.299543337 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.571766612 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.294494582 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.553417873 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.300020227 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.30557869 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.286760586 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.290400747 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.091033557 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.308348267 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.744030329 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.017490904 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.553324209 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.040190959 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.026661309 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.01436689 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.296658196 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.29079563 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.749836138 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.29224045 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.285695003 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.554554015 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.290966915 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.006240159 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.961404915 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.309023949 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.291582172 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.111276344 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.766577845 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.517743209 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.296829131 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.011835308 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.295542427 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.293148732 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.287432115 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.514660276 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.292996747 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.287709725 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.135477893 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.313929876 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.556649859 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.292488486 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.288269911 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.83326904 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.292887858 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.830494629 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.293148741 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.297371232 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.305711333 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.007814046 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.295115564 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.978317115 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.310423495 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.29235594 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.745342726 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.836514086 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.172481362 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.295321289 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.838623888 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.068754845 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.575590948 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.296972271 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.079567061 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.579708499 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.296422293 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.295195473 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.295068632 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.29410795 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.373173019 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.554678391 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.912180143 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.973010713 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.149901941 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.582548097 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.301776505 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.291067915 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.138513972 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.317593096 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.294622958 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.00522912 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.98043183 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.311287724 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.298047395 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.981761662 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.312952432 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.561484029 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.29949595 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.016535549 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.29549737 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.373329698 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.293844744 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.297948008 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.312137 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.562162876 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.297502118 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.295700047 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.959840435 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.779678106 seconds)
  done (took 181.779345239 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.285091278 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.302671495 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.286379729 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.301598978 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.284441773 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.292794922 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.28588326 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.285039279 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.290753486 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.285827971 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.285737248 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.294491956 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.292325661 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.286036411 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.287970638 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.285938009 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.286404664 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.292234127 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.286707426 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.28584068 seconds)
  done (took 42.981692012 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.296321494 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.818052547 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.787242102 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.302790994 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.296102055 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.292264636 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.344697708 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.297859474 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.297969494 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.576976169 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.458090531 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.304490634 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.297684137 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.298219458 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.789914425 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.294523998 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.577561504 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.829968439 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.302554595 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.824169256 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.293553238 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.297151398 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.292649248 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.824981694 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.589319837 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.566754978 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.351923014 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.827477176 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.304457559 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.29868993 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.827071295 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.303757769 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.29502112 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.826576088 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.319483546 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.313023402 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.297968219 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.3487467 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.349427177 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.579866679 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.83673738 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.572762029 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.315177311 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.471310929 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.303546095 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.288311935 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.833651993 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.319773653 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.29063046 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.299905901 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.305268544 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.799209966 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.315195581 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.79746211 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.319868761 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.300320179 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.82858164 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.80503667 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.815390063 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.461322457 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.300290422 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.562542505 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.306582912 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.837573978 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.321892167 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.300994817 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.300146994 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.459850933 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.835792718 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.569784443 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.587361124 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.587615887 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.307212145 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.35682472 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.317505721 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.582706119 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.35911621 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.702563875 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.584908724 seconds)
  done (took 118.055525855 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.548776416 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.404715679 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.667150528 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.882477169 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.787828753 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.435148352 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.403021032 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.549248379 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.309465753 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.391851292 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.905023704 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.409838536 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.013353824 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.384090661 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.402857328 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.455865337 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.672255902 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.274268125 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.95177053 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.88135645 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.297536371 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.42337024 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.811978421 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.484862635 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.309636299 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.849572248 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.221055777 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.792249269 seconds)
  done (took 50.124218304 seconds)
done (took 494.584440058 seconds)
SAVING RESULT...
DONE!
